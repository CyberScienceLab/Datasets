(bad) pop pusha mul cmp mov add add mov add std ret dec mov mov rorl xchg adc dec xlat cli sub test pop add scas test mov mov insb lds es nop jg cmp cmp xchg pop fstp jno shrb sub test push lahf lds arpl push mov mov add data16 imul and rcrb dec stos sarl dec scas dec lock sub aaa mov adc mov push jp sahf mov (bad) mov (bad) xor cs cmp outsb cvtps2pd inc cli jno cmc cmc xchg add icebp test nop std test ljmp lret cs in cmp inc popf or pop add cld jecxz jecxz and xchg pop cmpsl aam xlat jl mov cld fisubr stos cmp mov mov loop and jno fistp xor sbb cmc push cltd stos test and mov mov fwait daa push jecxz shr jp scas and sbb adcb bound xor call ret jmp (bad) leave mov sub cs adc lcall aam outsb pop int dec xchg jb lret int3 and call push test imul xor loope push xor pushl popl cmc cmc mov cmp pushl lea ja xor call pushf push movl pushf mov call test stos sbb dec mov cmp sbb ja push dec pop xchg int3 loopne mov fildl or sub xchg ja data16 jmp scas imul pop mov lret jge es ror shlb inc sbb pop pushl out lret push mov push imul jo,pn mov pop add mov out das addr16 (bad) leave sbb dec popf cmp jmp stos add in mov jns rcrl mov adc add mov xchg sub clc inc ret shll adc adc adc push jb fisub mov cwtl sub bsr mov bt add xor mov pushf test jmp repz stc adc faddl jle jge cmp pop jmp out add (bad) fld xlat imul xor lret jmp divl add fisubl fstl mov fwait lods (bad) (bad) inc pop pop xchg std out test or dec pop jecxz (bad) adc inc pop sti arpl xchg jecxz (bad) sbb dec mov data16 sbbb iret out jg push jo rcr sbb pushf xor jmp aam stc cmp enter jnp cmp xor jno (bad) mov ss add scas lahf rorb add mov pusha xchg je js xchg pop in enter lea fldcw data16 leave (bad) out jmp adc push xchg icebp icebp adc cmp mov pop mov inc inc pop (bad) jbe mov dec adc cwtl jmp into push xchg in sub stc in dec pop loope sub hlt xchg cmp lock cld (bad) jno insb scas pushf fist mov sahf push xchg clc addr16 in mov jp cltd (bad) cli rcr add push hlt or jecxz imul aaa (bad) pop mov jecxz cltd and jg aam cmpsb cwtl stos repz jno mov mov in push fadds xchg int (bad) arpl fistp adc nop das dec xor pop iret outsl roll cmp mov sbb popa (bad) cmp cmpsl lods cmpsl lret pop outsb add mov cmpb sbb es dec mov aas fsubrl scas or imul mul fs inc dec adc data16 or addr16 adcl (bad) nop out (bad) cmc push sub xor inc movsb mov call lcall popa pop mov fdivl in mov test cwtl push pop jg arpl je jge xchg or repz adc inc mov jno lea stc lds inc and pushf jmp mov loopne rclb (bad) mov cmc adc stc in icebp repnz xor jmp push sub insb mov jg scas jmp xchg mov in cmp dec adc dec inc sbb gs adc mov mov cmp jecxz or pushf dec cmp out fild inc sti push mov scas push mov (bad) dec icebp pushf gs jo or test movsb fisttpl xchg sbb test mov fdivrl or out iret shlb loope test out push aas movb in jno mov addr16 push push pop and and dec mov rcr imul pop aas xlat xchg insb and jle cld mov or pop dec push addr16 jmp roll mov incb out inc inc notb ds pop loop (bad) xlat rolb add push lods cmpl push sub sbb scas jmp jp,pt je fldcw sub xlat call mov in arpl data16 xchg jle add aam jecxz fisttpl sbb daa in ret (bad) sbb in mov dec lock dec daa mov lea movsl cmpsb leave jo mov fsubrs stc xchg andl pop cmp mov pop mov add dec inc jns or adc arpl jge loopne add sbbb and mov jne pushf call cmp (bad) mov mov sub pop leave adc loop test mov (bad) xor xchg or xchg sub imul push (bad) dec push arpl outsl fsub mov adc movsb lcall sti jl imull xor fsubrl notl repnz jg mov lods (bad) ja dec xlat addr16 add (bad) pop sahf out xor inc jle mov insb inc loope dec (bad) (bad) stc sub cwtl jo inc dec pop xlat fdivr (bad) enter bound inc push cmp cmc pop push xor popf push dec fmul mov test inc cmp jge stos (bad) xlat imulb lcall fdivrl bnd mov insl push jns adc fistp int3 push fs movb add lahf and cmp data16 pop cmp out roll hlt jp lret push stos mov lods dec xchg test sbb xor jmp xor outsb out iret fild (bad) iret out hlt sbb mov xchg or push inc ds push out jns negl sbb jae je or mov inc sbb mov js lret imul fisub (bad) popa jno mov and fild adc inc pop (bad) stc push sub loope repz ljmp inc xlat les int stos mov add outsl jp adc push xchg inc jge jns lahf repnz inc push pop bound mov mov cwtl lods lahf mov pop xchg repz and mov sahf scas sahf loope cltd cmc sub mov jmp xor test mov sub daa aad fwait jnp or push ss fistp xchg push or add cltd cmp or in test sbb sub mov cld and lock xchg sub iret ss aaa leave (bad) jmp jmp movw mov call add dec outsl arpl inc insb insb outsl arpl pop pushf pop lea bswap push mov pushl lea call call pusha xor mov movl sar sar movsbw add and rcl shr not (bad) notl iret mov bswap btc clc add pusha call call call stc cmp sub jmp cmp call pop movb pusha pushl seto bswap mov bswap bswap pushf not lea lea call mov loop and repz das iret or daa adc std mov nop fptan adc stos dec cli in pop jbe xor xchg rcrl mov push rol cli or cmc push add idivl icebp xchg data16 xchg or add aaa pop sub fs adc and ret pop mov test xchg (bad) fld1 dec (bad) push and cmp sbb fldl mov sti fs mov fnop adc ss sbb or daa ljmp rcll cld ret aam push inc dec mov adc jp sbbl push jbe sub push mov jle xchg xor fld lea frstor mov ds aaa inc pop add aas sub pushf pop lock call iret cmp and (bad) pop push pop xchg jg (bad) jmp loopne jl or test popa push cmp cltd test popf faddl pop cltd lock or push push popf scas fisub xor stos jo pop sbbl pop sahf adcb fcomps scas mov mov in lret ficompl (bad) mov test out in sub and xor dec xchg mov cmp cwtl movb aas mov push daa push adc iret inc stc push clc mov cmp icebp repnz loope mov mov mov scas mov int3 imulb xchg int3 (bad) cltd cmp and push bound call push loopne std je fwait and sub jno xchg iret out out call inc pushf adc lea push movw pushl ret jne mov call xor sbb sub push repz (bad) enter jge xchg ljmp sbb in aam imul xor fs mov test jle xor and cmp pop push fcoms addb mov push inc add cs icebp cs clc xchg xchg gs out mov iret jo (bad) in mov xchg sbb dec jle mov mov xchg sub push xchg cmp sub pop insl jb cmp lods xchg xor bound pushf push mov or lock andl xchg or cmp inc jg mov lcall jg ret decb scas (bad) jno test lea ja stc stc imul call (bad) xor adc pop (bad) pop out repz mov adc out loop mov bound xchg ret inc pop adc popf sbb movsl mov or divl out push scas push dec jle mov flds scas mov cwtl fild mov pop push jnp arpl rorl dec push cmpsl jmp fwait xor sbb pop jp sbb in pusha out xchg data16 push xchg or jns inc sahf scas xchg daa mov aaa cmpsb pop cltd sbb mov ret xchg jmp int3 leave cmc mov or insl push add out jo (bad) ror adc jmp jno test jl add lret lcall stc (bad) dec add push push lea aad xchg shrb or adc adc out out push gs pop cltd (bad) scas cmp out xor and inc hlt mov imul cld and add int fldenv out lock dec mov sbb hlt jae jno pusha sahf mov push daa lcall mov mov outsb (bad) xor inc (bad) mov incl mov cmp das fstpl popa mov test jmp repnz or ds lret and je fsub ffree das (bad) mov xlat les out lock xor pusha iret pop out push loop adc movsb mov shl lock add sub es jg arpl inc adc jo mov fstp add jno test mov mov popa xor add (bad) mov loopne rcl call cmp jmp jmp add cs repz outsl adcl jns lcall ret scas inc adc pop enter push cltd add jge jno jne push cmp add push pop arpl inc pop xchg int3 cmp ficom hlt or daa jnp xchg div mov pop es stc es repnz (bad) jne daa sub pop addb enter sub popf xchg lods cmp pop mov test inc pop idivb push repz loopne xor pushw and aam cmpsl js je push negl inc push dec popf pushf jecxz push mov xlat xchg repz cmc jmp pushf and dec in push sub arpl (bad) mov data16 or xlat rol (bad) mull movsb repz push movl cmc test jmp mov bt push cmp bswap lea cwtl movb lea jmp xchg dec rclb lods or adc loope adc add add fs cmp rorb dec fwait es and xor sub mov lret std hlt adc add int aad std frstor in sbb icebp add sbb stos mov rcrl push sub pop imul das cwtl iret (bad) cmpsl jecxz enter cld mov repnz fbld fildl clc adc inc fdivrl push push daa pop fsub and out cmp or out shrb jmp lea je pusha jmp mov dec inc pusha pushf inc inc inc sbb not xchg cwtl mov jmp pusha pushf movb lea jae pusha call stos ss imul add lea lds arpl inc jmp sub or (bad) sub push mov mov (bad) ds fisubrl inc adc sub and dec rorl pop xchg gs dec jle (bad) cmp push sub mov ds pop mov push mov pop sti inc push insl enter push insl push dec ret cmp sub insl xor add shrb shl push sub jge es lods jb aaa scas das mov jae out inc mov ret sbb and and imul dec repnz cld jecxz setne lds xor fwait pop idivb je sbb xchg dec adc jnp stos imulb bswap (bad) and cmp jmp test cmp mov ret cmc push (bad) cld add in je fiadd adc sub incl fs ja jmp pusha cmp pusha lea ja sub add inc ror mov stc cmp cmp pushf movw push lea jb bt push cmp jmp jae stc cmp push call mov enter mov fsubrl in push mov mov stos aam ljmp imul pop xchg addr16 daa xchg loopne sti fs leave ficoml adc xor dec fistpl push stos pop imul xchg ret mov call ja stc aad mov ret lret inc jnp ljmp sahf (bad) enter (bad) sbb lret mov loope dec jecxz mov adc xchg lds std or test add mov xchg add lret repz or jno jg sub add add add xor add cmpl sbb cmc mov ja ffreep lcall mov xor xchg imul xchg and cwtl mov in imul out sbb pop ljmp (bad) sbb ds jp mov lret xor in bound dec mov fwait and inc daa xor lods jmp into adc das lds call add pop cmp inc push addr16 push and cmpsb daa not sub mov or loope mov push int inc (bad) xor sldt inc and out adc movl movb pushf pushf pushl popl pushf pushl ret cmp nop mov repnz jnp call push lret hlt or mov pop (bad) adc and sbb outsb xor insl or ss sub xor jnp lea insl push xchg (bad) das shrb data16 inc mov mov aam (bad) enter lret or incl mov lods push lret sub xor jge movsl jle cmp pushf pushf lea ja pusha inc lea push inc add rcl cmc xchg xchg clc sub mov pushf sbb mov sub stc call movzbl bswap mov lea movzbw movsbw mov push pushl call jmp sub mov test pushl popl cmp add ja cmp cmp pushf push pushl call pushf bt cmp xor pushl bt rol cmp stc bt not clc cmp movb cmc add bt cmp pushf setae call cld in rorl dec pop push or out out out dec mov out fisub stos cmc sbb popa popf jo loop nop out inc jno,pn xlat daa push dec fld ja data16 dec aas push sbb or add int3 stos mov mov mov xlat call stos mov popf in (bad) in jecxz or inc adcl mov movsb sbb cwtl sti mov (bad) enter in lods lods (bad) repnz shrl add rorb xchg into (bad) fisttpl (bad) xor push xchg cli es pusha push push lea je inc shld sub cmc add shl mov jmp sub pop sti inc ret sbb loope (bad) mov xchg (bad) fimull jne fs xor adc insb xor stc or repnz add add lods lret pop outsb xchg outsl fdivrp dec in push add jne imul pop mov add jns loopne inc jl push out dec hlt cmpsb test in rclb rcll sahf push ljmp adcl adc xchg jmp xor xlat pop loopne sub inc xor jp fwait outsl jo ljmp mov jnp aad sarb inc sbb arpl lret (bad) jbe sub cld push lock lds stc pop add or loop and cs jmp inc cmp jno push or push jcxz lea mov mov pop mov (bad) lock xor pop cltd fcomip xchg dec pop dec aas mov std lods xchg add test outsl test jae (bad) cmp mov inc fcoms (bad) into test jle addr16 jp loop mov mov lds mov leave loop or stc in icebp lea insl xor pushf loop jg iret arpl or div sub imul cmp mov popf cmp fs rcll scas sbb or adc xor cmp push add adc xor xchg mov or lods jne fldl2e sbb add sbb ljmp jno cmpsb jmp inc push jbe lcall mov ret repz popf fldl aas rorl and jl mov sbb negb dec addr16 lds dec repnz gs pop je mov push cwtl inc int das outsl push mov mov pop test jno jns ja mov iret inc jmp dec cmp jl xor inc jmp sub ds cmpsb sbb rorl mov push pop repnz fs cmp inc lock sub ret js sbb jae ss rolb ljmp cs movsl mov lock icebp or js mov mov insb add lds pop xchg mov popf fldl mov and inc xchg sub iret inc sbb mov push pop cmp (bad) sbb push lods loop std pusha pusha pushl or jmp jle,pt pop (bad) inc adc cmp out inc decb rorl cld add dec idiv or repnz aad mov aas pop pusha int xchg cmp or out test push xlat sysexit or nop into mov pop rolb cli dec xchg mov loopne fsubr das inc dec mov mov mov mov movsb mov adc jnp ss in sub repz inc inc jle stos (bad) daa sbb inc adcb js mov jns fmul (bad) mov out out out out lock adc pop and js rclb or test cli (bad) (bad) jmp lds add add add lret and add add adc add add add adc add add and add add add add add addb add mov add add jns add add add mov add enter add add mov add add insl adc add add xchg test add push push add add add add and adc add add or and xchg (bad) and mov adc scas lods adc inc enter test add add add lret call notb inc mov jbe out jl repz xchg imul shll jbe inc push dec xchg popa cltd xchg imul add inc mov pop out mov inc xor xchg enter and jl decb sarb (bad) test add (bad) loopne push gs cmp mov pop mov into and lcall cmp xchg adc sbb inc jno mov ja clc xor sbb mov stos ret das enter insb shlb fadds movl (bad) imul stc (bad) fbld arpl xor out xchg sbb or insb leave jne push ret fwait add shrb jno jbe cli in pushf lea ja call jmp jns pop lcall push inc sbb pop pop mov xchg leave dec adc outsb xor sti push push imul insl push arpl rcl fwait lods in repnz std loope and clc lds mov pop pop (bad) je xchg sub stos leave xor mov jns xchg icebp ret pop mov ss imul adc xchg ljmp lods mov inc lods (bad) mov mov mov out add mov mov aas (bad) cli clc inc add addr16 sub jb lahf push iret out (bad) mov pop test jno jne dec and adc mov xchg das dec loop fisub lods gs ss fsubrs dec xor cmp in mov out mov jmp sub pusha pop add mov pop or xchg push lods sub imul in or or dec sub in fstpt mov mov int3 (bad) adc pop or inc jne fbld test xchg or xor push ja sub jge cmp out push and ss push and jne or arpl inc jb popa je inc popa jo jne gs imul cmc mov push shl bswap mov call mov pushf pusha push mov lea jmp pushf jmp lea je pusha push cmp pusha call lea je mov pushf push pushf pusha lea jmp call imul inc pop rorb jno cld jno push pop inc pop addr16 (bad) dec mov dec jp mov iret mov pop inc pop sbb cs lcall xchg pop sub xlat (bad) pop pushf adc fs cmp mov adc mov loopne xchg scas add imul jne arpl arpl popa push (bad) out lds lods add clc out push fldt es mov xchg push sbb xorl sub xor jne in mov stc xchg sub dec adc daa ja scas adc dec outsl outsl sahf pusha xor mov test jno jae xchg sbb mov pushl popl pusha pushl movb pushl ret movsl cmp sbb xchg pop sbb mov popa into push mov xor lods repz arpl movsl mov leave inc lret mov es (bad) out sub cmp daa push lock push sti mov or lock mov ds jmp lcall mov sub xchg jns sbbl jge mov or xor mov xlat sbb pop fiaddl or cmp sarb (bad) jno,pn dec inc ja js jecxz in or movsb cli push xcrypt-ctr cmpsl sbb in repnz out xor jae stos lds mov lea jne adc bt xor (bad) hlt and and shr mov and pusha sub and add jmp cmp push movw pushf pushl lea jae push pushl pushl mov cmp call addl loop ja cmp mov stos popf shrl std andl jge out mulb dec (bad) je sbb inc or pop lock jg xlat cmpsl hlt mov lret (bad) xor sub adc insb cmpsb mov dec rcrl push daa dec movsb iret outsl xchg lret fcoml dec paddusb hlt xor mov or mov sbb adcb push shrb or dec lds cltd out (bad) or inc addr16 mov nop into (bad) idiv or pop inc pop mov xchg mov call arpl and jb pusha pushf pushl ret or sahf add push jle out pop xchg mov int3 (bad) xor jg fwait add lahf push jo gs fild mov cmpl pop (bad) pop lret flds dec dec jmp push or scas jo pusha push mov clc jecxz stos xor or dec mov dec mov das nop es stos lcall mov dec inc js je cltd adc or dec mov int movntq or pop es xchg cmpsb insb repz insb cltd add jl inc leave insl xchg repnz push jo stos xor pop mov or mov sbb jge scas and call jno arpl pop inc dec icebp add lret xchg outsb mov fisubr loopne push jmp adc daa (bad) sti movsl mov ja fcomps repz rcrb sbb adc jne call inc fistpl pop inc push roll in adc sub push sub cmp xchg test mov and mov addr16 jecxz mov mov sbb or or or adc jmp and inc push dec and push mov adc pop (bad) lock push popl (bad) psubsb bt stc bt test or call cmc sub test stc cmp je pusha pushl lea jae pushf movb pushl lea jmp lds cmp (bad) sbb insb push jo lods cli dec mov (bad) cltd inc stc cmp and pop bound jbe sub ds xchg pop inc pop sub lret inc xchg or insb jmp pop daa xchg cld xchg movsb movl dec mov outsl dec pusha bound insl xchg lods push mov enter add jmp (bad) xor out icebp inc pushl movsl lock rsm xor inc jo scas push xchg (bad) into mov mov or test xor and in mov jmp xlat pop (bad) fdiv sub pop rcll cld jne push fs pop pop jmp movsl push icebp inc imul outsl movzbl sbb mov pop sub xchg jo outsb (bad) test jecxz pop imul das rorl dec (bad) adc jp push imul cmp daa lods adc lock (bad) ret lods mov mov in sbb mov or cmpsb xor lods jne std or pop add cmp sub movsb mov lret sbb test sbb jl icebp adc or sub mov jno outsb xchg sti dec notb rclb adc lea jae call clc movb cmp or call lea jne movzbw movb setl push call adc inc jg push mov (bad) mov or mov push adc pop popf push enter frstpm(287 cmp test push imul mov gs adc inc loop pushf and out pop jns mov push mov jg xchg sahf add sti sub pop insl adc push mov push or popa (bad) push ljmp pusha xchg sub pop push mov lcall jp inc inc pop cmp stos test push shll mov nop rcrl pop mov fdivr (bad) cltd cmp xlat mov cmp cli cmp bound jnp add and sub jnp push (bad) or andb mov xor mov fsubp or sub int sarl cmp stos push xchg fadd rcll jmp cmp aad out mov inc (bad) or lea pop push lcall fs add xchg jbe dec xor (bad) mov inc sbb and das push popf sub lock test inc push add mov lods repz daa push xor xchg fimull pop rcrb sbb cmp jno insb lock mov movl movb lea jmp pushf mov jmp pop int3 jae addr16 xchg aam adc adc dec aad mov call push sub pop ss cmpsb cltd jge repnz sbb jae clc (bad) sbb lea lret and stc fcmovnu inc pop and push mov (bad) jno test dec insl jg stos in in or outsl (bad) in push mov fimul add dec lcall jle movsb lcall test sbb mov mov rcr lret shr iret repz sbb dec push (bad) or cmc adc ds xor jae push lahf sbb mov push dec inc mov sub bt clc cmp pushl lea ja push call and test (bad) outsb (bad) popf push mov mov movsl sbb jb push lcall mov fisub inc pushf out jno inc into or push sti mov mov mov es (bad) cwtl addr16 fstpl pop jmp jbe mov outsb mov mov ds xor dec nop lahf mov lods (bad) xchg jmp sbb bound mov cld adc cmpsb pop xlat cli nop iret arpl xchg jmp mov int fstp inc icebp cs scas nop mov into imul aas push push xchg outsb (bad) ja push and pushf lods jno push sub aas pop cmpsl js and pop and mov arpl mov ja or sub cmp movsl dec mov ds cmpsb ret imul mov dec insl into xchg mov mov dec dec popa xchg leave dec adc popf rcrl mov je arpl in xchg or dec negl aaa in pop dec sahf mov mov icebp add repz mov incb push or and cmc pop popa jb lcall sub dec rep mov mov outsb dec inc mov pop adc jmp jb mov mov xor or and mov push pop and pop aas inc mov nop mov pushf mov cmc stos or ffreep (bad) jno push dec add std inc (bad) aaa test inc frstor loop xchg xchg lret mov fildl cwtl out mov mov or int lods mov fwait lret movsl stc out clc repz and lcall cmpl clc add mov cltd mov push sbb stc cmpsb mov inc (bad) sub mull js push int scas sarb sti fs jo (bad) xor ss jg lret mov mov cwtl out fsub clc out add imul lea je call test cmpsb push movsb pop xor pushf add push dec imul inc lods fwait push outsb shll mov dec jb push lea pusha fbstp ror (bad) inc push mov flds (bad) or aaa js fmuls pop mov rcrb or loopne dec xor cs mov arpl push jns (bad) stos or xchg sbb adc adc aam faddl pop dec pop mov leave fiaddl mov add pop imul ja pop push and sbb cltd movsl fcmovb mov (bad) jno push ret imul inc fsubr pop test push xor imulb push insb push xchg jo,pn cwtl push sub xor imul outsl stos fwait test lods mov popa jb dec mov mov lcall test mov inc cmp xor inc xchg aas sbb xchg pop out out orl roll jecxz lret adc add inc add fwait pop loop xor inc jo,pn jno push mov lods out xchg xor push fisubr jp shrb repz jae push sub fsubrs cmp repz stc or dec gs cmp out push lahf movsb push xchg fwait mov and jo and pop lea in push sub sarl adc push or pop fisubl push in inc fsubrl cmp mov pop cli test cli (bad) dec in xchg aad mov std cmp pop xchg adc lcall cli or pop mov pop inc sarl popa arpl inc fcoml mov xor or mov pop (bad) push dec mov in pop loop packssdw aad jle push xchg stc xchg in mov int3 addr16 cmp jne js shr xor push mov cli test push ljmp loope add adc mov fdivr dec push xor movsl push or imul or or mov cmpl sbb mov or int call movsb mov mov push enter xchg sub sub sbb lods cmp xchg iret push mov add dec pop fcmovb jae fist scas ja jle mov popf (bad) xor ja push sbbb sbb push imul or adc mov dec xchg jnp shrl push xchg clc jo cmp adc loopne xchg xor aad les xchg lds cli test out cld jecxz rcrl aas sar stos leave mov cmp movb jbe sahf test nop mov hlt or frstor stos dec xchg (bad) lock pop adcb and leave fidivrl inc cmpl sub xchg lret xor lods and lret xor pushf cs jmp into adc jecxz push scas push add push xor xchg inc cmpl test dec scas push pusha call pusha push pushf lea je movzbl mov cwtl lea pusha mov push pusha pushl popl lahf lea jg movzbl push jmp mov shr lea push mov push jmp movl lea je push pusha pusha movl push push push lea jmp cmp or call adc pushf mov lea jae push call push pusha jmp xor mov jb fbstp sahf mov dec mov mov push mov mov mov es ja hlt mov sti into xchg pop and ja dec stc imul cld adc add dec pop fwait inc push jecxz pushf cwtl mov sub dec inc cmp dec fisubl and iret fildl mov std loope (bad) out insb sbb cmpsl sub ret aam xor adc std in repnz sti (bad) repnz jl cwtl (bad) sub cmpsl fsubrs dec xor jno mov mov bnd xor rorb or pop inc (bad) fnsetpm(287 sbb mov (bad) lds in adc ljmp scas push pusha cmp add cmp movsl mov call fwait in inc mov sub outsl pop add and (bad) movsb fwait out faddl fsubrp jns jno (bad) and in mov cmc or ds ljmp sbb ja lds test lret or movsl fcmovbe out nop mov add inc dec mov ret or ss push add push mov cld add pop call pusha cmp lea js or pushf lea jle push lea je push cmp lea pushf call stc pushf add sti pop aas addb sbb add test xchg stos int sub in sbb pop inc pop inc jge jo inc xchg sub mov pop sub lret repz mov pop xchg ret or cmp enter je pop jle cmpsb cmp adc test aad (bad) push ja inc cmp shll and cld or push scas js adc adc pop inc xchg cli xor sub (bad) les xor or mov jb and mov xchg mov jl orl in and sub lods scas dec mov pop push inc in and push jmp inc mov mov jg push jle and test jmp xchg pop bswap lahf mov pusha lea cwtl lea mov call cmp call pushf push push lea jne cmc mov pushf add push movzwl ror call shld dec mov stc pushf pushf push add bt mov test test pushl pushf call es dec pshufw mov cmp mov sti in call out sarb add or call jg dec pop lcall adc scas adc sbb pop in pusha orl adc std aad inc xorl out push ljmp int scas adc pop mov push lahf inc and push out xor pop jo mov jg inc cmpsb ret popa pop jl shrb clc (bad) fcmovnb sbb faddp mov xchg sahf cmpl out dec iret and shrl cmp adc fwait repz and add arpl mov or cmp push jne aam xor (bad) aaa or fildl adc adcl hlt mov jae xchg bswap push daa xor or sbb and js test pop les sbbl lods xchg in or adc fwait fs ss js setg pop and add pop xor jl add pop stos mov (bad) push fsubrs jno xchg or fldl dec push pop inc sub movsb jp dec push insb (bad) pop dec push xchg jno pusha jge xlat clc cmp cmpb pushf lea jne sar bts sub movsbw daa sbb aas mov dec test or add and adc mov cmp test jmp add shrl cmpsb mov pop lret xor lret xor js shrl cmp mov addr16 xchg sbb mov fst scas lock ljmp es sbb pop jg sti test cmpsl push call cmp pop aaa jnp sahf stos aas and repnz jmp cwtl pop lock mov pop mov sbb stos int and ja outsl push or fimul cmp aaa xchg andb (bad) (bad) notl jge in xor shrl mov mov aaa push push out mov aam es or lahf pop rorl mov xchg jmp lock fnsave cmp push arpl pop lcall add lds jecxz mov adc xor test test sbbl or (bad) inc mov inc lahf mov xchg cli add pop idivl test cmp int adc call mov lcall mov popf addr16 or sbb xchg in shlb in xchg sub xchg stos mov xchg data16 fcmovbe adc cli fadd or push cmp adc stc js cmp mov incb mov test sbb out sbb data16 sbb cmpl push cwtl sub jno pop (bad) xchg xlat mov adc daa cwtl test or enter insl repnz ficom dec mov cmovg pop ja mov lret mov jns test push imul sub cwtl shrl and mov lcall aam sub cmp add out ficom sbb cwtl or push stos int and mov sub mov mov arpl fs ss xchg aad jle sahf cltd lods jb jnp aad stc test xchg outsl xor outsl (bad) imul xchg ljmp push push jbe pushl mov pusha pushl ret loope out pop ljmp cld sbb mov mov mov stos pop subl iret into aaa scas das sub cmp (bad) cld nop out dec mov es sbb cmp jge test xor sbb cmp jle sub mov add pop mov sub inc mov sub fsubrl jge out ljmp xor push scas jno arpl cmp or jp lods mov repz enter sub das aas inc or cld or mov daa mull movups sbbl rorl sahf test or jns fldenv mov stos aad sarb ja sbb push inc inc cmp sahf rolb mov mov popf fisubr fmull xor sub sti inc pop insb cmp ret loopne mov stos mov push cli sbb das mov and sbb imul shrl mov out push gs repz pop sbb iret jo mov aaa mov xchg inc fwait xchg pushf lods or pop cli fs dec mov das jo jns pop inc pop inc cmp jmp dec jno pop (bad) idivb ja enter xorb or cmp jmp jne fucom stc push rcl or nop jne mov cmc or jb insb fistp aad inc leave cmp cmp xor scas addb out cmp inc push xlat mov add hlt dec (bad) jg jmp shlb movsl lods shl jb,pt sub xor push xchg mov adc ja xchg jnp arpl lcall test shr pop (bad) xchg cmp and loope scas push jb lds jno stc out adc dec xor pop es and xor cmp movd cmp sub push call cmovg sbb adc push jge fisubrl pop xchg mov or imul jmp cwtl (bad) xor jne shr call ss mov jl enter add add cmp adc and dec repz cmpl imul sub out jo jmp mov pop arpl jg pop jl hlt dec mov or mov xchg clc pop test (bad) jmp xchg lahf add mov roll lret dec scas push ror aad nop sub dec in cmp int inc pop outsl jne aas adc into fnsave cwtl push pop mov or (bad) leave jbe gs movsb pop add mov sbb test jnp scas jo,pn arpl outsl inc lahf sbb sti jecxz repnz pop stos jnp out pop push outsb fistp dec sbb shrb punpckhdq lret push mov mov vcmpps sbb lahf lahf insb add mov into das (bad) (bad) in xor jbe addr16 xchg pop sub stc inc lds adc mov (bad) xor sub or mov fild push and cmpsb push push sbb push adc mov mov leave mov xchg sti or iret lock adc xchg jno pop imul int push add mov loope or inc mov imul cmp jne fsub jno and jae (bad) out scas out jl pop inc ret sbb xchg bound mov sbb or mov xchg pop out add stos sub pop aas xchg ja jnp flds fs sbb mov mov and sub pop outsb push out or out cmp add mov fbld addb mov xchg inc ret sbb sbb scas nop mov sbb cmp rorb jmp push cmc sbb mov clc sub sub movzbw shld push bswap rcl push jmp dec lcall fucomi or or addr16 push out sbb jno call fldt mov movsb stc rcrb and fsub repnz mov daa pop mull pop arpl jg fildll sub in sub aad sti mov call mov inc push lahf jg in push push outsb jg inc pushf insb in and inc and and inc cmp sahf push dec aam in repz push cld ret jbe loop and mov pushf fstpl push push (bad) jmp (bad) dec das lock and movsl mov mov out lock or fs lea adcl xor cmp mov mov push pusha not inc setge jmp cmp call and push sub mov shrb fwait and sbb inc call cmc pop dec push sub enter (bad) psubb and pop pop jo and outsl stc gs xor test mov pop call sarl in insb insl pop xchg xor std inc (bad) mov adc mov gs push xchg dec (bad) test or mov dec and inc (bad) insl push ret xchg push inc std xor mov sbb fisttpll dec orl sbb mov mov pop fst or mov xchg push mov push jnp test xchg and dec inc inc cmp cmp or jmp stos out (bad) aaa test clc or ss fildll orl roll sbb jne jno dec sahf push push das data16 mov fidivr test (bad) fsubrp icebp push loope int sbb pop xor sbb pop pop sub aam jmp dec cmp add push pop jle push and jnp seto xchg std mov inc mov icebp dec sub or and push jns inc lahf push push xchg jmp sub add or jg xor sbb jle (bad) mov cmc stos jl fwait push mov daa jmp roll xchg insb jb pop fldcw pushf sub repz xor cwtl outsl mov inc sbb inc push insb add cmp sbb adcl in lret sarl es jb outsl fwait inc (bad) js adc stc or adc dec jno push mov es out pop stos adc aas xorb outsb push jecxz out hlt lret jnp repnz jmp pop sub js push pop lods dec mov push dec push jo and mov pop or sub push pop mov mov mov sub lret loopne cmp mov gs movsl cmpsl (bad) repz movsl sahf sbb pop fstpl push lds and sub in insl movsb (bad) (bad) stc adc add sub add push xor cmp les pop imul pop pushf imul push mov lcall cmp fldenv leave mov clc inc adc xor mov (bad) mov sbb and insl jle pop insl in inc pop shll mov mov fldcw push (bad) aaa shrl mov pop std add cmc into adc sub or sbb sub (bad) pop cmp jnp jl lea xchg stos (bad) fdivrs mov sub xchg push out jno push sbb mov and pop iret inc (bad) mov xchg stos scas out lods rcrl mov sahf loopne mov xor add cmp popa sbb push mov xor mov (bad) loopne push lret or test inc xchg into hlt pop push or jne push sub push dec pushf and cmp jp push lcall xchg push cli mov addr16 push pop test cwtl sub dec jne (bad) push sub jge fldl xchg jp jmp lods adc sarl xchg (bad) cld or xor push data16 cmp lea in cld cld test jno cltd stos add mov ficompl cmp fs fstps mov hlt dec jmp xchg xchg sbb pop dec mov (bad) mov mov ret pop movsl sub xlat popl popa ds sub cmp jns mov lahf mov test notb jno push fnstenv pop std std xchg xchg push mov ret jge dec xchg (bad) sub mov pop (bad) ss cltd out cmp jge cmp xchg sub std and aam pop movb fisubr adc test in nop xchg ror add jne inc data16 in xchg push push scas test jp adc (bad) cwtl lret ror cmp aad pushf bt xor bt clc clc rol test bt not mov test add clc call movzbl mov setg lea mov push movl pushl call in lods adc cmp (bad) add sbb inc adc sarb xchg add movb dec pop mov mov jns pop out pop xor xor icebp add pop inc (bad) sbb and mov xor fsubrp add in sub js mov mov in mov mov jbe lahf mov aam push push jmp lahf ds leave jne lds pop cmpsb ret cmp arpl dec or mov ret jl mov outsb pushf inc out xor jle push xchg stc jmp test adc (bad) mov in test insl scas dec pop mov (bad) pop sbb cltd push jmp add adc inc adc or inc inc int out push les mov push sub mov add add mov scas mov push sbb pop mov shl or cmp clc sarb outsb fsub rolb aaa pop dec iret mov fbld clc pop dec mov mov jmp aaa dec cmc mov sbb push adc add bound adc sub and jne lock imull dec les mov jno push insb and rorb shlb jle dec shl sbb push jg icebp adc pop arpl test lock sub lods sbb adc or pop and rorl movsl xchg mov mov je test mov daa (bad) mov (bad) inc push jp test add aam pop (bad) push push int3 jns stos pop inc pop mov and jmp mov push dec mov sti or hlt jmp loopne and out pushf imul aam mov (bad) push out mov jecxz psubq push sbb add mov hlt adc in lods pop insb (bad) fcompl icebp js divl addr16 or xchg jo and pop xor or and aaa outsl enter jo cmpl fadd fldenv xchg data16 mov push sbb add xchg dec rol (bad) xchg fdiv bound or daa cmp js cltd push dec lahf adc adc jge pop movsb sahf gs das out mov and xor xchg sub mov frstor push add stos jne movsl cli daa ss add jae outsl push cmpsl scas scas mov jl pusha pop dec ret pushf add xchg outsb xchg icebp das push mov sbbb jp xchg nop fwait push dec pop jo pop test push mov imul stos xchg movsb dec mov sbb push inc cmp mov xchg and cld pop test or inc pop cmpsb mov je jg adc mov cltd stos out and jg fcmovu add dec fistl jbe rolb lea pop rcl out push ss and inc sub cs outsl imul mov jl ret adc test pop imul dec jge inc jp mov out cmpsb sbb push mov cmp pusha lea je pusha jmp repz pushf pushf movl call mov icebp gs push rcll xchg je jno xchg mov mov dec jb xchg adc or pop ja imul movd push xchg rorb dec das std sarb sub mov mov mov test rorb rcrl mov iret loop imulb push ss (bad) dec cmp jge dec lret inc or mov cmp scas addr16 (bad) ja lahf jg test into mov or adc mov ds mov scas out inc cmp test stos ds outsb cmp in push loopne mov jecxz jne push adc popf inc repz sahf inc jbe jmp inc hlt imul (bad) jg js mov push and push lock std std add push lock scas xchg rol sbb mov pop pushf ss xchg sub and dec adc dec aam pop int mov fcoms cmp (bad) jmp popa jne inc data16 jae xchg push cmpsb stos fs jbe loope (bad) pop add xor jmp sbb dec push mov cli movsb in push sbbl dec mov and push fwait lods push jmp inc clc or inc sbb mov add xchg lods int pop adc add cwtl les lds push sub aas mov pusha pop pusha aas aas jg imul and pop out fcmovnb fadds jg cmp mov inc mov inc adc sarl (bad) repz mov movsb and shl xchg sub push or dec call xchg dec fldl in shrb aas mov je addl mov out xor cmpsb cwtl lcall mov mov adc add add bound je xchg xor xor xchg mov cwtl xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or sbb es cmp inc ss mov ss aaa dec aaa pop aaa popa aaa insl aaa js jge mov xchg aaa cltd aaa sahf aaa stos aaa mov aaa into aaa hlt aaa pop cmp cmp lcall cmp cmp cmp cmp cmp cmp cmp cmp jne xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp fwait cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp test xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp stos cmp sbb lret or ds dec aas ja lret aas sarl add add add test add add pop xor xor xor xor xor xor mov mov loopne or xor jnp xlat xor xor hlt xor xor xor xor jb xlat xor inc ss ss sbb aaa xchg aaa cmpsl aaa inc cmp arpl jne add cmp cmp cmp cmp fstpt lock pop cmp cmp cmp cmp cmp fnstcw xchg ds ds adc inc aas data16 jl mov (bad) aas stc aas add add or add cmp inc xor mov fdivl add xor xor xor xor jnp mov (bad) xor xor xor xor gs xor xor xor xor xor test (bad) xor js cmpsb ss mov fidiv jmp aaa adc inc aaa push aaa data16 fbstp adc and cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp cmp jo jne jp jg test mov mov xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp xchg (bad) cmp sbb and sub push ds ds ds ds aas pop aas pusha aas popf aas stos aas mov add inc add jl add add xor xor xor xor xor xor stos xor xor adc sbb stc xor xor mov fwait xor xor xor jne mov cmp cmp cmp jg mov stos cmp cmp cmp cmp cmp cmp pop cmp cmpsb cmp cmp cmp cmp cmp cmp cmp addr16 cld aas add add xor xor test loop in xor xor xor xor xor xor xor sub jp test mov mov xor jns (bad) xor xor xor xor xor xor xor xor xor xor adc sbb arpl jne xchg stc aaa or sub das cmp sarl push cmp cmp mov cmp and xor test (bad) ds sarl loope (bad) aas add add add xor xorl xor jb fnstenv sbb and cmp push ss ss jo xorl aaa and cmp pop cmp cmp cmp pusha cmp cmp pusha cmp cmp cmp cmp cmp cmp cmp xchg cmp and sub push ds ds je,pt test mov nop ds ds ds sarl loop (bad) ds aas or aas dec aas jl test mov nop aas lds int add add add add xor dec xor pop xor insb xor jge (bad) xor xor xor xor xor xor xor xor xor xor push xor jb jns jle xorl xor xor xor xor xor xor xor xor adc push xor xor xor push xor xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor ss mov adc and push ss mov (bad) fdivl in lock insl aaa jae fidiv ljmp cmp cmp cmp cmp dec cmp insl cmp (bad) cmp and jb push cmp jbe stos cmp cmp cmp cmp cmp cmp aas cmp je jg mov mov mov cmp push mov mov aas inc aas mov ret aas add add add add adc pop xor xor xor xor xor xor push xor stos xor xor xor xor push cmp adc mov cmp cmp cmp inc cmp cmp jl inc aas dec aas pushf aas mov add nop add pusha add add xor xor xor xor xor inc xor add xor xor bound loope pop aaa push cmp cmp cmp stos cmp cmp cmp lods cmp cmp cmp cmp cmp cmp mov aas add add add dec xor xor jae mov xor (bad) xor xor xor xor xor push xor add cmp cmp add add jns sahf xor xor xor xor popa cmp cmp cmp outsb cmp push cmp test stos cmp cmp cmp cmp cmp cmp cmp cmp cmpl aas mov aas loopne out jmp cli aas add add add cld add add pop xor (bad) xor xor xor xor xor xor xor xor popf xor xor xor xor mov enter xor xor xor sbb xor cmp dec ss xorl (bad) ss aaa push aaa and dec aaa scas aaa mov mov cmp pop cmp cmp cmp cltd cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp xor cmp cmp cmp cmp cmp cmp cmp sti cmp mov fnstsw ljmp aas inc aas pop aas data16 jno jl cmpsl aas (bad) aas icebp aas add add aam add push xor xor or sub xor (bad) xor xor xor xor xor xor xor aas xor jbe test stos xor xor xor xor xor xor cmp cmp cmp cmp cmp cmp jae xchg add pop cmp cmp cmp pop cmp nop cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp aas cmp fs (bad) cmp loop out or dec ds jae,pt leave ds aas ret aas ljmp add add add xor stos xor xor test mov mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sub insb xor (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor and mov xor pop adc sbb es push movsb ss lods ss mov mov les enter (bad) ss cmc ss aaa xchg aaa enter aaa cmp cmpb cmp cmp cmp cmp dec cmp cmp cmp cmp cmp pop cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp loope pop ds ds ds ds ds inc aas push aas xchg aas movsl aas add add add int3 add add xor xorb xor xor xor dec xor xchg xor xor xor jl out add adc xor xor xor xor xor xor xor xor xor xor add ss ss mov ret ss out pop aaa test xchg aaa (bad) cmp cmp popa cmp mov cmp cmp cmp sub cmp pop cmp cmp cmp sarb cmp cmp cmp cmp cmp cmp cmp cmp scas cmp sbb and and sub sub xor xor cmp cmp inc ds ds cmc ds aas pop aas data16 outsl aas pushf aas ret aas add add int3 add add xor pop xor xor xor xor xor xchg xor xor xor xor xor pop xor pop xor xor xor xor xor xor scas xor (bad) ss xor xchg mov mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp xlat cmp pop cmp stos cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov icebp cmp lds xlat ds aas insb aas scas aas mov adc add inc xor addr16 xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor ss ss movsb ss fdivl adc and inc aaa pop aaa xchg cmp cmp test lret cmp cmp cmp cmp dec cmp mov cmp jle cmpl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sarb cmp push ds ds idivl pop aas push ja mov ret aas loope idivb add add add adc add adc sub inc xor jg movsb xor xor xor xor xor jg movsb xor xor xor xor test stos xor cmc xor daa xor imul xor xlat xor xor xor xor xor xor xor (bad) xor mov (bad) ss ss aaa (bad) aaa push cmp cmp cmp cmp cmp cmp js mov xchg cmp cmp cmp cmp push cmp cmp cmp dec cmp jp xchg mov lahf cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp cmpsb cmp ret cmp hlt aas add add add pusha add add xor xor (bad) xor xor xor xor xor push xor xor push xor xor xor xor test xorl aaa call cmp cmp cmp cmp cmp pop cmp cmp cmp cmp cmp cmp cmp jecxz add adc add add add add lods xor xor bound jle xchg xor xor xor xor xor xor xor xor inc cmp pop cmp cmp cmp cmp cmp movsb cmp cmp cmp cmp cmp cmp js mov (bad) cmp dec ds ds mov (bad) ds fstpt loope pop aas and xchg mov aas in aas clc aas add add add pop xor mov mov xor xor xor xor xor xor pop xor mov xor xor xor xor lds lret xor xor xor xor xor xor xor xor xor pusha xor xor xor xor xor xor xor pop xor lea stc xor es mov lcall aaa push aaa jae xchg divl sbb cmp xchg cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp push cmp (bad) cmp cmp cmp cmp cmp cmp and cmp mov nop cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp jo js cmpl sti cmp xor ds ds aas mov aas add add add add or push xor insl xor xor xor xor jns xorb xor xor xor xor xor xor xor xor xor xchg xor xor xor xor xor xor xor xor xor xor jno jl mov mov xor in jmp xor adc and cmp inc ss ss ss outsl ss mov mov ss adc sub xor cmp lea (bad) adc and dec cmp cmp test sahf cmp pop cmp jl (bad) cmp cmp cmp cmp cmp cmp cmp stos cmp cmp cmp cmp cmp cmp push cmp cmp mov in cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or jo add add add xor xor xor lret xor xor xor xor xor xor push xor xchg xor or push and inc ss nop ss ss pushl or adc sbb and sub ja xchg test aaa fdivl in stc aaa or cmp cmp push cmp insb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp pop cmp outsb cmp jl (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp xchg xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or add add add or xor xor xor xor xor xor xor xor xor xor test mov cld ss push aaa imul aaa nop aaa fdivl out aaa adc dec cmp jle les jmp out cli ds aas ss cmp dec aas imul aas idivb sti aas add add add or xor xor xor xor xor xor ss cmp cmp mov add je test adc xor xor ds ss adc and sub cmp inc aaa xchg aaa lcall cmp cmp cmp cmp mov ret cmp cmp cmp cmp cmp cmp cmp cmp inc cmp push cmp bound push cmp cmpl mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp popf cmp cmp cmp cmp push cmp xchg aas ret aas add add add inc xor xor xor xor mov lcall xor xor xor xor xor xor xor xor into xor xchg cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp imul outsl lea mov ds add pop aas inc aas bound add add lock add xor xor xor xor xor xor sahf xor jmp icebp xor xor ja (bad) xor xor xor xor xor xor xor xor nop xor cmpsl xor mov xor push ss jo jg mov out icebp sbb inc aaa push aaa je (bad) aaa ljmp cmp mov stos cmp cmp cmp cmp cmp pop cmp cmp cmp xchg fwait cmp cmp cmp cmp cmp xor push cmp cmp cmp cmp cmp or cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp (bad) cmp jns mov ja (bad) aas add add push add add stos xor xor xor xor xor ja divl or xor xchg xor xor jno lcall xor ret xor cmpl cmp cmp cmp cmp jg mov and add push xor mov (bad) add adc imul cmp cmp cmp add add add pusha add add pushf xor xor xor xor xor sbb and sub xor cmp inc xor jb bound sarb xor cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp idivb add add push add add xchg mov xor mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor cmp cmp dec cmp cmp cmp cmp cmp cmp adc add add push xor cmp push cmp imul iret aas add add add pop add add xor xor xor xor je xorl aaa in aaa cmp cmp cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov and fdivrs call add add xor pop xor ret xor loopne add push aaa mov (bad) aaa lea mov cmp cmp cmp cmp cmp cmp ja xchg cmp cmp cmp cmp cmp outsl cmp cmp cmp cmp cmp cmp movsl fdivrs sti ds and push aas jb cmpb aas sahf aas sarl aas (bad) aas loop icebp aas sti aas add add add add xor xor xor jo jne mov mov xor xor xor xor xor xor xor xor xor xor aaa add add cmp cmp cmp cmp cmp cmp cmp cmp cmp outsb cmp cmp dec cmp cmp cmp cmp cmp cmp inc cmp push cmp mov cmp aam fdivrs sub xor xor cmp cmp mov ds ds fdivrs fdivrl std ds aas pop aas pusha aas fs push aas je js jl (bad) aas int3 aas sarb aam fdivrs add add add add xor dec xor or push xor outsb xor xor aaa jge test and inc cmp xchg pop cmp cmp mov cmp cmp aas add add add xor daa xor xor xor xor xor sub xor mov xchg ss pushl add aaa xchg fnstenv push cmp cmp cmp cmp cmp sarl fstpt out lock cmp cmp cmp cmp cmp jb jns adc mov sarb clc cmp addr16 cmp aas add add add add xor ss ss ss ss add add aaa sub jno mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and inc mov clc sbb cltd aas mov aas jmp addb faddl add add sbb xor xor popa xor xor xor xor xor nop xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor jae jns (bad) xor mov mov aaa sbb sub cs ds inc aaa pop aaa addr16 jno lea xchg aaa lcall aaa mov mov aaa into aaa (bad) aaa fbstp jmp lock cmc aaa sti aaa pushl add cmp cmp dec cmp push cmp bound cmp (bad) cmp cmp cmp cmp mov aas dec aas pop aas nop aas cltd aas movsl aas fidivr out repz add add add xor cmp inc xor xor xor xor xor xor xor xor xor xor xor xor imul xor xor xor mov loop mov xor xor xor jle mov xchg aaa mov mov cmp cmp cmp cmp cmp cmp cmp cmp cmp insl aas add add add jno mov xor xor xor pop lea xchg mov ss ss mov mov cmp cmp add mov add add cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp leave cmp (bad) cmp and xor cmp cmpb mov aas push aas cmpb rolb rolb add xor outsl xor xor xor xor xor xor xor xor jno jl fidiv xor xor sbb and cmp jg mov int3 ss aaa mov cmp test mov cmpsb cmp cmp cmp cmp cmp lods cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp pop cmp cmp insb cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or push cmp fs (bad) ss ds add push add add xor xor xor cli xor test xlat fidiv call aaa dec aaa dec aaa push aaa sahf aaa ret cmp cmp fistpll adc push cmp cmp jnp sbb pop aas mov mov add loopne add add xor xor xor xor insl xor mov xchg xor xor xor jmp xor xor xor xor ss (bad) fidiv jmp aaa ja mov (bad) gs cmp cmp cmp cmp cmp cmp cmp add add sub add inc xor xor xor xor xor mov mov mov aaa (bad) aaa (bad) aaa add add add pop add add divb xor ds lods ss mov aaa data16 js mov pushf aaa scas aaa (bad) aaa (bad) aaa in divb or sbb sub data16 cmp aas pop aas fs (bad) aas lcall aas mov (bad) aas idivb add add pusha add add dec xor mov (bad) xor xor xor xor xor xor xor xor xor xor xor mov cmp cmp cmp pop cmp (bad) and xchg cmp cmp cmp cmp cmp (bad) aas add add add sbb add adc xor xor add xor add repz sti pushl add pop aaa or getsec adc pop aaa sbb pop aaa and daa aaa sub das aaa xor aaa aaa cmp aas aaa inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa arpl addr16 imul cmp mov cmp jl cltd cmp cmp cmp cmp cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp ds add or xor inc aas push aas add add add xor xor dec xor jb mov (bad) xor sub push imul pop aaa sub xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp lret cmp nop sarb loop js stos aas mov lock add add add call xor xor xor xor aaa add cmp cmp cmp cmp cmp cmp cmp cmp cmp fwait cmp cmp cmp cmp cmp push cmp je jge fnstsw mov fdivrs add adc sub cmp pusha aas xchg aas fwait aas mov jmp pusha add push xor xor dec xor outsl xor xor xor xor xor inc xor push xor (bad) aaa adc sbb and cmp dec cmp mov cmp cmp cmp cmp cmp cmp cmp cmp or adc add xor add push xor xor dec xor push xor (bad) xor xor cmpsl aas scas aas mov mov aas sarl fdivrs fistpll add add or es xor xor cmp cmp cmp add nop add sbb add iret xor xor xor xor cmp cmp dec add add jno jp xorl add aam mov cmp cmp cmp cmp scas ds adc es dec aas pusha aas push aas pushf aas movsb aas mov aas lock clc aas add add push xor xor xor xor xor xor cmp cmp cmp cmp cmp cmp dec aas add add add inc add add aaa or sub dec cmp jp lahf cmp daa ds cmpsb lods xor cmp cmpl xchg aas cwtl aas pushf aas mov aas lods aas mov add add add adc add inc cmp push cmp or loopne add add add xor out sti ss cmp cmp arpl mov in push cmp cmp cmp cmp cmp sti aas add lock push add add ss jg mov mov cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp xchg cmp cmp cmp add inc aas add add sbb add cmpsl xor xor jl mov ja add adc pop add add xor push xor xor xor xor xor (bad) xor xor xor xor xor push aaa scas aaa mov push cmp imul push cmp cmp cmp cmp cmp cmp mov cmpsl sub add add xor add out (bad) xor dec xor pop xor xor outsb xor xorl ss add xor insb add add xor insl xor pop mov mov aaa pusha aaa mov cmp movsl cmp cmp cmp nop cmp cmp cmp cmpl cmp cmp cmp mov sarb pop cmp cmp cmp cmp cmp cmp cmp ret cmp lcall aas nop aas fstpt add add add add add xor bound (bad) xor xor xor lea ret xor xor lcall xor (bad) xor xor es add or and xor cmp inc aaa dec aaa push aaa jno jl xchg aaa pushf aaa mov (bad) aaa int3 aaa loope in aaa stc aaa add cmp cmp cmp cmp push cmp insb cmp cmp cmp cmp cmp cmp cmp cmp cmp push jno cmpl mov mov sarb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp add push add js add fdivs xor xor xor xor xor xor xor xor xor xor or adc sbb sub xor cmp push xor mov lods xor mov cmp insb cmp je js jl cmpb cmp cmp mov add pusha add xor add les int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor xor jo add add add xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor dec xor pop xor fs jo je js mov nop cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp pop cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb xor add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc ds ds ds ds ds ds ds cmpb mov mov nop ds ds movsb ds lods ds mov mov ds call add nop add or add cmp inc xor push xor pop xor push xor jl xorb xor cwtl xor movsb xor mov mov mov xor int3 xor fdivs in call xor cld xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc ss ss ss ss ss ss ss ss ss ss js jl xorb mov mov nop ss ss ss mov lods ss mov mov les enter (bad) ss fdivs fdivl loopne in call ss ss ss add add or or adc adc sbb sbb and and sarb cmp cmp cmp cmp add movsb add add ss ss js jl xorb mov mov nop ss ss ss mov lods ss mov mov les enter (bad) ss fdivs fdivl loopne in call ss ss ss add add adc adc sbb sbb and and sub sub xor xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa pusha aaa fs push aaa je js jl xorb aaa mov mov nop aaa xchg aaa cwtl aaa pushf aaa mov loopne add add dec cmp cmp cmp test mov add add add aas sarb add add add xor int3 xor xor xor xor xor xor xor sbb sub xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor and sub cmp fs xorb xor les hlt xor or adc sbb xor inc ss ss ss ss ss ss ss movsb ss lods ss int3 fdivl loopne lock ss add sbb sub sub cmp inc aaa inc aaa dec aaa fs je js xorb aaa test lods aaa mov aaa int3 aaa in hlt aaa clc aaa or or adc sbb xor inc cmp cmp pop cmp cmp cmp lods cmp cmp cmp cmp cmp cmp cmp cmp or and xor cmp cmp inc cmp cmp cmpb cmp mov cmp cmp cmp cmp cmp adc sbb sbb and and sub xor dec cmp pop cmp cmp cmp mov cmp cmp cmp cmp cmp cmp or and and cmp dec cmp pusha cmp cmp test lods cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp test enter or adc xor dec aas push aas jo nop aas mov sarb fdivrl clc aas add add add add add and inc xor insb xor xor xor xor xor xor pusha xor xor cld xor xor xor pusha xor xor xor xor xor xor xor xor xor xor xor xor or and sub xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor and cmp dec xor jo js jl test test mov les aam fdivs lock adc sbb and sub xor cmp inc ss cwtl mov ss ss sub dec aaa push aaa pop aaa pusha aaa push aaa pushf aaa movsb aaa mov (bad) aaa fdivl adc sbb and sub dec cmp js test movsb cmp cmp cmp cmp pusha cmp cmp cmp cmp cmp cmp cmp cmp inc cmp jo jl mov sarb lock cmp and xor push cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp jo js test mov cmp adc sbb sub jo cmpb ds mov mov add or sub cmp pop aas pusha aas insb aas mov cwtl aas mov aas hlt aas add add add add add and sub xor push xor xor fdivs in in xor xor cmp inc xor xor nop xor xor xor xor xor and sub cmp pop xor xor xor xor xor xor xor xor xor dec xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor cmp inc xor js xorb xor call xor sub cmp pop ss ss test movsb lods ss (bad) ss in ss sbb add add add jo cwtl xor test lods xor xor (bad) xor xor xor xor xor xor xor xor xor sub sub xor xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa pusha aaa fs push aaa je js jl xorb aaa mov mov nop aaa xchg aaa cwtl aaa pushf aaa mov aaa lods aaa mov mov mov aaa les enter (bad) aaa loopne in call aaa hlt aaa clc aaa cld aaa add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp clc cmp cmp cmp cmp cmp cmp cmp cmp cmp je js jl cmpb mov mov nop ds mov add and inc aas fs nop aas mov aas lock hlt aas clc aas cld aas add add add or xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor xor xor xor xor or adc sub pushf xor sbb add les enter sarb aam fdivrs fdivrl loopne in add add add add sub dec cmp cmp cmp test in and pop cmp cmp cmp cmp cmp cmp cmp add push add add add sub dec xor xorl jle int3 xor xor xor xor inc cmp cmp cmp cmp aas add add push add add (bad) xor add inc push add add add cmp mov cmp cmp cmp fidivrl xchg aas in add add add add inc xor xor xor jge mov cmp sbb inc cmp cmp cmp cmp ds (bad) lds iret aas add add add add xor xor xor xor popa aaa int3 aaa adc in out das cmp ds jb,pt add add add add fdivl outsb xor xchg and sub add jae xorl push aaa cmpsb aaa mov cmp cmp adc insb aas icebp aas add add add push xor mov xor xor xor jp lods cmp cmp cmp cmp cmp add add add inc xor jge jmp pop xor xor xor push ss ss xor (bad) cmp mov iret cmp add mov add add imul push add add add xor outsb xor cmp cmp cmp cmp cmp cmp cmp sub add add push add add pop xor xor xor xor xor xor cmp mov cmp cmp cmp cmp inc mov add add push add add sub mov (bad) xor xor xor xor nop xor daa cmp data16 cmpl cmp cmp cmp cmp cmp mov aas add add push add add add and cmp dec xor xor xor xor and and dec xor xchg xor xor mov mov (bad) xor or xor xor xor xor xor xor xor xor xor xor xor xor cmp inc xor dec xor mov xor cmp jo mov nop ss fdivl loop sub aaa mov loope inc cmp cmpsl cmp cmp cmp cmp pop cmp jae mov mov cmp cmp cmp cmp loopne (bad) cmp sarb sarb out add sbb and aas dec aas outsl aas cwtl aas test add add add add add xor xor data16 mov loope out repnz xor xor xor xor jns mov test xor xor xor xor adc xor xor xor xor xor xor xor xor xor xor xor xor mov ss movsb ss push aaa adc sbb sub cs inc aaa push aaa pop aaa xorl aaa xchg aaa cwtl aaa sahf aaa movsl aaa stos aaa mov mov aaa (bad) aaa fdivl loope out in aaa lock divb sti aaa push cmp cmp cmp dec cmp pop cmp jbe jl mov test cmp cmp inc cmp test mov sti cmp cmp test xchg ds aas add pop add add xor xor xor xor ja (bad) xor xor xor sub push xor mov xor xor xor adc xor xor xor xor xor xor popf xor sbb imul (bad) xlat ss xor gs movsb cmp cmp cmp cmp ds aas add pop add divl sbb xor cmp inc xor push cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov cmp cmp xchg ds fstpt in es addr16 sti aas add add pop add add add xor mov (bad) xor xor xor xor cmc xor xor xor xor xor xor xor xor xor xor xor xor dec xor imul lods xor in pop arpl jl (bad) ss aaa push ret cmp sub inc cmp sarl cmp cmp cmp cmp sub dec cmp imul cmp cmp mov lea sarb add adc sbb sub xor inc ds arpl imul jge lcall ds ds jecxz,pt ljmp aas adc and es push aas push aas push add xor test into xor xor xor sub xor jo (bad) fdivl hlt ss aaa push aaa enter lea lahf cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp adc pushf cmp lods cmp sti cmp cmp cmp inc ds ds ds ds ds lods fnstcw add add add xor (bad) xor xor sub pop xor mov mov cli xor xor xor xor xor xor xor cmp xor xor xor xor xor xor xor xor xor xor xor xor cltd xor loope in xor pop aaa popf aaa sub dec cmp cmp cmp pusha pop add xor xor xor fnsave or sbb xor xor jne jl mov xchg xor call xor js or sub xor xor xor pop ss cmp xchg int3 cmp cmp cmp cmp sahf cmp cmp cmp mov loope repz cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp into ds fidivrl loopne out out ds ds add or adc sbb and sub xor aas dec aas push aas pop aas addr16 js lea cltd aas clc aas add add add imul add xor popa xor xor xor xor xor xor xor xor xor xor jno mov xor xor xor xor xor xor xor sahf xor pusha cmp jno mov pop cmp cmp cmp cmp cmp ds movsb js,pt jge (bad) aas add add xor aas xor mov les int3 xor xor xor xor xor xor xor xor xor xor jge mov xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor nop pop add add add xor xor xor xor xor xor xor xor xor or les enter add add call cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp xor cmp inc cmp dec cmp pop ds ds sarb aam fdivrs fdivrl loopne in call aas hlt aas clc aas cld aas add add add add add or or adc adc sbb sbb and and aam fdivs fdivl lods xor xor xor xor xor xor xor adc sbb xor xor dec xor xor xor xor xor xor xor xor xor xor xor sbb and xor xor cmp inc xor push xor mov mov mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb xor dec xor pusha xor test mov xor pop ss ss enter add or sub inc aaa dec aaa push aaa enter or sub inc cmp cmp test mov test enter hlt cmp cmp cmp pop cmp insb cmp js jl xchg cmp rolb add add add add sbb and cmp mov xor or sbb sub dec ss ss ss ss ss aaa add or adc sbb and sub xor cmp inc cmp cmp cmp cmp cmp movsb cmp les dec cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb sbb and and sub sub xor xor inc cmp pop cmp cmp fdivrl call cmp cld cmp cmp pop aas jl movsb aas les enter add pop add add sub dec xor xor or adc add insl cmp cmp add add add add clc xor xor xor inc xor pusha or adc add cmp (bad) xor cmp add jo add add fnsave leave cmp cmp add scas cmp cmp or sbb add popf cmp cmp lcall add add add xor aaa sbb cmp pop aas pop aas add add add cmp int3 cmp mov add add add clc xor or scas xor xor jg pushf cmp add or sbb add bound mov cmp cmp cmp pop cmpl ds or adc add stos xor xchg xor xor aaa mov add or and add inc xor xor fidiv jg xor add push cmp add add or sbb add inc xor push xor fdivrl movsl cmp add add add add jno cwtl cmp add add or sbb add and pop xor cmp cmp cmp add add or sub add loop sub dec xor xor xor ss ss cmp call xor add add inc xor push ss ljmp cmp cmp cmp inc or sub add or lcall xor xor adc cmp push cmp cmp cmp aas push aas add add add add data16 xor xor or cmp cmp inc aas add add add add in xor xor xor xor cmp sarb push cmp cmp cmp cmp or sub add add and xor xor xor xor xor aaa aad pop cmp cmp mov orb sub add inc xor icebp xor xor xor xor ds cmp cmp cmp push cmp pop aas add add add lea leave xor insb xor xor jno popf cmp cmp cmp add mov add pop xor xor xor ss aaa add add add and jo pushf xor xor cmp cmp cmp cmp add or sub add daa xor ljmp cmp lods add xor lea mov adc add mov aas add add or sub add movsl xor xor xor xor xor xor xor pop cmp or and add jae mov xor xor xor xor sbb test add add or and add mov ljmp xor clc aaa cmp cmp cmp add add or and add xorb xor xor cmp cmp cmp mov add add inc xor xor xor xor ret xor idivb cmp cmp cmp cmp or adc add xchg xor cmp sbb add mov aaa pop cmp scas cmp cmp aas sti aas add add add add sub and lahf xor xor aas cmp lock aas add add add add mov xor xor cmp add pusha or sbb add stc xor xor js int add add add add xor xor xor cmp cmpsl cmp add add add or test xor cmp nop or sbb add pusha xor xor aaa stc aaa sbb mov mov mov add mov divl dec xor add (bad) cmp jb fidivr outsb cmp cmp cmp mov add add add xor fnsave dec xor inc aas add add or sbb add add pop xor xor xor cmp cmp cmp or and add sub ret xor lahf xor iret cmp data16 ds mov add add add xor aaa jbe scas aaa pop cmp and dec cmp lea mov lock sbb add stos xor cmp cmp cs loopne add or and add xor push aaa imul aaa jo sarb cmp cmp cmp or and add xchg cmp cmp test adc jns scas cmp cmp xchg add add or and add or ss ss cmp cmp cmp aas lret aas add sbb add adc jae jecxz addr16 xor cmp cmp or and add add xor adc xor xor ss aaa jo cltd cmp cmp add add add (bad) xor xor xor xor in xor je xchg ss cmp aas outsb aas add add add add add xor xor xor cmpsb xor xor clc xor addr16 sbb xor sub add and xor xor jmp pop test or jno sti cmp mov cmp cmp add add xchg xor xor xor xor xor xor in cltd aaa jmp cld aaa adc mov int3 cmp cmp cmp cmp cmp or adc add inc aaa stos aaa mov add add add cld xor xor xor jno call aas jmp add add add cmp cmp add rorb adc add and xor push divb or add add or sub add cmp inc xor xor xor xor xor stos aaa out cmp cmp cmp cmp add add or sub add mov in xor xor xor aaa movsl cmp cmp ret cmp cmp cmp pusha movsb ds or and add and ss aaa fidivrl (bad) cmp cmp cmp add add and add sbb cwtl xor xor xor xor cmp cmp sti cmp add adc sbb add popf xor xor cmp cmp es add or adc add dec xor xor push cmp aas add add or sbb add jle cld xor xor cmp inc or sbb add mov fbstp and cmp cmp add add add cwtl xor test imul sub mov pusha or sbb add cmp jl and cmp ds aas mov add add add add add xor xor xor (bad) xor xor sarb lret cmp add orb add add sbb lods xor pushf mov nop or adc add mov xor or or add add add add add dec xor cmp add rorb add add xor xor xor cmp loopne or inc aas idivb add add or adc add pop xor cmp add loopne add add add xor xor xor sub dec xor xor xor xor cmp add lock sbb add dec xor xor adc push cmp cmp add add add cmp cmp cmp cmp scas aas add add or add xor xor es aaa mov sbb cmp add or add xor xorl cmp cmp cmp add add add xor xor xor xor cmp cmpsl cmp sbb add cmp xor cmp add add add add dec xor xor ss ss cmp cmp add add add add add add add add add inc xor xor xor stos ss mov add orb pop xor sahf xor cmp or sbb dec aas add add xor push xor dec xor xor xor xor xlat xor jl push cmp sbb clc ds aas (bad) aas add add pop xor xor xor or add cmp pop add or add xor xor ss sub xchg mov rorb add xor xor xor js jecxz outsb aas add or add nop xor xor add sub lcall cmp mov add or add cmp cmp add add add add xor add cmp cmp cmp cmp add add push add add (bad) xor xor xor ja xchg xor xor in xor mov cmp movsl cmp cmp (bad) cmp cmp push add add add xor mov xor cmp add push add add or xor xor xor fstpt sub mov in cmp out add add add add sti xor xor xor in xor add add add add hlt aaa xchg cmp cmp pop add add add add xor xor aaa or cmp add jo add add add xor xor test int lret ds add add add ds ds aas mov add add repnz cmp ds ds xor pop aas cmpl add add js mov rdmsr mov out or sub xor cmp cmp dec cmp aas add add jp and xor aaa mov cmp rorb sbb add or pop xor ss aaa fbstp cmp rorb add add pop xor xor xor xor adc cmp mov and ds aas add push add add add aaa xor cmp cmp add lock add add add xor xor xor xor cmp add add jns lds stc xor aaa xor cmp cmp cmp jecxz test cmp add add lldt add iret xor xor xor mov add add add xor xor cmp cmp cmp add xor add add add xchg lret xor aaa sbb jne dec cmp ltr add add mov xor push xor push lldt add add cmp add pusha ltr add add xor xor cmp fidivrl and add add add add xor (bad) aaa lret aaa pop sbb ljmp add add je lcall xor xor xor and jg mov add nop lldt add sub pop xor cmp ltr add lahf xor xor lea push cmp cmp cmp verw add add xor pop cmp cmp cmp pop cmp cmp cmp cmp add add verr add add xor mov ss mov cmp ds icebp aas add verr add add xor sarl cmp lods cmp cmp cmp aas add add lldt add inc xor xor lock add insb cmp cmp adc add sbb ja pop cmp adc and add mov xor popf aaa push cmp int adc cmp and add add add aas loopne add adc sbb add adc enter mov jb pop aas idivl add add add add icebp ss sahf cmp cmp cmp push ds aas add add add add pop xor xor cmp cmp adc and add adc sub cmp cmp jecxz add add add add add cltd cmp cmp push add add int aaa aaa push aaa addr16 (bad) aaa enter cwtl cmp add add add xchg xor xor xor aaa sbb add add add sbb xor cmp cmp in cmp aas add add add dec xor add rclb adc add mov movsl xor cmp add rclb add add add scas xor cmp mov sub lcall jae,pt add adc and add repnz cmp lret xor js cmp cmp jns,pt pop aas add adc sub add add push xor bound test loop cli xor jp jns test ss ss jg cmpl adc adc add cmp lcall aas add add adc sbb add inc xor xor xor xor add add adc sbb add hlt xor lcall cmp cmp add xor add add push xor xor fmuls rol rcl push bsr lea rcl push btc ror push shrd movsbw sbb mov shl mov shr test mov stc sub rcl sub call mov xchg enter inc and cmpl out gs mov cmp repnz dec out pop (bad) sub dec imul enter imul or inc dec push mov cmpsl sbb loop aad push xchg lea in add jl aam adc adc sbb stos jecxz xor and leave jp (bad) lods jo xchg lock jmp jne cmp push dec mov mov sti jecxz push mov fld sbbb fs nop dec xchg data16 popf and or lods pop mov jbe fsubp bnd add test sub and nop adcb decl and call cmp movb call push pusha lea jne jmp call adc btc cmp pusha mov pusha cmpb lea jne pushf lea jne stc or bsr xor call out (bad) std jge incb pop je xchg mov gs mov xchg bswap jmp std or mov call stc movsl out aam es cwtl mov push cmp push addr16 push fiaddl fadds aaa js push ljmp and aad sbb inc ret sub sbb shrb push leave add pop popf or mov sub (bad) fcmovnbe xor jmp mov dec sub test mov inc in push arpl mov jecxz inc pop out stos mov or and xor imul sbb das loop adc cmp mov mov dec pop pop lea je push movb pushf pusha lea jmp add pushf push lea jmp daa es adc jbe (bad) jmp (bad) cwtl xchg fild mov push outsl jo mov loopne jmp xchg (bad) or or adc add fnstenv fsubs dec mov lea in dec mov outsl add push xchg sub jae (bad) cmc sub cltd pop fistl sub pop nop scas outsl addr16 push dec (bad) popa jmp out jl (bad) out cmp mov and lret jae or jge insb inc les add mov rorb xor inc push movsb cmp jns mov push push xchg scas or mov iret and out shrl nop fisub mov dec or ss cmc out ja or test gs popa popf xchg mov xor mov jecxz or push xor jge outsb xchg adc push jo int3 fnstsw dec mov cmp fisubl xor inc xor jmpw scas xchg mov aam cli scas and mov xor mov sub inc mov bound pop add bound and dec insb adc dec mov add aas pop jns mov popa dec jle pop inc xchg dec mov pushw out cmc leave adc pop add adc mov jo mov jo (bad) jno add push inc push inc dec push cs insb add iret mov popf (bad) pushl push out xor mov mov jecxz (bad) mov lret je rcrb mov push dec ret lods add and adc and xchg scas jo popf aam dec fldt imul faddl adc popa hlt cmp icebp stc sub pop mov push mov jns call push movsl cmpsl mov fwait pop cmp (bad) mov push adc aas push aaa call sub movsb mov loope andb nop (bad) mov inc es mov inc sbb out (bad) call mov (bad) mov fwait ret cld mov sbb ja mov mov fwait add dec scas out scas cmpl xchg sbb dec xchg xchg dec lea movb das scas rol rorb and cmp xor dec xor xlat (bad) ficomp cmp jle mov add pop (bad) hlt ljmp push pop (bad) xchg mov and inc mov cli imul frstor pusha push movsb stos xchg outsb push mov jno fcoml push (bad) adc push jns jbe sahf aas mov xlat (bad) fadds lcall sbb jns cmp xlat or call xlat push jecxz adc imul movb lea je or pushf xor btr aad or rcl mov sub mov bt btc shr (bad) icebp add clc cmpsb (bad) (bad) jg xchg fsubl bound mov pushf (bad) mov mov hlt push call into nop xchg dec lds mov std adc insb jb repnz dec mov cltd addl fistl xchg leave xor inc sbb and jmp fucomi jae xlat adc in popf ret add ja cmp push out add xor add pop call or sarl adc sub mov lret push mov and cltd cmc mov mov mov into xchg or stc or cmp popa fs lcall pusha inc pop sbb and xor imul lods cmc not stc jmp push clc cmc or call test dec repz mov mov xchg rcrl push pop inc lcall cmp push push sbb sbb lds stos lods inc std push inc cmp test js adc jp mov xor out cmpb jle jo pop push fstl xor pop lret jmp and mov loopne fsts (bad) lods adc sarl xchg xchg dec jge popa jge cmpsb outsl out ror inc clc adc incl cmp pop and adc imul (bad) mov jl push jo pushf lods bound and lods cmpsb cltd push int leave push or in mov stos (bad) xlat sub pop sub aaa (bad) movb lea pop xor arpl and sti scas clc xchg mov inc cmp clc cmp inc or addl int3 fisub int3 cltd cwtl out repnz fsubrs fwait and mov lcall adc sbb push das xor mov fbld xchg dec mov js push ljmp xchg cltd in mov push mov nop stos pop jl adc push idiv push jbe cmp (bad) push movsb mov addb test and xchg movsb lret sbb test dec rcl int out out sub cmc adc pop xorl sti test mov loopne cmp scas push cs lea popa lea sahf loope mov fs sub fwait test outsl ret fcmovnu lds hlt pop xlat call movl jno sbb xchg pusha (bad) aas mov scas popa mov outsl mov stos xchg aam test popf shl mov sbb xchg outsl es loop icebp mov xchg lahf cmp jno mov push es cmp mov (bad) xchg pop in sub loop cwtl mov loop pusha mov jae lret adc fs outsl out in xor aas cmp lock dec dec ret fwait dec xchg push mov mov push or push fdivs or inc (bad) out gs adc sub inc out cld iret dec cmp xchg rol pushf (bad) pop xor es cmp jbe ret jl jmp inc jno jmp add clc (bad) dec ljmp test sub pop das sub popf test mov int3 or add scas or clc cmpsb mov cmpsl ja imulb lods xor (bad) pshufw mov lods cmp aas mov imul call mov cmp pusha lea jbe rol rcl pushf rcr mov pusha btr add setle inc mov lea ror add lea movl neg sub pop mov sub clc call cmp jmp xchg xchg in shrl xor lahf aas enter nop das jae (bad) ja ret cmp ret cmp add or push add addr16 mov push pop negb add int test mov jae pop icebp imul rorl sbb mov js pop jo push cmp popf mov xor stc cmc dec icebp push mov jp push out test xor mov js nop aam push je (bad) pushl adc add stos cltd cmpsb pop inc push cmp mov push or adc out jecxz les and ljmp xchg mov in jae mov mov int3 xchg pop jno jg or push mov fs add sbb adc dec adc imul mov xor or sub jbe mov jno stc push mov outsb adc and adc aad add mov pop inc cltd sub and mov daa arpl or mov xchg inc imul addr16 fcoms push int xchg sti dec ljmp jb outsl mov outsl cmpsb push sub pop aad fwait add leave notb call add fildll add pushf imul sbb ljmp les xlat dec or enter cmp mov add xor mov popf loop mov nop stos xchg icebp lret addr16 mov ret dec scas add push cmpsl out out add clc (bad) (bad) sub pop stos je xor sub xchg cld loopne jmp jmp movl push lea jmp bt cmp jmp aam (bad) repz es test loop ret pop ret push imul aas pop lret jne bound cltd mov roll sub and call mov std inc mov daa cltd and sub inc les sub fldl shrb push cmp (bad) inc add out fs ja pusha jmp (bad) lock not mov pushf clc cmp pushf pushf lea jb jmp out and pop inc push or cmc or sbb fs into adc cmp sub jno andl xchg scas sbb mov ja push dec fdivs scas pusha jg add jecxz pop and and fnsave in and xchg push outsl adc push mov xlat mov leave sub xor lods pop xlat adc std push arpl adc fs mov roll test cmp sub xor xchg adc aas lahf mov cs mov and enter imul sub imul movb pushf movl jmp sbb add clc and and jmp lahf inc (bad) push push xchg adc jmp jb daa lret add loopne lea (bad) and fmul aad js add rcrl dec dec jno push (bad) mov cld cmpl nop mov push (bad) int3 ret fucomi cs clc xchg sub cld mov mov mov repz bound adc test orl inc inc lret pop out push sub xor fwait mov jns xlat pop (bad) fisubl inc dec (bad) sbb push fisub ja cmp fmuls cwtl arpl xchg lret push push xchg dec push sub insb ja jb xchg and daa push or cld and pop hlt in fnstcw (bad) jbe sbb add cmp dec or pushf mov mov cltd cmp mov or negb lret mov mov imul inc xchg dec leave jbe arpl insb aaa mov jno hlt outsb and cmp sub xchg rorb rorb ja decl (bad) sti mov add leave jbe mov jne pop push insl cmp dec lcall nop mov pop fldenv jno add xlat addr16 sub shr xor pop out dec data16 mov fs mov pushf mov sbb and ljmp decb aad xchg mov mov mov inc lea jp das adc jae fdivl pop out push jne sti lret out jnp hlt lock ja pop add test dec jo mov sbb inc ret lret repnz daa int je push dec pop gs dec mov push cwtl jns add das iret loopne imul pop hlt mov jb jp xchg ret sbb imul add lret adc cmp test inc pop adc sbbl mov call fldl2e loopne mov test out push lret mov adc imul dec sub add add sub push mov (bad) movsl xorl call (bad) push xor hlt loopne jnp xor inc adc mov negb es mov pop shll jmp sbb loop push fsubl loop shl (bad) pop mov lret pop loopne aad xorb xchg clc inc mov jo aas jno movsl jno repz aaa xor push dec jbe mov push (bad) es int or or incl add int3 xor pusha push out cwtl cmc mov xchg fwait scas addr16 sub gs data16 push cmp fst inc fst xor push mov out fsts inc add fwait jle cmpsb cmp dec mov inc addl mov loope out cmp inc pop insb push pop mov outsl iret loopne imul sub call call enter data16 jecxz sbb cld loop inc pop outsb mov clc (bad) repnz inc cld mov mov out (bad) loopne mov aas and mov in adc fild ds pop sarl addl (bad) lcall (bad) (bad) ds pop xor fs mov jg lods nop std cmp sbb test test cwtl addr16 add xlat xchg jo ficomp pop cmpl fildl mov faddp movsl jge insb push dec sarl nop dec xor and inc into push xchg scas rep mov mov cmc push jno icebp negl jo add imul adc mov lret aam mov mov shrb test add add sti or sub push or mov push into push jb xor cltd insb cmp data16 int and (bad) into cmpsb lahf cmpsb inc out lock jmp sti test mov xor dec sbb icebp inc xchg (bad) (bad) das test loopne lret ret pushf sbb add fldl adc mov lock lds js aas lahf pop out jno bound mov ljmp fstl cmpsb popf repnz mov out xor jp (bad) dec (bad) fwait mov inc cmp xchg stos xchg aad scas xor xor push fadds mov sub dec ja arpl dec cld out push cmpl lahf rcl pop je inc push das xchg cmp jge test les fistpl test or loope sub mov sarl cmpsl sbb lock mov neg mov pushf pusha pushf sub pushf pushl pushl stc repnz pushf lea jne sar adc mov call int3 adc mov lds add add outsb xchg fwait mov xbegin adc ror jl mov jns je lods add lret xchg dec sbb push movsl roll mov sbb sbb mov pop mov xchg push dec je mov mov dec xchg rorl in mov mov pop lret sub xor rorb and in pop add not movmskps mov (bad) fsubs pop in jle xorl add out dec bound test jno,pt out (bad) mov into xchg inc or sub push ret jp xchg addr16 xchg lods add xchg xchg inc sbb pop add (bad) rorb sub dec push push into sarl imul lret iret xchg rclb xchg addb inc sub push mov cld dec and je pop in mov hlt adc mov cmp push andb inc std jl stos movsb test cli push test inc mov sub push and dec add push into cltd inc int mov rorb xchg pop mov movsl leave pop xchg dec jbe int pop push xchg mov mov jnp or into dec outsb adc (bad) xchg sub push sub add loope orl add sbb cmc popf xchg sti test int dec stc dec les push inc pop in xor jbe pop int3 (bad) addr16 xchg stos fmull push pop xor inc sub psubw test test pop mov rcl imul (bad) data16 push je cltd or jae stos xchg push mov jbe jnp xchg gs adcl fwait bound jae movb (bad) frstor inc mov iret fcmovnu jbe je clc add mov mov lahf inc ja xchg pusha xchg into fbld lret cltd lcall jbe inc enter stos rorl shlb inc mov push iret dec xchg rcll mov cmpsl xchg mov xorl mov xor mov and stos mov test mov dec push (bad) out pop push xchg insb ret inc xlat arpl aam cmp jno mov out inc js bound xchg lcall sub push inc loopne lods jbe inc cmpsb inc lds or xchg test jno (bad) fsts test mov cli jmp fsubl ja insb cltd int (bad) jb arpl mull ret or into xchg adc cltd in and fstps and pop addr16 or mov mov lahf lret ret not andl push int pop push roll out add jno in popa (bad) mov xchg pushf pushf inc inc int inc stos call fnsave aaa and sbb mov cmp lcall xchg cmp and mov subl jbe ret imul mov cltd cwtl cmp push push jmp dec into or mov push ss popa push xchg add sub xchg scas or out (bad) vaddsd mov dec xchg cmpsl aas cmpsb jae push push loope data16 mov int mov mov mov leave xchg ja mov xchg xor push int3 mov gs pop mov imul test push pop mov movsb xchg mov daa jbe addr16 (bad) sbb adc lds aam fistl callw outsl jbe fistl xchg into or aad outsl push pop xor icebp or mov rclb sub xchg dec mov daa mov in fs inc inc lods cmp int dec xchg jae in dec inc stos lret push lret and into jp fwait lcall push dec sarl daa loop push dec inc out addr16 cltd pop lgs imul pop jbe imul or dec pop xchg xor lret mov pop mov sbb arpl lcall push push add sti dec shll (bad) cmc gs inc jne mov repz cwtl into das (bad) daa cmp stc (bad) dec rcrb xchg jae stos fwait jmp stc imul inc jp sahf loopne idivl jmp outsb xlat xor or xlat pop call dec push xor das movsl inc outsb or aas aaa lock fild addr16 add rolb add and (bad) push insb mov fcoms cmc add push mov pop (bad) fild iret adc dec in dec pop mov lds cmc fs loop das fstpt push inc add push test gs cltd loope adc sub dec jle subb inc dec mov xchg jbe mov nop mov decl bound mov and push jb testl jbe pop scas insb stos arpl pusha outsl cmpsl mov fsub jg iret jae inc lds cmc les xchg mov sbb jmp lret xchg push je mov aam mov sbb aam xchg int out dec fnstenv jo mov cmp fdivl mov cmpsl xlat es test ret je jge,pn pop mov sbb mov xchg leave pop roll movsl hlt imul adc push mov cmpsl push xlat dec pop leave xchg pop aas (bad) leave sbb popa mov pop mov cmp mov sub mov xchg push add ja push jp xchg scas mov (bad) mov sub pop fisub sbb popf fimul iret cmpsl xchg jg and mov insl fisubr movsb xchg sub js mov jge pop rclb sub popa lret inc xor imul mov cmpsl inc push divl ss xorl mov inc repz in add fsubrp push dec push into push (bad) lret adc (bad) mulps mov mov mov sub stos insl dec mov xchg jle shll xchg mov pop sbb enter insb nop inc lret jae adc cmp cmp mov push xor out fsub cs cmp mov stos adc in popa pop sub (bad) push into inc mov sub jl pop in (bad) insb jecxz cltd push push mov pop out pop repz sahf mov push mov (bad) jns mov or xlat lcall int jne add fcoml test aad xchg in out int3 jbe pop (bad) xchg sbb pop pop push jmp dec push inc inc jae imul pusha setns arpl adc cmp ja aaa imul outsb adc inc push mov int lret inc dec inc add mov stos mov pop xlat sar sbb dec in enter les or inc pop or and and (bad) mov mov stc inc push cmp jg mov push xchg (bad) xor (bad) mov add inc outsl or dec ja int push (bad) push mov cwtl push sub imul lds xchg into pop cltd xchg dec dec stos shrl add push mov mov pop sahf xchg push sahf push (bad) loope dec outsb xor fistl ret dec jecxz add arpl bound fmull push mov cmp addl adc adc ja push dec dec pop jb and stos push mov test out inc into or iret cmp dec sub xchg stos xchg hlt test dec outsb ffree add fldt push sub ja into mov xchg int dec jbe and insb iret add or mov jecxz int adc sahf jle push cltd or sub mov cmpsb xor enter push xchg xor xchg inc xor xor lea sbb jbe imul (bad) cmp (bad) icebp imul mov arpl cmp sub out mov xlat pusha icebp hlt mov test movsb cmp xlat adc loop or adc cmp push outsb sub lahf push arpl insb pushf push dec push into inc sub push cwtl ss xchg imul inc jne xchg jbe imul insl mov icebp sub shl jae sub dec cltd jecxz fs out cmc push push insl sub cs lret mov xchg pop xor push xchg xchg (bad) or leave lcall or insl nop jno xchg into in imul push dec lods pop xchg stos imul push sub (bad) fnstenv (bad) cmc iret push xor imul scas sub jmp xchg inc cld jecxz loopne cmp add orl jbe shl sbb xchg test sbb iret jae in int3 add mov dec push roll mov into mov dec ljmp dec push inc outsl int3 dec pop mov push decl xchg xchg outsl test les adc inc jp addr16 lahf xchg loopne (bad) sub popa jl or fsts push lea fistpll test sub xchg xchg cwtl push stos xchg mov arpl pop mov cmp jmp jmp int3 cmp (bad) iret fwait cmc mov gs cmp mov cmpsl push jae stos push ja jnp push inc mov (bad) or iret cs lcall inc icebp mov push adc xchg push jecxz sbb aam (bad) (bad) mov aad outsl cltd jns mov fcompl jle mov mov call test dec sub out in insl ret in mov arpl jmp xchg add push push xchg int test mov push pop pusha rcl data16 je cwtl insb dec xchg repnz cltd clc mov shr dec lea jbe inc or xlat add enter push fiaddl mov lods adc push sbb imul cvtdq2ps sub xlat cld jge movsl mov imul mov ret jns aaa imul aam adc arpl arpl and dec push sub call loope mov cs je pop into dec fs aaa sbb pop inc sbb pop xor mov mov add aaa adc push test arpl sahf lods out (bad) sti mov fldcw pop dec sub and test or outsl sbb mov add push push adcl jae lahf push mov outsb push dec mov iret jge rclb jecxz adc dec ja xchg sti cmp inc sbb xor pop inc (bad) outsb ret mov sbb (bad) and fidivl or inc (bad) sub sub inc sub push xcrypt-cfb cmpsl in imul subl lcall push xchg out movsb sbb mov or add mov push mov push (bad) loope mov outsb cmp push lret push push test push mov jbe inc jnp mov xchg loop cld (bad) mov jb lcall push pop mov int3 std mov lret push imul loope mov lea mull lret fcomip xor sub mov push in sbb bnd jo into out cmp pop dec cld popa fstpl mov xchg iret fwait test fist push lock and xchg jne xchg xor xchg cwtl sub cmp sub arpl lock daa iret (bad) (bad) dec int3 push sti imul pop adcl das mov out lret push adc scas int3 ja or popa pop add push rorb pop push push dec sub jl,pt pop shrl fmuls arpl jg jbe lods je daa pop inc (bad) pop mov sbb arpl xchg xchg xchg sub enter icebp dec cs test int aaa fwait ss scas into xchg idiv repz mov jmp cli mov mov pop hlt push lcall pop mov stos cmpsl outsl cmc pop cs jae cltd sub pushf pop ss neg xchg dec out inc push fsts jmp push xchg inc xchg sbb xlat fnstenv popf xchg insb pushf xor daa ret jne xlat pusha xchg xchg jne xchg je pop daa iret es gs xlat inc push es jge inc jbe adc sub arpl jb std cmpsl lea int or jbe jnp xorl jmp aad repz xchg (bad) fsts pop xlat pop push push xchg shll lcall dec or (bad) mov mov cwtl rcrb imul mov cmp dec push mov mov mov test imul xchg into push insb xchg mov into iret cmpsl xchg adc cwtl lcall mov fcmovbe adc popa mov jo or sbb rolb mov dec pusha cltd or dec gs (bad) mov pop inc xchg mov xor cmp test cmpsb aam or xchg pop xchg arpl push das mov pop push (bad) pop (bad) repnz out arpl ss pop jge lret into dec pop mov fldenv sbb inc mov jno add movsb jns js xor mov xor arpl js rol cmp or (bad) iret int3 lcall fiaddl (bad) cmp addl mov sub sahf xor mov sti jl push mov lods xor loope in ja xorl cmc jmp movsb mov push push jg jb mov mov jno sahf jo mov leave dec jo inc inc ficom cwtl arpl mov into mov movsl and sub mov add aad bound dec mov in jb test mov xchg test rorl mov rcll xchg dec jns test xchg movsb or lret push or cwtl fdivrl stos ret in popa xchg dec mov ret addr16 jbe je mov int3 xchg inc rorl aam or pop idiv int jo xchg je xor arpl mov stos ss test in sahf xchg fwait push mov std int3 jl,pn sbb cli dec sub xor dec js add push cwtl xchg xchg xchg cmpsb xlat sub ret mov mov jmp icebp scas fdivrp push dec cmp and iret test data16 int jnp adc out cmp scas cmc mov inc xor popa xor call movsl gs cmp mov xchg push loope jg xchg dec jns les imul sbb inc dec out jle sti imul and addr16 sbb inc xchg push inc fwait and orl in stc cld arpl push in cld mov in pop xlat scas fsub or in dec mov mov sub jae arpl cmp mov jge (bad) push (bad) leave je inc int3 mov in mov sbb mov lcall shr sub shll fstpl xchg or xor pop outsl add insb or dec push (bad) nop arpl sub xorl into inc cwtl lock pop sbb movsb addr16 loope in jg aaa and mov push pop fisub stos and (bad) cmp adc cs gs stos xor or fisubl push and (bad) xor test (bad) aam mov xlat test daa mov jno push stos xor sub pop sub adc sbb fistl add addr16 inc or into mov mov stos dec jmp ja out les sub adc out cmpsl or lret sbb sub push andl out jb icebp jno imul lock in inc sub mov std int3 fmuls mov ja (bad) jecxz mov push (bad) pop jne pop fldt jg add inc xchg sbb mov adc or mov fwait (bad) mov fldt dec dec rcrl jae push cmc scas push sti inc outsb xchg loope mov inc jmp sbbl or (bad) sub cltd in xchg test push lea dec insl add or jmp sub push enter cs (bad) xlat iret cld pop fs xchg inc xchg fwait inc stos repz psrlq fcoms les or dec sbb (bad) jmp adcl xchg repnz jge nop rcll cmp out inc adc fnstenv mov inc fist inc movsb jmp sub jge xchg nop pop in test fimul cli fs pop sub ja movb clc fstpt repnz out rcrb mov stos push sub idivb enter mov rdpmc scas test aam ja pusha push add inc idivb aam xor jbe inc mov xchg enter fiaddl stos scas (bad) out fistpll pop jbe fwait jecxz out mov hlt std cmpl subl xor bound arpl mov add into xor xchg pop cmpsl imul and mov pop dec jae adc stos shrl pop cmp dec fs insl inc push lds cmp cwtl aam pop hlt int3 subl xor inc mov dec sub fnsave in mov add or dec cli jae cs pop into cwtl inc gs xor and or jecxz cmp in add xchg loopne dec nop dec push sbb enter mov pop out gs addr16 dec xchg in ret xchg into pop mov xchg into and fiaddl sbbl rcrb inc sarl xchg pop push dec lret mov xchg cmp add ffree jle xchg pop cmp (bad) push or dec dec dec nop mov insb pop mov (bad) das pop insb mov pop lret jo or dec fnstsw cs outsb jnp stos or mov push inc daa fcmovnu out dec arpl sub and scas push stos inc inc mov xchg sbb lods mov xchg mov lret pop xchg inc push mov push inc popf mov push lods and push aam pushf or push faddl xchg or push xchg lods repz dec clc icebp aas jbe add jnp or dec shlb push dec push pop cld dec push outsb dec pop dec into xor mov cmpsl xchg pusha xchg pop int (bad) repnz loope xor inc xchg mov mov pusha mov xchg gs xlat sub push xchg (bad) fisttp jns mov (bad) je push addr16 xchg iret jne imul dec inc pop sahf xchg iret mov push cmpsl xchg xchg imul mov push out dec rcpps lret pop xchg gs push and movl pop push sub sub cmpb or dec push xchg in xchg mov mov jp outsl mull ret cld xor into add push ret inc mov cld (bad) gs add sti in pusha xchg imul cltd bound jecxz xchg mull xchg push es push mov (bad) ljmp (bad) push or and jne push outsl les (bad) jbe or adc jb pusha scas les rorl stos lahf jecxz stos ds ret pop mov outsb mov insb mov mov jae push push stos dec mov sti lods lahf movb or cwtl arpl aam or dec mov gs mov adc xchg add or xchg fmulp push add mov movsl mov xchg mov jnp mov xchg das fcmovnb sub dec (bad) repnz movsl xchg aas dec hlt or pop outsl (bad) xlat dec push les ficom add sbb adc outsb jmp xchg lods lods cwtl jb mov mov shr fs addb call das lcall scas ds out ds (bad) aas shrb jne dec push jbe,pn fstpl jno lret xchg mov dec out push xor popf out js sub ret jmp jg test mov xchg cmp mov mov and push cmp sbb mov movl add pop (bad) je enter cmpsl push fwait mov cmp add adcl or aam inc loopne stos xchg push push adc sub lea cwtl sahf pop mov inc out icebp or mov lahf mov fistpl (bad) shlb sbb mov xchg cwtl jns xor cmp cmp push dec stos adc mov notb sub cmc or repz bound ret in iret sub pop adc loope inc xchg les xchg ja in int cltd lahf into mov lcall les lret mov rorl stos clc jb add stos xchg or je out xor mov mov mul test pop sub or js dec (bad) imul add adc and mov mov pop pop movsb and popa dec scas gs mov test subl ja dec clc adcb int lods dec push popf lcall out xor add push test sbb rclb sub dec dec mov xor lret mov jp mov mov pop ljmp out std xchg sub mov imul inc push inc push pusha inc (bad) ja outsb rcrl xchg insl sub lea xchg ja xchg testl mov fsubrl imul lods xlat pushf (bad) aas add data16 push pop lret in pop gs push mov push xchg mov loope jo mov ret fs push jnp jg test xchg test sub and bound mov push sub iret popa dec xchg cltd int3 adc leave sub xor dec cltd inc sbb sti mov xchg xchg xchg cmp lret mov cmp test ja test das fs sub push aad jno rclb xor push push mov adc inc pop icebp imul sub rorb outsl lods dec (bad) daa hlt push mov mov xchg cltd les sub shl sbb push sub imul and xchg mov push jecxz dec fist add in and and mov jns je pop inc fcompl (bad) xchg jne add jg ja repz xchg mov mov mov and jbe push xchg sti xchg xor dec mov hlt jo lea adc push cwtl cltd bound outsb call xchg lret mov aam xlat mov lret mov jbe movsl lret je pop ror xchg rol fistl pop enter outsl out jg jns xchg or jnp shll nop adc or mov je jae,pn addr16 (bad) lods adc dec mov adc jl aad jge cmp push cli adc xchg mov or xchg and inc mov jmp jne (bad) (bad) mov jne call lea test iret jne out cmp (bad) into or mov test xchg dec cmp add sub movl ss pusha sub call out outsb cltd push hlt lds jns push test (bad) jae pusha push dec es ja jae inc fcmovu mov cmc jle adc stos add lret cmpsl insl pushl subl push jecxz or rorb or rorl mov xchg jnp push xor (bad) cmp stos decl adc xor les fild std dec push push sub cli lcall ds ss enter xor pop and sub (bad) jno in jmp mov (bad) mov into stos xchg packsswb jp inc aam movsl pop xchg pop inc and jle push dec aaa mov sbb jmp pop stos jbe (bad) ffree mov aaa fs xchg dec xchg pop int3 test jae sub push sub (bad) push pop jg lret outsb and iret ret mov sub xlat aaa mov pop lea (bad) gs fidivl jp ror bound movsl mov or into faddp push push sub sbb outsb (bad) xor out jne or into lahf inc or sti lock ljmp jl xlat jae mov (bad) imulb das repz dec jne sarl push rcll lret gs std xchg arpl iret out loop jb incb dec loop out les pop outsb or jbe fcmovne test in arpl (bad) in ja xchg push dec loopne mov sbb lods push shlb aas pop jne inc sub addr16 cmpsl push or pushf inc push (bad) js imul or ja lret lret or jg mov sub sbb ja out adc ret fdivl aam fsubr test enter add and test inc lahf loope xchg faddl pop mov jle dec jle icebp std adc pusha lds cmp leave sbb push mov jae fisttpl xlat int3 rolb xlat jg push fisttpll clc dec cld add mov jne in push sub jb (bad) xlat sbb test stos aas test push adc add push sub outsl shlb dec movq push dec aas sbb dec and jle iret lcall sub imul mov popl cmp das sti push aas rcll out add mov mov (bad) adc lods sarb iret enter lock pop mov fcomip jne mov (bad) xchg lret dec mov pop sub sbb dec scas jae test jge xlat dec (bad) scas data16 push test (bad) sti mov pop sub bound mov inc cmp enter pop add fiaddl in sub jo inc mov dec sub mov sub xor test (bad) jg scas lret sub aaa loope push lret mov cmc fidivr dec dec push cs sub push mov sbb cmpsl bound push xchg cs adc clc or repz in cmp lcall sar insl mov sbb in test or cwtl push mov cltd into push xor dec push push sub and dec mov mov or jae jge add pop gs (bad) mov jbe (bad) cli pop out negb loop jno push xchg push repnz fcmovb test sub mov inc arpl sbb mov push mov mov pop jbe or sbb int fistl jg inc push lret inc pop test loop sub or (bad) popa mov dec pop or push ret lds ret mov jp cld jl mov outsb adc mov xchg jmp xor sub add (bad) fldl test pop cmpsl pop jecxz adc mov into pop add incl dec outsb cmp sub cmp xorb xlat enter addl mov iret sub ret sbb mov push cs inc or sbbl push fcmovbe or dec std int3 dec mov pop sub (bad) sbb idivb sahf mov jno xor fild xor dec in mov mov dec add shrl jb into push in adc push addl fisttpl daa movsb xchg and (bad) push cmp xor add cwtl stc dec rcrb mov sahf inc jbe inc inc and mov sahf loopne dec cmpsl pop dec ss ja addr16 insb push dec pop dec (bad) aad loop xor dec cltd stos dec or movsb xor cmp sbb jnp dec lea cmc test scas or loop push push mov jne mov imul (bad) jo push mov (bad) inc aam xchg dec lret sub out or push imul icebp pop jo test sbb fisubl jmp adc ljmp mov daa push loopne push imul jl inc insb pop pop xchg sbb inc pusha push jb mov and push idivb leave imul ja dec dec lahf pop add and int3 dec jg insb (bad) (bad) mov mov cmp loop cmpb lock stos inc sbb pop in push mov pop mov mov add daa mov inc and inc jl inc push jo mov pop sbb cmpsl (bad) dec daa jle stos pop mov das push inc push (bad) mov pushl int pop mov loop add sub dec xor stos pop xor xchg ss fnstsw pop and mov adc ret xor sbb stos aad or lds xchg xchg jmp addl aam dec add or mov and push stos idivl fwait xor movsl scas inc jge jae adc adc pop test and cmp cld outsb push fisub inc loopne fsubrl jl push mov loopne add daa insb stos pop and arpl mov out push add (bad) out push rorl adcl add pop pop inc out lret xchg test pop xchg jecxz mov adc bound test scas (bad) jnp aam fdivl nop add int3 add add insb ljmp and (bad) jb cwtl add cmp inc mov xchg jb dec rcrl push cltd jae push and xchg push or dec mov push stc push insb or pop aam lds xor xchg or push les (bad) bound icebp fwait push add dec mov mov fisub push leave cmp popa jo dec aam arpl fsubrs scas inc stos arpl xchg sub xor stos outsl shrb jle cmp adc out into dec (bad) xor in xlat push xor push xchg inc pop mov hlt mov out int3 pusha xchg cmp xchg xlat fs rcll dec dec sub xor shlb mov stos mov and movsb imul gs and sbb mov mov stc xor dec lret les lock sahf xchg pop mov adc push (bad) jnp pop int jne jle je sbb sbb pushf cmp dec jae mov (bad) das imul pop xchg cs jnp jb cmp outsl xchg int3 push insl ss rcr lods sti sub xor push rorl insl jae xchg in push mov inc (bad) jmp addr16 dec out add sub push gs imul or lods lret aad xor xchg push jg lahf sub jg lock movsb jnp push and dec xor push dec test test push gs jns pop push jecxz pop (bad) or inc xor or sub push dec lods popa into adc outsb push jne in nop cmpsl jae dec test ret xchg mov aaa xchg out (bad) arpl and arpl xchg dec dec in outsl daa enter dec fyl2xp1 mov fs imul push jb xchg rcrl jle mov xchg loopne sub jns inc sbb push dec xor mov mov cs mov sub lds xor lret adc inc loopne pop out fcomp jnp insb fimull fldt cltd and dec sarb lock dec mov dec mov icebp popa mov inc dec push stos inc inc lret cmp adc mov out dec sub fs xlat inc dec sbb sub mov leave daa pop sub arpl lahf pop mov mov stos lods imul ret jns cmp sub sub iret xchg push or jae test mov xchg shlb dec inc xor push xchg and aas lret fwait xchg roll push cltd es bound inc mov jno add test int3 push jae lahf test insl mov mov mov push inc push lock aas std xor push sub pop fstpl ror sbb mov gs (bad) jo ret sub mov pop iret pop sub inc jp jbe rcl sbb inc cmp or or addr16 dec jns xor jg and rorb add jae and or stc jmp xor enter xor sbb test add push ret imul sub mov or and push adc cmp daa dec xor (bad) dec push xchg fmull fucom daa ret sub mov jo addr16 sub dec aam lds pop add std cmp arpl sub dec cmp cmc stos xchg push jmp and sub sbb adc mov pop jmp mov inc add or orb sub sbb test push nop test xchg scas sbb mov fwait dec pop cli push cmp and or loopne push popf sub xchg jbe pop cmp jne fisttp add inc mov ja int3 add arpl inc loop mov (bad) cmc aad or mov outsl add roll mov xchg stos adc test ret push dec test pop sub sbb inc dec push in movb stos inc ret sub shll push mov cmp aas aam mov sbb (bad) push cmp mov or mov push add push sbb enter outsl jne push outsl outsb dec int3 lret stc movsb mov cmp dec ret pop aam sub cmp jl aas inc push ja (bad) xchg adc push xchg test fsts imul push jae std xchg dec push push push inc js sti lret cmpsl insl lds pop jb mov test push js ljmp jecxz push dec ja mov lock lcall sbb sbb push (bad) insb add or xchg addr16 mov faddl dec jnp daa aas adc test xor (bad) out dec cmp arpl adc mov int adc add out (bad) adc fmull pop inc xor aas inc add nop mov lds inc cmp mov mov dec shrl add jecxz imul (bad) lret xchg stc lret push xchg mov pop pop dec es out jbe rol xor dec rcrb jo fiadd mov sub xchg sub dec lret lods sbb xchg jl sub sbbl xor add jb jae add lods push jo xorl jbe out fwait adc mov les incb movsb mov push jle push adc lods xchg mov pop pop sbb outsb jne push pop xchg xchg dec xchg sub jb sbb lds push sub out mov pop ret sahf mov (bad) mov mov cmp (bad) mov or insl ja sbb (bad) addr16 xchg sub pop inc stos mov jb dec lret push push ficompl jg push mov xchg pop pop pop stos mov mov imul sub dec xchg xchg xchg cltd notb lret pop sub push xchg mov inc int3 nop adc xor dec arpl adcl pop inc arpl (bad) jo insb jmp mov pop ret imul (bad) jb jl mov inc xor dec cltd aam adc jp sahf imul jp ljmp pop xchg cltd mov hlt jecxz pop jbe xchg int3 jle push sti dec xor pop int3 rcrl mov mov arpl dec sub adc cld add addl mov call push outsl rcl xchg lcall or mov in or push push mov arpl cmp je sub push dec xchg js int3 rcrl mov cmp xchg fisttpll inc cwtl daa (bad) dec xchg cmpsl loope inc dec inc add xchg insb cltd xchg jecxz or sub mov movsl (bad) les adc xor les cmp icebp sbb or mov inc jle,pn mov roll add mov daa xchg cwtl push xchg sub popf push fwait dec jge mov (bad) dec pop or push sarl add repz add push dec xchg xchg xchg xchg add sub cltd inc xchg jg lcall lds inc xchg mov dec out lret push rclb pop push xchg mov rorb ljmp lods and (bad) arpl jne ret sub stos pop pop and lock daa aam andl (bad) repz subl mov mov sub mov mov lret jle fsubrs and pop cmp sub xchg out jb xchg jne outsl (bad) stc loopne jnp fsubrl sbb or pop sub clc cmp repz xchg dec lret imul inc xchg fbld adc lahf add xchg xchg aam lret shrb add push push add inc jae aad inc (bad) ja xor jge push add out mov jle add push cli fildl test adc adc xchg dec (bad) or sahf or mov dec and js jecxz ffreep adc inc test and xchg dec out out aad pop mov cld xor push jns sub pushf sahf roll mov or mov dec int cmpsb or gs adc lock push addr16 xchg sub sub sub sub pop mov fcmovbe rolw cwtl lcall pop int sub sti xchg jae repz rcl dec lods ss test add dec int3 push mov stos or inc xchg insl out mov insl sub cmp and pop mov pushf dec repz and dec rclb push or outsl sbb xchg rcrb test xchg in int insb andb jne imul data16 sbb push pop and dec cld jnp adc daa shr lods dec and mov add fsubl pop scas dec cmp test dec mov or push push (bad) mov shlb jb xor pop loope cmp mov jg adc jb or in dec pop mov xor mov shll ret push lahf fwait cli (bad) and mov int3 rclb popl das fs cmpsl xchg cltd mov sbb xchg jnp xchg mov rcll pop enter daa call push mov xchg inc int3 jp push cmp pushf cmp imull (bad) xchg dec jmp add les notl flds cmpsl pop dec arpl push imul mov mov into sbb aam mov adc inc sub push loopne add popa or cltd mov lods add mov dec push adc dec aam add cmp inc jns int3 cltd aam dec fimul loope jbe (bad) out ds dec mov mov fwait addr16 xchg push jae sti daa loop push xchg xchg jae lcall pop and popa (bad) cmp test mov jne cltd and inc pop pop mov addr16 into out add nop inc inc adc cs sub adc add adc pop pushf cmp cmc mov shrl push push fbld enter fbstp inc pop inc mov mov inc push inc mov dec arpl mov inc lret xchg inc add outsb push mov mov stos dec pushf out data16 inc mov xchg mov push sbb shll or rclb (bad) lock ret jnp (bad) (bad) fadds inc lds sub sbb sub fcmovnb mov dec or inc xchg cli imul adc mov mov inc jb imul jne int lods dec sub jae (bad) xchg sti mov push push lods jge scas mov repnz xor push cwtl (bad) inc mov mov add orl test cmp fcomps ja sub leave mov mov jb into mov enter pop mov xor in jecxz into dec xchg push jo jnp mov xchg les lock push mov pop pop mov mov rolb jae mov bound mov xchg cmp test jb xor fsts (bad) jb mov xchg (bad) shrl lea xor repnz arpl inc adc inc or push std jae cwtl dec xchg xorl push jl (bad) out adc popa inc dec pusha les aaa divl push mov sub pop pop fidivr xchg xlat xchg jae dec insb arpl movsl mov in test push rorb pop mov mov inc loopne push dec add pushf mov jle push dec addps jg dec or mov jae inc xlat xchg dec lret xchg push int and daa insl sbb jo (bad) (bad) (bad) arpl mov arpl xor pop popa push out jb dec (bad) pop jb (bad) jbe arpl hlt pop pop jmp inc mov mov loop out and inc sbb cmp inc push cmp and movsl fs popa xchg iret jbe cmpsl out jnp lahf xchg mov mov adc ja lea pop add imul les jb popa push sbb iret push cmp pop cld test sbb mov add lods inc call sbb adc sub in push out cmpsb push xchg xchg push clc call lret mov sub imul gs cmp (bad) lds fldt push or inc out mov je push ret rclb leave std pusha dec add and cltd repz loopne jae aam sbb xor mov fsts ret pop hlt xchg shrl fsts rcr fs (bad) mov fbstp dec xchg mov mov popf mov xchg xchg push xchg dec xchg stos pop int3 lea or js adc mov adc add or xchg (bad) mov sti pop data16 inc pop (bad) cmp sbb cmp jo mov or push cmpsl icebp jae dec mov sub add cs push lods dec sti arpl enter pop lcall pushf adcl push jmp add push dec cmc call stos sbb sub jbe sbb pop lds cmc fwait pushw cmp jmp sub mov dec addb dec push jg dec sbb xchg lret mov out mov int3 pop loopne push (bad) les mov mov add js push (bad) movsb fidivl lods and bound dec les xor mov xor (bad) test push pusha xchg add jmp lcall mov push xchg sub sbb jg or mov mov inc adc sbb xchg mov inc xchg (bad) push jbe ja loop jp lds aad dec pop aad mov cltd xchg shlb xchg sar outsb xchg (bad) test inc fs movsl rcrb insb xchg xchg dec enter adc cmp pop ds mov add addr16 xchg daa aad sti arpl (bad) fnsave je push dec aam int sub fcoms jmp sub test call fmul fmuls push cs mov xchg lret lret push shr int movsl or mov mov push xchg sub divb pop mov xor (bad) ss pop lea or jbe sub mov stos dec fs sbb pusha mov jae in lret mov sahf dec in popf cld cmc lea out jb mov rorb sub fs aam sahf and fsubs pop stos mov into scas mov xchg add dec imul movsl pop fildll gs dec push dec jp arpl jg or mov out jge inc in and xchg push or push inc pop adc mov lret in push test fcmovnbe push adc imul bound jb and push push pop xchg out movsb inc jo push xchg dec shll sti stos aad dec lea dec out dec in outsl (bad) xchg mov fidivl push xchg xabort lods cltd xchg leave xchg xchg sub insl dec mov data16 push pop jne pop into arpl cmp lcall mov pop arpl shl les or fiadd into outsl pusha daa mov int3 add sub cmp dec fwait (bad) (bad) (bad) jno dec push inc adc add shrb aaa imul or dec jae push inc cmp add adc dec and push or or fwait mov ficompl outsb pop popa add sbb test pop add fdivrp inc adc inc (bad) mov xor inc mov inc xchg push push mov push push sub mov add pop cld sub arpl mov imul je mov xor push sbb add stos add xchg cltd cmpsl iret xchg data16 fwait or shlb cmpsl xor sar fwait ds mov fucomi jg push cmp movl and roll pushf sbb movsb inc pop test cs in add pop bound xchg cmp dec lods dec stos pop call sbb iret pop imul xor insl or xchg or setnp xor aad dec cmpsl dec lea cwtl push push jg push dec mov paddusb push dec pop push pop mov xchg jmp mov push mov add sarl jne les dec jb and mov into dec enter add arpl sub inc add into xchg lea jae add lods jae in adc mov push dec sub adc cmp mov push xchg out jne lods ror lret pushf stos and arpl mov test or dec lret dec test (bad) or rclb jmp pushf outsb stc xchg fadds add jne (bad) insb int outsl xchg xlat sub inc arpl pop fsubl (bad) or push mov push (bad) jb cmp mov popa cld (bad) cmp mov jns mov lods cmpsl scas imul insb js int sub insb inc test push int3 jo (bad) jmp mov adc mov in mov xchg das fisttpl pop sbbl pop xchg mov jns and lret push test adc jo dec gs jg mov mov push xor in push mov outsl pop jo push (bad) gs out popa lods inc inc loop jns sar xchg sti xlat or sub xor jne push dec mov sub cmp in loop into dec add rcrl gs mov les lret (bad) je repz lcall push sahf test js ret ret mov cmp and cmp popf cmpsl cmp xorb push xchg lods add mov into xor cltd ja inc or enter push sub pop sub xchg push jge dec mov or jmp cs dec scas adc dec and xchg dec dec cltd sub or and test pop cltd decl push mov xor mov sbb add fdecstp loopne push push das cmp cmovs mov lods sahf shrb jb je lret shrl test mov test sahf test (bad) (bad) jg rcr fcom push out xor ret in lcall stos push dec inc xchg dec dec dec imul into aaa aam xchg mov mov jb in imull jl push mov cltd dec xchg enter cli iret xchg dec push pop push test mov divl (bad) outsb cli and pop gs addl cs into ja mov inc aam sti (bad) mov lods outsb lods jnp jae pusha scas jb test outsl sahf imul shrl fcoms inc jl or sbb xchg xchg sbb pusha mov pop push pop mov xchg hlt xchg iret add sub push nop xor mov add lret stos or and mov arpl shrb roll xchg dec pop fisubl test sbb cmpsl xchg mov add inc jg or hlt in popf mov stos jl cld cld aad pop mov dec or aad cmp mov adc dec or fcoms repz mov into mov aam inc jno push (bad) or test pop fwait jp xchg push arpl mov sub cli add movl in and ja enter call push xchg inc jae push push push adcb arpl inc add sbb mov aad movsb or fs sub lret test es mov xchg mov mov sti jns add xchg insb push ret jle push outsb lock push inc pop pop pop (bad) mov mov (bad) (bad) mov pop gs lret xchg inc lock fwait or pop pop out mov dec imul dec xchg arpl enter add pop add in loopne data16 push outsl loopne insl add icebp fstl xor cltd and inc aam inc mov into js xchg (bad) or mov lea mov inc call push hlt mov ret testl inc mov adc jge xor cwtl jle,pt xchg inc sbb and jo pop sbb jp out sbb mov or dec (bad) cs jecxz loop pop fucom pop dec mov shll pop xchg mov lret test cmp pop mov pushf dec dec push out lcall ds out (bad) mov in xchg test xchg cmp jae sbb add adc aam mov jo loope xchg jae push mov ficoml xchg out (bad) xor pop sub pop push arpl clc xchg cmp outsl jae pop xlat paddw (bad) mov cld sub jnp dec jo sarl and xchg xchg xchg das jnp inc adc inc jmp fdivrs dec lds xchg es outsl xchg sti sbb jnp dec mov je stos sbb mov ss push mov xchg movl xchg or mov push cwtl inc mov stos aaa call mov imul nop pop xchg push xchg imul sahf xchg mov call xor add add or or adcl mov mov rorl mov (bad) dec sub outsb pop fisub or mov push xlat sbb xchg fs dec cmpsb cmp xchg xor cmp mov xchg aad or mov imul fistp (bad) je jbe pop int3 shrb mov dec sti push loop testl push add dec mov jg or or ja je mov add nop sbb mov pushf push fpatan movsb inc dec or shlb sub xchg les mov sub ret mov repz jl nop and mov stc push stc cmp pop fisubrl dec es das loop cwtl in popf xchg jmp arpl adc xchg cmp das lds je pop dec lcall adc cmpsl shrb (bad) int3 jbe,pn add int3 inc test fisttpl rcrl sub and repnz mov pop cli lds mov (bad) jbe dec sarl andb popf jb aad mov mov dec cmp dec cmc aaa stos lret int3 sub pop insl stos pop rolb mov pop inc jne in pop adc pop mov sarb aam faddl jae lods xchg push addr16 jge xor mov pop mov jo add inc stos int3 adc mov pop xchg cwtl push ja dec xchg aaa int3 arpl cld lahf fcmovne test (bad) aad dec repz xchg (bad) into mov sub sti insl (bad) mov popf mov sti test pop pop fs or push xchg mov jne inc jecxz lds call test sub xchg popa mov sub mov mov sub or dec (bad) sbb aas orl adc pop sahf pop jg pop xchg lcall xchg xchg push dec mov lcall imul jge mov nop cmpsl mov scas jle fs sub (bad) push xor jb mov lea xchg pop xchg sub movsb jno loope push mov pop mov push pop pop inc xchg cmc sti mov cltd stc dec sub mov cmp iret add jae leave mov sub add ret push xchg jle push dec (bad) dec jl out mov into mov xchg and pop fstps push adcl jg lcall bound js inc jae sahf cmp imul je dec arpl lds jl int mov or dec adc js pop movb sub jl inc bound popa inc cltd sbb imul dec (bad) sbb xchg sbb push mov (bad) outsb inc mov test dec pop cmpsl (bad) cltd xchg or fldl and xchg inc test ja or ja clc bound addr16 btc adc mov dec xor inc pop shll push push push sbb lcall jbe rclb cmpsl dec dec push inc (bad) pop add mov arpl push cwtl jmp aaa repz jb add int rolb push push cmp aaa lds xor fwait lret (bad) xlat dec xor mov sbb xchg das (bad) imul outsb pop xor mov dec dec add popf rcll dec test inc mov inc addl fistl or inc lcall sbb add dec mov push or imul stc cmpsb jg arpl shrb jo loopne sub subl cmp int3 mov or dec inc sahf jl jns fcom xchg xlat test dec mov push pop adc xor push or dec popf aam mov jge and or and push pop jo inc cmp or dec pop mov jnp mov aas loop aam dec mov loope mov dec lea cmp stc add loop,pn sub push cmpsl enter mov jg xchg push pop add push scas dec xchg xchg in insl lods in or mov xorl xchg cmp pushf dec mov dec testl fwait out std je cmp arpl (bad) push dec xchg push pop pop imul (bad) test idivl in outsl mov mov jge lea inc push dec lcall aas pop add jle mov sbb lds mov int3 mov imul or in and mov sub jge outsl mov mov sbb pop popf jle push mov inc dec out mov lea into jno and sahf mov cwtl aad mov or in imul jge insb dec xor shrl aad inc leave arpl dec lods or inc sub sbb xor in mov dec imul cmp mov les gs imul add jb subl lret sarl xchg ss les push dec adc test inc (bad) cltd ljmp push mov iret adc lea jmp je rolb aad jg outsb pop push adc lds dec xchg dec inc aad out repz sbb jae jg rorl call outsb or adc mov out xchg xchg mov out mov cs push mov push inc fldt push jae movsl addr16 xchg sub push setno mov pop sti (bad) pop mov inc (bad) fimull (bad) daa xchg push dec jle mov add mov xchg inc (bad) dec cmp popf jae jnp (bad) push inc sti gs add xlat and push cli and fs ljmp enter ds push mov out bound addr16 fwait jle pop sbb sahf jno inc arpl xchg out int3 inc mov mov mov inc int3 dec into dec dec push outsb add fstl lcall cltd dec jl cmp mov jmp dec or mov mov sbb xchg or dec adc sbb push adc mov or mov movsl push aad mov pop clc jecxz xor inc movsb push sub xor jo cs in dec push xchg push iret and ret push lds mov clc outsb or ret push shrb outsb mov xchg and dec outsb ss leave adc arpl jns push shl test xorb pushf mov mov xchg addr16 push imul dec pop inc sub xchg jmp jno sub pop dec inc mov cltd pop cvttps2pi cmpl inc mov pop cmp insb imul addr16 jmp pop push jecxz movsb add dec or jl popf push mov stos (bad) mov dec add aad inc clc fcompl push inc rolb mov into pop mov dec mov cmpsb inc gs pop cmp fstpl shr cmpsb mov push negl (bad) jne sbb int3 js mov cwtl (bad) cmp repz (bad) mov fst cmpsl jns mov ljmp mov jge (bad) movsb cmp in ja mov xchg pop aam ja xchg lret inc jne push mulb clc jp pop cmp xchg jl imul xor push sub xchg (bad) (bad) cmc in jo cmp mov (bad) mov add xchg pop jnp xchg and mov mov inc inc dec xchg ret inc negl dec xchg mov divl pop divb inc dec inc imul push mov and adcb int3 push and mov xchg sbb dec test call ja lock push aad push pop fnstcw jns movl xor jns cwtl (bad) jnp lea inc fsubl jbe jo mov ja dec jle mov cmc mov aam lods xchg xchg fdivs push inc mov cld (bad) dec dec cs into push jg or mov pop jle mov idivb orl (bad) push inc lock jns sbb outsb or mov or ja xor cmp iret aas ret dec xchg sti dec (bad) jl std lahf mov jb es out adc fisttpl xchg shl dec mov rcr jns mov mov mov mov lods adc mov addr16 pop mov inc cmp aam imul bound jle repnz jmp dec popa rorb call dec cmp lock cmp or push out push mov not nop int ljmp pop jns dec test xchg js jmp pushl insb inc repnz repnz fdivl pop push mov (bad) ret lea iret fucomi cmp std pop adc sbb pop mov xlat inc das push sahf xlat mov xchg xchg ret outsl jle push or xor das in cmp xchg push add test repz add cmpsl xchg test push (bad) jbe cmc xor mov call mov jl cs push dec insl jg or adcl or cmp xchg push fnstcw pushw jb mov xor cmc subb (bad) into mov jg sub xchg fdivrs sbb jl push (bad) repz sar sub (bad) jl mov std dec pop mov push push ja push dec fldl sbb push jae outsl push sub inc sahf push dec inc pop enter ficompl xchg sahf xchg and and bound subl xchg mov test subl dec cmp ljmp jnp dec or jle in adc pop cmp mov and mov ret mov dec lret mov mov push cli mov dec mov and cli xchg push mov rcrb xchg pushf mov xchg dec dec xlat cltd cmp dec sub inc cmp jnp dec push sub adc fwait sbb (bad) push hlt mov imul ret pop rorl lcall test dec sbb (bad) or push cs jb xchg dec pop pushf jno andnps test imul repz pop xor test pop fldt fs add cmp sub loopne js rcll imul xchg popa mov out rclb push inc inc jle mov mov adc add mov add or test inc and fcoml pop fisttpll lods pop xor js out lcall lcall push mov dec mov dec inc mov shrl xchg mov arpl jne add xchg sub mov cmpsl jae push cs and mov loopne repz xchg jl dec mov adc (bad) shrl xchg push push enter std xor dec imul push cwtl pop mov xchg sub xchg je inc pop ja nop mov or movsb gs data16 mov sbb pop in ja adc xor push enter or xchg dec xor add (bad) arpl xor mov mov pushf (bad) negb push jge pop xchg (bad) xchg leave test and ret cli cmp cmp jge (bad) call repz outsl push leave xor jnp xor fnstcw push mov pop adc arpl dec add stc je outsl fidivl or ret inc addr16 jmp ja aad push mov into addr16 and inc fsubrl pop or push and add push enter and jbe leave sbb add sbb pop xchg into out jb xor adc push test push jle inc inc imul dec vmwrite stos (bad) sbb push mov dec iret sbb arpl or lret jecxz mov pop cmp dec imul and jecxz push inc dec mov jg stc dec sti orl adc cmpsl les mov outsl mov mov dec test leave mov sbb jne mov and flds cmp arpl push test sub les add mov test insl out test pusha mov mov arpl pop mov jne pop push inc push fadds or push lret mov je jo call or jne jno rolb xchg nop mov pop fildl or mov cmp repnz mov pushf mov mov imul out int adc pusha lret hlt out addr16 imul arpl inc sub push popa mov sub xchg push pop dec or xchg adc in repnz push xor inc (bad) cld push inc push pop mov pop inc scas inc enter pop add das in cld jae (bad) jnp in shll repz cmp fcompl stos addr16 sub into sub xchg repnz sub (bad) mov push mov and mov jmp mov call dec mov xor pop (bad) cmp add jle sub mov add inc adc push mov adc call popf (bad) lea inc push inc push pop cltd pop pop adc jb ja stc inc inc cmp std sti arpl repnz lcall inc fwait lcall pop sbb mov arpl mov movsl (bad) das adc mov addr16 add mov lahf or xchg mov repz jle fdivrs xchg shr inc or xchg pop (bad) push add pop imul movsl aas cli addr16 inc push mov xchg xchg cli (bad) pop dec (bad) fdivrl push push je push or dec lret pop sahf mov inc pop push push lcall data16 jmp inc adc cmpb adc push xchg aaa testl push loop xchg and pop add push aad push into push or cmp lret mov pop jnp fucom movsl js aas pop and daa add push adc mov or insl xchg push push sti icebp push test std scas xchg jg loopne cmpsl mov push insb inc xor mov add loop out sbb cmp (bad) jge dec pop arpl sbb sbb xor pop xchg sbb mov int3 inc sub pop mov arpl cltd pop adc insl dec inc push dec imul outsl cli jne pop fnstenv aam ja push xchg arpl dec rcll es in pop testb aas clc bound dec (bad) adc ljmp cmp and dec xchg dec outsb or push push or lea (bad) jne jae (bad) jns xchg mov lock or dec hlt ret or mov lcall (bad) push (bad) int sti repz mov bound sub push adc fs sti in inc or ja mov cmp jbe adcl jle mov pop inc or stc inc in push (bad) mov (bad) out icebp mov pusha cwtl das xchg push nop pop arpl mov push fiaddl push adc xlat rorb fisubl rcrl icebp push sti ja xchg mov fidivl cmp and push (bad) int ret cmp insb lods jle cmp ret pop xchg sub inc out pop inc int3 (bad) mov inc (bad) jmp push adc fsubr dec adc movsl sbb jl jle add mov jo shll jge jb cltd repz or ret dec sbb rcrl fs cmp das fsub loop aad or jae jbe lock lods xchg fldenv cmp jg pop sub add adcl add (bad) fcomps mov xchg cli xchg sbb xchg mov loope ds mov cld pop cltd lea repz (bad) cmpsl adc cwtl push push inc add push int lods jmp out push lea lods xchg gs jnp out jmp or mov (bad) mov (bad) rcll or out push data16 xchg mov arpl (bad) addr16 fucom push dec outsb mov push imul jb inc sub out mov lods test lret xchg adc imul push add nop outsl arpl xchg das js mov mov xchg inc int outsb jge pop lret adc dec lock inc imul (bad) ja inc jae push xchg out rcrl xchg into or mov pop lods push sbb sub jmp pop je,pn pop shrl or icebp dec mulb pop pop or decb or add cmpsl sub jb jge jbe loop push push mov loopne imul mov movsl outsb cmp mov inc rclb iret xor cmp scas loopne sti push cmp dec jl jmp jo mov mov add les xor dec push push xchg add ret dec movl icebp imul cmp add xchg push rorl stos shlb mov imul out (bad) sbb xchg adc xchg arpl fldenv jg pop enter popa ret loopne mov fucomp mov outsb ja pop dec sub jo cltd mov mov xlat cltd in cmpsl xorl arpl bswap out or insl cs pusha fs push iret adc lea xor sub dec jb xchg jg push sti ror push mov xlat lea jle lahf add push insb xor jle pop (bad) push sbb sbb lea arpl jle (bad) pop (bad) xor xor sbb (bad) jnp mov jecxz shl mov push in adc add outsb sbb imul xor (bad) out fcomps out pop inc adc xor sbb or pop dec mov orl dec pop fwait dec mov dec and xor xchg push xor mov ljmp cmp enter inc dec lcall lds addr16 jne jbe dec iret or hlt out push xchg test sbb jb sub xlat cmpsl cwtl repz scas mov cld xchg inc loop dec (bad) xchg mov fs push mov dec lahf rcrl sub mov shlb xchg xchg js xchg xlat add dec jb lret fwait xchg add xchg movsb hlt into fs push xor jmp lret xor mov lcall push lods or je jl sub lahf jo fdivrl add mov lock test lret mov (bad) (bad) (bad) sbb movsl sub push xlat scas adc or dec add push inc xor outsb xchg pop push dec dec jg ret xchg int cltd ret ds cmp fwait sbb inc mov daa inc ja movb xor dec stos inc dec or mov lret scas push jnp sahf cmpsl push push inc mov int cmp in cmp ret and fwait pop lock ret and insl outsl lret jnp xchg cwtl sub divb adc pop add xor clc je lahf dec arpl push mov mov xchg sub cmc in sbb out mov mov mov nop dec fsubrs pop or adc jo inc jae pop xor inc inc mov xor mov xchg fiadd sbb xchg xchg cmp xlat mov xchg push mov shll push cs mov jae divl inc sbb imul xchg out xor jbe xor daa or lcall cmp mov enter or ret ret rorl jno int dec dec jo (bad) mov bound pop out jle or push test jle mov jo imul pop or aad sub fwait push and loop push mov rcr (bad) outsl mov lret mov adcb jns pop dec push sub cld dec iret mov or sub inc sbb sub xchg or movsb mov (bad) js divb lods xchg dec out jp push cmp xchg push cwtl or adc enter mov mov mov xchg mov (bad) pop cmp insb xchg mov notl lahf aad nop lods mov push shrl fcomps sub lret jnp mov xchg aam data16 push mov xchg mov sub pop negl movsl out jb xchg aaa mov inc int3 jae mov jb mov xchg hlt push (bad) shl mov or xchg mov adcb cmp adcl inc mov mov subb push adcl mov sbb mov push inc xchg push cli test cwtl pop pop nop cmp mov mov cltd ds lock (bad) arpl or test stos orl add and push sub outsb or xor inc movsl jg push in xchg xchg daa lahf pop into or inc fstp in pop inc cltd movb enter outsb xchg pop mov in (bad) daa jl (bad) fdiv xor ja dec iret loopne andb push jg (bad) aas mov add sub mov jg jo aad loop fcoms cmpsb xchg enter outsb push push xchg lret mov push sub push mov mov pop lret (bad) std mov leave movl adc pop xchg idivl mov mov (bad) push cmc mov dec mov out cwtl in xchg arpl xchg pop sbb cmc sub lods rorl lock (bad) or aad enter ret mov (bad) (bad) ds inc mov mov dec jae and xchg mov inc rclb dec push addr16 test mov xchg inc add xchg sub sahf add clc push ds cmpsl and lock xchg loope push jle cmp insb je push mov xlat pusha lods inc inc inc mov mov add xchg dec add out push mov xorl outsb xlat inc cs sti test mov outsb xlat jecxz xor pop outsb jecxz dec xorb sub lcall (bad) jmp dec popa xchg ss xchg xchg stos dec cli xor push dec inc xchg push add insl push dec movsb mov in test and sub repz dec ficomp pop jns imul ljmp push xor cli arpl push pop loopne fcomip popf add xor jl sbb xlat lcall icebp mov push cmp adc pop mov pop std data16 jae imul sahf out aas dec lret xchg popa adc flds loopne test cli sbb lods pop pushf ja lret ror dec cmp xor (bad) jns mov fwait pop lret fwait imul jecxz xlat mov mov adc repnz (bad) sbb daa lds (bad) mov mov cmpsl mov (bad) inc test xor mov jne inc and mov lea and inc test mov test gs arpl jg dec jecxz xchg jne sbbl push cmp daa xchg fcoml repz mov sub fidiv fcmovu sub xor inc lcall fildll push jno (bad) lahf data16 in shr push mov sarl push adc leave lahf dec cltd or addr16 dec hlt jecxz pushf enter imulb repnz xchg add jmp add sbb dec popf sbb mul jecxz mov add cmpsb cmp xchg and sbb xchg in adc add (bad) nop xchg arpl xor xchg aaa test cmp pop js cmp shrb mov add and add push shr jge sahf imul xor ljmp xchg pop ror pop nop das out sub stc dec add xchg (bad) push lock loope daa ljmp push dec arpl xchg int3 push dec xchg adc cld push dec dec iret xchg fcmovnbe gs les mov mov in push add or push test fcmove dec lods and test lods adc push add cmp jge addr16 aam push push push in iret push inc gs push push das add iret mov push jmp dec iret push lds add and cmp decb shrl mov push clc cmp dec movb pusha adc shll repz out pop popa mov push and dec mov jae push sub pop mov js inc mov dec mov cmp hlt jecxz mov or pop sub push into xchg inc ja cs mov gs mov fbstp cmp mov (bad) lcall stos fwait push popa movsl inc arpl es dec push mov xorl shrb out push sub insl or cltd sbb mov inc inc sub jb fldcw xorb cmp mov xchg lret in xchg add lock mov ljmp gs and iret out enter scas or mov rcrb (bad) mov inc mov inc mov movsl jbe xlat arpl ret dec inc xor mov xor dec shrb loop sbb sbb nop cmp setne les and rorb jns lahf outsb push mov push rol cmp mov cli xchg repnz popa pop pop add cmp fnstenv int mov gs inc movb daa (bad) (bad) icebp lahf add inc push lcall lret lcall cs add iret aad jne push mov mov insb jl pop jno iret mov inc inc test jmp dec cs push lods jo sbb lahf loope cwtl das lahf popf arpl test dec addr16 adc mov (bad) in push cmp jnp inc add pop inc shll jg jo add jb mov or into andb push push push pop dec rcr xchg stos in popa push jg sbb push add ljmp out jae loopne dec lret pop inc and pop outsl std dec push into fist inc mov test push cmp enter lahf jecxz (bad) jge imul lods add xor rolb cs mov xchg lea mov pop xchg lahf mov mov out ret xchg mov mov sub int push dec in loope fs dec sub loope in xchg jle pop imul fsts pop push jl mov mov jb or xchg into andl mov movsb sub adc fisubr lcall inc sahf jge xchg (bad) clc imull lcall dec xchg inc enter ja add push in jg andl aam shlb cmp test mov mov cmp or xchg mov fldl mov push cltd das xor test popa push pop ret (bad) fsubrp or xor lcall mov sub mov mov cld dec push inc add mov loop imul fbstp inc push sbb mov or mov inc nop add push test aaa out sbb lret daa cld std leave xchg sti pop out cmp fcomip dec fiadd nop movsb daa mov enter mov xchg rol mov sbb cmp and leave cs sahf xchg xchg cmpsl (bad) stos out test push mov mov inc (bad) int sbb xchg lret nop mov or sub dec adc inc (bad) mov xor out sbb fmull jne push jno xorb lock adc rclb cwtl dec pushf (bad) mov imulb nop cmp xchg lea or clc add bound or push push lods mov (bad) mov pop movb fadds dec loop mov pop xchg inc das (bad) or cltd daa jle sbb mov out jl dec negl pop pop dec fdivrs cld xchg aas loopne (bad) outsl out add cmp jbe pop js je dec paddq push out dec gs xor (bad) leave pop jmp lods xor or push arpl dec addr16 sub push mov outsl and cmp ds xchg dec enter outsb leave pop jbe ja and add jne xor push (bad) mov pushf cltd stos outsl popa sub imul cmp cmp stc mov sub gs pop into insb inc fcom jo bound jnp jp inc sbb inc movb les xor and iret fnstcw lcall aas fs mov add adc jne xchg aas dec or inc outsl jmp pop bound dec jmp sub xchg dec std sub push xchg mov or pop and fs xchg pop fcoms jecxz push dec int3 pop xor repz push aaa push out cmp xor adc dec sbb mov mov push in xor aaa mov aaa aam push pop xchg xchg push das push jmp es push push aas test jb add push add and stos and sub rcll dec sub or push mov and and adc push cmp ss adc and sar dec adc mov push or rcl testb sub pusha fisubr andl adc mov dec add jle aad and daa hlt xchg adc sub repz imul int3 or push or dec or or pop pop lahf out sbb pop sub bound fsqrt mov adc movsb repnz insl dec je and lock clc test sub add or sub aaa xor jmp add pop xchg jne test add pop fnstsw int3 pop fwait cltd loopne push mov jne xchg enter push scas insb out pop add mov jns sub cmp mov in lret pop adc jne add mov jbe and mov xor into gs pop (bad) out and lret add fcoml mov pop in jae pop or cs imul push fwait mov mov mov push mov sti cld je adc cld and push dec aam push pop popa inc js pop push loop in fcompl push sarl shr mov bound pop int3 ss arpl jbe xor shrb jns jnp cli fwait pop sub sub (bad) pop adc int3 push pop nop cmc cmp sub mov fcomps leave sub lock dec sete jne outsl push les pop mov push int imul adc xlat dec inc cmpl and xchg popa xlat pop (bad) repnz add inc (bad) adc into or cmp mov inc fs fild aad pop push mov push jns adc mov inc adc clc push int3 pop dec into adc jbe les inc or cld or out push leave sub adc sbb adc jae dec xor dec pop push dec adcl sub icebp imul gs sbb pop add inc in pop jnp adc je cltd cmp stc jle add fs fdivrs loopne int push jbe push mov mov arpl add loopne dec jbe pop xchg popa inc add xchg adc nop test add test dec push xor nop data16 xor xor sub or add or mov cmp (bad) mov jmp cmc cmc pop cwtl xor inc lods imul and scas adc cmpsl add daa mov sub jnp mov ja out pop pushf xchg lahf jns jb mov push jae loopne jl outsl xchg sub pop inc mov fs mov (bad) (bad) jb xchg dec nop lods inc fidivl imul es outsb cld xlat push mov cmc in cltd sub flds xchg dec push and (bad) xor icebp jp add mov mov xchg out jbe mov fs mov jnp dec arpl lcall mov punpckhdq mov add outsb hlt inc sbb dec (bad) ljmp xchg dec cli mov stos mov (bad) std enter add push sub push inc push pop lods subl sarb mov pop add fistl outsb cmp push movl lcall adc movsb stos cmp setns rcl dec inc cwtl mov mov mov pop icebp dec adc lcall in pop pusha out in pop dec sub cmp and mov pop lock or arpl mov dec jns repz ret imul cmpsl (bad) dec enter pusha clc sbbb sub addl push inc mov ror push push int3 pop mov inc push pop cmc push outsb pop data16 (bad) inc stos rolb lret add imul add (bad) stos mov mov loope into arpl sub mov icebp iret testb insb arpl jb sti pop sub loope (bad) scas add and (bad) sub cltd and ss mov mov pop nop outsb inc dec xor cmpsb mov pop push jg fdivrs xor push xchg outsb pop call dec aam xor lods in or push movsl add mov inc aad cmp icebp daa pop push loop das es mov mov (bad) fiadd aas mov ret push (bad) cwtl jno lock int3 push inc adc jae pop popa push stos je sub mov mov cld data16 lret jmp or and fildll push adc enter xchg js inc mov or lea pop dec das (bad) add insb jl mov mov lret rcrb jae int3 (bad) push out lods sub scas jmp inc mov push cli adc mov (bad) int mov pop push adc xchg clc test mov stos ja fldt data16 gs and jns cmpsb nop push idivl mov insl pop arpl xchg into test fsubs mov and flds dec clc cmp xchg mov cwtl dec shr addr16 cwtl int cmp arpl inc stos imul jl (bad) je inc mov jbe int3 enter xor jecxz xor pop into clc addr16 xchg stos fwait ret xchg scas sbb push test mov mov dec dec push leave xchg pop dec push test xchg mov inc dec lret dec push dec lret inc fcomp push jbe sub dec xor push pop xor cmpsl pop (bad) jo mov (bad) sti movl mov or jmp push loop outsb shlb jl jbe cwtl xchg lret pop add jl sbb outsb mov jecxz cs gs mov int3 push js pushf je pop addl insl enter xor cs ds mov int3 push xor arpl or stc syscall xchg aam xchg mov aaa in loope lret or dec sbb add jecxz xchg lods xchg pop sbb (bad) dec (bad) (bad) into jbe ret inc ficoml outsb sbb and mov nop xor loope mov movsb ret jbe sub mov (bad) push call xlat xchg mov cmp daa aad lods fwait cwtl sub in fwait repnz outsl das push dec int3 lods cmp in dec inc and or push and movl xchg xchg inc xlat cmp add out int3 xchg jno jno xlat inc shl dec sub lret rorb sub mov dec mov cmp mov addr16 push int (bad) adc sub inc and aas pushf inc inc (bad) push mov ret outsl pop test outsl or rorl iret pop push lret pop dec test dec insl or push inc fs movb cmp jecxz push test imul inc enter sub mov ror mov or dec add cs inc cmp lret mov inc cld shlb xlat (bad) or dec ret addr16 inc and inc push repz addr16 push or fwait push (bad) inc cmp xchg pop cli push les dec inc pop test mov in daa sub stos mov push push jg lds dec popa call test shll iretw cmpsl (bad) rolb pop into xor addl ljmp int3 (bad) xchg les lret lahf push mov mov mov aam cmpsl pop iret fwait inc (bad) imul dec ucomiss push xchg inc dec adc cmpsb rorb cmp rol push mov repnz mov in out stos xor in jnp push mov mov dec pop arpl sbb into lods adc mov xor stc jne sti mov jne xchg mov push inc insl int mov popa jnp dec insl push gs dec lods cmc push mov lret std addr16 repnz js jnp xchg push aas mov movsl outsl andl mov jae inc arpl mov pop ja mov movl cmp rcrl add inc out rorb dec popa fs mov (bad) dec movl mov mov add test pop jge into cmp xchg out data16 mov add inc out ljmp in nop dec outsb cmp xor push cmc jae fcompl add jb jae xorl leave dec cwtl sub int ror lret jg push mov (bad) xor jle gs gs and jge mov js scas xchg in push daa repnz xchg jno cwtl push mov cs pop sti mov insl js inc into popf ss push (bad) bound push test sub stos pop into js test jle btr dec mov jmp pop pusha jle push dec (bad) xor inc ret ljmp pop jecxz adcl ret mov into test xchg mov ds mov js push mov sub out and pop push mov rcll ror push push lods roll lret nop stos mov sub jge lods frstor cmp add xlat insl orb push mov xor push mov imul or outsl sub bound sbb or dec in push imul and imul dec sub rcrb es in out std leave dec sub mov cwtl or (bad) jmp ja dec dec cltd sub push cmpsl pop push popa push add inc add (bad) test add outsl jl (bad) into jl or repz repz stos jnp inc mov push pop std stos rol or lods ret ret movsl (bad) sti fcompl xchg push aaa scas repz dec inc int mov jmp outsb and push add popa pop xchg lods dec rorb inc stos sub out mov lret mov scas adc iret lea and or pop dec fmul out mov jo push ja push (bad) mov push pop cmpsl hlt nop insl in arpl and mov mov enter imul cmp and mov jecxz push rorl and movsl jb test cltd inc mov adc push xchg dec mov adc adc jne xchg and je dec dec icebp std dec mov into pop roll pop xcrypt-cfb cmpsl mov and shl lcall enter cmpsb push pop shrd sub lods shl fist loop divb mov (bad) imul mov (bad) in ljmp xor fimull (bad) jbe sub out pop and push ret sub sbb sbb outsl scas imul xchg mov lock mov aad in lret shrb xchg lcall cltd pop pop pop mov ja in adc inc push out scas out cwtl (bad) enter push jmp cltd int insl mov pop xadd out test loope xor adc imul outsl shll inc xor cwtl xchg adc (bad) aad pop or xchg pop and push mov imul jno add in jno xchg dec xor add mov cmp push in add push cmp repnz cmp lods cmp xor dec cmpsb insl jae push and xchg pop stos int3 leave stos add imul mov and int mov bound xchg int3 call sub sub cltd pop out adc xor test pop inc dec xchg pop xchg jae gs sti pop lea mov fistpl xchg sahf repz cmp push pop out push test inc xchg std mov rcll in push ja incl (bad) stos or xchg lea xchg imul mov xchg ljmp sub push push jmp (bad) bswap jb out xchg (bad) jne xchg lea aaa ficoml into cwtl mov aam xchg inc sbb dec repz fs in inc fs movsb bound in lahf dec test and js pusha mov (bad) in aas rorb incl mov addb insb arpl ss jbe add lahf push ret push leave iret movl aaa add pop dec mov in cmp jnp addr16 enter fnstsw iret (bad) dec imul push dec fs mov mov push or xchg pop dec dec dec cmp popa and dec xchg mov test xchg dec fsubrl addr16 iret push in pop mov stos or mov push outsl mov jp jb pop insb inc addr16 mov cmp pop cmc push jmp arpl jno js jg icebp fidiv jnp xchg pushf rcl jnp xchg cwtl stos inc inc push loope sbb inc and adc int3 dec cmpsb mov jmp push std int3 mov pop mov aaa inc ja sub mull or jmp rolb cwtl inc in addr16 sahf hlt xchg jmp dec popf (bad) push fsubs xlat dec test cmp pop lods lods pop arpl je xchg aam js lcall lods push arpl dec das test or arpl cmpsb mov xchg cwtl push ret jp cwtl sub mov cmp push cltd lret push (bad) (bad) dec jnp in push dec sub cmp jmp xchg dec call addl fnstenv shrl lcall hlt mov popa arpl dec cmpsb mov xchg rorb xchg mov (bad) jl cwtl roll or or pop lahf movl dec pop scas gs outsl adc ficompl mov fimull test pusha add mov sub add push push jnp js,pn xlat dec push popl addl mov dec cmpsl xor (bad) imul lret enter enter ja enter adc (bad) dec push mov pop xchg cmpsl test subl push adc arpl adc loopne aam outsb sahf das mov xchg ds pop sub loopne (bad) out in lret xor inc cmpl sub sub aaa add (bad) jg xchg cmp cltd bound ja (bad) in andl xor push les iret push popl and out cmpsl xchg cmp ljmp bound aas fwait iret aam mov lahf and daa add push sub gs inc test dec push pop int3 dec push sub ss cmp jle arpl sub push daa or mov xorb outsb inc or push cmpl cmp int3 pop add jnp xor push inc sti call mov dec nop pop lahf das test mov adcl loopne test inc jb test jmp pop add in sahf out lcall xchg dec fnstcw adc arpl divb dec adc fwait xchg aad lret pop lret outsl pop pop adc ja imul pop into (bad) fcoml cmp push xor pushf repnz jb adc jl (bad) push outsl cltd shlb outsl mov adc test shrl inc xor test cmp jecxz jns nop nop or pushf divps xlat ret push sub gs jb ja xchg cltd sub push movsb cmc inc pop push inc mov jns fstpt mov out mov cmc xor mov sub mov xchg mov jno dec in pop loopne add loopne popf mov (bad) mov xchg jle int3 xchg push dec cmpsl mov push mov fwait in arpl (bad) mov cmc and fwait hlt out add rorl in jg lock cmp roll into or movsl fwait addr16 pop push divb mov adc xchg rorb pop pop push call idivb mov xchg popf jne pop xchg cltd or add sub jge pusha out mov pop lcall fidiv insl out dec fwait cltd mov mov pop add in mov xchg gs push jae sub cld dec jo stc out orl sub in mov repz (bad) or xchg ret push xor icebp leave enter cltd mov das sbb iret push nop lds fldl cmp dec push ds adc add arpl aas in xor jo,pn lcall pushf sub inc cwtl js repnz bound movsl xor lret in fstpl push cwtl fldpi aam push mov jmp pop mov push cmp push jecxz xor imul mov nop dec test btc push mov imul push inc ret pop arpl ja rorl je inc mov (bad) fs dec inc rcl mov inc ffreep xchg push xchg xchg adc mov pop push mov leave push mov outsb push inc xchg mov adc jb jnp mov sbb mov xchg inc pop dec xchg imul or mov (bad) mov push push (bad) xor inc out rolb dec dec out leave ss jp add mov push stos outsl add out jbe leave sti repz sub xor (bad) push in mov (bad) cmc insb stos fwait js mov dec fwait cmpl ljmp and xor mov lret jmp xchg mov pop sub or push int3 dec cwtl xchg push loopw aad mov dec enter (bad) out mov inc push clc imul xchg ljmp imul nop je push mov dec into push movl cwtl pop push mov push (bad) and mov push fsubrl add and dec adc stos flds das lds mov lret sti faddl jbe popf pop movsb or push xor mov je and mov orl jge test imul hlt add mov push iret mov pop sub mov cmpsl arpl adc pop dec inc mov popf push lds repz jg xchg xchg outsb jg imul shlb int xor xchg or pop inc les cwtl sbb xchg popf or insb sub fbstp flds mov pop test call out push push lods test scas loop push data16 mov xchg addl pop xchg shlb fcomip cmpsl push outsb push mov and repnz test je xchg push mov pop jne jnp daa lahf add xchg xchg clc aas fsts mov jo inc fldt jae stc jb push sbb syscall lea test loopne addr16 xchg xchg repz cli sbb nop je dec dec add into in pop imull mov sub mov dec dec aad cmp jno sub pop das mov xchg imul adc mov inc imul push fistpll (bad) incl inc dec adc aad and and sbb je adc enter and or push pop add cmpsb addr16 and (bad) pop push scas jae rcrl orl cltd fs cmp mov addr16 mov sbb adc movsb test in and loope,pt mov vmaxps sub or orl arpl sarb or xchg mov xchg (bad) adc je push cwtl gs or pop dec add push cwtl dec (bad) call mov xchg out sub inc inc or out movsl out scas dec insb daa dec or pop sbb adc cmp aas jecxz arpl pop xchg push out add popf icebp movsl inc jnp mov lds out add pushf js pop pusha jle cmp shlb (bad) stos sti add inc cmpsl sahf jno mov stos pop pop push mov xchg inc outsl inc sub dec inc nop cwtl pop es add je mov jl,pt sub xor inc rcll sub or in cli mov sarb push cwtl mov cmpsb sub je ja mov adc push sti pop adcl jb ret mov mov cli addl out in lea ret jb cmp xchg jmp les ljmp cmp jp push loop andl aam push pop jno inc into popa mov (bad) repz outsb jl ja add cmp (bad) sub mov and mov or dec push insl pslld jae sbb test mov (bad) aaa stos mov sub test push mov lret into cmp xor dec fs sbb imul jnp dec push or cmp adc pushf in mov cltd pop mov ljmp imul add movsb lret push out lcall cmpsl sub mov xchg jnp mov cli cmp jl dec push shrl dec cli inc ret jl push (bad) pop pusha movb sahf inc xchg cli aas test add cltd insl jbe add inc clc mov pop mov not jne pop inc (bad) test push arpl loope jnp loopne cld push add xor int fcoms dec sbb test inc mov push cli xchg enter mov xchg test pop cs cmp dec inc dec xchg movl xchg add xor dec pop mov cld negb popa das (bad) xor gs test cmp lds iret pop in lds inc mov xchg xchg incb mov push fiaddl jle xor jns out xchg pop mov fistpl xchg xor pop mov popf sbb adc xchg dec sub fstpt push loopne push push pop daa mov pop sub mov pop ret (bad) fstpl (bad) jecxz loope (bad) sbb xlat iret xchg mov (bad) mov xchg addl aam shlb xchg es sub ss xchg dec stc and push push jg add push xorl inc dec mov sbb lahf push (bad) cmp test iret inc push add mov dec fwait jp ret stos (bad) and pop test ret mov push pop add push mov int fist push orl ja addb hlt (bad) outsl xlat ss jnp dec xlat sub arpl mov lods xchg mov dec pop cwtl xlat test push les xor dec sub mov lahf int ss ljmp dec xchg sub insb adc xor push test sub lods xor cmpsl les and gs jns mov mov dec pop mov push popa jbe aas icebp jne fcoml and rcll push mov scas rorl xchg xchg movw in fisttp icebp xchg dec add add test pop clc stos arpl leave (bad) push je loop dec mov and iret push dec fdivrs jb test or jne xchg cmp imul inc (bad) daa popl sub inc mov and adc push out call aad sahf mov adc jb lret icebp mull (bad) ficoml push call stos sbb cmp mov pushf decb mov pop push ss fwait jnp xchg insb stos (bad) (bad) in and leave fildl sub xchg ss (bad) jmp je lret cwtl and movsb test jae arpl imul mov lret loope inc aaa into adcl stc xchg xchg fmuls mov in clc test ret inc or add mov dec lcall lods xchg jno fcoml test cs data16 xor or pop push fidivrl sbb sbb pop jge clc test outsb jae adc into sbb pop pop scas jo enter out dec push idiv push push inc outsl jb enter test mov fcmovu add (bad) mov aam cmovns pop xchg jmp into js adc adc cli mov lret pop mov scas dec mov and stos or xchg inc dec inc int lret inc test cmp pop xchg lcall in adc jns pop mov test cmp jmp jg sbb je mov add mov in (bad) pop push into or jmp fcoml jmp xchg aam lods hlt xchg push pop mov arpl dec icebp orb dec or std add je (bad) fisubrl pop neg dec push clc add xchg lcall scas mov mov loopne pop lods inc and xor sbb into jecxz cltd sub aam mov xor push pop into add or lods popf inc xor mov (bad) cmp xchg insl add pop fcoms dec xor ds mov cmpsl pop dec ret sub insb pop mov arpl inc (bad) lods loope xchg (bad) push cmp out xchg lret (bad) out sub push aas inc in cmp mov sbb sbb insb popa cli lahf jle jae and popf std jbe imul add cmp pop in leave sub push add jle,pt mov dec repz and mov fcoms inc pop sub xchg mov dec cli jle lods xor xchg or nop test hlt or xchg aam xlat lcall mov adcl sub xrelease pushf push imul dec sub mov jp pop add pop enter arpl js arpl add (bad) mov xor push sbb gs fs (bad) int (bad) sbbl or xor dec icebp fdivr test xor imul loope scas les mov jne lcall mov fadds xchg pop cmp ljmp sahf inc xor cmp lods mov ss sahf aam push or pushl mov outsb add lods ror stos notl xchg dec xchg xor dec or add xchg mov adc sub push into cmp sub addl and dec pop dec int jns test ljmp js push pop int3 popa jno dec int arpl imul jge fnop mov enter jecxz xchg shrb sbb ret aam jl fimul (bad) dec sbb fmull push adc sub movsl (bad) mov cmpl mov xchg jnp xchg (bad) cmc int3 xchg jnp or xor icebp ja insb mov lret je (bad) xchg mov mov imul jnp les fidivl push sub cmp mov dec xchg jp lret pop xchg jnp mov cmp xchg or inc sti lret adc mov dec xor cmp cmc xchg lret dec mov std sbb mov outsb sarb jp mov xchg add pop movsl push cwtl inc jmp push (bad) jne pop cmp and ret inc lcall rcrl push ror and cs arpl sub jmp lret sub xchg mov inc int3 icebp cs xchg sti (bad) jmp xchg imul jp jae adc xchg pop jg jnp dec dec dec sub mov push ds ficoml mov inc ds dec scas xor sub push mov xchg mov sub call or pop and add repz mov push outsl lret adc adc subl mov push mov adc test push insl or push push jp in jle mov xchg mov mov dec xchg dec add cmp mov ret mov pop dec sub sub fucomip mov fnsave jo sbb movsl test add js rorb adc test dec into push jnp dec push add dec cltd xchg outsl pop or dec stos arpl and lahf fs dec movsl pop call add jnp rcll dec fs shrb mov ja or mov mov fadds jp xchg clc out lcall into mov jge mov or in sub jp orb dec sbb stos lret push pusha inc fcmovne dec add mov arpl mov xchg inc or mov andl xchg int shlb push and out push cs ja or dec sub lret inc (bad) dec ja mov cmp sbb jnp dec fs mov dec mov push pop ljmp mov or fldt ficoml nop xor dec fsubrs pop cltd xchg rcrl ret or jne inc leave cmp jb xchg or cltd insl sbb jmp xor ret js popa in rcrl add dec mov fs jnp pop inc ja adc movsl sub dec cmpb fldenv pushf (bad) aas xor sahf dec (bad) or pop aaa inc lods sbb bound inc (bad) ja pop (bad) out les jecxz push inc outsb or (bad) pop popf push clc cs mov lods (bad) fisttp cwtl rcll sti push inc clc lahf cld mov aad repz xlat xchg (bad) mov jne xchg sbb repz mov pop (bad) jns xor ja movsb cmpsl xchg (bad) and arpl lea xchg xchg xchg lods pushf popf (bad) push xchg dec fwait or mov dec aad pusha jle mov les pop and mov shrl adc xor lret pop push lcall popf push xor or lcall sbb call sarl shlb or (bad) gs lods gs js int3 cmp fnstcw mov ljmp xchg xor mov movsl adc inc jb test pop push sub pop adc jne and ja shll je jp push mov adc je cs inc inc rolb pop lret push xchg mov cmpsb addl jne (bad) push mov push sbb stos aas lret js out mov pop jge mov nop dec andnps pop popa sub int xchg aas gs cmp sbb xor jle js xchg jno dec leave adc idivb push push push xor cli outsl roll ljmp mov loop xchg push add mov mov add flds inc clc testl cli loope jo push scas inc fwait ja mov test fs push xchg xchg outsl or pushf aas dec outsb dec imul pop insl push test out mull xchg (bad) cmc pop xchg arpl adc fistpl test jg and adc push leave jmp movl enter add scas mov mov jl sub loope inc (bad) iret xor inc bound mov push dec mov inc movb pop pop inc mov push xchg popa xchg push fs inc sub jb cmp xchg jg es cmpsb rcl sub mov scas xchg shll jno push fsubl mov push lds pop vmovhps pop pop push or pop push add divb jmp stos push bsr pushf lds mov les jb adcb dec sub inc mov iret mov icebp push xchg je sub jnp add xchg jnp lret adc mov add mov rorb ss push (bad) fstl lret insl popf dec jmp stos das movsb hlt push cltd mov je xchg arpl out mov jb and addl inc fs xchg xchg flds imul cwtl add mov and cmpsl inc lock aad jecxz adc lret (bad) cmc inc add sub js pop pop xlat test popa pop mov frstor pop jmp mov xor jns lods xchg repnz rorl mov xchg mov and arpl pop fwait cmp mov test dec imul xchg jae lcall popa mov enter fs xor inc and xor ja cmp jg enter push xchg in data16 pop mov stos jb adc push sarb jo lahf gs mov mov test outsl inc push xchg ja inc aam jo inc pop inc fdiv imul (bad) pop push jae adc and (bad) data16 adc inc fmuls in cmpl iret jne jmp (bad) aad mov xchg push push int3 jae lret mov dec xchg into xchg rcrl mov clc add negl inc pop xchg xchg mov push xbegin bound ljmp fwait xor popf jo lcall aas dec (bad) or out xor xchg scas push mull call push out sbb js cltd mov cmc pop nop mov xlat dec mov int3 stos cmc imul popa mov inc sbb mov imul jmp mov cmp arpl in xlat adc je subl jnp xchg lds lea adc dec (bad) xlat in jae fisttp pop gs stos mov stos jnp lock push cli push fwait shll mov ja pop jle add lea fstpl aad jecxz push test push arpl push ds repz sub dec xor lea pushl repz notl ljmp pop aas mov xchg push pop gs pop sub ljmp cmpsb mov push lods dec mov pop ret and xchg mov pop dec xrelease lret or sub pop iret fidivr or iret repnz scas and mov stos fisub or in and sbb mov mov popa add (bad) faddl jecxz xchg hlt pusha scas pop lea jecxz mov movsl insl xchg dec ret in push cltd cld insl out add mov pop cld incb xchg push xor arpl push imul fs inc xor inc dec push inc inc mov push push pop dec sbb pop cmc push mov inc add rcrb pop sahf in jae cltd lods roll ljmp mov ret ret or data16 sbb cmc xchg mov cltd stos loop lds cmpl outsb popf cmp cmpsb pop jmp les jno sbb xchg push sbb idivb addl xor push mov xchg loopne jns (bad) cwtl xchg gs pop push or push inc cmpsl cs xlat add xor in repz cmp (bad) dec sbb in std fnstsw cmp sbb inc aam orl std push into aad xchg push adc or xor in rcrb mov add mov jecxz push jb cmc (bad) cmp pusha cwtl sub bound insb in lods mov adc mov pop jmp int3 xchg inc aad stos mov mov push stc mov fildl dec cmp outsb push pop add repnz push inc adc jne ja xchg sub push fs arpl sub pop xchg mov jb push mov lcall sahf (bad) jnp jo cwtl xchg leave test jns fsubl cmpsl dec sub mov mov xchg or es enter das jbe push sysenter mov dec inc mov pop or lret mov lret faddl mov push xchg sti mov rorl pop aam xlat aad mov popf cmpsl xchg scas pop mov push push sbb fs xchg jne pop dec je aad es daa xlat je jne orl inc roll jmp and mov push (bad) insb jmp (bad) lcall fcomps dec pop sub push test loope fs inc in call cmp dec dec popf lods inc in dec enter cmc mov popl (bad) stos sub sub add push daa je subl outsb jnp mov test aad data16 (bad) fild cltd addr16 movb cmp cmpsb mov gs iret sahf jmp mov gs push lods imul test int cmp push lret daa dec dec enter xchg jmp sbb popf loopne adc jbe (bad) jo xchg repz dec adcl outsl push adc (bad) insb clc or add fsubs (bad) cmc mov test xchg fwait mov xchg dec add mov mov mov mov psllw data16 xor xor mov adc fistl lods jg fwait pop dec mov push mov inc xchg sub sbb dec or sub stos push and mov xchg sbb lahf adc jecxz popf sahf pop xor or and pop xor adc aad adc push pop mov (bad) pop xor lods jg xchg push inc xlat dec popa aas cmp mov loopne mov jge xchg ret pop repnz jo pusha inc fisubl cltd negb sbb mov cltd fwait pop fs dec add inc mov lock cltd insb mov jb or cltd rolb sahf adc mov pop push jnp cmp lds sub jno ss popa pop dec ret mov mov cmp mov xchg xchg decb jne push lea jg ss sub test jnp push nop pop adc push sub loop test inc pop xor in hlt push add test cmpsl nop lea or scas enter xchg cmc push cmpsl adc pop into push xchg dec stos xchg loop lahf xor add push adc cmc xchg lcall sbb and mov leave mov ret pop mov cwtl xchg mov inc jb xor jb xchg fisub idiv jne push mov add enter call push xchg out push or ficoml insl inc mov insb xor jne test ret adc push enter mov jno (bad) mov dec cltd int3 js add pop ficoml mov or mov aas (bad) test mov stos sti in icebp cltd cmp outsb loopne cmp in push mov mov push or out add out xchg outsl dec les mov roll sbb cs mov mov jmp pop or dec (bad) rclb repnz cmp fs pop mov data16 out movb dec inc xchg xor and pusha pop cmp push pusha add mov xchg fwait or pop imul pop movsl imul jnp sbb push jecxz pop adc sub push xor nop push mov int3 pusha mov push adc addr16 xchg cmpsb sbb (bad) xor push push push mov sbb xlat mov arpl loop push mov add and xchg cmp ret idiv lea stos or movsb push push sub outsb mov xchg xchg xchg addl cld push jg scas push inc mov add imul pusha dec push mov jge xchg arpl dec popf sbb jbe pop sub inc mov lods inc push subl adc inc sub mov dec xchg dec inc insb sub dec cmp xchg push (bad) pop rolb jns in stc sub insb push outsb or xchg test lret daa xchg loope fldln2 dec inc jne add cld adc mov push stc jnp push inc dec jbe out addr16 or add test sbb pop inc push scas jge enter (bad) sbb cmp push arpl int3 mov imul lahf imul mov in in stos xchg movl mov mov lcall mov imull lds test fstpl mov sub rcrl cld loope xchg icebp push pop test in int3 dec push cltd js jae cmp data16 dec or lcall mov or pop imul push mov mov lret push dec loopne adc inc xchg rcrl jnp mov lods ds insl pop sub shrl cmpsb repnz cmpsl xchg cwtl addr16 scas cmp rorb sbb jle ss fimul adc scas imul cltd inc xor stos sub cmpsl xchg inc scas adc push rclb mov jne je cwtl mov gs xchg (bad) cmp andl xchg xchg lahf mov leave fwait lret dec xchg mov cmc xor sub xchg jo xchg rcrl mov adc mov mov mov pop add movsb inc xchg dec outsb xor std mov cmp ret test push lret mov push push add and xchg dec xchg not jno inc (bad) dec sub inc jp aad push push pop sub jle mov lods pop movsb test lret int3 in push add fdivs scas push push mov mov movsb inc mov dec xor sub dec push (bad) sub or movlps sub pop rolb or sub cs fs (bad) insb dec cmp inc les (bad) (bad) je mov push ret les xchg jb cli jecxz dec push loopne push add xchg ret sarb jl addr16 or lea lods pop jno push mov xlat ljmp xchg mov insb or dec mov popf xor pop mov push nop push add addr16 and inc iret pusha int jl or lock adc mov mov pop arpl ljmp adc push xlat roll mov jmp mov outsl push adc push xchg lcall sbb (bad) cli pusha inc mov sub jle and push and into sbb roll popf dec push mov test mov push insl push arpl int3 mov sub and gs lock add xor xchg xchg les movsl sbb dec xor dec jl mov add xchg leave out fwait mov push mov loopne push scas test xchg cs mov adc test rcrb pop rcrl xchg in shl pop pop pop sub aam movl pop and repz xchg mov sub inc sbb mov lcall inc pop push jge pop dec sub or mov lods cmp mov xchg rclb sub adc dec adcb pusha cmp pop add ja pop in pop mov or push dec fs cs gs ret pusha aas jmp xchg pop test sbb push mov pop push mov psubb sbb dec outsl loop mov and cmpsb mov sub or jle imul pop andl sbbl sarb imul into lahf in xor lcall out rcrb ret cs jmp lahf out mov sbb xchg push pop push or sbb adc fs add es pop jnp xchg jne and inc test cld dec outsl movb or enter cld dec push sub adc popl (bad) pushl insl mov push xchg addr16 rcr sahf jmp into outsl pop gs (bad) cmp dec xor loopne push push dec stos jb dec into xlat inc or inc jbe mov or pop lcall push lock icebp or xchg (bad) mov dec mov test push cmp pop jmp sbb xor and outsb ret and dec mov ret sub xor push mov lea xchg test jmp loope push push cwtl int3 mov dec sub cld (bad) aas mov jo and and dec push leave mov pop mov pop sub push outsb mov pop flds imul rcl xchg or jae cmc adcl push fidivl cmc mov xchg insl inc or add sti jl es jnp xor mov mov pop mov pop rolb push dec les dec jo mov jle add jge je mov mov das leave pop jne,pn lret test jae push arpl sbb inc lods imul int3 cld dec nop cltd test cs (bad) push cmpsb mov xchg negl repnz cmp cmp inc and jl cltd sbb fs mov pop dec inc idivb push imul jmp bound cmpl movsb outsb cmp add jge repz adc cmc cmp cmp arpl mov cmpl dec fwait les xor cld (bad) jle mov xor inc inc mov outsb loop mov xchg xchg mov rclb fwait xor sbb sbb std outsb sbb daa mov pop ficom xorl cmc mov sbb mov mov sub cmp add xchg push mov jns inc nop das xchg sub cli inc push je sub pushf xchg push xor in rcll call mov ror or mov std jb sbb popa out mov inc ss nop inc (bad) icebp arpl pushf push inc pop fisttpll insb aas push nop mov jno or push fwait push jo sbb jns mov and inc mov cwtl (bad) loopne add inc add dec shrl push mov mov (bad) jo repnz add xchg clc add mov lods add xchg push jle addr16 xchg fsubs jecxz (bad) mov jnp psllq jb push sarl cmp or and and andl mov sbb test fs int (bad) test jbe push (bad) mov mov mov jmp sbb add cmp das ds or les (bad) iret test (bad) sub into dec mov clc dec notl cli mov lcall push xchg outsb lcall mov pushf push inc xchg lret pop sub mov sahf and or sarb fcmovu cld fwait mov push xchg or outsb sahf sbb pushf mov cmp jb les push mov jne addr16 mov pop lret sub mov ja jae fcomps arpl xchg sub mov xchg pop clc inc shrl inc addr16 mov lahf rclb jbe add cwtl dec xchg rorb int3 dec pop sub mov mov clc and sub lret xchg popa cmp jne inc clc cmp pop pop push adc mov (bad) cmp xor jne arpl pop and jae cmpsl dec jnp jg addl popf je (bad) push outsb ja stos xchg dec adc (bad) xchg xchg xchg mov out jbe xchg dec fwait dec rcrl push addl lcall cmpsb outsb inc outsl test mov push lahf cs jmp push (bad) lret leave arpl outsb push loope dec jecxz add and mov mov sbb outsb aas xchg dec dec xchg mov fisttp int3 mov push sub dec ja aas pusha aad mov push or mov pop mov xchg pop fwait dec movsb dec scas sbb inc jge cltd ret sbb mov jle das push lret cwtl cwtl sub mov push lds push xchg mov mov add mov repnz dec mov add dec rorl aam adc xor add cmpsl mov loope xchg fcomps into gs outsl xchg test repnz push mov pop xchg add adc (bad) jbe xchg out mov fcoms aas mov sti and pusha or pop in test js loop dec jl inc in mov cmp (bad) fcmovne push fisub popa dec add cmp (bad) in iret data16 fist ss rcrl xchg scas testb and fisttp sbb sub fildl js (bad) xchg loope cmc push int3 push jo dec add sti jnp push int shrl xor inc in fisubl in xor push sub mov insl call (bad) into xchg inc mov mov arpl adc sub sbb jle test push loop push push insb scas je lcall subl sbb inc mov xor cli outsl inc mov push push test (bad) movsb dec fsubrs (bad) roll xchg add xor fidiv mov popa (bad) sub daa or push arpl pop (bad) xor dec add mov imul inc pop push inc or data16 jnp adc imul test dec mov xchg inc sahf sub push dec mov xchg cmp cmp sub inc not clc std add pop sub leave call push adc push cmp push mov dec jle push imul pop mov push jne stos shlb cmpsb sub int3 dec push insl mov enter (bad) pop movb xchg jle mov xor jo jns (bad) cwtl imul push in jl pop fisubl inc jnp mov xchg pushf mov sub add lcall stos outsl movsl pop (bad) rorl sub push xchg leave sbb stos cs div mov cmp or int3 scas xchg lds xchg jp xchg add std addl dec add mov inc jmp loope push lret lret leave lahf push push jb add or mov inc push int3 add pop dec add fldenv stos sbbb mov (bad) lods pop sti pushf adc or scas add fs add jne (bad) in sbbb push mov stos sub in adcl cmpsl dec add xor xchg mull adc mov cltd fisubr inc in adc out sub js imul outsl pop aaa clc inc inc cmp xor packssdw add cmpsl imul pop push popf jbe jbe lods jae mov push scas dec lods cmp dec or aas out dec xchg inc movb pop in call clc icebp int3 and fstpl (bad) lock icebp mov push loopne in arpl (bad) loope jl mov ficompl stos jecxz and (bad) push adc adcl (bad) mov xor sub loopne inc ljmp push (bad) mov outsb pop cmp add mov pop mov push adc (bad) dec cwtl sub insl push repnz xchg test inc push popf cmpl pop outsl stos mov data16 arpl lea dec xchg pop mov cltd jbe test xchg nop pop jp mov repz stos in mov sbb in dec movsl jne (bad) cwtl rcrl push in arpl pop mov lret leave or pusha (bad) data16 add insb imul arpl xchg popa sub sahf mov adc test pop gs adc add or dec dec mov (bad) daa push push xchg xchg leave xchg jo nop movnti into lret push dec cmc ret pop pop clc aas movsb xchg xchg (bad) (bad) jp ljmp loopne sbb fldcw cmp ret aaa xor (bad) adc mov sub and jae rcrl push je jl xor add mov inc ret into das inc inc rcrl dec dec jne (bad) adc adc xchg xorl sub cmp in jge pop xchg inc fs (bad) pushl lds lcall mov push sbb ficoml and insl outsl xchg into push imul push fwait dec sub cmp push mov (bad) ds enter insb xchg data16 movsl fmul lods mov int3 rclb ds inc mov xor in sub jle or or das ret mov int jge mov mov es rorb xor rcrl jmp into (bad) stos ror aam movsb daa lcall pop in mov push sbb add xlat mov inc dec jl push mov jle push mov or push mov push lods dec (bad) ret mov es icebp cmpsl (bad) (bad) mov add cltd mov mov add flds push push sub jae dec or xlat pusha enter push dec ljmp or pop cmp notb insb mulb clc cmp test push std in jmp fs or nop jno dec inc xchg mov and mov xchg pop mov add jmp sbb imul push lret sub test aas add xor (bad) icebp hlt and sub push movl lret addr16 js inc in jecxz daa or push sbb jg ret enter add imul jne jno fs outsl daa scas xchg xchg movsl hlt add and adc and and and cmp xchg out adc (bad) jns fs pop ja or jmp (bad) aad adc dec pop dec and shrl fwait push dec and jb or sbb stos mov call std sarb jnp imul inc sub outsl into mov or dec inc or into pusha clc icebp lods cmc fdivrs or sub jge daa push add or and aad das add and inc adc into outsb inc add shll pop repnz sbb hlt loop outsb (bad) fcomps ja mov push add pop jns pusha xchg mov movsb dec xchg test shll adc pop into bound pop push xchg js stos jle sub mov movsl out int3 sub shrl cmp (bad) mov dec ds call dec stos (bad) push cmp dec pop mov popf cmpsb cs xchg sbbl cmp repz mov loopne (bad) lret pop push dec in cmp or and add dec hlt mov popf into jo mov and (bad) arpl jmp xchg dec test into jle in jae mov mov mov nop ficoml sbb push out xor jno imul push mov or cmp xor lcall mov pusha add jg lcall outsl pop clc cmp jae sti mov cmpsl inc std or loope jmp aam loop repnz cmpsl scas ss inc sahf sub add sahf inc or dec xchg adc out xor mov xchg imul mov pop outsl xchg jae and inc push dec (bad) inc mov test fisttp jb push popa (bad) icebp lods sbb pop sub mov test and push adc iret stos cmpsl or push rclb repnz xor xrelease ret nop cwtl jg dec arpl xchg int3 (bad) xchg (bad) ja std cmp and stos or pop jno pop ret mov jb xor mov dec dec iret insl sub shll mov lds jae xlat push pop push (bad) jbe in movsl loope dec and je mov enter dec imul addr16 sub dec test jns pop mov dec dec inc pop mov pop nop mov or jnp push dec sarl (bad) aaa sbb movsl lods mov into (bad) mov (bad) xchg (bad) inc jne push (bad) bound sub add ljmp arpl jg jae sub dec cs (bad) add mov pop mov js dec mov and xchg and cs xchg pop add cltd jbe ss adc xor or repnz les xor mov lahf cltd cmp iret (bad) fnstcw pop adc dec xor xorps pop sahf out jo adc cmpsl (bad) cmpsl jno hlt xchg sbb mov mov jge pop cmp mov insb subl xlat popf lods jno adc sbb or pop and out mov xchg ds cs in into or fidivrl ret shrl lea or push push xchg push mov xor cli mov int3 aas int leave xor sti inc push stos cmp fsts cmp fcoms daa cmp mov dec or pop inc cmovns xorl stos lahf jecxz push dec or std and outsl pop rclb sub adc xchg sub and into mov push inc cmp and das cltd inc lods fs mov lock xor jno imul enter add xor jle movsl and ja movsl add dec or and dec add inc stos sbb jb mov rorb inc mov cmc inc or popf mov leave test jne imul pop xchg or xchg out pop arpl push lahf and sub xchg jecxz dec jl,pn cwtl stos xchg jg adc or add push movsl xchg insl xchg jnp push xchg rclb imul dec fwait pushl mov imul mov rolb insl enter out push sub dec in loopne cwtl push and push sbb dec and loopne fs dec scas or mov adc outsl jb push xchg int add imul push mov or (bad) pop fidivrl fcmovbe lret mov and fimul cmpsb dec arpl sbbl les inc or dec call jo ljmp clc sahf sub add add jle mov adc inc adc (bad) or int3 call jecxz inc dec pop pushl inc inc add jnp sub call aam cmpsl pop fs push nop imull enter cs xchg cmp add push fnstsw sarl sbb fsubs stc imul cmc mov mov test pushf roll cltd daa leave xchg dec in dec cmp mov lcall mov (bad) lds pop xchg xlat aas fnsave adc lcall shrb adc and popf loopne mul dec xlat jmp or xchg pop ja or push rolb push add and repnz stc xlat leave mov or out and aaa xchg outsl repnz sbb jl jbe test push and xchg push aaa push mov dec subl ljmp in int lock jnp push arpl mov jb or adcb mov (bad) sti (bad) jle and (bad) shrl jmp pop jne xor ds int3 stos arpl mov loopne sub (bad) xchg cmpsb jg dec pop ja sub and xchg mov jbe xchg shrl push dec test fimull int3 int3 mov mov and sub mov add adc xor shrd gs pop addr16 push adc mov lods pop sub jmp rolb pop adc cli or scas xor adc jo in xchg pusha test enter mov xor cmp (bad) push push dec jbe sub (bad) stos insl add mov sahf out in aaa hlt sbb das and cli in mov cltd into or and sub jae or cs sbb mov and sbb cmc pop cmp mov fs inc and mov push cmp pusha dec mov pop fcoms out pop sub pop cmp mov shrl push pop les mov push mov dec icebp (bad) mov lcall or in cmpsl push dec jg sbb push inc pop xlat ja test inc lret push pop fdivs or push pop in mov shlb lock mov cmp pop pop xlat sub int3 lds lret push dec mov cmp out add mov pop int3 dec push and int daa push lret sub mov inc ret (bad) cmp jp ja sub or sbb push insb (bad) xor repz mov aaa xchg cmp jecxz inc dec ficoml xor push aas out mov inc in mov push inc sbb mov mov mov push rcll pop aad sbb dec jno sbb push jg pop mov out dec sar xchg mov das inc jg sub (bad) sahf cmp adc pop mov mov mov cli addr16 mov sbbl imul bound sub jl inc shll xchg push sbb mov imul adc stos push outsl sbb icebp push test sbb mov dec into outsb xorl jae sub call xchg mov enter xchg mov test test mov pop xchg inc pushf push ficompl cmp xchg mov sub cltd inc iret (bad) pop mov push xlat stos (bad) jne gs ja dec lds (bad) and mov adc aam cmpsl xchg mov mov dec data16 fs xchg mov pop lret jne iret jl dec data16 fisubrl mov add (bad) aad ret adc mov aad test jb and es dec pop pop add lods sbb out fsubl mov mov mov (bad) je push cmpsl cli movsl in push mov loopne add dec dec stos lcall daa lea out ljmp pop xchg out test test dec dec xor into dec add dec lret lds mov and repnz (bad) push imul adc stos leave add sub pop movsb dec xchg out lock inc dec (bad) sbb mov adc dec cs adcb dec dec fisttp jne mov pop cwtl adc dec fwait xchg into push pushf repz outsl xchg jge jmp cmc cld fcoml jo cmpsl shrl jns cmp movsl cmpsl insl jl ret les jo,pt popa xchg mov ss and shl div xchg xchg jb pusha xchg add cltd aas cmp mov and ljmp addr16 das es jecxz inc jnp xlat (bad) imul arpl fcmovb mov sub (bad) je pop scas sbb bndstx loop mov stos sub mov inc jle jne mov xor pop (bad) fildll in dec ja jbe aad add sbb insb dec or jecxz pop sub inc cs mov arpl mov inc aaa call stos xor add mov sub adcl (bad) repz orl loop cli xchg cltd sar test sub jmp bound int bound cmp inc sahf out std out lret xorl adc sub leave jne jbe mov ljmp pop sub jns pop fs sbb push dec out aam movl in or movsb test pushf test dec cmp and jp rcrb mov inc (bad) push frstor push dec jecxz dec inc or jle clc je cmp xor mov add push lods adc outsb inc sbb push cmp or xchg repz mov pop inc ret xor ds mov aas or add imul outsl mov dec stos mov test push cmpsl insb cld push ljmp lds jg and enter jns insb rcr jg ret imul push loop pop dec push lret insl bound adc adc and inc xor mov push dec mov push pop cmp sub imul push xchg sti into (bad) cwtl sbb sahf push xor dec mov and test jle adc ficomp xor in mov sbb adc cmp lret fiaddl inc enter push sub sub jo dec mov xor lods cwtl cmpsl jae xchg xor mov outsl mov push sub and push adc add lea ljmp into lcall mov ss lock test push inc bound ja xor cmp xchg adc fwait or and add imul sbb rcll imul insb sbb xchg cs push push sbb cltd inc scas jmp jle inc mov fsubr lea inc sub sahf inc dec shll nop sbbl fcomp gs jnp push push dec mov adc scas sbb push mov ja adc int out lcall roll cltd jne jne test cmp push test mov lods in dec out or sti mov ficompl or cmp dec cltd sub out dec sti arpl repz xor js (bad) rcll imul push arpl xchg push (bad) rcr dec add popf out (bad) pop out push roll xchg lret mov js pop lods sub pop mov dec xor or lds adcl or pop push xchg test mov fs int pop in (bad) mov add daa push lds or add dec jle into lock mov xlat mov test xchg xor push jno pop iret dec scas ret adc mov js jb in sub cmpsl jmp adc aas movsl in lcall jge and sub push mov movsl sub push push imul push adc lret sbb jbe jae je add dec cmp and jne outsl jl imul addr16 cmpsl inc int push rcl inc pop mov loop xchg dec xchg sbb jle (bad) int ret lods push cmp jmp adc test jno aad insl xlat push inc push lret mov add sbb xchg add fadd pop xchg rcrb xchg ja fucomi (bad) fstpl mov jmp repz int pop push das test adc push sub (bad) or xor jnp sbb das xchg cld arpl ret lea add fild sub mov in push push scas repz ffreep dec push sub call xorb mov jge mov aas scas stos hlt cmp inc or aam pop out xchg ja or push jo int movsl int3 push pop movsb pop mov sarb mov push out nop movsl clc cmp cs xchg pop lods gs mov insb (bad) fidivl clc dec outsb ss pop inc sbb mov sbb lods stos pop loope mov xchg adc int nop fs or sub lcall inc loope fnop roll mov push idivb xchg jne fistpl dec sub mov orl pop push sbb push popf test mov dec push xchg movsb jae sub mov imul popf fs loope mov inc out sti mov or call ss pop jmp dec xchg fcompl lea push aam repnz gs insl jae xor fsubr (bad) sub into push mov out (bad) lods jge mov (bad) dec dec clc addl mov push dec dec mov test add mov pop pop sub outsb push stos arpl test or mov adc or icebp fs sbb push cld mov mov pop addl mov inc pusha int dec (bad) xchg push pop inc je inc dec add movzwl stc lcall push test jb sbb es cmp xchg adcl mov cmp pop add pop mov push xor add mov pop jle lds into push lock jl push clc lahf test (bad) mull in lahf nop (bad) icebp stos repnz mov rorl mov addl dec jle push adc addb or add jne push inc add sahf ret arpl xchg (bad) push add xchg repnz out out push sub cld dec jno aam lea inc cwtl (bad) adc push xor add ret xchg dec pop cmp sbb out addr16 mov inc or into mov addl jbe rorb popf cwtl mov sahf rcl pop out in xor xor cmp mov xchg xor mov fistl pop ret roll aam push (bad) cld xor jmp into mov dec fadds mov lahf jb mov into mov daa into add dec adc aas cmp adc adc cmp sahf iret push mov push (bad) (bad) jg inc ret and cmp xor into stos and lock dec dec aaa push jo test cs arpl enter cli rcrb outsl mov mov sub xor xchg shrl dec xchg and scas xchg dec mov mov push out jge ds out aam shl xchg inc dec leave ljmp (bad) dec push popf mov pop mov dec mov jg fidivrl (bad) fs mov outsl mov ja movb ret push (bad) xor or in push sbb ret aas mov mov dec in inc inc icebp stos rorb sub push inc sub js mov fsts jno pop mov (bad) ja xor cmp mov ljmp inc pop mov in jecxz pushf mov mov movsl xor and shrb inc insl mov xchg and xchg push ret inc into mov xchg push push jbe icebp jb and adc dec mov fwait push xchg cmp aas mov dec ja push not lods adc orl push pop jo pop lods push xchg je pop jb xchg mov inc dec pop mov dec mull test jle push (bad) aaa mov movsl jge xchg or xor lods lret ret xchg movsb cmp mov xchg or xchg adc cld jmp sub mov idivl dec loopne adc ss imul aad xchg dec dec bound dec push ret incl and pop enter xchg xor sysenter pop push xchg outsb cmp pop inc movsl (bad) mov pop push jb mov inc dec mov lds movsb push aaa and fwait ja dec test push or or ret (bad) or into popa xchg in std stc push out movsb jno mov adc dec xchg add add ja cli mov pop cmpsl jl fdivr xor (bad) ror cmp imul adc sti stos mov xchg (bad) loopne pop dec mov aaa imul push gs aad sub jnp adc nop loop fs cmp addr16 xchg das (bad) not movsb jge jne mov stos aam gs mov jmp outsl push int jge rolb ljmp sub mov lods dec rcrl testl pop sbb subl dec iret xchg dec aas ds jno es loop sbb push mov paddd mov fs pop fisubr or movsl test lret cmpsl cmpsb call lods xchg outsl (bad) pop sub je mov push jl idivb and and xchg stos mov push out pop lcall push (bad) fldenv arpl sbb aam rcll (bad) es xor insb (bad) hlt (bad) sub dec (bad) sbb outsl scas imul std mov in jne jg adc fisubrl jmp rcll or jbe ljmp push ds jns in push mov dec in arpl mov mov fidivrl jo jg loop sbb jae mov gs xchg (bad) push adc (bad) icebp fsubl jmp pushf (bad) lea sub ret pop enter neg lret int3 cs mov scas lods and jb ja lret test test sub dec xchg test clc pop (bad) push sbb lods lods jnp jecxz xchg cmp outsl inc mov or sahf jo sub jmp xlat in jmp add push push xor sbb jp xchg fstps call inc fmuls cmp test jbe movsb jge xchg dec dec aaa lea lods loop popf xchg out inc stos out mov inc mov leave call sti sbb or inc test push mov pop cld sbb push dec out cmp rorl andl out lea push lods inc lret jecxz in push jge or leave cmp in push (bad) cmpsl fdivs pushf out or inc xlat fs aam test out push cmc pop out jnp (bad) mov push mov and xchg xchg sub sbb out cmp sub into pusha adc dec sbb add ds inc sbb fs adc xor lcall cltd sbb das les sub cmp xchg fisubr lret push jecxz inc fsubrs fdivrs xor jl fs orl aaa xchg lds cmpsl dec xchg xor (bad) sti pop ror aaa rcl out mov insl or or sbb stos or outsb icebp shrl (bad) call ficom in fldt cmpsb (bad) lahf ss ss sub sub push dec push int sub dec lds xor repz in fs ljmp jo or sbb shll jecxz vzeroall repz push stos pop imul movsl or iret insb push jecxz dec cld subl mov aam sti xchg fs mov bound sbb ljmp (bad) push cli sbb mov popf das add sti insl inc arpl jo sbb fucomip mov dec mov or sub jo out sub dec shl out movsl loopne push dec mov notb and (bad) dec mov mov jns fwait inc mov and int3 push sbb pop xor dec push outsb mov push lcall xchg push sbb lea add fisubrl xchg out jne jae ja outsl aad cmp shll push jo cmp (bad) or dec xor mov pop xchg popf sub pop cmp sub push xchg push cmc jge push mov (bad) jecxz sub cmp in push push mov test insl call xchg leave dec xchg cs (bad) fild sub pop xchg jg or xchg adc shlb lret jmp pop ja test xchg push out (bad) iret xchg dec add jge dec (bad) jmp (bad) out aad sub adcl pop gs push mov lret xchg jmp push dec jg out and roll and and push gs stos pop (bad) or xchg mov shrl xchg fwait pop inc add mov stos push mov push and jmp dec mov push rcrl xor sub (bad) push pop aas (bad) data16 arpl loop dec lds and (bad) ja,pn mov or call dec or in sub sahf das inc daa or loop push addl and mov mov test das jae lcall sub jo pop adc sub lods add (bad) mov sub xchg adc jle push sub dec xchg sbb mov or xor inc mov jg push (bad) pop fwait inc dec les lahf leave pop dec pusha hlt add jl pop fsubl and leave cltd inc sub push mov iret int pop mov sub dec fidivr inc inc insl or inc (bad) (bad) xchg outsl inc cld dec jmp mov sahf mov out mov into inc adc jl (bad) mov dec add mov fwait lods inc int3 pop sahf sub arpl repnz rorl inc push cmp xor sti cmc cwtl sarb outsb mov jbe arpl dec rclb outsb mov inc ret rorl into mov mov in lea test xor add adcl or push outsl stos or dec bound pushf add fimull cmc fsubs cwtl cs lds aaa add enter out mov jl push clc and jle mov push xchg push dec (bad) push dec adc xchg js or loop jge,pt cmc shrl movsl push cs mov cmp or nop or into inc push xchg mov in dec pop (bad) cmc dec pop scas xchg test out sbb scas adc sbb mov loope jl shrl ja nop scas inc lock or adc xchg push repnz arpl push mov mov insl negl mov and adc stos pop or addr16 and push inc imul jmp lcall push sahf or push cmp mov mov dec pop cmp arpl clc or daa mov loop pop mov mov dec bound dec xor push mov mov xchg xchg and and (bad) orl xchg fwait mov int popa and inc movsl pop ja mov mov pushf neg ficoml (bad) xchg nop popf sahf popa mov stos jne pop imul sahf cmp cli arpl pop fidivl movsb pop fbld kmovw push dec mov out or push inc hlt into dec cmp outsl pop daa xchg sub push pop inc arpl shll push shll (bad) (bad) into xchg fsubs and pop inc mov add dec sarb and dec (bad) dec pop mov push popf sbb sbb pop pusha fsubr and jmp cmp mov test adc addr16 jo pop outsl push cwtl pop shlb sub shrb inc pop adc push jg rclb rcr out jo xchg dec lret incl jne fdivl jno inc sbb jp jmp js dec test pop (bad) pop jp jbe jnp and in fs xlat cwtl popf (bad) pop jl xchg mov in test fwait test mov cmp dec fistpl daa jbe mov pop into jno sti lods clc or (bad) call aam dec iret jg imul lods xchg fptan xor dec add mov cmp ljmp xchg mov or in lods mov mov aam (bad) (bad) or mov aas out je daa dec shrl sbb dec scas cmp cltd stos insl ret push dec dec add ljmp mov pop ja push pop pop sbb movsl lods ja mov orl or lock test mov sti imul sbb adc add sbb arpl xchg dec repz and xor xchg dec movsb and ret jno xchg cs dec inc ss mov sbb and (bad) int xor xchg ss inc ret push and stos (bad) jmp les test mov mov lret jbe enter sbb mov jle insl cmc stc mov jne cltd mov mov mov insb fwait dec or xlat xchg xor mov gs push hlt cmp xchg dec fcoms xchg cmovo jo inc xchg and xor ja fcoms dec xchg (bad) (bad) adc dec inc lret dec cmpsb into xchg data16 out pop dec dec mov scas mov lret jbe repnz push cmc push push xor mov mov jns push sbb jmp mov ret and mov sarl and insl repz push dec test jb push or cmp ss mov ja pop xor scas je into cmp sub xchg pop sub repz xor cld cs in (bad) mov mov push ror cld xchg xchg lds ret lds jne xchg fwait mov dec repz test dec dec repnz cli fs xor (bad) fsubrs xchg aam xchg jmp push push fdiv lods dec and arpl out push or orl test incl push sahf xor cmp jl jecxz fldl (bad) fwait repz fwait out cld adc mov cmpsl sbb pop add jl dec lcall cltd imul push cmp and (bad) adc imul leave (bad) sbb mov arpl outsl (bad) in cld dec sbb pushf ja dec ljmp test lock out mov push rcrb mov dec mov int3 hlt or dec jp push movl xlat stc xor (bad) movsb add call jnp mov inc inc sub test jmp mov mov inc and xchg mov sbb and and xchg mov bound in ret ret inc (bad) es push scas push nop addr16 bound lods adc add push cmc into imul xchg push xor lods push push pusha outsl jp mov nop mov pop mov dec pop cmp dec sbb adc mov int xchg add sub les inc sub mov rclb sti cltd cwtl push inc cmp inc xchg dec test or std adc dec popa addl xchg stos imul cs addr16 pusha cmc mov lea mov xor lods pushf pop mov ljmp in into jecxz (bad) in mov pop cmp decb adc jns nop pop lret dec mov adc rorb js test pop xchg jbe push inc repz dec dec sbb into push or mov xchg push and push aaa mov dec jne dec push test add sbb adc mov mov adc dec or push clc popf loope xchg xchg (bad) int3 push mov push push xchg push dec dec xchg pop dec xchg inc jecxz inc nop pop mov mov dec mov dec in push dec mov inc subl inc inc fs xor dec pop push dec cmp fwait out push repnz ljmp cli in adc lcall mov rcll cwtl xchg int daa adc aas in stc sbb enter mov mov inc mov les jle jmp xchg jg aas dec addl inc (bad) sub xchg mov cmp sub push mov icebp dec dec and add mov dec xchg test mov insl xchg inc dec mov mov mov into fs fwait lea jns dec cli pop test cmp push dec inc dec loop int mov fidiv inc repnz jnp dec ficompl aaa push stc jo sub push push vmovlps ret jle dec mov push mov int3 push adc repz xor adc push cltd pop push xchg add jb jb jb movsl ja test cmp cmpsl adc mov jb push sti (bad) in inc lcall stos cs dec pop mov mov xor cmp ja imul push push mov and push mov add or push add adc pushf dec pop cmp (bad) imul add (bad) notl pop mov xchg push inc adc push dec cltd fs xchg add dec sahf mov inc dec or adc xchg addr16 sarl mov mov cmp fs cmp (bad) dec jle mov lea dec out int dec push cs pop fs inc popf pop gs cmp fs lods (bad) mov cmp test test dec add loop outsb popl fisttpll push (bad) repz inc (bad) cmp mov fisub in jbe dec mulb rclb cmp xchg aaa inc or outsl movsl dec push (bad) cmp jg dec les leave dec add xor xchg int (bad) and xlat rorl (bad) fs (bad) cmp fnstenv (bad) jne out orb hlt stos dec aad dec mov arpl or mov pop jg add sbbl xchg push xchg inc mov inc lea inc (bad) jae mov inc mov push pop inc in mov popf push and mov or push xor arpl xor inc pushf jle dec jmp mov push adc jb or cmp cltd dec xchg cld jmp aad pop pop pop jge insl xor addr16 subl jae ja and inc and fistl rorl or xlat adc push dec fs loopne jmp lret fcomp dec gs cmp shll inc lea add inc mov roll jnp test dec aam pop adc push inc or mov out in (bad) pop outsl dec divl pop push pop inc fnsave sub dec rcll (bad) sub jne sub or icebp dec in dec repnz mov adc mov inc fidiv sub xchg ret (bad) int dec lret insl pop insb data16 xor test push (bad) xchg sti jne das outsb inc mov int add and imul int jns push mov ret lods sub clc vmovdqa mov sub xchg mov mov sub add jp cwtl and jnp push mov xchg lods pop jnp lock jge mov inc imul popa lcall dec and push xchg xchg push bound mov test fwait push (bad) jl pushf pop mov jl arpl push jb add push jmp leave jb je dec cmpsl arpl push mov cmp (bad) or xchg mov call xchg sahf xchg add jle aas cmp insl addl cmp bound push les cmpl or mov cwtl inc arpl mov shl jl (bad) jb jp jnp inc jp mov pushf mov fcoml cltd pop jno lods inc cmpsb mov jbe dec jnp push hlt push cmp pop das dec loop sbbl pop push add roll jbe pop add pop or les add mov push or out pop arpl lahf sub aad push ss lcall leave rolb jmp cmp inc dec lds add les pop inc or cmp cmp mov mov jns cmp dec pop push lret aad imul push test (bad) outsl in mov jg hlt out push int3 xchg mov popf adcl pop aam mov mov mov (bad) dec dec jmp push push rorl dec xor lret lds int3 mov mov cmp pop mov imul imul push and pop fs xchg enter pop jae cmp xor (bad) jo vpshlb xor pop dec rcll (bad) aaa lods jbe xor sub pop gs popa in sub (bad) mov test xor push sub sti add sbb dec dec pop add dec (bad) ljmp out cmp pop push bound mov mov push add inc xchg pop jbe (bad) repz dec mov cmpsl cmp scas xchg ror push pop jae lret push push inc add xchg iret pop push xchg xchg cli (bad) dec cltd xchg lahf repz scas dec ja les (bad) jmp (bad) fisttpl loopne xchg lods inc cwtl push xchg fsubrl mov jnp jmp fidivr lret jae fcmovu mov inc (bad) mov arpl push lds cli add add or cwtl lret mov lea mov out fisttpl clc movsb jnp sub mov scas dec imul std xor mov ds ljmp (bad) int orb pop bound xchg addr16 push mov lahf xor into (bad) push pop insl pop popl stc inc or xchg sub jg mov adc push je lds mov jb cld xchg push (bad) stos push sub rorl cmp fsts inc mov addr16 mov dec ret mov scas js pusha xchg repnz xchg bound ret pop orl jecxz adc sti or outsl cs lock jg iret xchg xchg repz jo insl cltd and pop fsub int3 adc js pop fstpt iret push push jo and xchg cwtl dec cmp movsb ficoml roll or subb xchg inc aam out sub into cltd rol sub xchg cmp dec mov jnp cmp jbe inc and pop inc add add (bad) lcall mov icebp (bad) repz jmp push xchg or decl sub xchg aad std jp xlat mov int jl insb ja pop mov push (bad) sub xchg test fs pop adc sub insb mov xchg fwait std (bad) in das or push imul lahf pop or das stos and pop jmp mov jbe outsb xchg rclb lds push out es cmovg xor mov add mov outsb add sbb int fnsave mov sbb aaa adc add cs add jle rolb cmp xor push rcl outsl arpl and xchg (bad) dec ret pop mov (bad) arpl cmpsl jl jne addr16 lods cmp gs jo movsb fadd (bad) mov clc sub lahf pop xchg adc mov mov adc jl push jo je cmp arpl push out xchg sub jg shr push or lret sub or push cmp xlat mov test (bad) xchg mov aad in imul mov xchg lock jecxz mov add cltd inc in repnz repz loope jae adc or add enter push enter add or int3 in jb gs imul push rolb push mov das popf xor pop stc int3 data16 rclb orl fucom inc lods cmc dec mov dec xor (bad) sti jbe push aad sti outsb xchg fsubl xchg out imul aas add mov cltd into nop leave mov pop dec nop or inc dec into cltd add mov scas lds pop jl xchg imul inc inc test cmp (bad) xor mov inc and pop push inc mov idivl cmp push leave (bad) xchg inc cmp cmp mov or push out add dec pop push shrl je or cmp lods rcrb or shll and push gs hlt outsb ds mov fiaddl or mov jo jle into in insl gs clc xor push sbb pop rol add dec adc lahf adc ja jnp xchg mov or xchg jmp mov add adcl xchg sti pop ja push jg pop sub mov dec xor pop outsl inc enter xchg xchg push mov mov sub mov outsb add test jb lret rorl dec jne ss push mov jne inc movsb inc sbb pop mov pop loopne add dec out pop aad mov sub in imul popa mov mov mov bound lds inc inc xor jle add dec mov rcl mov mov ror pop arpl in inc jp aas xor jae adc sbb lea add pop pop shll cmp dec ss mov cltd dec daa shr into cwtl dec add mov loopne dec cltd push mov adc bound or test pop repz xchg dec dec push rcr cmp int repz scas xor (bad) xchg cmc pop ret pop gs (bad) adc addr16 icebp cli push pop mov add imul or dec loopne gs xchg inc negl xor out sbb add repnz inc out ds sub clc sbb scas lea dec pop jae lret inc mov iret add mov or loopne xchg sub and lret push inc imul (bad) je arpl cwtl in pop mov movsb jmp dec mov add add sbb and pop in imul aad test or inc scas jmp enter aaa jbe daa cli stos jo adc xor pop lcall adc inc (bad) or into or add mov lret mov les or adc push dec mov loop lcall shrl shl cmp jno mov pop xor dec mov xor dec outsb or inc cmp nop cmpsl (bad) cmc and sti fcoms dec movsb pop outsb dec inc dec mov in xchg inc sbb mov add inc inc sub mov lods scas jmp test (bad) and cs dec sub popa cmc insl maskmovq (bad) or out out cmpsl xchg les pusha mov cmp subl mov push cmp test dec xchg xor mov fs sbb jnp mov jns and inc push popf int3 mov pop into jno cmpsb cli xchg and adc fwait push jo addr16 stos outsl cli ret decb inc inc inc jl jae jp jmp push lret and in insb lret je cltd outsl test push jecxz jl scas shlb addr16 adc or loopne clc (bad) cmpsl dec mov leave cli jbe sbb dec pop inc adc adc in xchg dec xor ficom lods or mov cmp adc push into shl out inc add adc out or sub sub push add mov je flds leave jne inc movsl lea add push adc xchg xrelease add rcl add push test insb imul lcall push imul xchg mov into mov outsl std cld leave ror pushf jge push fmulp in fs dec xchg test test loope jno fs add dec lods scas push ficoml lock fld1 mov ja sub add inc pop hlt fidiv js into add and add stos jmp clc xor lods inc aam call fidivl cs mov mov jl iret push dec pop int3 pop push arpl lock popf or mov mov dec add push dec cmp fs aad les mov gs mov (bad) or pop stos lds das xor push cwtl inc fiaddl pop cmovno test xchg mov pusha mov jbe lahf mov pop lret pop lret cli fldl fsubs js insb icebp ss fnstcw xor movsb xchg ds dec mov insb inc repnz mov jg inc dec push leave fcmovnb and aad cmp fistpl sarb call add mov aas and mov push sbb mov push mull mov sbb pop fsubs push cli jno push pop imul jo js gs mov rcll mov push and cmp rcrl ja mov mov (bad) in cmp pop push jecxz adc jo push add jmp sbb push negl xor in in pop addr16 jne int xchg arpl out test dec test les dec cwtl ja mov and orl (bad) push into xor xchg push addr16 dec fldt aas mov push pop push (bad) into pop mov movsl cs cmp push xchg (bad) pop cwtl inc push or daa xor mov aas xchg ret scas int loopne fdivrl lret out fsub dec sbb pop stos rorb add lods adcl into pop hlt push rcrb inc pushf sub add jecxz icebp xchg xchg lret (bad) sub add mov (bad) fidivr pop addl out addb dec push sub pop (bad) int3 mov dec aad mov jle pop jno sbb cs mov movb mov arpl add dec ret andb mov ja pop int aam jo pop sub enter sbb dec jns lahf repz pop sahf pop push cli sub out fdivr ret or add add idivb adc adc lcall shlb and into push pop fistp outsl lcall ret pop lret jl aaa add mov sub mov mov imul mov inc push xorl push lcall jno mov push mov mov add pop int3 pop mov or rorl sub jnp rolb jb test inc aad push cmp jne rorb fsubl or dec inc mov int jno inc in (bad) mov fbld pusha out dec add or fs jle dec lds dec pusha inc pop sti addr16 jne and jb sub (bad) mov adc mov inc push xchg push dec popa into arpl sti xchg inc test add fisubl cmp ja mov jnp inc mov sub jg out xchg std mov dec (bad) push fmuls cltd sub outsl cltd sbb pop fidivr psubsb jb jbe cmp pop xchg sbb int3 outsl xchg inc xchg dec xchg shrl push iret lea imul stos insl xor xchg push mov insb outsl test scas lret pop movsl stos rorl pushf outsb mov (bad) dec test mov lods std int3 jns adc cwtl sub outsl lea repnz hlt sub repnz imul and or inc dec jecxz push adc ja aas int3 xchg fwait push add stos mov lcall push dec enter xchg jne ja xchg cmp xchg xchg or sub inc (bad) mov mov xchg adc xchg daa jl and xor pop fxch test sarb (bad) adc ja push mov mov cmp sbb inc sbb mov insl xor cmp inc (bad) push and mov or das ja cmp pop push mov mov cmp dec fiaddl stos push ret xlat push and sbb repz arpl (bad) mov addr16 jp sbb mov push dec push push addl xchg xchg ja lahf mov (bad) mov rcll add and pop aas fs int3 loop xchg or (bad) or push xchg sarb adc ljmp push rorb push divl dec into gs cmpsl outsl (bad) mov cmp sbb jnp mov in addr16 jne aad inc int imul xchg jnp xchg dec rorb inc sub cltd push pop fsts pop mov insb cmp rcll popf cltd repz (bad) xlat ljmp push movsb out lret push add mov cli fist popa popf (bad) (bad) adc mov cmp jle mov lcall sbbl jnp dec insb push push adcl out xchg inc clc or inc push pop imul inc outsb or push lret dec mov cmp inc divb testl lock imul int3 xor mov mov jb out mov lock dec arpl xorl imul add mov addr16 adcl mov mov mov dec xor lret aam mov jmp jle rcrl adc cltd mov aam jnp adc popa pop mov mov mov push sub sbb mov out or leave jae dec jns out mov inc pop sub test (bad) (bad) (bad) sub sub push loopne dec mov xor les push and repnz mov (bad) fistpl lcall sub pop dec cs inc in mov ja orb stos xlat and xor idivl test inc movsb lcall mov and sub repnz xor shll sub sub rcl in mov jae das in mov jecxz dec sbb (bad) mov (bad) push data16 gs (bad) mov mov push sbb (bad) jae cmpsb dec test mov push jge jg push xchg mov jae cmp or lret fwait nop xchg xchg enter jle inc mov mov lds iret push add mov sbb inc (bad) jnp dec inc inc test cs mov daa mov push mov std xchg xchg imul or pushf adc mov (bad) lock jns dec int3 mov test add cmpsb rcr test divl lret lods cmp pop add dec lret cwtl sbb sar xor and addl jae push int3 sbb jb mov ljmp mov shll enter or cmc jns and xchg sti andl dec pop lods dec ret into adc push aaa lock and cs outsl jmp and in nop dec sti fistpl mov mov xchg cmp and sbb inc xchg lock pop xchg bound push jle lea xorl jecxz push in pop dec js add xlat mov ret and or fsubr xchg in inc aaa sub cmc sub mov loopne push popf pop mov push mov mov mov or push cmp in dec stos cmpsl fdivs data16 fs out (bad) fs jo call sahf out dec dec lahf sti xchg les sub sub jecxz xor push out sub gs jbe (bad) rorb dec (bad) or mov jmp xchg push push sbb out xchg dec sbb daa dec jl jecxz sub outsl dec jp mov and xlat add push jle mov iret xchg lods push xchg fwait pusha outsl inc pop dec xchg lcall cltd aam aaa mov popa add dec (bad) xchg inc imul xchg out pop ja mov pop ret add in mov jg cld add std inc lret daa dec data16 push push outsb cmp dec addr16 add pusha mov inc cmp mov out (bad) out push push test adc fs (bad) sbb fmull pop dec xchg sbb xchg in ja arpl jl in sub mov xor movsl (bad) pop push loop dec jmp xchg add outsb sbb cmp fdivrl and inc lret sbb push inc dec test inc xchg adc decb mov sahf loopne int3 pop lret sarl std addr16 cs xor das jmp push and inc push or adc int3 cltd inc sub cld insl xor int call sub sub adcl mov push call ds add int3 add lret pop dec mul pcmpgtb orl dec mov clc (bad) into (bad) xor push pop popf mov daa cmp in mov hlt je xor lock cs sahf leave mov mov jb imul imul jge push cli dec mov inc ljmp lret inc mov ret fsts mov jecxz mov dec repnz pop int3 repnz or xchg fdivl sbb imul lss and gs push xor push imul (bad) fcmovne out call ret pop jl mov jnp xor into dec mov cmp mov daa les dec js mov arpl negl pop rorl mov dec xchg pop mov lret out push mov fwait lods leave and out jecxz (bad) adc sub pop inc fimul pop lcall das es inc xchg push int3 cltd push (bad) adc xchg cmpsb lea and addr16 xlat inc xchg xor and int inc pop inc or or lahf in loop xchg incl enter pop lea mov mov cmp out add xor jnp repz fnstenv andl pop imul or pushf insl sub dec lahf push outsb mov sbb ja jbe popa inc jne pop inc pop les push inc mov (bad) repz addr16 jp sbb inc jo popf inc imul (bad) sti aad inc xchg inc xor and rclb push mov cmp icebp inc leave mov mov inc dec inc and cmc repnz or inc and jo mov gs push sub dec das and outsb addr16 (bad) xchg push xchg jle mov push dec jg (bad) and fmul lahf lods mov or jle xchg icebp test fwait mov int3 cli dec xchg sbb mov add and dec mov or popa (bad) cmp push test xor push dec sub and (bad) ja les adc xor cmc adc or testb dec out mov dec rolb jns aad xchg into sbb ret jmp lcall xchg push push cmpsl dec pop fisttpll fs outsl inc insb or or xchg jecxz cltd jl mov xchg xchg pop sub pop cmp xchg cwtl adc shll mov in mov lcall jae jns sub lret dec push aas mov outsl add adc movsl push addr16 inc rclb inc iret xchg out cmp sub pop aad es sahf enter sub dec popa into lret or fsubl aaa inc int3 mov add (bad) inc pop movsl ja add movb and jmp out scas insl int3 fstpl stos test add inc lock fldcw xor repnz adc cli fdivs inc subl push cwtl pop sbb lret lds dec (bad) imul mov mov es and std mov daa mov out inc (bad) stc bound and fdivl adc xchg (bad) push rcrl pushf std mov inc fidivl mov lcall ds pop jge xor pop insb int gs pop inc inc sub pop test or xchg sbb in sti xlat jge in push (bad) dec popa inc int3 and (bad) cmpsl test setp rcll pop jle stos jns out jne pop in xchg sbb add adc sbb push pop jno call es fwait gs adc add (bad) movsl dec mov jge je pop mov insl hlt mov inc icebp loopne sbb aas adc push out sbb xor sarb lcall mov popa mov decb outsl dec push in push int3 jne mov mov mov outsl jnp dec push lcall cltd (bad) fwait lds lret and stos cmpsl push push movsl adc xor or add or imul subl sbb repnz sbb sbb dec or sub inc loop xor jbe fldcw xchg cmp mov xor stc iret and aaa push add in aad lcall je push pusha fs sbb jo mov mov mov inc xchg notb push pop lock inc arpl pushf mov or shrb xchg loope (bad) enter push xchg push add cli roll aad cmc arpl inc xchg jae cmp or ja gs pop push imul fsts mov pop nop inc aaa cwtl test pop dec movsl jge push loop repz ret data16 xchg jno imul aam xchg add leave (bad) mov dec xlat dec imul adc pop cltd lret icebp push clc xchg scas jecxz jno loope pop inc cs inc mov or mov push dec xor or mov xor sub (bad) lods les and or negb loopne pop sub repz dec (bad) aad adc or pop and enter add sbb fisttpl dec repz mov lock je pusha jge jl arpl inc mov inc and push cmp mov pop cs (bad) nop dec stos mov dec mov push mov (bad) mov (bad) jo lods (bad) test cs cmp mov call mov cli aas dec scas lcall cltd jb in aaa inc ja cmp xchg lds mov in lock xchg dec dec scas xchg jbe aas mov sub gs sub mov and outsl inc sub xor inc outsb lcall fsubrs orb adcb mov inc jle out jnp repnz jno cmp push ret jnp mov adcl xor loopne mov dec or push sbb roll push movb stos xor cld sub (bad) nop (bad) adc add jno les je fstl out cmp push stc cmp add pop test fmull int3 popf dec dec pop cmp push sub cmp mov cmp adc or jge movsb dec sub add xchg xchg jae xor mull push jbe sbbb rcl into push mov jp (bad) mov mov arpl into cltd lcall inc pop dec mov sbb pop xor imul push push lods enter inc out push cs xchg cmp add insb dec dec push mov ja cwtl stc orl jecxz jmp cwtl dec aad ds add adc imul push aaa inc shlb dec lret inc push xlat out jne iret gs cltd cmpsl scas cmp (bad) bound sub mov stos and (bad) pop push icebp popf fldcw dec pop dec add (bad) add xchg push cmp (bad) jne jb fistpl lds lcall aaa dec scas adc push pop or vmovsd xchg inc pop (bad) lcall dec std lds dec mov add out push sub lret adc mov jb stc mov push mov mov inc dec dec inc jp inc inc sbb gs sub aam push out lods mov inc mov pop mov inc les sub push int lret fistp pop jle lods pop into xor and es cltd sarb fstpt cmp xchg leave lea xor inc pop mov movsb stos ja push cmp mov adc lea icebp sub orl arpl dec push mov int push push mov fcmovb insb xchg or (bad) je push push mov cmpsl in es arpl popa rorb pop aaa movd repnz sbb adc daa jae imul cmpl dec jo (bad) inc pop pop adc dec push (bad) cwtl dec push cli jmp and push cs out cmp es outsl outsl cmp xchg dec mov lock xchg pop sub ror jno es es fdivrs out ja enter hlt mov push mov cmpsl aam decl pusha mov xchg or jno (bad) aas dec push cmova sti mov inc fdivl cmc nop sbb repz (bad) (bad) gs inc movsb rorl negl cmp mov adc test inc cmp repz xlat pop xchg push cmp dec pop jnp or imul fs xchg dec imul in mov mov mov mov loope outsb inc cmp movsl call hlt xchg cmpsb sub or lret fild xchg rolb int3 rcll lea dec insb cmpsl test test in in add adc mov push add pop (bad) xchg dec add test dec in ds lods ret (bad) arpl push cmpsl mov into test add sarl (bad) xchg leave (bad) jle dec push mov lcall or mov mov xlat inc addr16 clc (bad) pop xchg xchg xor cmp dec hlt int inc mov push ds cmp mov ljmp xlat out pop cmp nop dec bound (bad) in push adc adc sub repnz mov jge ds jb loope icebp rcrb cmp sbb mov jge xor jg xchg rorb xchg lcall inc add mov and lcall fisubl or rcr mov fcomps push add fisubr push in scas push xchg sbb cmp lret imul jnp loopne (bad) add push jb jno insl hlt sbb push mov mov arpl and push sub clc mov pop mov push inc cli dec sti sub or arpl add inc mov std nop pop mov aaa push add jge outsb lds add dec test add scas mov xchg xchg cmp insb pop mov dec adc clc or fsts repnz and ja pusha icebp or subl mov mov push mov cwtl movsb mov sahf or leave dec fwait pop dec or mov inc push lret mulb pop stc loopne pop data16 notb sub fisubr cmpsl mov lret mov fisttpl mov cmp pop push nop push sbb mov adcl in pop clc aaa and in xchg insb ret dec sub in push mov rcl push out xor xchg nopl jbe test add mov dec das fwait mov mov subl and pop ss dec (bad) hlt clc mov jo stc xchg cli xchg ret fwait xchg cltd call aad push push mov aas push fstpl insl arpl dec dec adc jge inc lds cltd pop fs push pop jae pop test sub stos or cmpsl jl sbb hlt arpl scas or xchg icebp test mov in repnz (bad) pop xchg push sub pop push push pop xchg xchg orl cs xchg fisttpl mov lahf inc mov pop jo or lret (bad) jno dec mov stos sbb push call test cmpsb and jnp in lahf sbb scas xor jbe stos mov adc push into mov mov or lods cwtl jge push ljmp mov stos xor addb xchg push dec loop ror stc ret adc cmp mov cltd push push insl xor push push cmc dec dec orl add arpl rcll inc xchg sub dec hlt mov pop mov lods xchg sub add (bad) incb mov cmp clc mov jbe cmp adcl xchg push jno ja push cmp and enter cmp sbb aas test jge rorb add lcall push push cli dec (bad) xchg mov out push adc adc add addl fwait adc lea mov pop aas jmp inc fist sbb (bad) lea xchg pop rcrb sbb pusha clc subl xor dec mov push std call push sub push dec les repz adc dec sti dec dec outsb sbb push iret loop into adc and sub inc or jae push stc jno adc inc das cmp dec inc pusha inc jl pop dec rorl dec or mov jl pop push rorl dec (bad) or cmp mov push fdivs mov mov sti fdivs pop mov lret xchg test sub cmp shrb mov jb arpl jnp pop add and xlat loope or xor pop pop xchg addr16 outsl pop jae push (bad) outsl sub lea dec sub popf inc arpl inc mov pop shlb sti ds add aaa pop lock pop int3 pop arpl sbb add cld mov (bad) jmp dec mov mov pop jl arpl dec or push popa subl mulb popa xchg arpl jg pop add jle mov ret xchg sub sti pop out fs adc adc leave push daa xchg dec int3 rcrl mov std xor inc ret jp dec rcrb (bad) mov push mov js dec mov adc in xchg xor push test jnp push (bad) popa jg lret cmp or stos dec push xchg mov mov xchg fs jl jae adcl mov pop or sub inc mov cmp scas sbb ret aas fcmovu add or fs fs push jb fadds xchg pop sub add lods addr16 (bad) aaa push jbe add dec push xchg pop mov mov xchg adc mov dec inc sub pop mov (bad) (bad) imul leave pop rolb jmp bnd pop (bad) sub jae xchg gs add arpl stos jne ss xor mov or mov (bad) mov (bad) lret mov sub stos mov xchg xor dec jge push adc sub imul mov loop nop adcl (bad) mov push bound mov ss mov adc sti inc in push add daa int3 in add aas imul or mov mov pop push arpl in aam dec mov stc test out dec xor push mov push add mov in push enter mov inc inc mov fldt test repz sti dec enter inc out or pusha dec add dec or mov dec outsb or mov jmp int3 sub imul push dec add jne punpckldq jae add mov pop mov lods dec dec and out add bnd rolb pop out mov cld test bsr lret das std out arpl shll mov push fcmovnbe fdivs enter xchg add imul dec pop sahf inc inc mov adc sub test lret lcall jo dec scas std movl push ret pop jl push adc sahf addr16 scas mov scas push aad jns add xlat movsl inc pop xchg push out xchg jmp add pop inc add jge mov push (bad) in push fmuls jne roll (bad) jmp add cmc (bad) cltd xchg push test sub pop jae fwait xchg enter push pop testl sbb shlb and mov stos xchg jg ds pushf ja adc push cmp xchg dec outsb xchg adc and js push jle dec test cmpsb xchg cmpsb mov pop mov fs xchg and rorl je cmpsl rorl arpl inc test xchg fwait repnz (bad) das dec insb xchg mov lcall mov cli (bad) lea sbb pop hlt inc xchg mov cmp jle mov pop add inc add mov cltd sub inc lret imul pusha adc mov jbe scas loope mov push mov adc int int3 test mov fadds inc add sub pop fs rcll inc mov mov sahf mov popa test mov inc mov rep jbe popa inc xchg insl rorb or pop movsl dec add dec cmp inc dec jle mov lret lret push xchg rcl sub dec jle rcrl stos into sub outsb test dec inc push or sar push outsl adc mov mov xchg jle inc mov loope add sub lea in arpl sti cmc mov xor scas outsb cmp add bound enter (bad) xlat ficompl repnz insb aam inc jle mov bound imul cltd cmpsl jp insb mov dec cmpsl push jnp inc mov inc jle or mov (bad) int jo sub jnp sbb subl aas (bad) (bad) (bad) in scas xchg inc out xchg test dec jae or sbb gs jle xchg lds lds outsb je int3 add and dec fnsave xchg inc sarb xor daa scas lods pop fwait xchg bound imul inc bound mov roll subl mov in cmpsl push loope xchg xchg idiv popl jae dec xchg inc push push and data16 pusha jae dec inc inc mov (bad) push pop (bad) aaa jo clc mov sub add cmp lcall jo out sbb sub js cld clc pop pop xchg xchg xchg (bad) or imul inc insb mov jle push (bad) loope outsl jae scas cmpsl fsts sbb insb dec adc mov or addl adc jle push test inc rcrl mov mov ds fwait push dec je sub bound aad ret sbb jae aas mov test xchg push movsl ds outsb add jle add jne ja adc or fs cltd loopne xchg addl loopne loop (bad) mov lcall (bad) cli sub and xor add test mov andl inc clc inc mov xchg mov arpl addr16 gs repnz cmp jae jl push repz fdivs push inc push jmp push (bad) sarb and add sbb test subb aas pop adc dec mov dec or je lret or sbb notb testl arpl sub add cltd lahf je ja,pn cmpsl pop or jmp int push jo mov loop sbb in push xchg inc sub cwtl jecxz mov shl stos data16 outsb jno dec (bad) test int jns add adc outsl ror subl dec inc lret inc jge dec add xchg push ret pop shr es push test and (bad) dec imul dec mov pop fadd xchg (bad) jmp dec cs pop loope pop dec popa lds xchg jnp ret dec and xlat xchg fidiv jl xchg into mov cmp loop (bad) mov lret mov into mov or xchg data16 outsl push es push rcll fs xchg or cltd jb adc inc lea fwait mov mov xchg imul cmc mov push imul mov mov insb shl aad addr16 adc addr16 jns jae int popa push mov stos insb jecxz jl leave mov (bad) xchg push inc cltd outsb adc in jns mov push scas inc scas cmpsl mov sub (bad) pop nop ja mov xchg dec cwtl fidivr addr16 push cmpsl stos imul enter inc mov mov test mov stos mov xor dec jnp pop sarl jne sti mov cmp lcall jns scas cmp pop sbb xchg push inc popf jnp inc iret test outsl or jnp dec mov gs lcall cltd mov fisubr lret lahf sub dec cltd mov je mov sarl sub jp jl dec mov gs cmpsb cmp aam dec dec mov fsts fisttpl cmpsl outsb fildll mov jmp imul pop cltd (bad) sub or inc mov lahf xorps not push xchg or xchg pop movsl leave into add sbb test push mov push imul shr dec scas movb insb fs ret jle sbb mov sarl pop fsts push mov in and jb (bad) dec in ja adc push mov les pushf fmuls fsubl fdivrs dec scas inc push inc push js test fadds (bad) xchg xchg sbb lret xchg jl mov pop xchg ja addr16 mov pushf mov mov cmp loop lret into aas xor (bad) addr16 daa outsb sub push addl xor xchg lods xchg int xor jecxz dec data16 push into cmp dec inc or mov das jne dec (bad) pop inc mov cmp ja dec jae jnp cmp sub dec arpl push clc push sbb call xchg or mov arpl out gs inc push push cmpsl outsl dec mov jecxz mov lods dec xchg ja addr16 xchg loope lcall mov xchg in test xor bound imull mov pop pusha inc negb mov push sub pop xor xor jae xchg loop inc mov lock jne int3 mov popf (bad) lds cmp jl pop mov outsb push add adc mov dec inc (bad) outsl outsb xchg cmp imul inc mov roll jae push outsb dec or inc fnstcw movntps cwtl mov xchg sahf in pushf lods cmpsb inc (bad) push sahf cmp sbb inc mov mov lods (bad) repnz jne push push inc test and lahf aam dec dec add cmpsb mov adc mov and inc push inc ds lret shr push xor lds sub sub (bad) stc xchg adcb mov call fdivrs dec add cmp (bad) mov rol mov sub out test test jmp xor push mov arpl cmc mov pop arpl and and lods sahf mov imul mov cld cmc movsl outsl push mov aaa sbb pop or or in aam fwait gs fisttpll ret outsl mov mov imul pop arpl mov outsb js mov push std dec jbe jne push cli mov pop xchg adc frstor or lret mov ficoml dec repz xchg lea lods push jne push xchg jl mov mov jecxz mov push outsb or inc add dec or stos inc ffree icebp aas xchg lcall sahf scas mov cmc fwait mov xchg pusha inc xchg dec xchg lods dec fidivrl pop hlt mov ja fisub push outsl inc sbb push in fisttp (bad) pop and int3 pop shll mov inc (bad) (bad) xchg bound inc outsl xchg mov mov int mov mov dec loopne cmp stos fdiv jmp test push (bad) into data16 sbb inc dec jmp (bad) sub jl dec mov stos xor mov sub sar push inc sub jg aam or cmc add lods loope or xor inc jl dec mov cld push adc mov insl rolb stos fcomp pop mov (bad) pop inc sbb cwtl mov add addr16 rcrb pop inc pop dec lret stos dec cmp and push cmpsl push lahf or out gs scas inc rorl or inc in and iret dec test ret ret cs mov mov lahf inc add inc sbb cmp jmp adc dec rcrb (bad) test or jp mov inc cmp sub pop dec jns outsl mov shrb aam jg xor jb ficoml xor sbb xor adc js lret cld imul jnp jecxz icebp or xor scas mov xchg adc outsl xchg push cli dec adc imul dec or adc je ret movl adc stc lret test jae inc aas lds inc shrb and int jmp arpl test xchg xlat inc aad dec mov add sbb xchg push loope ja int3 sub pop xchg test in aaa test push push inc out (bad) dec mov xchg imul fs inc push in pop lods pop aad adc jne jne je mov push lret mov jg cld xchg push xorl and cli push sbb (bad) xchg outsl push mov lods jne arpl mov push outsb mov lcall rcrb inc insl notb popf xor repz daa push dec call xor sub scas iret sub xor add outsl in lcall inc push dec (bad) outsl cs and arpl scas (bad) aaa push leave mov inc out mov lods xorl mov in daa sub das loop in jbe sub dec push int3 cltd arpl pop inc xchg lods aas sub sbb or imul dec fwait or fsubs sub in jbe jo pusha ror xchg xchg sub nop roll (bad) (bad) adc int jb xchg sub in call sub inc insb push pop sbb adc int movsl mov pop sub mov dec fsubl xchg pop in xchg and xchg dec fwait insb xchg pushf push jns pop xor mov xchg fdivs and stos into xchg pop (bad) in notl data16 xchg xchg mov pop fiaddl or adc orl pop xor lret outsl jp inc add and adc xchg push int3 fucom push enter ja mov push pop insl fbstp dec sarl mov test cmp test cs push jo or lret add dec xchg xor xor xor leave aaa push or test movsl pop xchg mov stc mov fdivrl add jbe int mov sub mov lods ja rclb xor cltd pop jle movsl jae mov xchg repnz cmpsb repnz mov mov inc aam lret dec or and movsb icebp mov pop and popf aaa mov int3 xchg mov or ja in push jle mov add fimull xor out test inc and push push pop dec push pop into je push pop cmp decl add lcall jle stc pop push xchg dec xchg push cmp int3 jb sub lock insb or scas cs mov xlat lret or or pop addr16 pop and cmpsl inc or sti repnz es pop sub inc fsubr call mov xchg or push push xchg adcl jl pop xor or jae jge mov push push and cmpsb inc das icebp mov dec sbb je mov and jo in xchg pop aad or push mov push test outsb sbb dec mov fwait gs dec pop inc jmp inc inc jmp ret push (bad) and test mov and mov stos inc push mov dec addr16 inc and push movsl aaa xchg push shr pop lret dec stos pop imul ret inc xor (bad) push mov xor adc inc push cs mov test dec movsl adc loop aam loope dec push (bad) cmp shl mov jbe imul lret insl and xchg and loop add imul xor popa fcomip nop jbe imul dec or mov cmp outsb je mov int test mov xchg popa jmp jmp mov out push xor sbb aad push jge popf outsl test pop push xchg arpl cmc test push pop xchg fsubs inc pop rorb lret dec dec inc test int3 add dec xchg add inc movsl xor add cli mov cltd add stc test addr16 enter dec nop add add outsl mov imul divl push ds lods inc int3 subl mov (bad) cltd in inc (bad) pop push es int3 pop or push mov mov test shll cs ljmp out mov out ds mov pop aas xor push pop jle jl ja push outsb cld incb sub inc or imul mov (bad) inc (bad) mov inc push push lret dec bound addl lret jmp ret dec aas (bad) das xchg add outsl repnz cld lea into rcrb ret mov js test dec push jle and adc addr16 xchg (bad) cwtl aad xor stos xor pop push pop cmp mov lds or and dec xor xor (bad) xchg xchg adc pop or xor dec or xchg repz lret push sub out (bad) jo arpl push push mov pop enter fnstsw dec adc test xchg js mov (bad) push pushf jb outsb push int3 out stos push fwait int3 push push jecxz push enter jnp rcrb mov push scas dec dec clc add dec rolb mov push mov xchg push rcrl mov or sub mov cmpsb lret and xor fildl leave test xchg mov mov cmpsb xorb inc adc mov adc aaa sbb gs int lret bound cmp lret imul push inc lea jecxz cs out cmpsb xchg inc mulb sbb sub xchg imul addr16 xchg xchg dec add pop mov pop dec inc inc cmp cltd xchg pop enter (bad) sub xor mov ja int3 mov arpl inc push int3 scas test (bad) movsl iret test test inc cs lret imul in loop xchg orl imul cs ret sbb (bad) out lcall std sahf div loopne pusha mov loop cltd push subl mov xor (bad) jg outsb sub (bad) scas inc xchg or jl inc (bad) mov sbb cmp add pop stc pop cmp loope,pt mov mov movsl mov xchg pop mov les sub arpl and fldt (bad) sub test push fs jecxz xchg xchg loope (bad) jb ret sbb mov adcl sbb add mov lods imul cmp dec dec rorb aam jl or (bad) add pop loopne and pop test jecxz pusha or ds adcl push into xchg int3 or mov and jnp jae jo sub pop out test mov imul sti aas nop (bad) xor jb clc call add jl xchg imul out jg push ss into sub ds push lret or insl arpl popf mov jae in (bad) xchg mov sbb add and orl dec dec cmp negb xchg inc sub jae jle test pop fs mov sub popf rcrl addr16 js std inc pop add dec inc push dec jbe add cmp enter lret lret insl out out arpl xchg gs imul lea xchg adc mov mov mov dec popf mov dec inc jge daa iret dec popf nop mov in mov sub sub push imul dec rcrl lods dec pushl push add lea jne dec pop test cli jl adc mov dec push outsb mov push aam dec pop mov insl insb mov movsl and cmpsl je inc cli sti out arpl mov (bad) leave pusha pop pop fdivr outsl rcrl push jle into or xchg xor dec inc mov sub dec mov mov (bad) push outsb adcl sub shr inc cmc xlat add pop addr16 xorb jp fidiv bound xchg xchg jae test repnz loope mov int xor dec or dec das jae popf push dec adc cmpsb arpl inc dec xchg aam gs je xor dec (bad) addr16 xchg dec push aad in sub cmc into mov lret pop add push pop xchg push out icebp lds (bad) push (bad) xor iret aad int xchg je jnp js std shlb out pop repz mov data16 push dec add pop movsl or adc mov sbb push cs inc scas outsl mov push xor push and dec sahf out imul iret jmp int3 mov data16 jb sti push mov inc jl xchg iret imul mov es dec ret notl imull mov xor shrl mov sub mov mov call push test inc jne das rorb clc mov cmp bound lea inc adc pop pop int3 imul pop pop jbe xchg sub xorl add pop inc mov jns mov push mov jno loop (bad) iret pop icebp iret lock shr dec int3 jg (bad) mov into test mov mov xor enter sub jnp push mov cmp in into pop sbb mov inc push imul inc sbb fnsave pushl push loope sub ret sahf into jns or out out in sub dec pop arpl jg jl add outsb ret mov roll xor stc jb dec sub xor aas mov call add push push and lock push adc and or mov test dec push into rolb sub add mov jne xor mov push dec jnp cmp mov into xchg rcl or es aam xchg adc push mov aas clc arpl aam pop lret pop jo mov or mov xchg (bad) mov leave cmp lret xchg inc inc cmp or mov xchg repz lahf in and cmp dec jl and shrb int insl pop push lret xchg dec les push add dec or jae mov in out movsl imul pop or and (bad) or cs cmp xchg jns fxch jp shr (bad) call mov and sub divb add test insb insb outsl daa xor orl mov sub mov push pop adc mov or cmp je outsl lea jle aam int3 mov mov push add mov mov inc or (bad) enter add pop inc test pop fidivl fwait mov out cmpsb out aad sti or mov icebp push popf jl push xor xchg leave jo arpl daa push lea or rorb bound popa int3 xchg lcall xchg into inc ret enter cmp (bad) jg inc mov or repz ds dec lahf rol insb xor pop push into xchg cmp jns inc push inc xchg or (bad) cmc push push stos mov dec out ja hlt push outsl xchg repz xchg xchg stos mov jge push fmull sub int cwtl xchg repnz lods xchg and sahf push jl and push dec jae pop arpl nop mov out push out xchg dec (bad) in xchg jne hlt pop jae imul mov mov add addr16 mov jns xchg xchg aad arpl popf jl gs in jge push aas mov pushf xlat jne jbe push repz push jne push fwait js enter clc jne loopne clc inc dec dec mov sbb inc mov xchg out dec jle mov outsl dec xlat and sbb push adc dec cs std inc sub add xor popf fnstsw or addr16 xchg sub inc mov cmpb lods movsb adc inc int3 sar xor adc add adc cmpsb dec std jae rolb xor rol mov (bad) or pop mov int3 push push dec push xor push jbe lret ja dec pusha or pop pusha push outsb pop repz addr16 imul outsl arpl jg test jl notl aad sub mull push popa in mov add mov cmp (bad) pop mov in mov xor cmpsb add mov jmp fisttpl mov popf loop sub repz negl xchg push or ljmp lret fwait jbe andl cli push outsl dec pop inc repnz mov dec xchg lret imul mov mov outsb repnz stos test push inc imul mov not lret insl lret or lahf jbe or sarl mov mov mov lret (bad) xor pushf adc xchg inc ficomp test lock insb pushf movq sbb sarl imul dec jl repz cmp ja aam jnp jg xchg or pop pop in test jns fucom mov (bad) movsb sar test mov pop les out rcr cmp outsb mov ja inc cmp sti sub push sbb out xchg pop lret jecxz out mov dec and andl test inc (bad) xchg mov xchg cmp ret into pop xor push ja aad (bad) inc mov inc lret push aaa rorb imul imul shl cmc cwtl push fwait jge push inc inc ds loop or mov je push div push jle dec je test imul jge dec mov and push jns inc and or jae push (bad) xor mov int3 fbld xor scas jns cmp xchg addr16 push movsb into nop aas jle dec lahf inc jl cmpb jo (bad) mov dec cmp xchg aas sub dec sub jmp nop xchg mov mov cmp pop add xor jecxz mov push rclb shlb or fs jbe mov int3 repz aad inc popl dec cmp cmp rolb push (bad) mov push push xchg jae or mov adc sub sub or mov xor ret jg cli mov (bad) jb mov jecxz je and mov pop jnp jmp sub adc int3 popa xor pop dec or aad xchg and lret inc xchg leave pop into mov xor loopne dec lret fbstp jecxz sub (bad) lret sbb push mov insl rol xchg outsl inc dec dec jo into adc mov lret dec inc mov mov dec test lds leave jne xchg (bad) xor gs fdivrs inc or icebp les lahf sub repz inc aaa rcl cmovle cld test shrb test test or ret xchg rorl dec push repz push mov xchg or pusha add repnz int push mov adc dec push stc or or add iret popa xchg push push pop outsl jge repnz xchg sbb cmc mov adc xchg scas xlat mov call jb xor jecxz pop dec rcr push xor mov dec repz into sbb mov fnsave cld add add dec scas fisttpl and (bad) movsb pop movb xchg adc push sbb in or out or loope dec test rol cmpsl and and cmpsl fcmovnb fnstcw jno,pn pop pop jle or (bad) push jmp pop lea (bad) popa dec fs sti pop dec push call (bad) sub add or xchg dec mov cmp cwtl inc push push enter jne into (bad) mov ljmp xchg sbb mov aad push aam mov rolb sub (bad) or sbb out push gs pop lods adc inc sbb mov push xor test shlb push out mov repz or incb popl repz insb mov (bad) cmp mov dec shrl jmp dec inc arpl push inc stos xor ja push jne jno rorl mov (bad) jge xor loop fdivp jmp (bad) iret cs in (bad) mov test repnz stos lock cmpsl dec sub inc lcall mov push fild outsb jnp cli cmpsb adc cli or inc pop xor rclb pop iret add sti push cs add decb inc insb sti stc fidivr fmull sub fdivrp pop gs mov mov imul js lret push adc popf dec xor pop lds (bad) dec cltd inc adc fld (bad) cmp rcrl in mov movsb movb dec sub inc incb scas fwait inc jl push sbb test sarb mov cmp or cmp xchg xchg out push enter (bad) pop inc outsb dec inc sub ds add int3 movsl push ljmp and inc lret pop pop into fisttp arpl cwtl test icebp data16 (bad) inc mov mov and jae dec xor push mov inc insb scas loopne adc xlat jae pop addr16 aam rcll ret iret ret push stos cltd shll push ret dec (bad) mov pop insb cmpsb inc dec pop cwtl pop fs push pushf in arpl pop push mov rorl add push movsl fnstenv mov scas jae mov (bad) rep mov inc lds or inc pop mov outsb clc pusha shrl lahf pmovmskb dec dec shll inc lods pop das mov push pop push dec ret in arpl leave cwtl fmuls sbb jne add dec addr16 dec lret mov popf xchg xchg cltd push lret rolb mov jno insb dec (bad) mov jno and insb xchg aas roll movsb jbe jnp pop rcr insb lret (bad) sti fcmovu jns jle mov mov ss cld xlat push fdivrs push iret scas out or pop pop mov shll sub cmp push pop test jmp outsb inc sub ljmp cmpsl test adc xchg pusha xor rolb clc clc cmp adc sbb sahf stc jb xor sub lcall jo out xchg popf in lret jbe dec out imul xchg pop mov dec loop xchg ret movsb pop inc mov jo push xor ss jb mov jb movl add or push stc xor jle mov dec jge or mov pop in jne push inc add adc rcrb inc xchg fldcw push cmc cmpsl jecxz insb cmp inc gs inc adc out (bad) jge leave test fs push xchg cs icebp jge sub lret flds leave jbe jp and or es mov jae cmpsb push in repz in xlat push out add out rcrb adc mov jg mov pop orl arpl push mov (bad) in int3 mov xchg test mov adcl adc nop outsb mov stos xchg arpl iret and outsb stos stos push in jbe sbb xor fwait sbbb dec shrl shll xchg inc call xlat push enter scas push pop push imul jmp and inc jbe cltd lcall jne loope mov outsl pushf pop (bad) test xchg mov lahf adc push xchg add inc pop into add adc fnsave movsl push push fs cmpl adc insb cmp mov into push cmc or jo jge mov add lret popa xlat cld dec xor mov outsb shrl pop xchg push sbb add rcll orl add shr fs mov jmp js (bad) adc das lret or mov (bad) (bad) shrb dec ja jmp push std repz sbb mov push out dec cmp nop lret into cmc pop mov xor mov inc push iret lds int dec cs clc das push aad add cmp cmc push sbb fldenv sbbl mov (bad) sbb xchg cs into jg sub arpl mov sub sbb mov sub jl jne cwtl pop lea sub into mov outsl jle add push aas jge push inc push mov jae and divl cmp pushw sbb mov loope or dec or (bad) fcomps fnstenv lock mov enter pop jns jecxz gs lret xchg jnp icebp fistp xlat ljmp cli sbb ror bound mov lods aas inc inc jge insl call xchg mov lret inc shlb ss insl fcompl jo movsb sbbl lods jae mov mov add inc mov push fxch mov mov cmpsl pop add test (bad) cmp adc mov divb into daa dec mov ret (bad) imul fisttp rorb ret cld lcall ret push dec pop popa push add adc adc cmp or pop int scas mov pop push inc inc xor mov iret adc dec xor ret push and mov orl push loopne mov pop out imul dec movb pop sub fidivl loop fsts aam addl or push jne pop jp inc mov mov bt add adcl test (bad) mov fisubl push push sbb inc icebp es divb dec push rorb shrl dec mov std inc inc jge inc test popf lcall jl fildl inc std push lcall jb loope dec xor pop int3 pop pop lock enter ds cmp push add xchg pop sub movsl mov inc ret mov cltd out repz sbb out test ret pop test (bad) pop aad pop add pop sbb arpl lcall jle xor or xchg (bad) stc or xchg or rol xor sub pop lock dec dec (bad) jb or lods mov jmp cli and lods and lock loop push test inc bound sarb inc je sub and insl pop dec xchg into sbb jecxz pop loopne xchg fs jmp int inc pmulhw popf dec sub push dec cmc in jnp mull je pop xchg xchg sahf xchg aam sarb add hlt addl dec lcall sahf clc (bad) shr lcall inc or jno sbb cmpl out fs mov mov push hlt lret jecxz or cwtl push dec (bad) mov (bad) popf out mov test loope add nop shrl (bad) cmp stos fucom jns pusha add sub cmp mov push add jle das shl rcl sub cmc mov arpl or in ss out jg xor add inc push jmp aam cltd mov inc cmp test pop (bad) xchg enter mov xlat sbb dec loop sbb cmp lock xor xchg dec xchg push lods push icebp or cltd loop and aad stc (bad) in adc test xchg int3 pop or and jbe stc inc mov loopne aam iret nop (bad) adc pop mov jae xor cltd push add push sub movsl add cld rcrb lea jmp lret dec jmp pop inc call je mov xchg xchg mov push mov jae sub push mov sbb xchg or push xlat xor jbe push gs push cmc out fldt mov cmpsb daa inc xchg or (bad) pop enter dec inc mov dec mov arpl xchg test in xchg mov push sbb inc aad and out adc jmp out scas inc jmp addb pop push xor xor push jge call jg adcb sbb or imul jmp (bad) insb stos inc inc ret push push rorl push les xchg cld int mov or daa xor fs push ljmp test jns xchg imul push cltd fldenv (bad) das imul xchg xchg dec outsl lcall and pop jb popf xchg (bad) and xchg repnz lea mov pusha xchg fsubs dec outsb mov pop out dec jo dec mov pop push fwait dec jne mov xchg aaa testb fimull into sbb (bad) jns test lcall fiaddl mull push imul fwait stc xchg push xchg add arpl imul push or shrl pop mov xchg call or test ljmp outsl dec insl xlat idivb aad (bad) int3 roll and adc inc xchg int3 xor add pusha or cmp xchg cmp or outsl push imul (bad) inc lods sub mov push and loopne (bad) mul mov out or xor xor fisttpl mov inc inc sarb lcall adc cs imulb mov into ljmp add inc mov inc popf dec sub xchg jbe lret inc push or mov and loope loop sbb xor loope push (bad) lods mov mov dec dec xchg jge pop add pop dec int add xor xchg stos xchg int add sub jnp mov pop inc ret cmp mov rorl add push mov push add sub lea enter mov sbb mov mov cmp outsb adc cmp mov cs orb mov test outsb sbb test rorb ret pop jp call aaa mov ret int cltd inc jbe repz jge jb inc inc notl enter fcompl cs or (bad) jl inc pop (bad) imul dec mov ret cmp fildll dec inc inc add inc cs mov lods push and jecxz lret dec test push shrb adc fcompl jae cmc nop xchg xor popf pop fistpl test (bad) arpl test vhaddpd sbb out shll int inc fbstp jle dec lret push jno mov adcl fs xlat dec inc xorl cmp aas inc or pop jle imul inc mov mov xlat jae adcl cltd jl jo arpl sub dec xor nop inc in cmp popa lods insl pop lahf jae test inc push dec out and push cmp ret push movl (bad) cmpsb mov inc mov mov data16 sbb aam push jle mov pop das xchg dec pop mov push nop fistpll mov popa pop xchg fs pop cmpsl inc notb pop lahf inc test lret add sub sbb push inc xor xchg sub cmp cwtl js (bad) gs nop arpl ficoml dec outsl aad in xchg ret push sub push ja icebp out mov (bad) aaa and jae xchg sub je jbe jbe jae add loopne jge test xchg push mov insb cmp xchg xchg jle inc popf into xor cmp rorb jae and je push jecxz int inc (bad) fstl adcl push jae test pop aam lret int push dec and pop cmp push int3 je lods inc cmpl cmp jmp xchg jmp xor dec jge push imul mov dec dec imul dec xchg add push je movl push insb dec and popf push and (bad) icebp enter and iret jne and (bad) fcompl dec inc stos pop fwait and mov mov pop sbb out xchg cmpsb in rolb shrb jno daa rolb inc cmpl push jb pop and jb ret dec bound xchg cs xchg faddl or pop mov ret cwtl cltd dec push pop (bad) pop push (bad) dec inc outsl push (bad) adc cmp adc cltd nop jb or (bad) mov (bad) fild pop or push push dec push dec scas mov inc pop xchg pop mov xor inc pop arpl inc jg add outsb idivl pop lea loop iret movb xchg lahf movsl lea mov sbb (bad) in fdiv dec add cltd push inc or (bad) cmp dec mov cmpsl in dec into adc fwait xor cmp jae xlat push or mov or data16 inc cmpsl mov inc mov dec cmp add jnp xor lods mov (bad) in aad xchg lcall add and jne jbe sub int3 push cmp pop push lret dec cltd xchg mov outsl stos shrb insb add xchg stc mov mov and pop aas lret daa or js in add outsl arpl sub mov mov bound mov jp push adc jle int mov push sub mov out arpl inc adc aam ja out push ds aam outsl arpl add pop ret jb subb lret inc dec push push repnz mov pushf or push stc xor adc jo arpl xchg jg xchg ljmp cltd mov adc addb (bad) adc insb (bad) mov push pop push jle and ds iret jno mov rolb int3 jl or jo push sub or or sub push mul test jmp xchg xor cltd inc addb inc into xchg cmp sbb xor nop addl aad xor enter (bad) jb sbb ffreep cmp push jae add xchg xchg sti or es mov (bad) jl ja sbb cltd xchg das (bad) je pop ret xchg push jnp xor enter dec adc pop addr16 push inc xor cmp mov cmp push xor icebp push pop cmp adc outsl xchg jg push incl jae popa rol cltd (bad) stc das push jle dec sbb out mov shlb ljmp push mov sbb xchg jae into lcall and push fdivl pop pop push add decl pop out sbb mov mov gs jno mov shr data16 xor lret fs int3 push mov xlat stc popf imul loopne ja mov aam movsl (bad) mov add dec in mov push arpl cltd inc pop ja cmp and cwtl mov es enter test jp push cmp pop cmpsl mov pop jb divb xchg xor inc dec sub std adc lods xchg outsl gs dec test into clc jno adc cltd xchg shrl mov (bad) dec mov popf aas loop popa push inc cmp call add inc xchg insb (bad) cmp rcll popf fsts int jmp xlat fsincos pop dec (bad) mov jge cwtl dec (bad) out push jo pop xchg xchg push xchg test sahf mov add cmpsl ret addl mov jo pop xchg mov mov mov int fs pushf mov cmp int cmp ret push dec mov stc xchg inc mov sbb in test and xor sub cmpb push outsb call fwait dec mov (bad) pop and nop test cmpl cmp mov jg imul add dec lret xchg cmp fs rol enter pop sub daa push or pop lea adc lret jle ficom das sbb loope lods inc arpl loopne cmpsl push dec mov mov into das dec iret xor mov pop clc add pusha pop sub cwtl hlt cld dec sahf je xchg jmp shll dec xchg fisubrl in lcall cmp fnsave dec jg idivb mov or movsb into cltd xor inc jl dec sarl ret xchg lahf out jg repz jo cwtl sub into push add jle insb mov dec out xchg (bad) hlt lret push push in mov dec leave dec mov push mov psllq add call rorl ror push ret adc sti aas call movsb fidivl fidivrl pop jns adc std mov rcll out push mov mov mov pop enter jle int mov and xchg mov adc inc cwtl jbe int movsl push inc inc gs mov loop jmp xlat ficoml cmc push inc cs std sub mov mov into cmp pop xchg xchg inc sbb or inc cmp mov cltd jno mov pushf or xchg lcall inc cmpsl imul xchg lcall pushf inc pop movsl push int3 and xor xor push cltd stos adc mov add xchg jns xlat testb and arpl idivb aaa dec ja mov push jno adc fnstsw push xchg jbe push sub insb inc push mov pop aas inc jnp in push lods out cmc inc scas sarl mov clc lahf out test xchg or test in push jecxz jle sti test push cs insl mov fwait push int3 mov fimull movsl inc push int3 mov aaa in es sub fbstp jecxz cwtl push jnp xor lret arpl push cmc add sbb add mov pusha lea mov cmpl sub dec sti call fisubl lcall aaa out inc push and dec xchg out sbb gs pusha insl sahf int3 push cmp imul dec cmp mov gs dec inc call xorl xchg sub dec xor jbe mov mov sti icebp mov push imul mov xor mov push cmp cltd ja adc xchg dec negb xchg movsb pop dec inc inc dec xchg push sti (bad) or adc adc shlb mov push aas or and stos aam orl sbb fdiv rorb xchg popa rorl (bad) cmc nop mov in xchg jno push xchg pop adc inc or xchg adc mov outsb dec pop mov jle mov pop jnp push (bad) xor inc pushf push jle xor ss sub push cli sub lods sbb inc pushf rol daa int3 mov jl dec mov mov add jo pop idivb inc or nop into mov lcall sub rcl sti push mov daa sbb ret test add nop daa arpl and pop cs imul imul mov (bad) jae push out aad faddl dec sub test call mov repz cmpsb sub fs scas sbb aad stos mov call mull sub mov pop (bad) xchg dec addr16 jle dec imul call int xchg jnp pop inc jo addl mov push inc cs roll pop clc and or dec out rclb outsb cmp or mov into outsb push lret ja jnp aas mov aaa cmp mov cs sub and inc shll pop mov int mov jae inc mov test (bad) cmc gs push pop jl dec cs xlat dec inc push sahf incl test lea shrl mov mov jnp mov and mov cmova aad pop mov xor mov xchg sti jb ret push ljmp mov push cmpsl iret (bad) int3 aas sub dec std push in push int3 fnstenv mov in sub dec (bad) dec cld sbb sarb out das (bad) mov jle pop pop arpl cs (bad) push jne dec push (bad) push pop pop lcall pop shll xchg xchg daa mov push addr16 test dec insl sbb add mov mov jle mov mov (bad) dec in or subl xchg cmc mov std dec les pop enter pop aas inc cltd std sbb mov inc or xchg push jnp and in jne scas pushf pop test cs int jg jb dec rcrb inc and lcall pop lahf (bad) pop outsl sub lret (bad) enter pop ret push pop push leave test in xchg fwait mov cmp pushl imul es and mov sub lods insl into push sbbl cmpsb jg pop sub jne sahf inc cmp xor cltd xchg inc pusha addr16 jae insl jecxz pop outsb push stos jg mov push or addr16 aad lret loop push dec lods cmpsl jo mov bound pop je pop addr16 xchg sub dec and ret mov int3 ret data16 or call xor and (bad) jno (bad) in popf sti loope or dec clc pop push xlat movsl ja pushf sarb jno adc xchg mov add dec addr16 imul pop addr16 inc push (bad) push movsl sub sbb dec scas adc xchg pop inc add inc fistpl push pushl xor ljmp inc dec stos and pop sub inc into lcall js cmp push sub test dec xchg lcall ljmp in pushl mov push enter (bad) (bad) popf push lret dec icebp or popa sub mov cmp xchg jb pop mov bound push orl sahf inc nop push cmp test pop pushf mov pop rcrl mov (bad) pusha jns cmp int3 pop imul push loop inc inc arpl into dec inc adc xor jbe add in xchg lret les outsl mov add dec dec pushf mov pop mov xorl lahf fs xchg cltd push mov dec imul push cmova and xlat xor popa jo xor mov mov sbb jnp and fs lods push pushf mov arpl add popf cmpsb imul cmpsl dec sti xchg stos bound insb imul sub or pushf push lock mov mov bound dec movsb mov mov push fdivrs pop out mov mov adc ds sbb addr16 dec mov jecxz (bad) mov mov popf jo push inc dec out inc jb dec mov in aas sub ficompl jne push jo pop jne xchg add inc xchg rolb sti sub mov cmp xchg rolb fs int3 addr16 test push out rorb cs loopne inc stc cltd lcall xlat lcall (bad) dec insl or inc inc push dec lods pop fwait cli test mov and out or aas aad sbb jno sub popa and jmp xchg lods in cwtl or cli xchg mov xor add jnp outsl lret jnp lock inc push or popa test (bad) jbe in shlb cltd dec mov cmc decl push add mov js or or adc jnp pop ret rol dec aaa mov or or sub or mov inc jae xor enter pusha ja jmp jmp push cs inc sar push adc (bad) std xchg ret sub sbb (bad) jmp ja pop cwtl push scas sub loopne dec sbb (bad) outsb (bad) insb xor dec sub cmp inc sbb cmp cmp pushf ljmp mov (bad) xchg lcall int ret dec adc or mov out inc inc les test cmpsl jmp and lahf sbb push cmp adc mov popa (bad) and mov insb ss xchg movsl inc in or int3 pusha int3 cld inc es in xor (bad) jae xchg jb push xchg jne ret dec out data16 out test mov inc repnz or or mov inc jge jno adc pop xchg shll jns outsl (bad) nop addb test xchg int3 aas xchg (bad) aaa gs das mov mov sub cmp push sub aam mov aaa pop mov cmp rolb daa adc push and dec xchg gs aad in movsb (bad) in dec mov push mov sahf push cwtl push pop outsl (bad) je je mov xchg push inc dec daa aas xor test lods mov in je dec adc jbe pop inc jns outsl dec pop mov scas and xor adc sahf mov addr16 out (bad) xor shr imul jnp xor dec mov js lahf test push lret pop orb addr16 repz xchg scas pop into jmp addr16 mov addr16 mov addr16 mov addr16 fcoml dec aaa push or sbb sti xchg stc iret aaa cwtl push lret daa jl sahf lcall cmp cmp adc jge fsubrl cmp lock ret into xor sar cmp out pusha add dec or negl into push mov xchg cs sub xor add mov mov adc mov cmp orl cmp mov and insl jne sub push sub mov xor and or cmp push aad out xchg cs into mov imul mov fdivrs decl sub jno lcall insb sub sarb scas jb into dec gs mov jg sahf and push cmpl dec popf mov pop xor lret push dec in dec dec dec leave sub push test xchg jle jmp jbe,pn addr16 lock mov scas jne push inc movb sub jmp rclb jecxz js dec jbe pop or or fisttpl add outsl lea fldt (bad) lods enter cmp mov imul xor and push orl adc leave lret addl push mov sbb popf cwtl daa add push pop repnz jbe int pop popa cmp inc in inc jne sub int xchg addr16 flds add dec inc and dec push inc cs mov cltd push jne orl sahf push outsl inc sub dec jbe add cmp cmp popa xor jae mov and aaa andl lea adc pop dec cs pop xchg aas or rolb inc stos dec xchg aas jb cmpsl aaa jge mov loop sub jae in push into sub out imul inc cmp inc dec int dec xor dec out inc push out inc addr16 aad or pop je dec inc int pop rorl arpl dec mov into add xor mov adc push stc dec rcrb add inc xchg inc dec inc mov in add lea sbb inc xor addr16 adc popf and xchg mov inc lahf imul dec cltd xchg fiaddl leave mov dec je,pn and int3 inc jbe pmullw add push aad mov xchg outsb out leave push pushf imul dec jl aad movsl leave movsb cmp (bad) xor mov mov inc mov ja xor addr16 rorb add xor cwtl les nop mov mov call xchg jne dec jne mov in insl jne cmp sub inc incb call shlb xchg xchg xchg mov pop enter rcrb sub pop pop lcall pop inc dec xor cmp int3 fdivl vhaddps cs lods popa inc inc mov mull dec lea fwait dec sub xchg push (bad) addr16 ss mov push aas arpl loop mov cld jbe test pop nop inc push inc push mov lret fisubr pop sub inc cmp hlt add dec dec imul cmp mov ret xchg jle or cmpsl mov mov in les pop pop clc mov jne cmp jno jnp adc aad addr16 jb sub int xchg shll addr16 pop inc mov push ljmp add in sbb and lods lcall xchg jo inc dec jle sbb or fldt fs dec mov push fmull push xchg (bad) sbb dec inc mov add mov jae jae dec ret jg mov inc add pop sub imul int3 jns pop mov mov xor xchg cwtl adc xchg mov insb mov inc mov arpl sti outsl mov push mov (bad) lods pop jp sbb outsb and inc fstl or cmc xor adc dec sub add jmp mov (bad) jne ja jmp push push cwtl mov xor push mov int mov push sub pop adc and and dec pushf in mov mov dec xor push xchg (bad) lret out hlt sub sub push daa jg cld (bad) sbb or movl in xlat and sbb mov stos repz inc pop add andl jge xchg dec and or pop lds cld enter out int3 popf jp mov push push cs and xchg testl dec imul push xchg sub js in mov imul xlat mov lds test sbb jecxz cmp xlat push imul int lea int3 mov mov loop push mov mov cmp cmp push dec ret mov mov adc sub sarl daa mov push or mov inc mov (bad) std push incb out fwait mov rorb inc pop inc push in dec lea jl pop mov loope push call cmp push (bad) xor push xchg popa or mov xchg gs ja popa out pop push sub add jl push cs (bad) out push pop inc xor int cmp add cmp jmp sub cmpsl ss lea xchg cmc inc jo xlat ljmp lock adc rorl jnp jecxz mov pusha jbe push sub js sti (bad) mov dec lret addr16 test inc cmp lret arpl scas ljmp sti cs adc fisttpl dec pop fadds mov mov addr16 insb outsb test popl mov xchg inc rclb and ret subl movsl lock insb push ds iret mov mov inc into xor aas push movsl mov fiadd outsb lods push xchg pop pop insl data16 jp sbb cli push mov movsl add lods push ret test add pop dec pop push loope jmp outsl push adc inc mov inc xor cmp fmul repz stos inc pusha or mov jae aas add or inc out xchg call (bad) stos movsb (bad) xor mov dec sbb popf or xor pop inc sub inc xchg aad and cmpsl sub int3 (bad) fimull lods shlb jl push pop xchg enter cld stc shrb add into cwtl sbb add xor dec and sbb jnp das sar nop xchg sub icebp jb add mov insl mov decb ja pop cmpsl out push enter cmpsb mov bound cmp lahf xchg mov pop pop mov mov dec (bad) mov sarl popa sbb jae int imul loopne sub fs pop call dec (bad) mov cmp imul push xchg cli out in dec aaa das lods inc icebp lret cmp lret cwtl jl test repz push iretw jmp (bad) movsl in data16 pop pop fcomip push jle cmpsl popa sub stc pop lea push aaa movsb cmpb lret (bad) or test int3 adc sub clc insl dec xchg call call dec ficompl push cmpsl inc sbb push add fdivrl adc cmp mov sub mov in inc push int3 mov les out xor enter sub daa xor inc mov sahf sub outsb push into rorl mov movl push inc (bad) mov cwtl aad dec push fwait pop orl dec (bad) mov jnp ret out into mov push add pop lods ja icebp dec stos mov fimul xchg xor std dec mov xchg fs test pop iret popf subb andl or or xchg jmp aaa add test enter cmp or cs repnz jns mov gs mov push out sub mov dec mov addr16 jl inc mov cltd cld mov xchg lods iret cmpsb or repnz test in mov outsb inc (bad) movsb sub cmc or adc insb arpl out or sub pop popa mov lods dec arpl in push push jns jb insb push or jo nop insb cs pop dec imul mov push outsl inc jmp into ss mov fs push ja pop lds cli jg jo and (bad) pop add add in jl xlat mov fist push dec and dec mov repnz xchg jge dec lock sahf (bad) call test mov ret and jbe xchg cmp cmp in (bad) adc mov ljmp mov jmp pop dec test mov sti loope pop push mov je and and or dec lret cs push inc mov mov sahf pop aaa enter js dec jb push mov dec lret std bound xor jne test push enter adc dec cs adc inc lods push stos xor fdivrs fstl (bad) outsl pop aas fistpl (bad) dec jle mov rol push in orl inc repz xchg mov add cmp or pop dec into adc out into push repnz cmp inc jb cwtl dec mov (bad) andb mov fcoml inc inc push aam jb mov pop xor dec sbb cmp ja rorl (bad) mov jno fldl int test (bad) pop or bound pop rcl call adc cmpl jae mov jge pop fnstenv cmc out jbe xor stc xchg ficompl sbb int push xchg into sbb and pop arpl adc test cs mov inc push test call dec daa aaa clc ret je jbe inc mov or mov or test mov dec xorl ret dec pop push push xorl test jge mov push push xor es sub pop push pop addr16 test fldenv mov stos dec xchg cmp dec inc dec sub loop push dec pop mov jb add cs fcoml insb inc mov (bad) xlat or mov cld mov insb movaps movb push arpl daa pop ja mov sub daa ss adc pop mov dec into or or push mov enter cmp stos (bad) (bad) cwtl lea jl cli lods ret sbb inc xchg jge aas mov inc pop jg inc arpl inc imul inc rcll push dec pop dec pusha inc jl inc mov jno,pn stc subl mov into ljmp xchg into ljmp mov rcll addb test mov jmp out jp dec dec dec loop mov lods dec stos outsl pop (bad) scas into mov jno fnstsw imul inc sub pusha jbe sub mov push cwtl cmp outsl out leave add sarb mov lret popa loopne or mov mov negl insl cmp jmp je mov sub movsb or pop fwait inc mov jl (bad) pop rol push int3 dec lahf aaa int3 sbbb cmp jnp outsl mov push push repnz movsb je pusha dec push jae or sub dec aad push (bad) push sub push lods mov int3 pop stos push inc cs and imul (bad) in dec push (bad) dec int3 rorl pop adc adc cmp pop decl pusha outsl jae dec call (bad) xchg inc pop into jecxz xor inc pushf sub cli shrl jmp mov repnz stos jnp cmpsl pop inc push cmp xor in decl jl sub or aas mov xor inc add in cwtl add xchg mov mov gs (bad) push xchg push cmp shr mov and lods sub xchg or push sbb scas (bad) imulb xorb sbb (bad) insb lods addr16 ret popf std test push cs les jge pop dec mov xchg inc (bad) subb mov fcoms inc (bad) sti cmp shrl adc pop in fcomps adcl imul fs rorl iret test push add test dec fs out pusha ret lods dec mov push data16 sbb icebp std dec loope push jecxz lret out inc push enter cmp sbb pop pusha xchg cmpsl pusha imul dec dec aaa add xlat popa mov cmp jp sbb pop jmp pop ss mov push std jno mov aaa and cmpsl daa pop popf pop ret push add sub test rcrb (bad) mov xchg or adc cld lahf xchg and in iret mov inc mov jmp sar jnp xchg mov dec xorl jmp and pusha xchg pop arpl es jbe push jmp inc dec enter push icebp adc daa int mov mov inc sbb popa in jae mov xchg aad lea dec xorl popa jecxz test (bad) int3 dec movsl stc mov mov jno add dec pop outsb cmp shll dec jle testb fsubrl nop das mov cmp flds push gs out call in xchg mov arpl inc xchg es sub pop std repz or int jp xchg cs add mov mov mov (bad) mov dec imul xchg push sahf inc jae test push fcomi mov cmp lea lret inc insb inc xor cs ljmp mov dec loopne pop add scas daa or out xchg fldcw pop jnp out enter inc dec add fs leave xchg fs ud2 jmp sbb xchg and int push outsb inc mov jo dec push inc ret add sti js mov push clc out push mov dec sahf jns sub lahf push std xchg pop jne outsb jo sbb dec pushl clc lods cmp push jb pop mov outsl cmp jb jb popl enter or sbb (bad) mov inc int int3 rcrb (bad) (bad) cmc sbb dec sti test fdivs data16 adc lcall data16 les mov and mov or add pop and lods sub bound pushf lds push hlt push lret lods and xor jp lahf test mov or xor test int3 or sub jle dec mov (bad) aas pop adc jns (bad) loope jae sub add inc fs stos inc pop jmp and inc xor push ret cmp or sub ret xchg jle inc jmp test pop sub push scas add fisttpl adc sub jp clc sub jmp sub pop jp cli cltd std xchg add test mov dec stos sub pop dec inc mov sbb adc jle mov test repnz out dec add dec arpl jg inc mov ja pop sbb fs ret cmc mov jg out jne call fwait daa xchg cmpsl movsb mov gs jns mov inc imul gs mov ror lret movsl xchg repz cli mov (bad) int mov push rclb mov fiaddl xchg mov lretw cmp addr16 push dec movsl outsb cmp xlat sar inc enter inc mov std add jne sbb jle or movsb sahf dec inc ret add int3 jp dec repz push mov pop sub idivl ss xchg mov rclb and dec lea into sbb sbb mov insb xchg jg and inc loop inc dec adcl in aas rorl dec jecxz mov pop sub mov or pop ret pop stc inc (bad) fcmove es in cltd pop lods ret mov push cli mov popf xchg xor aaa add push sbb lods mov bound sbb and push int mov sbb sub test ret int3 jl outsl lods ja inc xchg push add inc shlb gs sbb push aam cltd cmp in fnstcw ret aad push pop xor mov repz (bad) push mov ljmp inc dec lods mov jge mov jno mov enter cmp mov dec test or mov jle dec aam mov inc into mov sub mov xchg leave movsl cmp cmpsl jne test add xchg push lds orl xorl cmp and mov inc jb fstpl inc jns movsl loopne push sbb insl dec push jecxz jl movsb rorb inc jae out lods mov stos clc cmpsb push jmp xchg jl shll fwait out js or test or popf dec sbb fstl cmc lcall pop sbb dec cmc jbe cmp and cltd cmc lea push push (bad) pop in ss pushf cmpsb push sub jmp xchg jne inc pop js rorl lea les pop les insb mov adc jne fwait xlat jl pop ret add jmp sub enter roll std adc xchg jnp xchg sub dec pop pop mov lds add mov mov push push dec sbb inc mov push or punpckhdq push cmc mov fs xchg or pop outsl push jae push sbb paddq sub inc pop das push push enter (bad) cmp orl fisttpl andl lahf arpl les lock cltd cld fs sbb fwait (bad) fdivl sbb xchg arpl addr16 cmp xchg (bad) (bad) in imul dec into push dec or jg call adc int ret push mov pop cmp fcoml sub mov (bad) pushf fcompl das or inc xchg inc lret push xchg add mov outsb outsb or in addb xchg xor ret jl jae lcall inc inc jae cs mov movsb jno into outsb test imul xor dec mov stos fmuls or test push int xchg xchg cmp je jo pop fsubrs push shrb dec bound push fimull cvttps2pi (bad) jo lds (bad) fbld movsb add arpl lds cld ret rcrb cmc loopne jo loopne xor sub mov into add dec mov xchg add rcrl std js jne pop pop jno movsb jecxz mov mov clc dec lret (bad) cltd pop dec pop inc dec xchg lods adc adc sub mov inc mov and mov cmp lret xchg adc pop fcmovnb (bad) ljmp jmp je xor xor adc out fisttp jne and jns lahf aaa ds sti loopne fiadd int xchg in pushf into mov inc int lret xor push xchg loope jae (bad) int sub mov sahf jno lahf in sbb sub add arpl lret inc push leave scas dec stc lret push mov mov nop and jge (bad) out testl idivl lcall mov cmp lods (bad) push pop daa push mov fildll and push jae lahf call jo cmpsl fmuls mov lret test dec shrb lret loopne movsl enter add lock (bad) mov xchg cmp in test inc sti cmp aas adc out or adc comiss push sub sub (bad) sahf ret add xchg sar imul scas mov fimull cmp mov aad rcrl ret inc add (bad) mov or add dec add fwait xchg push loop fsubrl js sahf jae xor mov pop dec mov repnz (bad) push cmp push and fistl sub lea int imul pop into rorb ss push sbb fidiv scas cli or push cmp lcall pop mov jo clc sub xchg aad and addr16 push out fldenv mov pusha lea sbb movsb out (bad) jae cs in test lret lahf andl sahf pop fs mov js sub mov data16 cltd stos fimull test pop add ret inc pushl adc inc xchg cltd and jo out push mov leave (bad) fnsave dec push adc mov dec or inc outsl loopne push leave cmp mov pop or cltd push mov inc pop mov (bad) into in aad add dec add roll dec dec aaa and push dec (bad) sarb inc (bad) xchg cmp sahf outsb adc dec jl push mov dec mov bound push xchg dec int3 fcmovnbe mov lcall xchg xchg mov xchg fnstcw clc push dec and jle mov aaa int xor lcall (bad) jae loopne dec push stc or add add sbb push arpl arpl roll pop add mov scas and cmp mov inc jae sub rorb push xchg je jo pop lcall insl jb nop xchg call dec leave mov enter stos ror push ret popl pusha push int dec int3 lcall push arpl (bad) lret aas fisubl aas mov dec das add xchg (bad) mov pop daa shl jno hlt insb in into fadd dec rol push test adc popf arpl in pop pop mov push add popa dec dec xor cs fildl or loope (bad) and fwait (bad) arpl leave cmp mov imul push ret lds mov dec sub or notl jmp sahf ret mov jo xchg mov jns fstps pop dec aas sbb mov popl (bad) xor push call fiaddl gs mov loopne fcmovnb mov shll insb pop repz in fstpl repz std dec int3 pusha sti in movb popa or dec notl sub lea jb mov in mov xor dec cmpsl cs jno lds fs test pop mov test cld push test movsb lcall adc test lret push testl sub fisubr gs sti jae daa inc or lcall xorb mov (bad) in inc mov jns cwtl pop xchg or insb push hlt inc cltd out push lcall aam (bad) in rolb (bad) (bad) push mov jl sub leave ja ret (bad) xor ljmp in add pop or insl ljmp mov leave jne rcrb or test (bad) hlt orl stos sbb xor int ret outsl jle xchg pusha loopne mov cmp xchg pop mov xor cld jecxz scas and shrb add mov into or mov outsl lods ds dec int3 adc fs ja (bad) popf test mov push adc lea sbb out dec inc pusha inc ret dec add cmp mov jae add sub or stos lock dec sbb div out push mov js sub lcall rdpmc fnstcw inc (bad) nop and in aam push jb fild aas popa int3 mov mov lock xchg lcall sub scas pop mov lods xor cmp ds xchg (bad) and (bad) mov aas push fistp (bad) jno lret push int3 sbb cmp mov mov sub jl sbb mov mov inc inc mov fwait (bad) xchg inc (bad) out out and dec xor leave mov testl rcl jp xchg dec cmp jb subl pop imul pop lret lea pop push sub outsl cmc ficompl cmpsb jnp imul sub cli sub add push hlt adc cld movsl push adc push dec cmp push push test jae gs cltd mov lret ds les rorb pushf cmp test lods and jo or repz lods inc sub push data16 push in in inc push inc sarb dec sbb fcoml icebp dec lret cmpsl add xchg push mov lret notl pop jnp mov or cmpsl lds pop (bad) mov movsl mov push mov jne mov pop xchg jo xchg cwtl std push aaa std stos fisubr mov cmp (bad) test leave (bad) js push lcall fcmovnb in stos gs mov pop sti pop pop int3 push mov adc or add leave imul rorl and lds repz pop xchg jmp pop jl add cmpsl sbbl jo pcmpgtw lret bswap add aad lds call test sahf outsb inc scas xlat leave sub subb pop insb jl xlat rcrl xor rcll int3 rol pop mov dec enter test mov insb mov test pcmpgtw or sub push stc daa orl jle sub jae cmp imul cs cmpsb xor or lret iret mov jbe or fildl cmc add rorl enter bound adc xor dec xor popf sub sub scas adc dec or add jmp sub addr16 jmp pop in test leave mov lcall sbb jae add dec in fidivr dec outsb repz ret (bad) pop jge cmp pop sub in pop cmpl arpl jns or aam mov dec insb stos sti aas dec push push sbbb jge lds out mov test test xchg mov or lods (bad) xchg inc test stos or cmpsl cltd mov mov std push and cmp int3 ss dec insl (bad) stos add mov add gs mov cmpsl aas sub fnstcw pushf jne pop std in aam stos push xor hlt add jns dec lods imul pop jle aam aad lock addr16 jne push lea ficompl push icebp mov cmp outsl add adc (bad) mov push outsl mov jno (bad) aad fidivl and ss push int dec fdivl (bad) (bad) push dec sbb data16 xchg data16 xchg das pop loope mov addr16 out pop outsl push (bad) lret ja push movsl jg inc pop or cmp xchg sub mov aad cld ds or sub xchg mov shrl xchg add arpl fimul mov aas fucomi repz cwtl ud1 or lock pop sahf lods push ret faddl movsl into insl ds mov arpl and pop lods add ret xchg addr16 dec or lahf jle mov gs mov mov sbb repnz sbb xchg mov (bad) ret jl xor mov into das popf cld xchg nop fldenvs lcall mov sti orb insb mov sti nop ja or orl adc mov repz sbb inc lcall js movsl out mov sbb leave loop adc xchg imul inc xchg int3 add jg imul (bad) call cmp cmp enter pop (bad) andl (bad) lock push (bad) lock dec data16 dec pushf xchg cmpsl adc rorb inc (bad) fs jle sbb lahf out in or jae test aam fs ds pop lahf push push out jne lcall clc sub pop inc (bad) dec rclb push push (bad) cmovg inc jo jae or and mov (bad) xor iret sahf sub add add fs and lcall out ret pop dec mov sbb mov into and mov push dec int mov or jo,pt dec (bad) popa nop pop inc sbb pop outsb xor outsb aaa push mov cmp sbb cmc push addr16 push push (bad) xchg jae mov mov jns dec jg mov push dec (bad) cmpsl push push dec lea add sbb or push insb into hlt fmull cwtl pop lds fist xchg in add add sub dec cs les cs movsl mov ret cmp iret jo inc jae sub mov in sti mov imul fs inc mov pop lret dec enter mov and mov (bad) mov push inc mov and add lret inc mov cmpb orl mov adc mov rcll inc jb and cs sbb jg fwait sbb fsubr sbb test pop pop sub mov push pop aas cs addr16 jae fadds xchg xchg or sahf jmp push repnz push std push sub cltd add sub pop lret inc mov push jle push push inc mov inc add fwait arpl push jnp adc jo xchg or mov int adc dec pop lcall lret nop inc sarb mov sbb mov xchg mov push (bad) ja lds push push xor add int3 xchg and jbe jge movsb insb xchg (bad) cwtl or addr16 xor pop out cmc pop test loope rorl (bad) pusha fcoml repz popa cwtl sbb js test mov test nop pop or jno sub sbb cmc add out xchg adc mov xor xor push test jg aam ffree (bad) mov arpl fdivl mov mov fistpl pop mov fwait jp imul cmpsb mov mov push inc movsl loop rolb test push mull shrb dec xor xchg loopne lret mov enter jbe add push adc popa cwtl xor mov out mov dec inc data16 test lods clc push xchg push push scas ret jo pop mov inc add dec push out adcl inc inc mov push add dec sbb dec xor pop (bad) in cmpsb pusha cwtl mov inc dec mov xor pop iret ljmp addr16 xor sbb adc xchg sbb fstpl int dec fsts sahf push or addb sub dec pop adc int call mov push cmp int3 jne int loope outsb cld push mov dec adcl mov movsl lods inc sbb pop push inc sub inc out jns dec outsb sub pop xchg pop stc dec (bad) push roll xchg pop out and push dec sub dec inc dec std sbb rcrl cltd rorl arpl push pushf add ret jle shlb ss dec mov jno dec dec jmp pop aaa dec sbb sub test daa and push pop push inc rorb movl cmp fsub push out jns pop mov shr mov fs leave (bad) sub mov (bad) push aas (bad) in xchg (bad) out shr xchg push bound xlat (bad) fsubs xchg cmc add in roll xchg add ljmp cld push inc shlb rcr repz pop mov dec insb jbe stos inc popf stc push cltd sub xchg push push push cmp xchg jne mov or dec mov or js lods push enter movsl push rorl pop fnstenv add dec push test pop mov ret test rorl mov pop mov dec mov lea sbb inc adc les dec dec mov outsl and mov inc dec sub (bad) mov out xor fisubrl cwtl pop sbb dec call in xchg inc mov jmp mov pop out cld dec sti pop aas jnp scas arpl or shlb inc mov or mov mov stos test xchg xlat nop sbb cmp outsl dec sbbl inc xchg xchg xor sbb add out sbb lret pop pop int pop in sbb mov xor js,pn inc sarb sbb leave pop add stos xor data16 inc pop imul inc inc pop jle mov sub rol jl mov xor call cmpsb push dec sub adc xchg jl mov sbb mov pop cltd lahf pop cs out jecxz adc ret popl push mov in adc loopne leave pop inc sub out incl loope repnz inc arpl cmp cmp mov roll or cmp jo roll cmp add lret adc cltd fs fs push fsubr xor cltd insb int3 push fs insl jg mov dec add or repnz push sub js jb xchg cmp dec outsb and or int3 test int out mov cli inc mov scas sahf sub nop mov test js xchg lcall imul pop push (bad) push std inc and jbe jnp sub icebp mov mov push ror mov lds pop imull pop int3 xchg aas or dec jle test or lds inc inc popl mov dec jmp insl loope mov sub (bad) ds inc out inc dec add jecxz adc push xor push fst mov lret pop daa cltd jae sub cltd aaa and or xor or int3 dec les cmpsb mov and sbb (bad) xor dec (bad) mov mov jg cwtl and jle adc imul sub cltd shl cmp push mov stos cmpsb pop push rorl sub out fldenv enter mov mov aam addr16 fild xchg adc push push sub sub cmp pop lcall dec push sub push cmp (bad) mov mov and out aas fldenv dec mov xchg mov or mov sub jbe mov cmp int3 aaa daa int mov xchg arpl dec pop push dec shl outsl dec into mov aad test and into test jge jne daa shll xor push jae bound rolb push push inc dec fs cmpsl aas mov cmp aaa xor data16 and sub mov mov dec xchg movsl push dec cltd arpl jae ret dec xchg push lcall orl push mov fidiv insb repnz add inc das mov insb stc ret sbb arpl mov sub and stos pop mov roll xlat mov aam fnstsw js int3 xchg das std jl out movsl jb sub out mov mov stos adc xchg into add lret pop or jg mov pushf sub mov popa jge xor cmpsl push roll add dec dec lcall xchg ss push mov (bad) xchg push stos imul pop add push mov call sub imul std addr16 scas lret push mov push jl mov fimull sti xlat push popa fcoms cmc jle inc dec into out push fwait lock mov jge (bad) jnp,pt mov inc hlt jno loope imul pusha mov sbb push jg inc clc cmp cli jns adc rcrl adc (bad) and sub inc cmpsl push shrb sbb scas cmpsl pop jae arpl test test jo dec mov test idivl pop push test mov fdivs out in add sub fcomps loop lds test test mov mov ds dec mov mov dec mov xor sysret mov arpl adc xchg stos xchg dec dec scas mov and data16 mov push push mov or arpl jle inc bound sahf add jge sub mov pop sub sub pop and pop pop stos mov fistl iret xor int3 sar sbb pop sahf cltd jecxz mov jg repnz cmp inc jns in mov icebp fcoms (bad) jnp cli push adc mov inc sti push xor std int3 shrb cltd sub xor push xorl test mov gs rcl xor inc lock imul jle rclb dec outsb fwait dec xchg xchg inc sub and getsec (bad) cs jo shll lahf pop fildll test movsb jne (bad) and mov ljmp mov dec mov lods push xchg call sbb xchg ret and lret loop mov adc (bad) insb enter (bad) int3 xchg mov dec jle sub pop cs push add int bound inc (bad) jno,pt mov push push dec jle,pn arpl stos jne mov push popf jnp dec lods popa jl and (bad) push mov loop outsl aam sarl xchg lret add xlat shrl sbbb cmp inc fmuls jno (bad) (bad) pushf into push in scas mov mov sahf push lock sbb jbe,pt push add orl stos outsl in lods inc lretw stos inc test leave gs jmp gs insb int scas pop push fsubrs call sub ss pop xor sbb lcall jns pop js fwait (bad) xchg mov lock add or push xchg add fwait xor jecxz push mov mov mov loopne aad fwait daa fcmovnbe or je xchg loopne mov in fsubrl rorl cli insb ffreep dec in mov movsl add call rolb mov mov mov jg enter mov mov imul cmpsl mov xchg pop and sub adcl mov pop mov mov mov dec loope pushf push test adc add cmc mov sub mov notl or and rol push xor loop dec lahf cmc push popa mov ljmp mov or dec mov fwait xchg jno outsb push mov int movb jnp incl sbb add mov xchg (bad) nop stos jnp add imul bound sarl sbb into push xchg dec mov dec inc into lret std test cmp out xchg fdivl insl sbb les cmp (bad) (bad) jno inc mov mov cltd fs stos dec push cmp and fwait push lock rclb call enter or and push test push fs xchg xchg int3 jae (bad) xlat mov ljmp cli xchg xchg (bad) pop int3 xchg inc push add adc xor push mov push inc stos add mov iret into dec mov push clc xchg dec mov lods dec xchg cmp outsb pushf mov ja inc jae mov jae fs cmp dec into jecxz or inc push xchg hlt or repz inc jp lods lcall xor inc pop push sub mov insb or int jb inc push mov scas dec pop in add inc inc mov je sub lock ret dec into xchg pop or enter (bad) xor pop imul xchg pushf rcll loopne lds fwait sbb and mov dec scas add inc or mov lret cmc jnp push insb dec scas and stos pop xchg int dec (bad) into sub pop xor xchg sub icebp pop in lcall test xchg les inc lods or inc arpl ja pop dec gs loope,pt jbe mov mov loop aas imul pop ja xor in adc fisubl xlat inc or cmp mov out add addl mov dec add inc gs into ja inc jo (bad) or dec and jle xchg adcl mov shl movsb inc ret jmp pushf pop mov mov mov pop cld inc (bad) test insl add xor ret add shr repz out adc or in mov xchg mov pop cmp lods jmp imul fldln2 mov add cwtl int jecxz into sub mov fsubrl lret push test lret clc daa movsb lds xorb cmpsl (bad) or inc adc test pop insl inc add jle sahf fstps lock repnz pop sti push (bad) cmpsb lea push sbb or cmp sub sbb imul mov mov jne out push push std xor clc (bad) test pop stos (bad) aas dec pushf sub inc out push into xchg mov cmc pop or xor ja add push std cmc push dec ret jnp roll xchg je mov leave stos jg mov sub test das push cwtl int3 xchg aam xor ret jle push sub scas rcll push jns pushf clc dec jns or xchg xor popa lret jp (bad) or inc (bad) rorl jbe sub repnz jle push ljmp adc dec ret xchg (bad) or ss inc mov movsb lret movl jbe dec xchg xor aad (bad) movb data16 lret push pop ljmp mov imul push mov scas daa or ds push xchg (bad) lahf rol xchg mov iret sbb (bad) loop cmp pop push call jmp fs cs roll ds roll or roll adc cmp pop push push loop lahf dec cltd lcall popa ds insb xor fnstsw jb push aaa daa out mov movsl lcall sub and push jae out pusha cs lcall mov in (bad) dec cmp inc addr16 dec cld mov ss add aaa xchg inc out adc pop cmpsl jbe ficomp outsl jne cli mov mov sub sbb jp push in in sbb call shrb movsl push insb jnp dec or mov sbb or xor inc bound mov mov sbb push dec mov and dec mov mov xor in cmp mov arpl scas decl push dec lods mov jo sbbb cmp iret add mov inc fwait push fisttpl push dec int3 in imul lds adc cwtl pop xor negb in mov or outsb shrl sub pop in in dec into lret sbbb sub dec fs jecxz lret ret out shl repz dec and test pusha cs xlat pop push sub into cs cmp jae es push push xor aaa push dec xchg out loope das lret arpl push (bad) test xchg aad int3 (bad) fist fild addr16 adc mov mov (bad) daa inc pop jg scas cmpsl ficompl in aas mov jb inc and fdiv leave pop sub jge ret (bad) aaa sub lret xor xlat mov int3 sbb sahf inc jle adc aaa inc mov int lods aas mov aas or insl inc cs sub in int jne jno dec inc dec test loopne out rcrb xchg lret mov mov arpl mov into mov aam inc scas stc mov xor (bad) nop cmp sub adc incb mov pop into cltd int push and je (bad) jp mov std (bad) lock and out mov and pop mov sub cmp mov push dec cmp dec cmp or mov adc rolb pop pusha push cmp mov scas cmp sub (bad) in mov popf fbld mov int3 pop insl or test test or jl lretw jb xchg cmp lds inc mov add mov sub iret aad pop sub pop arpl test cmp dec dec push jnp movsb das aaa cs insl pop mov lcall mov mov fwait and cmp sub cmovnp fs push jns jnp lods cmp mov mov nop push mov in arpl fsubrl incl int jl sub fmull sarb daa jns cs pop sbb or std add dec xor and xor xor test hlt sbbl cmp in aas sbb dec push pushf lods push pop ret out add (bad) mov es clc insb std inc test (bad) fistpl sub pop aas pop jne addr16 fwait sbb mull inc into addr16 mov fisubrl dec inc fxam push rclb rorb jl mov xchg jle dec out (bad) xlat sahf daa imul xchg roll push test mov pop bound xchg (bad) or fistpl mov sbb fs iret xchg (bad) pop add mov and dec addl inc mov pusha inc test add in sbb imul sub mov push int3 ror shlb in adc pop in push lods and out rcl sarb mov outsl addr16 int3 or push mov jae das push in dec scas push xor or cli test or lmsw push dec repnz daa mov mov pop fdivrs data16 imul jnp gs fdivrs out fld dec int or sahf mov aam ja aaa inc add xor cmp pop lds clc (bad) aas clc xor sub pop add inc push out leave jno mov mov push les push lahf sti sbb xchg dec pop jnp inc pop fwait pop push and xchg pop int3 lret sbb data16 fs subl fwait in dec pushf dec cmpsb leave xchg addl inc aam imul bound push in add mov (bad) adc pop adc lds es out lcall mov dec mov pop jmp mov push dec (bad) mov sub outsb int push inc ret cmp inc sbb mov jnp mov inc clc inc mov sbb push cs mov dec jne movsl cmp lahf leave cmpsl mov dec mov aaa nop les mov inc push and pop stos mov imul push dec mov das cs inc test fisubrl cs xor enter insl push ret cmpsb imul jae aaa (bad) lock aam pushf out cmp aam in sar jmp xchg mov dec out stos (bad) xchg pop bound push arpl loopne ret mov mov lea mov add push into fcomp jno enter insb fcomp push mov (bad) into lcall push loopne or cmp cmpsl out or xchg mov push pop inc inc lods cmpsl fwait jle adc insb sbb or pop stos rorl (bad) cmpsl lods mov adc lret fwait in dec push sub dec outsb movsl and popf leave dec dec or movsl inc sub ret push (bad) cmpsb add pushf insb pop or pop test pusha sbb mov mov sub imul pop aad push xchg xchg mov dec xor jno in mov add lcall pop les and les test lret cmpsl int inc mov adc pushf xchg int insl xchg fldz pop and sahf and movsb mov push fwait lock xor out movsl push int scas jnp dec mov (bad) popf outsb sbb xor nop dec lret loop sub cwtl mov test scas push dec mov mov pop mov repnz inc jnp enter cmp outsl icebp xchg cmp lds add sti mov lds sub push push cs xchg lods push cmp sub cmc insl (bad) mov in scas mov stos add fiaddl push mov sub rcrl movsl ljmp mov add xchg xchg ds loopne jbe add inc mov sar dec dec repnz dec mov cmc sub or sub ss cmpsb pushf and ror xchg loopne into mov pop mov repz push xchg int (bad) inc and into xchg inc (bad) mov push dec mov push pop imul jl pop and mov sub ret or adc test and inc outsl (bad) push push pop jbe aad movsb enter push xchg arpl xor push popf movsl (bad) adc int push mov ss push es jo fs fmull mov mov (bad) mov repz clc push dec arpl fs dec sub insb dec dec outsb push in popf cmp sub and sbb cmpsl push inc push jecxz insl aaa cmp jmp fistl jbe aas pop jle cmpsb xchg mov sahf test cmc imul jge aam mov ret add dec mov or cmp pop mov into scas push cmpsl jae ret andl arpl loope fcmovnu jb out mov mov ret imul mov mov dec lret push je rcll vunpcklpd mov aaa enter add adc adc pop or dec inc adc rolb popa mov test sbb cmpsl cmc mov jae pusha jge int in pop popa add xchg mov mov int3 clc xchg movsl xchg loope jmp dec push add dec jnp add sbb dec cmp add mov int aaa gs ret ds mov sbb aaa add imul mov or sub jmp in (bad) mov jae sub dec ror in in mov push pop and stos sarl push mov into xor mov nop movsl dec les sbb fs push imul jae mov out enter test sub pop bound add test dec movsb push cs gs aas mov imul (bad) call inc cmp lahf les mov xchg shr cmp leave or mov popa lds jnp shr sarl imul out cmp pop mov mov jg jmp dec xchg cwtl xor cmp fs mov sbbl dec sub xor xrelease rolb addr16 cmp lret jp dec (bad) inc jg jp movsl (bad) xor jb push xchg ret push into pop dec das loope mov cmpsl shlb mov mov lock jg jp enter (bad) jb imul mov cmpsb add les scas inc xor ret xchg jmp inc fs sarb cmp xor (bad) mov sbb push dec mov cmp movsl fmuls xchg and inc cmc inc pop imul mov push int3 dec fs jg mov push insl movsl mov aaa inc test adc aaa dec cmpsl jg enter sbb lea sbb (bad) sti loop mov test repz mov jp jo sub mov iret push ret (bad) pop xchg in dec popa fwait aas mov cmp dec mov enter ja,pn mov pop jns fs imul popa ror jae add insl imul iret mov insl sbb dec push dec jnp and insb in push push inc add dec push in lret jecxz out pop add pop shll or dec mov (bad) mov dec or cmpsb inc push mov mov fcmovbe hlt cmp pop call aas inc shr xchg fidivrl int3 dec mov cmpsb push lds out scas test outsl sahf in insb dec push push mov xchg iret test fbstp arpl inc aas cmc leave jbe mov mov jae push lcall stos sti repnz addb inc jp xchg test cltd push das sbb (bad) shrb shufps out cmpsb jnp call (bad) pop jne push and jg insl aam lods dec rolb das inc test outsb adc out cmp pop and nopl xchg lock fidivrl push push call insb and (bad) push arpl out mov lret jno shll mov dec xchg sub icebp add mov std rcrl mov iret dec dec push fsubrl in test jne dec push lret mov sbb push push adc jmp sahf int push arpl fsubrs mov inc xlat pusha fdivrs push mov push push pop xchg movsl dec push sti lret sti arpl dec cltd lods push mov aas ret cs jle sarb sub jecxz lods inc aad xchg adc aas orl or popa imul add add xchg cld fwait cs in pop adc inc mov jle out cmp dec ret aas mov mov into add mov add sub loop popa dec hlt andl or mov jbe test mov pushf out push cmp daa xchg mov vpaddq rolb popf pop and imul pop adc sbb jge rcr imul dec pop rcrb (bad) lds inc pop mov pop push rorb add popf repz gs les pop arpl pop sbb dec push (bad) jne jae jle mov bound mov outsb add sub int pop (bad) jecxz push lock aad xchg cmp xchg push ja call lret xor pushf cmp xor int3 (bad) out loop mov dec cmp cs fs mov stos lret jle jge xorb pop sub cmp sbb mov incb mov (bad) dec xor add jbe test bound sarb pushf mov pop dec or add add inc (bad) push dec pop xchg mov push pop and loop dec xchg fs pop clc pop sar in mov push aaa outsb push sbb push fdiv out idivl out pop or out xchg push push and out pop shll sub es mov dec or ss in and gs arpl mov xchg scas inc mov (bad) jae fsubrs test mov dec sbb outsl inc jle test inc mov and je pop push push insb bound push les lret ds sti adc mov xchg or mov aad fdivrs or (bad) (bad) (bad) rorb stos jae sbb or pop inc (bad) fisttpl mov dec stos ja arpl jg lret insl arpl dec cs inc push (bad) jmp jg mov dec xchg arpl fs lret dec dec mov fs mov lret push dec push adc stos ret inc pop jo dec ret out dec fxch (bad) dec clc cmp inc gs dec lahf sbb pop push sub cmp inc arpl dec pop pop dec add pop mov inc movsl lret cltd adc mov lds push pushf pop fsubr scas rorl sahf out dec inc jmp mov jge or adcb je popa pop scas js xlat jns out xchg lret ret lock sbb push jnp xchg pop mov aam in daa pop cmpsb lods push jnp ret inc push mov pop inc hlt xor jo jecxz bound test or or addb ja scas mov pop out insb ret dec mov jle jg or mov les inc loopne dec (bad) pop (bad) xchg xchg jmp mov dec push xor in pop aad in jge (bad) xor cmp loope dec pop cwtl cmp push lahf aaa xchg mov cmpsl in push adc ds mov mov inc inc push mov jg ja cmp mov setg or dec gs (bad) mov ficoml sub push push lret mov dec xchg sahf push repnz cmp sti dec imul mov roll stos pop push cmpsl sub sub addr16 inc mov rolb rorl dec imul insb test dec rcrl sub adc jo sahf xor pop sub xchg lret jns test sub bound inc xchg stos leave pop inc xchg popa push daa mov xchg xchg inc sbb shrb mov in push add inc inc sarb ret sbb add push adc mov adc mov push jg mov (bad) cld inc inc mov insl hlt sub in ret and dec pop in push into (bad) jb sub inc push dec stos inc push arpl mov cmp popa es sbb sbb mov repz les (bad) sti pop mov imul or scas repz idivl popf stos lods andl andl add adc push addl rcrl mov out mov push jle mov xchg dec fisttpl or dec fistpl inc push bound pcmpgtb mov push jb js xchg dec rorb les test sbb jl nop sub push push fs sub mulps pop mov test add or and jl mov shrb push sub xchg (bad) dec les ror xchg jne pop fnstenv mov bound jge arpl loopne or push sbbl adc adc (bad) mov dec xchg ds jp mov lahf outsb arpl dec mov sub int fidivl dec mov ljmp into cmp sub xlat fldcw and xchg ja lds mov mov iret imul out into pop push xchg add (bad) xchg jg mov mov xchg call ret jl inc iret cs rol in mov into dec rolb or les daa test sub and lea in mov iret inc mov and test dec outsl xlat xchg pop sub icebp mov adc push or mov (bad) ds inc push iret stos pop cmp jb xchg ret addr16 lea xor dec les int3 xchg lret mov roll aas inc xchg push mov inc arpl xchg dec aaa jle mov aas push push push scas in les orl movsb les in pop mov movsb enter movsb repz xorl enter dec xchg in mov add (bad) test les sar fwait pop cltd pop sub jo cld push outsb jo push jb push or dec add dec cmp jg pop or cmc lahf sbb xchg out push or mov pop outsl call inc add in cmp or add mov ret add or push sbb push push mov mov jmp btc pop cs adc sarb push imul add rclb lds cmp imul cwtl pushf mov xlat xlat mov sbb scas mov xor test into test aam popf add (bad) mov loope push pop inc mov sub fdiv dec mov mov test insb ret cmp cmp mov mov dec lods and mov cmp push in mov clc int3 and sahf cmp cmp cmp and dec outsb adc jmp jecxz and inc xchg dec push lret or sub add or sub push push inc lock (bad) xor mov mov pop or push xchg dec jp insb das push ja insl jmp (bad) push add std push add sub xchg rsqrtps dec (bad) xlat push iret addr16 mov (bad) icebp movl sbb daa mov ret in push lahf adc dec pop scas push mov (bad) mov xlat or inc shll fs adc data16 adc push pop dec arpl addr16 jnp andl cmp mov push mov dec (bad) fildl cmp mov ret mov dec ss jo cmp adc lds (bad) out test idivl xlat test pop in cmc shrb push ret arpl sti daa pop sbb pop lds push and push sub jnp dec jae cmp ja dec lds mov lods and lret mov in movsb sub dec insb das add xchg rcrb scas or mov jnp inc or adc loopne in lret shrb leave into dec dec repz mov adc pusha cmp imul stc in inc sub enter jnp add or sub adc call faddl daa xchg dec mov pop xchg sub subl jecxz arpl xor push inc xchg mov arpl mov inc mov gs mov xchg jnp cmpsl arpl dec add into mov push adc mov jg adc push leave data16 xchg jecxz adc pop js fdivrs dec into clc addr16 jo and or inc or mov xchg ja jl aaa loop cmp lcall jecxz sub push iret push jge into (bad) mov outsb push inc pop pop iret cmpl sbb enter sbb scas pop dec xor jg xchg int3 mov and dec push mov sbb rclb xor sbb cli dec inc arpl sub andb insb xchg cltd out into insb sbb aad jge fs addr16 mov dec inc imul xchg add gs jl jl push iret cmp fbstp adc jo inc (bad) jnp or mov enter pushf hlt jl insl cmpsl inc iret repz out mov (bad) xchg fsubr ror inc mov jbe push movb add push and int3 clc mov sbb xchg mov repz mov mov adc push cwtl inc sti jmp insb dec lods push fwait xchg int3 mov (bad) jg pop out int jne mov mov out inc dec sub test push int addr16 push ja pop pusha lcall call gs add sahf (bad) xchg cmp ja inc and outsb test push jle jne imul xchg dec cmp or dec ret lret push bound inc fwait push mov sbb pop (bad) jbe outsb aam push imul xchg sub jnp dec test inc shrl inc dec jle push mov outsb js xor sub (bad) ljmp mov call std mulb push mov out push inc and fwait add lret pop inc test xchg mov dec test rolb imul dec jno push les push inc mov adc lods test pop mov insl jns insb outsl push mov data16 sbb cmp test fsubrs inc ja push and int sbb adc gs add jp cltd pop stos cwtl push cld int xor stos push lcall push adc inc inc xchg sub imul sbb in (bad) xor enter fadd dec das js repnz inc xchg sub and pop les clc mov ret push or into jne outsb cld cmp push lret dec int (bad) iret jecxz xor icebp dec jnp and leave cmp repnz xlat pop xchg mov mov mov mov add mov aas les mov pop int3 jae fsubp fsubl pushf cmp lea mov push jae ret jnp pop or push sub andl pop (bad) arpl jne dec into (bad) inc adc cltd xor push test lret mov vunpcklps dec int push sahf jo fs lcall negb ja sbb repnz pop sbb sbb adc mov add dec mov mov add fs stos push adc mov lds (bad) bound in pop sbb adc daa dec nop je mov mov fbld ds stos scas test cmp add mov sub int3 (bad) dec add xor xchg fstpt push stos mov jg jb iret mov sarb int3 jnp mov or and mov jo adc adcl ficoml shr and insl xor xlat xchg in push jnp inc push cltd add aas jp sub or xchg push movsl sub xchg and push dec inc mov mov fcoms mov test mov jae or jo dec push nop adc fs sub dec das push push ljmp popa sub sub and sti (bad) or popa mov inc repz mov lods fwait cwtl cli lea or add sub xchg lods dec sub mov adc push xor fcompl push xchg adc cmc repz js xchg xlat dec fadds cmp cmpl insb and sub sbb shr sbb les xor std pop sub aad sbbl push inc nop mov pop sub adc test push dec mov jmp jb dec cltd scas movsl sub test sbb fdiv int fwait dec ja mov or mov pop xor inc int dec cmp mov push jg and jp cmp mov xchg push xchg cmp inc fs jae das iret mov and shrb adc adc mov ret lds dec xor arpl shll or dec mov in add shlb or push jl dec inc xchg inc cltd dec xchg addr16 (bad) in xchg or jns fdivrs pop jo pop xor imul fwait add shlb loop and jae mov dec rorb xchg jle fwait mov bound xor sbb fsubp iret mov lcall or lahf (bad) mov test fisttpl cs les xchg mov push into call andl mov int inc addr16 add sub lods inc mov clc in ret pop add add and xchg mov mov lods jno pop into sbb loopne lods jns test into mov (bad) xchg inc inc and adc test push aas mov divl inc xchg orb testl jnp inc dec jmp push int3 pop xchg std xchg or inc dec adc test add mov dec dec mov rcrl inc and (bad) sti inc pop lret dec mov xchg movzwl xchg pop imul leave pop (bad) lret dec imul mov leave test pop rcll xchg mov imul jno (bad) dec push pop dec sbb jmp sbb (bad) lret scas mov inc call dec inc cmc aaa rclb push bound movsl getsec inc push push sbb popf mov aas jle cmp dec dec inc cs in test push outsl jno imul sbb add lcall stos repnz xor repz lret sahf inc pop bound aam and aaa mov mov jo test mov cmpsb jp inc push cs fadd (bad) stos inc test mov xor dec sbb (bad) xchg push es (bad) cli or lahf aas or mov jbe rcll addr16 cmp jp push int aad mov jmp inc int pop faddl xchg xchg mov aas and loopne jae or add adc sub int3 mov and test push mov dec xor mov in fwait mov inc cmp push dec ds mov push add xlat in lock adcl fcomi xchg int3 push jle out sub mov in push inc inc sbb gs push dec fildl mov pop push addr16 xchg sub imul pop xchg fcompl xchg xchg xchg sbb leave subl clc rep aad arpl sub shll cwtl or cmp sti lds push pop lods xor dec add popa das mov inc iret hlt sub mov pop outsb dec fiaddl mov mov inc (bad) pop jae or push dec test inc lcall cmp mov ret pop push test pusha add aam sub jbe imul add rorb pop push xor cli daa (bad) mov (bad) addr16 mov xor cmp xor fisubr sahf jne push movsl imul cmp cmp insl rol dec cmp push ja cs jge xlat jo enter dec pop sub pop dec out int mov pop mov movsb test and add gs sub fwait sub jecxz mov dec loopne fistl int3 jae and sub push orl out and mov sahf idivl lods es xchg ss fs xchg xchg xor sub insl in outsl xchg push aas lods mov and fist pop pop mov cwtl pop aad jg test test enter jmp repnz inc mov xor hlt mov sub lods fxch cmp fcomip mov jb adc inc add mov add adc pop dec jne sbbb imul xchg pop cli cmpsl dec xor or dec add sbb bound sub xor fimull in aad pop cltd mov and mov push (bad) int3 rolb mov inc sub sub (bad) aas adc inc sub push mov movsl aad cltd das jne fwait test rcl jae mov cltd loopne popf push negl les int3 adc test stc mov push mov mov stc mov sub mov mov daa mov fdivs jbe jno ret xor aad cmp cs stos (bad) push lret push push fldcw gs neg sbb jg sub mov clc inc cmp int3 pushl dec mov mov sbb fstl inc aam dec testb lret xchg lods push and (bad) jne mov (bad) (bad) pusha dec push loop fadds test aad outsb sub sub mov loopne inc jp ret mov ss sub in pop adc fs data16 push inc cs aam mov lahf mov cmp push call mov int3 test into xor jl or out dec dec adc sub pop push mov dec inc lahf test xlat mov fwait test test and jg jae sahf sub cltd out sub xchg xchg and fnstsw sub jbe in and add (bad) int3 jne je mov int std fdivrl adc imul add (bad) mov xchg loopne pop cmp lret pusha arpl sbb cwtl sub add in dec mov js out jle xchg pop jnp pop mov xor popa add aaa sub rclb xor fucomi xor add add inc pop rolb lds popa cmpsb cwtl decb sbb push insb (bad) add inc lcall dec mov xor cltd daa aaa push push xchg jl (bad) (bad) hlt mov decb push mov cmp lahf outsb test scas aam inc push jae cmp fwait xor js addr16 mov push push adc sub push addl or mov adc jnp lea jno (bad) jae pop aas sub xchg scas gs lds ljmp int dec ret dec sti xchg push lcall rorl test sub (bad) (bad) jne dec out lahf sub repnz inc mov add xor add dec or insl lds dec movsl dec pop jp cmp mov daa in push inc jle cwtl mov mov dec (bad) mov (bad) enter addr16 cmp lahf aas cmpsl jl cmpsl test les mov lahf shll dec or roll push mov aam (bad) push mov enter rorb lds pop rclb leave test aad fs popa cmp jl dec push fs dec sarl mov dec (bad) dec cs and xchg push push adc jno or mov sahf push or imul push outsl pop pop cmp xchg lcall jge mov enter cmp out (bad) mov test or sub test mov pop jbe aas jno sub popa fcoml pop inc push pusha adc push push xchg pop inc ficoml inc hlt pop addr16 test add enter inc or mov xor les stos sbb jo mov jnp mov out xchg cli cmc cli mov aad rcr addr16 test sahf (bad) in push sub movsl jl adc aas (bad) sbb (bad) repnz leave leave adc or push out movsl mov adc push mov or out ret (bad) push sub in push mov pop sub (bad) mov cli push sub or rorl pop sub imul das or pop pop cs aaa pop (bad) mov loope xchg mov inc (bad) je and out push adc aaa mov xchg inc daa inc fistpl sbb xor mov xlat pop and xchg push xchg test lret dec dec sub jmp mov push (bad) mov or push pop inc sarb push inc mov inc sbb push mov mov movsb jp mov push sti rcrb and and ja out hlt xchg dec jne add test mov mov stos sub int3 lret xorb int3 sbbl jbe lret (bad) sbb mov mov lds pop xchg jo mov push add inc ret push in xor sub rcrb cli shlb pushf bound jl fwait push adc fisubr rcrb mov lret dec lcall loope pop mov or into rorb out jne imul cmpsl xor sti roll imul cmc or push or xor sbb je addr16 out dec xchg inc cli cltd jmp mov (bad) lea sahf in dec fs jl arpl xchg lods movsb xchg (bad) cld inc outsl test adc cmpsl in mov aam ja scas push fs cmpsb and lods sahf fs fisubrl rcl inc inc movsb xlat cmove dec push out or in push ret sbb pop dec push xor or dec dec inc adc mov push adc daa push sub or aaa cmp test test mov jle jg dec mov outsb adc imul dec dec cmp into outsl or stos loopne adc mov cmp (bad) lods add aas xor inc inc dec adcl (bad) jae mov push sub cmpsl ret add sub stos imul sub sbb imul inc aas int3 dec mov insl sti aad fs pushf jmp or mov lcall (bad) divl hlt mov sti xchg notl movsb and push inc or mov fcomps stos mov incl hlt fcomps insl cld fldl2e sub stc ret adc mov (bad) dec xor add das mov mov aam lods dec pushf in xor pop mov mov (bad) out xchg mov xor out xchg mov push scas push pop les or sub jb lahf in mov test loop and or clc out arpl out dec rolb xor mov out daa loop (bad) enter cmc nop jl pop adc js jo push test cmpsl push pop arpl enter lock (bad) lock scas mov mov pop cwtl bound jmp iret popa xchg mov or pop jg rorl cmp dec fs test cmc ja ds imul adc push cwtl das icebp xchg test jl pop mov es (bad) fcomps mov (bad) icebp out xchg inc push inc into mov movsb lcall pop imul cwtl sub pop popf shl test out or cmp dec adc pusha aam lret iret mov enter cmc pop fstl pop rcl jmp mov sahf enter jmp push js jmp xchg cmp pop rcll mov mov fcomps out sbb rclb (bad) cmpsb pop fwait outsb mov ret cwtl mov push xor push fldt mov or rorl fistpl shrl test lret loop cmc lret jle insl in (bad) icebp imul cmp in mov mov fcmovne movsl cmc mov shl ljmp subl int push sub cmp pop out mov push dec imul cmpsb mov mov addl xorl int3 lahf push rorl jae cmp xchg out lretw pop push sub dec test push or pop dec jle or (bad) xor xor lahf pop mov and xchg add mov std cmc (bad) (bad) sub dec sub call inc lods loopne sub pop xchg xchg jo xchg std pop push cli scas lds or out mov das pop cmp addr16 in xchg inc dec pop lret xchg mov iret lret push mov add cmp dec jge lcall mov push je xchg mov movsl loope pop jmp dec jne push mov dec orl push lahf or ja mov jg pop push les insb je incb jns push pusha (bad) cltd add jae test jne arpl insb inc pop lahf xchg addr16 outsb xchg loop push in pop mov les insb adc outsl fs cld mov inc jno call outsb jb push shrl pop push jae mov xchg test int xchg xchg orl jle xchg mov push mov (bad) push mov inc pop dec rol dec mov pop arpl push cmpsl fwait dec (bad) xchg add les xchg pop cmpsl les stos fs mov scas inc jl pushf lret fs test jno cmpl mov pop clc mov jne adcl leave (bad) pop test jne push mov fs roll (bad) jne push xor leave test jne push mov in pop xchg jo and (bad) jbe leave xchg arpl daa jmp stos inc jg test cmp repz dec push mov push push jb mov int3 leave scas out mov cmovne sti popl adc dec jbe push int or jl cmovg pop xchg pushf je adc jns test pop sti dec jp push outsb or cmpsl insl imul push pop or cmp outsl mov jne daa pop jo data16 push fs clc xchg mov imul xchg fs (bad) mov pop xchg mov push mov mov jg aas or inc dec mov push push pop inc inc mov cmp dec inc push lea and dec inc mov or push rorl dec nop enter in pop xchg dec rcl sbb out lret stos jne arpl jno jl dec jl pop lea in jl dec jle pop mov jae jg xor pop ja test sarl adcl pop cmpsl cmpl aad xchg test dec test push movsb or sarl dec imul jbe xchg cmpsl insb (bad) mov pop movsb xchg fwait push stos jno jp push ja lahf jne cld pop sub or insl adc fistpll incb sahf or jg push pop (bad) cmpsb inc cwtl ret pop xchg int enter dec dec dec dec test dec push (bad) xor inc and and (bad) imul jg insl or jae xchg sti mov dec pop and dec jnp jmp mov fldl in push xchg xchg dec mov rclb movsb dec outsl xchg mov dec mov lahf mov adc (bad) mov add js mov jo fwait mov xor (bad) cli sbb imul sbb jne push cmp movl xlat sbb adc test fs cmpsl out out pop jmp in test fs add into cmpsl pop gs pop or leave test lods leave testb sti insl xchg dec test fs pop lret jle and pop daa dec push leave test fs rcll lret inc cmpsl xor dec aaa movl sbb inc mov cmpsl inc gs int (bad) dec test out push gs dec push gs pop pop dec lret leave test rcl lret mov gs pop imul test xchg (bad) jae mov jnp jae test push cmpsl xchg pop mov call cmp mov xchg jne push sbb movl mov mov add lds lcall (bad) jb add cs or sub lcall mov mov push gs dec inc into ds cmpsl jmp adc xchg fwait cltd inc outsl rcrb dec int3 add out fdivrl jge icebp in and jns dec jo les jno bound out adc push pop dec (bad) xchg fs sbb js pushf push daa sbb jno out pop loopne xor aaa jl pop cmp loop pop pushf push pop aas int cmp ret test mov arpl dec jle mov jbe hlt pop iret lods push adc sub sub mov loope idivb test adc jnp (bad) test or lcall jbe mov xchg sub cli repz (bad) je fisttp sub sub adcl jb dec rcrl xchg push fwait push fmul fisttp les gs inc mov je xchg (bad) pushl push test push test mov adc sub out shr popf push xor jae mov ljmp xor jle xor inc lret push lods add cmp sub lret je mov dec call dec dec or xchg sahf les mov inc pop aas add shl mov dec mov imul mov enter repnz shrl push cmp push addr16 in cmc sub imul add mov mov je inc out jl pop pop (bad) repz cmp idivl arpl sti pop stos iret andl mov data16 popw aam lret adcl pop xchg daa push stos stos push and mov jae daa shll cmp test pop add leave rorb (bad) fmulp leave (bad) and and and ja leave fs mov (bad) adc push dec imul sbb push fs test dec je inc pop push xchg jmp arpl pop lret xlat out daa pop dec pop pop or jne arpl in fcoml inc xchg push mov mov test pop cltd imul insl outsb mov fs mov push outsb inc cwtl imul outsl cltd enter xchg daa jo lcall jno xchg lret push daa jb xchg xchg repnz jnp js inc dec ficom push pop int outsb lods fwait push cltd pop push data16 movsb push pop fwait push lahf rcr rorb clc push loop xchg mov fs push aas pop dec iret mov sbb dec jg gs push xor jge arpl test rorb mov int3 dec fisttpl inc xlat xchg mov push jp cmp test or test push loopne rcrl mov (bad) cwtl insb loop pusha dec jno pcmpgtd xor push test pushf xchg or xchg lcall data16 fwait sub mov fwait scas rcll pop xchg dec adc pusha scas and add int3 ret jp dec mov std mov outsb jo lret into cs jecxz push popf cmp in inc cmp cmp mov inc dec jbe dec inc dec sarl xchg pop add adc int3 lds xchg xor jnp popf aaa aas pop out mov xor inc mov xchg and in (bad) push dec or dec cmp fs cmp test sub notb pop push sahf jp mov jl mov jle stc dec push lds aaa stc arpl jle dec lock mov push sub adc dec adc pop int sub insb daa mov mov (bad) xchg aaa xor fisubrl cmpsl scas pop sub inc push rclb (bad) push mov aad inc add fs ret cs icebp push xor jbe nop adc xor stos subl mov pop mov jo dec mov and and pop mov dec push stc inc mov mov (bad) dec mov or push jmp or mov inc inc mov inc stc jg mov xor dec mov (bad) sub out repz mov dec (bad) call mov push push inc sub mov cmp mov mov jb xchg out enter fwait (bad) jge xchg pop mov movsb adc xchg mov test aam jle push (bad) test jl sbb dec fisubrl xchg ret (bad) lds dec ficompl push in push outsb imul adc out aam in addr16 mov push jmp cmpl xchg adc dec or mov push (bad) or mov xchg mov testl or jp cs popf xchg xadd push stos dec push inc cltd and or out jns and sbb test push sbb (bad) popa push push imull sbb mov dec inc mov dec or rclb in inc jle je aad xchg cwtl lds test icebp pop xor lds mov mov lock outsb add gs dec outsl pop mov addr16 nop xchg rcrl inc add out in cs mov mov mov mov loop test sub jne xor cmpsb xor dec push stos dec cs add in dec rcrb sub imul cmp cs daa xor (bad) or addr16 pop add xchg inc inc lret jge pop popa mov xchg vpaddusw mov sbb xchg aas xchg lds in adc lcall xchg xchg mov push je andl mov push outsl dec xchg and insl pop gs daa xchg inc push jl rcrb xchg incb lahf int3 xchg rorb mov stos repnz bound cmpsl xchg inc loope pushf cs nop rep mov std inc xor or push xchg pop fisubl xlat cmpsl dec pop adc decl push adc dec mov cmp les or dec inc mov pushf mov push mov imul or cmp loopne enter xchg sub push roll movsl inc cmc xchg lret pop push mov mov lods xchg mov xchg fwait mov rorb mov mov dec scas xchg jle jno movsl inc mov lods inc cltd sub inc test jg dec fs jbe sbb cmp subb dec dec jae mov and mov ja mov lcall push popl mov xor sti push sahf mov (bad) pop rcrb (bad) shlb fistl or cld push aas xchg icebp repnz sbb (bad) (bad) jp dec call sub mov dec push call sub xchg out jnp arpl add sbb mov int fs dec outsb xor pop wbinvd and adc inc mov sub add jnp mov imul inc jecxz mov ret and test fisttpl cli test pusha dec mov or lcall push and lods jge aas cmp dec jge cltd inc mov dec test imul sub push outsb setae lods inc stos sub fs cmp mov orl dec inc insl popa mov (bad) push xchg push mov into andl sub adc in imul push xor lods inc or jl or and scas in popf hlt dec push int3 add push sub pop cmp mov jmp cmpsl mov and mov mov (bad) out dec inc pop inc test pusha cmp mov arpl cmp xor cmovbe xchg inc inc nop dec data16 xchg xchg (bad) insl fidivr mov and dec pop cmp mov mov test aas sahf adcl or stos xor mov adc divb mov arpl (bad) mov ret jmp jmp sub mov pop daa cmp enter out std imul in addr16 pop jl jbe ret push daa dec mov mov arpl xchg test sbb lahf pop lret lds lods inc pop lret inc dec subl imul sub (bad) mov mov sbb inc (bad) jno dec mov xor dec jge jbe push or add inc ds fs mov (bad) xor inc lea (bad) fistpl mov dec int3 stos sbb jbe pop jb add cmc nop rorb pop in add add push xchg and (bad) jnp movsl push test dec rol in imul push jo jl push movsl fldenv inc jnp ror inc out (bad) arpl inc adc push into cwtl arpl nop push pop rcl sarl mov dec pop jmp jbe or rcrl xor int jge push dec xchg mov fistl or mov jecxz inc jecxz cmovb ljmp aam pand xchg dec jl shll push mov stc stos lret test push test cmc addr16 ret aam out sub bound push gs nop mov int3 nop sbb cmp sbb enter ja push enter addr16 jb out movsb cli popa scas push or test adc subps inc adc cmp add int3 push lods mov dec (bad) repz adc dec out pop jecxz mov ja push or push xchg push cmp xor adc xor mov or mov adc mov outsb mov mov or push (bad) lods lret out popf mov mov dec pop xchg sbb enter xchg adc push xor mov jae imul lcall je out out jne cmpsb lret adc (bad) imul inc les xchg mov das outsb xor pop test add xor sbb insl mov incl lea arpl enter inc enter mov inc lret pop cwtl adc dec jb aam or lret dec lret dec dec call cs out aaa or push lret push test dec xchg ds or into aam push mov lret lahf dec sbb sub js pop sub (bad) popf (bad) aam insl sub mov xchg orl xchg xchg adc inc sarb inc jp push cs add dec cmc sbb or jl sarb les mov roll xchg std iret sbb mov fsts movsb jp gs inc mov les mov stos lahf out sbb sub xchg ret and mov and or test mul push xor push insb fldl lea xor adc mov je and pushf adc jle mov es (bad) mov add or xor test push test mov cs jne add cmp or cmp xor arpl (bad) lea popf or ret cmp mov rorl movsb jae pop popf subl fincstp daa mov dec sub lods popa push sbb xchg shlb cmp xchg fcmovu adc mov push int3 inc lods out lcall add dec fs imul mov xor popa int3 jl add insb in add xor notl in add inc jg aad mov push imul adc push or arpl sub mov mov insb jle aas mov rorl pop les jae push sbb cmp mov (bad) or pushf jle mov mov xchg imul repz add lret sarb mov push push mov dec insl push (bad) fcomps cmc add push arpl je mov mov pop test test inc movsl mov in jns outsl nop ja out xchg dec inc in int3 roll xchg cmp xchg mov xchg outsb stos jge inc cld imul shrl je mov into cltd dec dec cmp sub inc mov jns int3 outsl pushf stos into test lea lds fsub nop mov push jl and loopne fldlg2 xchg fldlg2 mov jl mov (bad) (bad) int3 pop pop mov inc jg sahf pushf xlat in and xchg push pop nop sub mov nop cmpsl jnp iret jno xchg xchg cmp rclb fdivp fwait sbb or or daa (bad) outsw aaa into push pop push test aas sbbb sub fs dec adc mov fdivrl dec mov stos in je test shl cmp mov jne mov (bad) pop cltd pop or (bad) insl inc add mov add das pop add (bad) jne lds inc (bad) and push lods inc push in dec ja mov inc push fwait cs ret pop popf aas arpl cmp stos push jae ss or adc in cmc cltd jle or loopne inc jmp mov adc push mov push lret movsl or add inc cli rorl aad xchg inc jg out mov ret dec sti add xchg push and dec (bad) repz mov xor lods pop stos sarl jb mov clc mov in cltd jge add push dec mov cmp aaa jle push xchg dec jg ret lcall int3 cs add test sbb aam jle incl in mov jae outsb xchg inc push sub sahf loopne aaa sub push stc cmpsl dec mov adcl scas in rcr xchg pop pop (bad) mov xor ret sbb pop push cmp js (bad) cmp inc sbb or mov sbb or or cmp sbb cwtl in push dec xchg sub push pop mov test xchg pop adc dec or dec mov mov inc inc mov or cld jb dec icebp lock arpl pop inc and mov push int3 pusha lcall jp sbb outsl sbb cld stos xchg inc push pop leave pop pop lods dec add (bad) cs sbb push mov in jns inc bound adc push inc mov pop fs jb push cmp push movsl lods arpl bound je mov jle and pop outsb mov enter loop rclb inc add outsb mov mov dec pushf call push inc mov and mov add (bad) or inc test fdivl cmp (bad) aam lret dec std xchg (bad) cmc (bad) je pop mov sub lret or decl cmp mov sub pop aas inc jne jno jmp out mov loop loope fs dec mov ss sbb push sub bound es push mov daa cwtl stos fildl push lret xor jnp pushf loopne cmp (bad) aam lret push std xchg (bad) hlt das inc dec push into out data16 ljmp dec jnp push add je pop lea mov or lret cmp dec pop (bad) fistpll add pop jno lcall out mov pop aam loop sub lret adc push lret pop jl mov mov iret push mov out gs mov pop push test sub mov add cmp or adc mov out addr16 add jns push jecxz (bad) pusha push xchg daa jle fdivl dec jle outsb cmpsl loop gs sbb sub jno decl in sub mov jne xor push mov je mov (bad) jb pop addl daa andb iret mov adc lock ljmp xor bound jno (bad) fcmove mov adc arpl sub enter xor sar jb movb ss lret inc push aaa dec jle js dec mov xchg cmp xchg ror lret movsl cmp lret aas test test adc (bad) aam cmp lea mov cmp pop mov aas (bad) cs lds insl xchg and (bad) jns inc into call mov ffreep int mov pop lods inc ror outsb add fsubr and rolb pop mov fimul loope sub (bad) js pop daa stos add xlat add bound lods loopne insb dec test ds sub lret jb icebp mov (bad) adc xor lret pop aaa pop and sar push fwait das adc dec mov hlt sub pop xchg in cmp insb xor into xor lret les stos lret (bad) arpl sub enter aaa jno (bad) cmp push mov lret test cmp mov mov aam pop cmp das xchg mov lret sub test adc dec aam aas stos adc ja adc (bad) lret (bad) xlat sbb lret cltd out xor aaa (bad) pushf jnp (bad) and imul ljmp or push jle inc lret mov or sub das loope cmp lret test arpl daa cwtl movsl or pop cmp in xor adc sub bound mov sbb or mov xor imul loop cmpsb stos lret sub addb mov xor xchg jecxz cmp or pop cmp insb lret cmp dec cmp mov mov mov inc pop cmp idivl jne mov int3 jge mov pop (bad) pop arpl push sbb and out and mov mov add and aaa popa pop jg mov add pop jecxz test adc ss cmp bound test ss lret ss sub jnp daa jb scas jo adc nop add jno sbb or jl loop mov aaa jno xor xor (bad) xor pusha decl cmp mov xorl test xor cmp push push cmp or xor adc cli xor mov fisttpl cmp lret jne push mov or adc jae mov idivl pop xor lods dec jae pop enter (bad) push pop sub push mov scas pop outsb xchg add xchg inc and pop iret test and daa out inc dec xchg mov (bad) ljmp les imul pop cmc mov mov xacquire aas mov xor pushf dec dec dec sub data16 dec mov movsb pusha jno dec adc dec push insb dec mov ja xchg outsl inc push jae lock ljmp lods mov push pop dec clc jb loope inc icebp push lahf fs pop pop cmp sbb push (bad) jne repz dec mov in mov xorl inc add ljmp outsb aas movsb inc push inc add ds jecxz sub mov and pop dec enter inc scas jno test pop xlat std sub jo inc mov push xor add inc loope push push mov and icebp jge mov jne push jb push fwait int3 mov out cmpsb cmp ret dec cmc pop push mov jge lds xchg push push sbb rcll xor cli xchg push clc add mov jns mov rcl xchg jle ficoml xchg lcall cmp incb mov mov inc int jmp fldl add mov popf repz into pushf icebp int lret inc cmovl ret or clc adc push in lods outsl inc fnstcw iret ds lret sub int3 sbbl jl icebp (bad) mov push lods or fisubr daa cs int jl inc sbb jnp bound push cli dec sbb mov ret push inc int popa push push nop inc nop lds cs inc jne dec inc inc mov sar out add (bad) cmp push push lahf arpl sub inc fadds icebp lret loop pop cmp push jno cmc mov lea inc mov jnp inc out push retw div mov test cmp push lock std jnp shl mov jle mov cli jb inc mov mov xlat push fstpt cs cli inc cwtl cmp mov mov and dec cltd loopne sbb mov lods inc test sub shrb jnp dec push inc (bad) mov xor jbe jb xchg mov aas jb sub inc enter stos add pop out mov push out jne pop xchg outsl xchg nop ja mov mov in dec addr16 sub jp add mov push outsl xor dec push into cmp cmpsb loop mov sbb xchg imul cmc xchg sub outsl xchg lods mov lahf out jmp mov nop mov dec dec les jg jbe iret int and insb (bad) loopne xlat adc imul insb in pop aam (bad) (bad) out pusha mull ja pusha push out cmpsl daa dec and dec push dec inc or pop in lcall sub ljmp test addr16 inc xlat mov (bad) and add mov outsb adc and dec and xor popf loop cmpsb sub push jp aad pop dec mov push mov mov rcll adc dec jns adc lret rolb adc mov push enter rclb push cs cmpsl mov mov xchg (bad) jmp mov adc pop jecxz mov ret roll jb sub xchg dec or add cwtl dec sbb adc mov dec xchg jp enter add out andl xchg adc add pop dec inc jmp push jae lret out outsl xchg mov shrl in adc or push aad movsb xor inc or jl sbb mov sub cmp sbb sbb inc mov jle inc mov cmp push jl pop repz inc std iret cmpl push into inc lcall add mov pop rorb push ret sarl mov sbb loop ret add sahf (bad) jae xor loop fdivl push mov hlt sub lret adc dec cmp dec pop mov dec sbb or insl in adc pop cmp pop mov and sti cmp js dec (bad) fs fmuls lea test fdivs mov ret mov icebp leave stos dec dec arpl sbb mov or ljmp jnp sub ret adcl dec xchg pop lcall subl jg cwtl daa notl movsb icebp mov aam jns dec sbb call negl cs cmpsl out inc mov inc gs addr16 imul std pop (bad) dec add inc lcall ret lea ds pop addb mov xchg push sarb (bad) xchg push inc (bad) mov xchg ja dec push push mov cmp and jecxz sbb imul mov push inc jmp xor stos enter push out xor nop pop mov adc xorl inc or js icebp or clc in inc lret cmp dec dec (bad) xor arpl pop arpl dec cs xor dec enter loop xor fs dec aaa lea add pop xchg scas ja into and mov pop xchg addr16 cmp (bad) or xchg cld xor sbb jns loopne bound sti test jb (bad) outsb (bad) testb les (bad) mov mov into jns repz dec mov cmp inc int3 les sub cmc sbb xor cmp mov cmp sub jecxz jecxz imul pop xchg dec jno xchg sub push pop into dec (bad) adc cmp fnstenv mov and lret popl inc arpl addr16 xchg nop inc imulb ffreep cmp and test movsl mov sbb dec add cwtl int lods clc data16 fstps dec dec les divb enter outsb or pop adc dec test stos fldcw (bad) pop pop cmp xchg dec jle sub pop (bad) mov mov xchg add hlt mov flds gs cwtl xor push fisubr or dec dec nop dec sub frstor mull cmpsb xchg pop push adcl pusha inc jle arpl dec int mov inc cs fwait outsl mov jae dec insb inc cs pop push outsl ljmp pop cmp jbe lret sahf andl jl cli pushf je pop cmpsb data16 call cmp or lret mov pop ljmp outsb dec dec jg into testb or mov enter sub scas xor xchg iret aam (bad) in push fwait dec fiaddl int mov shlb arpl daa sub fdivrs jae into push xor aaa test roll jo inc fs adc push lods xchg inc ja xor shll jo lds in pop dec enter rol sub movsl and daa push cmovle movb jno inc test mov test lcall mov inc insb ret test fstpl std jecxz sahf sahf push rorb lret (bad) scas ret aas mov inc test ret insl mov or or ret lods inc addr16 jne dec inc ret and jae gs cmp ret and ljmp lahf adc pop scas (bad) xor mov sbb dec mov mov add (bad) aad lahf push lcall aas sahf sti stc stc popa adc inc test inc cmp sub ds cmp adc or test push pop add push push xchg inc push sub je scas out fcoml pop stc (bad) lock add pop jle cmp out test sub inc xchg sub (bad) je cs (bad) push push rol fildl pop stc test push loopne inc ds int xchg or test les mov cmp inc add in mov cwtl ret leave in daa mov dec mov popf fiaddl push fmuls cmp ljmp test adc cmc ds sti insl jge jnp es addr16 sbb jle lahf enter xchg test jns aam iret or insl dec xlat jae cltd push cmp clc cmpsl dec or or cltd daa jb ret xchg mov adc ljmp mov pop pop jcxz inc xchg test sahf push inc imul inc (bad) js xchg add dec mov dec mov or mov lret mov mov push push push mov push je,pn pop pop mov dec push pop mov bound jle dec (bad) pusha in inc (bad) xlat mov es mov imul int testl mov xchg pop daa movsl aas bound addl ss and addr16 xorl pop xor out lea or mov clc xchg int cmp push aaa mov jge mov pop add mov cs (bad) das push incb in jno das jno mov cltd int cmp pushf jne dec dec aad pop dec add lds (bad) mov or push pushf inc jg push mov inc (bad) jp adc cmp or mov dec adc call int push (bad) pop adc dec add mov mov in push jle test aam das push push xlat inc mov push outsb test cmove aaa mov rcll stos jnp imul xchg imul (bad) fcomps mov inc aas test cmp xchg push cmpsl xchg dec icebp sub jb xchg mov lods orl insb or imul mov cmpsb (bad) stc mov out mov dec jle push mov dec mov mov cmpl xchg idivl xchg dec mov jb xchg fcomps insb popf lds les popa xchg dec jp jp scas enter push popa ljmp cs dec test dec scas mov xchg cwtl scas or pushf mov jb rcll (bad) pushf sbb loope mov fnop sbb lea cs addr16 cltd push js adc addr16 cmp mov ret add xchg lods jg cs dec cmp (bad) dec rorl cmpsl int3 pop add add inc popf inc cmp adc sar sahf in or sahf sub (bad) push add out xor cli xor cmp into into push and mov leave mov and call inc (bad) dec dec outsl mov lret lcall mov sub lds lods aas fsubp add xchg cmp jecxz sub and xor (bad) sbb sub mull jge into adc mov pop lret loopne jo cmp sbb mov pop jb (bad) push adc mov ficompl inc push pop icebp and dec lds inc mov inc mov inc gs jl mov in lahf mov test jnp mov imul mov out lret mov es jmp xchg push or stos (bad) arpl xchg xchg mov sbbl dec sub lret sbb adc pushf push (bad) adc push inc jle jb ja pop lcall imul popf inc dec jle push (bad) fnstenv cmp xchg inc pop jnp xchg mov aam movsl cltd sub xlat outsb push pop pop cmp cmpsl imul pop pop mov jl imul xchg outsl mov pop (bad) outsl mov subl xchg loopne ret add lret int3 push xchg je or xchg dec jg movsb jmp inc adc imul lods daa test or mov lods negl (bad) push jecxz mov rorb jne inc lcall add pop ficomp inc sub inc pop push dec dec cmp movsl scas and dec into adc daa xchg icebp repz lcall add xchg stos nop lret test test (bad) add push mov cmp cmp int test push arpl jae andl mov fsubr sahf (bad) sbb cmp jp (bad) fdivs mov jp cmp divb add sub pop outsl inc pop lea sub cmp sahf fwait mov push (bad) pop push outsb cmp mov inc pop inc test ja arpl cli add adc (bad) jge sub xor mov xor push add pop pop pop jae xchg dec inc xchg inc insl or cmc and ret jo lods inc inc pop add jle push into pop push inc mov dec pop push pushf xlat and push addr16 jo sbb inc push sub into add repz mov dec adc lds push sub inc inc sub push aam cmp xor enter insb push push lret dec or int3 push push scas lods mov nop pop dec clc fstl sub adc sbb adc aad dec push jge movl jle jl jl dec sub shl push fldt inc into pop jle mov or push movsl inc dec push or sbb push xchg jne sarl xor popf into push cs test xchg sarb jo jecxz xchg bound cwtl loopne or test (bad) in lds inc pop pop notb fs ljmp subl sub or (bad) lods pop push cmp fsubr xchg sub pop and cmp push add (bad) cs rorl nop jle addr16 jmp add cmp jp push (bad) cmp aad fcomps jge adc dec out sub mov cmc mov pop inc mull xchg stos pop call test add outsb and cmp push cmpb movsl mov mov test lds insl jl jae clc cmp fwait mov jl les push mov inc xchg mov adc sbb jecxz xor out mov fbstp inc or dec test xor rol mov pop push dec cs mov lret mov test nop mov (bad) pop gs xchg dec fdivrl mov mov inc add xchg inc dec cmp into cmp cmpsb add cmp add dec jae mov dec jle imul rcrb cmp int mov dec cwtl (bad) xor pavgb test dec cmpsl xchg dec bnd cs add out (bad) xor adc (bad) daa mov data16 outsb adc addr16 pop lret push fwait mov push adc fcoml or jle adc dec add mov jb cmp jl add dec push dec mov les orl push xchg jae das scas xlat adc (bad) cmp cmp cs push or cltd adc jle mov or push dec push out adcl ss cli push push mov (bad) pop int or mov jnp push lock inc rorb lods inc lods add cmpsl cmp arpl imul jb int3 pop addl jge and cwtl (bad) clc les sub or add pushf test or pop cmp mov push cld ss cmp out movsl lods test out mov sbb xchg inc and icebp and out dec dec xchg enter dec fcompl stos add insl setae sbb (bad) cmp dec ret jmp inc shl aad xchg aas fs xchg mov jns rorl ret and mov aad cmp data16 sbb imul dec jmp ret dec dec enter xor les jnp mov push prefetch adc mov ds mov cmpsb insl mov xor sbbl cmp dec inc imul fwait movsl pop xchg mov mov mov and popw js inc loopne xchg scas sbb les dec push shr lea cmp xor and int pop addr16 add stc mov std iret inc adc cmp xchg push ret int3 test loope imul mov add mov fnop (bad) push je int lret cmp popf pop arpl popa inc sub inc ret insb pop sub xor mov cmpsb mov push cli dec pop cmp dec xor enter imul jnp int3 pop xchg lods ljmp dec stos mov (bad) call out inc push mov inc inc in dec mov out jne xchg mov mov push data16 test popf stc arpl daa adc mov frstor fimul fstpt mov dec pop es daa pop push xchg or xchg addr16 pop mov cld lret sub into add lcall push add or roll div add lea mov xchg stos out mov xchg adc movsl push cmpsb sub enter nop (bad) leave test sbb arpl xor jne js insb lcall in rcll xor xor orl dec cmp mov pop dec popf dec cs xor (bad) icebp test xchg test mov dec out sbb mov mov dec insl or imul roll sub push sub xor psllq inc xchg dec fidivrl adc push adcb fldenv dec (bad) addr16 sub arpl leave xlat cs inc jl dec pop xchg inc (bad) jle xor dec and xor mov cmpsl mov repz sbb mov cmpl or icebp fisttpll add mov mov stc (bad) jp inc xor xor add inc mov jnp push mov or rorb loopne scas shrl pop add pop mov in sbb add cs or cmpsb sub sahf jae (bad) xlat cmp mov xor xor icebp xlat cltd sub cmp hlt xor lods dec arpl ljmp and aaa outsb loope or (bad) test push pop adc dec mov out mov ret pushf stos or ret into adc (bad) mov dec pusha scas inc inc push or aam sub andl test movsb inc adc sub mov cld pop in in out stos out gs adcl add lea xchg or fdivrs xor mov (bad) out push ja int sbb in gs and pusha mov mov push lahf inc ret (bad) out jmp lods inc pop sti mov mov movsl xor sub add mov or repz mov sub jle jne jae popf lret (bad) das xchg stos insl ljmp lret cs into ds cmpsb sub xchg mov in push lods std and std add mov pop sub adcl dec ror sub loopw pop dec lcall mov ljmp ret (bad) sbb jne jle out popa cmp fwait inc daa repz dec xor testl mov sbb lods int3 sti lods sti daa mov inc or sub push outsl movsl xchg push test mov mov int leave (bad) lret mov mov cmpsb (bad) cltd gs fcmovb xchg fimul or inc lret (bad) leave icebp call nop mov xchg int sub ljmp pop pushf movsb cmp inc aam daa pop sub mov (bad) lahf icebp sub sub mov xchg pop jbe test mov mov jmp int3 pop mov push push dec xchg pop (bad) out stc cmpsb push pop mov in inc dec daa movsl push (bad) push inc addr16 sahf hlt xchg shr adc jp mov push sub dec pop out dec xlat ss (bad) push iret xlat testb outsl shr jnp pop cwtl lahf mov and add mov xlat imul jnp inc jae arpl mov sub mov (bad) es out rcrb add cmp outsb inc pusha cmpsl xor push cltd lods pop mov lds ljmp ljmp jecxz daa popa mov jno je out cmpsl push in jne or test mov inc jle or nop jne std cs mov mov rclb insl or arpl push test mov and bound or add dec test cmpsl jno sub lds mov push int3 xchg lret lods cmp jge pushf aad dec and xchg xor pop jno push pop (bad) adcl sti test mov fisub ficoml xchg xchg decl adc lds dec fmuls cli mov jbe jnp and push das xchg jle mov mov push lods dec sub or xor lret sub cmp push lcall jmp cmc (bad) xchg xor cli (bad) cmpsb push clc adc jecxz int aam jae dec cs cmp xlat (bad) aad and dec scas jg mov into adc xchg lds iret mov bound fcomps loopne mov or jle sahf (bad) daa inc add mov push xor dec in push pop outsb cld in push in into mov or push push mov push pusha stc setnp test jnp fnstcw xchg xchg adc pop out jl jns fsubs outsl repz push movb inc int xchg lret mov push (bad) repnz (bad) jo xchg leave cld xchg pop lods inc xor and dec push js (bad) dec xor or out aaa push sub xor push push sub ljmp inc ret dec cs pop bound mov dec das mov jp fldpi (bad) and int3 inc lods inc lret dec fwait sub cmc (bad) jae xlat rorl (bad) into sbb (bad) xor lods pop ret ret push mov test cmc inc (bad) je rol and je inc (bad) xchg test rclb jl push fwait nop add pop inc cmp popl popf lds pushf mov (bad) bound pop push jne imul sbb inc sbb (bad) test xor xchg xchg sti std xor and mov push jo add cmp out insb imulb jmp aam (bad) lock mov dec pop jno cmp movb xor jg push in in push les pop ror xchg mov dec (bad) int3 inc shlb jl dec cs in push mov push push ds loopne xchg dec dec mov mov sub sar pop mov mov sub dec push (bad) pop pop and sbb xor imul popa inc or dec mov data16 xchg pop mov inc inc mov das leave lret ljmp or inc int3 mov pushf cmpsl push mov les std sbb (bad) out int3 lods xchg loope inc add lcall loop mov adc jne (bad) enter mov mov inc stos sub movsb fildl rorl ret rcrb push repz xchg sub pop shl aas inc xchg and ja jge mov or in dec or inc mov push push iret repz shufps enter and jmp xchg stos xor inc xlat inc mov les push aad ss aam imul push add lret push pop add cld das cltd iret cmp (bad) sub or outsb add add pop jne xor mov daa cld clc dec iret jb repnz in cmpsb sbb inc enter in jo inc xor mov cmc xchg push shrl push and mov dec pop repz push adcl or mov pushf push inc jo sbb pop inc inc inc dec jae adc pop inc sbb push inc xor (bad) pop add dec adc or ds inc adc les mov pop rcrl push scas and imul inc or push lcall xchg movsb push or inc mov mov push stos inc les in test sti xor ficoml out stos xchg mov xor gs cltd lahf test inc lds das push xor push pop jae aam xchg xor jmp fdiv lea jne dec push je repnz in or cmpsl mov push jl lock cmp pop mov das add loope inc int3 mov xorl dec dec lock pop cmpsl (bad) cmp jg xchg jne andps or pop int3 mov mov pushf jno lahf dec mov pushf imul repz notl gs jmp test xchg sti dec dec mov dec mov jmp leave dec xchg cmp dec call les xchg mov dec sti clc mov xchg loop add cmc inc loope lcall cs mov and mov ret cltd gs insl int3 fcmovnb xor leave xor push imul push aas insb mov repnz (bad) dec dec (bad) rorl push or loop add inc repnz in cmpsl inc insl mov jns inc fs test mov (bad) out inc jg push mov outsl shll jne pop aad lds pop dec addr16 sub (bad) mov fwait gs add lahf loope mov pop movb and xchg pop push aaa scas dec incb lods dec xchg pushf subl repz add mov mov lods daa mov (bad) cs fs stc cmpsl inc dec in pushf dec inc fistp inc rclb aas or xchg daa sub dec int3 insl jbe sbb call add repz fwait pop xchg add xor nop bound dec int3 sub sbb add ds mov push dec cmc dec iret mov or ret xchg push orl xchg out add test push cmc pop rorl dec pop inc cltd arpl test dec or ret and sub mov push pop stos ss adc ret popa xorl adc int3 test sub icebp int3 push andb (bad) pop imul aaa subl sahf fstps adc push mov sbb (bad) pop or pop mov (bad) das fwait dec stos les dec mov cmpsl bound xor mov outsl push sub mov sub xlat dec lods and or sub mov fs aam mov push xchg rclb and add xor jle dec dec xchg dec test mov xchg xchg add push test sbbl xchg mov cs fldenv arpl iret push leave jg mov jo adc dec ret mov lds sub jbe push jl movsl and mov jmp or fisubl cmc mov (bad) push jl push std lds mov pushf push lret jle lds lret xchg push adc lret jg pop mov call sbb rolb inc imul push jno or adc sub insb pop pushf arpl cltd pop lret mov pop pushl lcall dec push jnp repz adc inc jmp fwait out test ljmp ret xor popa pop fcomi mov dec mov addr16 fisubr enter imul movsl stos cltd push flds add dec push inc mov loop out or inc aaa bndstx dec cs push or push les inc xchg je push outsl mov dec mov rcrb lret jne push xchg insb xor and cmp fdivrs rcll dec daa stos rcrb inc xchg stos outsl fidivrl jo orl notb pop jmp push pop (bad) lock jae dec stos inc mov jmp xchg iret jl stos insl imul mov push push push cltd in rep jle mov ret mov ja (bad) pusha and mov popa mov in pop cmpsl jo push mov addl jnp sbb int int3 lahf je dec scas sbb lds push sub jne jp jae mov xchg gs imul pop repnz rcll push adc int rol ret jge mov sub cltd xchg sub out aam (bad) repz push dec rorb mov adc inc add fistl dec and push dec mov inc es scas (bad) arpl jb mov dec mov add aaa pop (bad) outsl dec pop addr16 cld repz fisubl jb paddq mov cmpsl add push mov jle fwait xchg cmp mov xchg push stos lds lods mov (bad) sti jl inc xchg mov inc shlb out popf mov jns adc lea mov xchg adc cmpl mov mov sub loopne (bad) and cld fdivrl cmp call inc or loopne in repz jne xchg push cmpb (bad) fistp fmul js std add or inc fcoms jae iret cs push jnp sti add test outsb or xor xchg sub nop scas mov fisubrl sub jne test inc addr16 mov xchg cltd cmpsb imul inc inc xchg popl add lods imul cmc adc ja aam cs xor fisttpl push inc adc hlt hlt adcb mov addr16 lea inc lods add roll outsl or pop nop in insb cmp enter adc rclb pop repnz add dec inc mov add jg xchg int3 lret rcrb repz fisttpll xchg dec add arpl sahf hlt and enter adc cmp mov loope xchg push jle mov insl enter and mov lahf js jecxz mov mov mov mov ja roll movsl xchg mov js adc push sub sbb mov push mov jle mov add xchg xchg pusha repz add dec insl mul push test fs sbb dec cli lret imul cmc pop inc aas subb test mov incb mov outsl (bad) fcomps or push and cwtl push push fcomps lahf int jp cmpsb addr16 lret cmp andl repnz mov jb jbe mov outsb pop xor jbe sysenter fimul push mov repz addr16 call xchg dec ret test xor sbb push scas loope push dec add dec insb adc outsl jle mov pusha mov xchg sub cmp dec mov cs push fdivrl inc in test cltd mov mov mov rcll inc cmp subl fildll addr16 hlt dec sbb int3 xchg push sahf cmpsl cmc enter mov inc test cmpsl jb aas shll xchg aaa dec in test jbe loop mov pop lret mov addr16 shlb (bad) imul stos es xor dec mov (bad) (bad) adc rcrb mov stos and xchg enter inc int into rcll cmp mov sahf mov cltd pop sbb aas ret ja pop add shll call push cmpl les rcrb pop inc or arpl sti pop dec fisub push cmpsl inc xchg xchg mov xor xor mov xlat scas outsl std add adc push ja dec cmpsl std in dec xlat xchg (bad) out imul mov (bad) mov and out outsb adc mov dec inc sbb dec mov push mov mov pop test pop dec dec inc movsb mov test fucomi in push mov mov sbb shll dec aad mov push lcall mov mov mov xchg cmp adc int push outsb fstl out cmp sub adc xorl mov and test cs int mov movsl aad pop jns arpl cmp pop jl cmp jle mov sbb inc std mov lds sub fwait inc mov inc shrl orl outsl inc loope sahf sub add popf mov pushf insl push rcr push jmp pop and fstpl xchg jo inc out xchg cmpsl cmp mov fs mov dec fs dec mov leave pop mov dec rclb mov mov fwait mov je sti out xchg orl add xchg lea int3 pop jle cmp pop sbb mov roll lgs loop or push cwtl ret movl mov push inc sarl add mov into jge mov push xchg mov add ret ret mov into lcall js mov push pop ret mov or jae xchg inc mov pop adc jecxz or add dec loope add into xchg scas enter lahf dec lods xchg jo movsb lds inc cltd insb mov or pop mov into inc outsl pop aam pop push push lods pop rorl sarl call jns ret into pop sub je mov inc lods xchg xchg cld addr16 adc stc int3 adc std scas and mov test sub pop mov cmp dec ret popa iret mov jbe fs out pop dec lcall mov jecxz inc dec dec cmpl jecxz mov dec pop ret movsb pop mov repz dec imul (bad) mov pop cltd cmp dec pop jnp add inc jg mov xchg les xchg mov int3 adc cwtl dec xchg icebp mov cmpl mov mov outsb sub mov int arpl pusha lret mov add mov ss in imull fwait (bad) lods adc jnp mov lret push inc jl jecxz arpl adcl ss pop lods addl cmp or and out in into cmpsb xchg fdivs adc sub aam iret push les push xchg (bad) (bad) xchg xlat xchg push aad mov mov stos push push mov int3 test dec rcll cmp sahf cli cmp mov repnz aam push test pop jmp dec outsl movb inc adc or mov int stos push stos dec or bound aas sub jle popa lret andl adc fdivs adc jb xchg out dec pop repz hlt push cli push push or xchg gs xlat cmp lret inc adcl fisttpl mov or pop cwtl out pushf xchg jb jg fidivl in dec or xor or into (bad) jo mov dec ds cmp adc mov pop inc ret (bad) push inc fsubl cltd sbb cmpsl fimull jecxz xchg aaa dec mov stc xchg inc inc stos cmp pop mov jne aas push inc dec cmp inc les mov inc insl ficom (bad) (bad) push aad imul push inc stos or (bad) adc sarb xchg ds shrl jb jl pop mov stos or sub pop fbld cli pop stos and int mov das fadds leave call es aad mov sub xchg std gs jl clc ret dec pop rcrl insb enter jnp push adc mov pop xchg jg xchg clc pusha rcrl jl sbb adc pop dec lcall dec (bad) jne push popf lret imul dec or xchg jle insl mov adc dec xor loop push jnp dec lcall mov mov dec ret shrl sub lock jle xchg mov ret dec dec add pop dec mov mov daa arpl ja pop mov jnp hlt xchg sub push add cli je adc idivb divb push jle ret mov fsts sbb sti data16 pop xchg int dec push rcll push jnp push inc fiaddl cmp outsl arpl and or mov push adc or (bad) jmp dec rorl xchg push push mov (bad) gs jp (bad) popf insl sub or (bad) jecxz mov int xchg or or cmp and sti iret enter movsl push push push pop push mov cmpsl aas cld into ss cmc lret daa out data16 out xchg pop sti cmpsl mov pop bound es jle lcall inc in dec movl dec inc cmp push add test push xchg gs mov inc cs daa mov ficoml call and js or add rcll (bad) or js dec mov dec js inc dec arpl (bad) xchg mov xor push sub xchg out push mov rcll fwait push divl pusha cmp mov vprotw add mov jno (bad) inc aas and es fdivrl (bad) mov lds mov mov (bad) std outsl pop and sbb cs pop mov or add mov add sti mov xchg std and add pop xchg (bad) insb adc js mov xchg push enter add dec push push shrl add (bad) lahf pop pop movsb or pop push ja pushf test test mov aam jecxz sahf jb add leave sub pop pusha sti les mov (bad) inc je pop ret fwait sbbl es rorl aas (bad) push xchg pop in dec pop iret aam flds aad xchg lahf and stos sbb xchg adc fst (bad) jle or push push mov std mov dec cmp pop mov inc or data16 insl dec stos (bad) mov or insl sub dec mov test data16 adc mov fpatan ss lods arpl aaa jae mov sbb pop lret add add pop pop cwtl ret dec inc (bad) jae mov insb test repz je pop rolb arpl (bad) movsl push push stos jb inc jp dec cltd mov pop adc cs pop (bad) jae add jbe dec add xor test jne cs jbe xchg mov push mov mov cmp fprem1 addr16 jne pop aas jae pop orb inc pop pmulhuw mov jp push xchg imul stos or cltd inc xor clc pop data16 dec stos repz (bad) jae adc jae push mov mov jmp das dec (bad) ja xchg aam and enter popa or pop add push xchg dec xchg xchg (bad) or or orl ret insb jb test sub subl and mov inc mov and or dec dec mov leave mov imul fs mov pop xchg aaa cwtl rorl push add xchg dec mov inc inc lea mov pop rorl imul int or inc push or or loopne pushf jle lds les dec dec int3 inc xchg push add ret cld repz je mov mov das mov push add int3 xchg push enter mov lods mov inc mov adc mov xor gs sbb push inc add stc shrl shll cmp mov (bad) mov adc rorl xchg dec inc mov mov dec adc scas adc fstpt sub sti mov mov add std mov jno aam test push repz xor cltd outsb xor mov xlat xor repnz lret adc div insl rorl fnstcw pop mov or lea sub jle push mov mov push repz out mov xor dec sbb and pop jl dec (bad) push shrl ljmp inc jns mov mov xchg xchg arpl (bad) lcall or mull aas xor xchg mov jne cmp cltd ja rcl cwtl in nop aas decb out das inc cmp mov push out dec test shrb inc inc jbe mov scas test test sbbl xchg std mov push mov inc int3 push movb imul ror lret mov (bad) xor adc xchg xchg pop int3 and push rcrl nop and test out sub jle rorb (bad) or rcll adc jle sub movsb inc jmp mov pop push cmp fsubs test jle dec lds popa das out push xor hlt (bad) repz insl jnp iret lea (bad) pop (bad) icebp mov mov imul jle cmpsw pop iret out adc jecxz lahf inc int3 xchg stos bound sbb xlat mov push leave movsl insb imul cltd and (bad) rolb adc mov mov add cmpl push pop out xor cs xor ja mov (bad) xchg (bad) xchg repz aas or jle arpl sti roll push lea (bad) mov das cmp inc test nop mov fidivrl jne (bad) sbb mov cmpsl mov push rclb js mov sub fwait sub jnp movsb mov dec rorl sbb enter lds mov jae popf adc insb mov pop pop int3 dec lret xlat xchg ret sub jle mov (bad) mov inc cmp inc jle jnp or int3 das mov inc sub cwtl xchg int3 (bad) ror mov iret int3 subb add cmp iret xor (bad) jne rolb pop lods icebp repnz int3 mov push rcrl (bad) fisttpl xchg mov mov lea cmp clc inc jno in jno xor mov test test sbb clc popf arpl xchg and stc and loop rorb dec mov mov movb push cmp jp adc jno imul jo lret add dec dec xlat outsb lds cwtl adc rcrl ja adc fldenv xchg inc inc add dec sbb test aas data16 fidivl addr16 pop sti ficompl xor mov mov ret inc mov jg dec xchg lcall xor mov xor sub add push cwtl cltd inc inc fist push inc and or jo xchg push xchg sbb mov and ja push sbb add sub push repz rcrb mov push add sub outsb or repz xchg jnp ret fist jne out call sub inc cltd inc test push mov jle sbb cmp pop mov xchg jle jg fldcw cmc out into iret lcall dec sub out rcll adc jp or fstps stos insl mov orl pushf mov fwait cld enter btr outsb inc push xor ror push mov jecxz rcrb push addr16 bound (bad) jo mov or (bad) lahf ja mov int3 dec mov push sbbl dec jecxz add mov add cmp bound sub loop fs push pop lods imul mov imul jno fisubrl adc inc lods mov stos ret test rcl ret insl jmp fcmovbe sub and roll addr16 imul mov outsb cmp dec mov jnp jg fldl jecxz les ljmp cltd (bad) mov pop mov lret xchg mov xchg jne loope sbb add (bad) xchg or test sub in (bad) test mov repnz in xchg lcall push inc ja jno outsb mov xchg push popf sbb lea adcb add mov xor pop jnp int dec dec push add lock or std jmp push push xchg add dec stos shlb cs pop adc cmp xchg (bad) in mov add (bad) js (bad) int3 ljmp xor lret xchg xchg push pop aad in fdivrs ret (bad) js enter dec sbb xchg dec in add insl push repz das mov push mov push les push add js push mov add (bad) mov mov or jo pushf insl cmp (bad) out int xlat mov dec sti lret cmp push out sub ret btr pop mov (bad) dec inc mov mov lcall ret jb xchg test mov lret imul pop inc and cld mov outsl outsb push mov xchg or mov xchg mov icebp lds push aaa lret pop das dec xor sub push (bad) les pop inc mov movsl xor gs push add stos int3 push cmp (bad) testb sbb fild mov aad lahf lret es xor scas add andb sub mov clc sub or jbe cld mov adc outsl mov shll dec push loopne xchg ret dec (bad) mov lret gs push mov mov xchg fiaddl mov inc hlt mov fsubrl fwait test out mov sti xchg mov push pop dec daa out or cwtl dec dec sarb xchg dec mov sbb inc push (bad) jae inc cmpsl or dec cmpsl roll pop inc mov xor cmpsl push movsb ret iret (bad) mov test lods mov ja xchg rol or adc xchg sbb xchg or inc adc push test outsl in jno lret xlat push adc popf pushf lds mov cli push iret popa mov pop shll cwtl insb push add push inc sbb cmp sbb push jno xchg jl sbb or aaa icebp add inc mov inc or les mov inc or dec cmp cmp inc cltd mov mov mov inc or pushf idivb add outsl jb push dec mov shll xchg and ss aaa (bad) lock inc mov addr16 sbbl arpl imul push addr16 mov (bad) jb sbb dec (bad) mov xor (bad) loop inc movsb rcl scas inc push mov inc dec daa lret movsb xchg das xchg fnstcw mov das dec shrl mov xchg sub faddl sub lock jns mov xchg sbb xor mov int3 inc jle int jmp jns lahf test int dec cld and fcmovnb pop inc xchg stc sub test imul push pop xchg adc mov xlat pop or idivl jns mov inc mov test push pop in add xor js,pn test mov (bad) lret push xchg xchg lea lret lcall sub inc das inc arpl mov xchg nop roll mov sub xchg cld aam sub adc int3 add daa and dec sbb test (bad) jb push jmp out inc jb xor mov adc mov sbb mov arpl inc lea dec sar xor std and jp mov or dec inc mov movsl push and shr xor pop sbbl mov lock xchg lds sbb cmp or jns mov inc dec xchg cmpsl mull nop dec ficom mov mov sub adcl clc je lahf push mov (bad) mov and outsb je leave or push add leave pop xor addr16 xchg loope and loop shrl xchg cld add (bad) rcr adc dec rcll lret lea xchg cmc xchg xchg fsubrl mov or lds push jge cmp add lods xchg popf cmp adc pop mov insl outsl rol or xor aad clc and xor inc lea sbb movsb lret stc ror sbb test ss push adc inc repnz std pop rolb pop jecxz ss sub add mov jbe mov push adc pop inc ficompl ret inc jns test cmp adc sub or into movsb ja cmp adc in mov mov mov (bad) inc lods movb xor jmp mov arpl jmp or (bad) mov push pop into inc fs cmpsl sub fs xlat push add pop push iret xchg dec xchg imul jbe notl cmpsb repnz mov inc inc xchg (bad) jb mov arpl jae ret mov mov xchg pcmpgtb mov je dec test xchg inc iret out push push push dec and (bad) insl pop jge add push mov cmp push ret mov shr mov mov cld rclb mov inc xchg adc pop popa push jb test les xchg dec int ja pop dec lret jns inc adc lods insl adc mov dec push test mov sbb imul jno stc inc mov ror mov jb push push push push xlat mulb xorb sbb cmpsb inc xor aaa in arpl lea (bad) mov arpl mov sti repnz xchg test mov xor dec mov pusha das hlt cmc dec mov stos cmpsl pop insb icebp arpl je fcompl xchg ja inc (bad) push mov and cmp or scas ljmp or and or inc push insl inc xchg xchg loopne push dec mov jecxz mov fs add dec mov addr16 lods rorb pusha fdivl xor push mov lcall push dec mov jo pop (bad) jne lock gs ret lcall test lods push dec loop pop pop aas pop and and adc jne adc (bad) int3 fmuls data16 lahf xchg lahf pop mov rclb add sub inc rorb and lock in mov fidiv popf icebp mov stc (bad) sahf xchg jge sub xor pop imul scas jl push or sti in cld aam popf mov lahf rorl arpl xchg inc xchg xor xchg push cld dec jnp lret pop fwait add or arpl std jb inc mov cmp mov jmp adc xchg jecxz xchg push jb push mov aad xor mov push mov jg mov repnz rcl mov xchg lret push sub pop fild iret data16 ret pop ret cmpsl into push add inc fiaddl sbb push and nop sti ret out les sub popa push aas adc mov xchg adc adc stos or daa push imul dec insb cs push stc imul cld stc call loop push rcrb jae xchg dec movsl inc lret lahf inc inc rcl ljmp cltd push add push cmc add aam fnstenv push loopne xor add cltd fbstp bound arpl mov loope in mov xchg dec test adc das xchg push or ret in fnop mov push imul test adcl mov jg mov sahf jae xor mov xchg clc fldenv sbb scas mov push inc roll add push jae xchg js aad aam gs xchg cmpsb cli push (bad) shll xchg addr16 or shll pop adc sbb dec xchg (bad) imulb pop int3 xchg push aam test std push (bad) decb repnz push ret xchg push xor inc mov and sub in out dec inc add rol xor xor xchg lahf and imulb icebp ja sub sbb push int add cmp cli in xchg jmp xchg sbb aam bound clc dec dec mov testl pop idivl cmpsl jmp or loop mov (bad) enter or out pop jg jg mov fidiv push push push ret mov push inc mov loopne push dec (bad) jg int3 cmpb mov push jae sbb mov or cltd mov inc ljmp imul push mov repz sarb daa in xchg enter push xor xbegin xchg stc mov mov push adc adc pop lret dec addr16 aad aaa fdivrl aas dec mov rol popf xor cs xchg push cmp outsl mov mov test lea pop push arpl xlat adc push mov jne push (bad) jno xor jne ds aaa loop inc dec ret andl push das dec ja push sahf adc jnp (bad) jmp movsl dec mov aas (bad) loop mov daa (bad) jne je dec jmp xchg sub inc clc xor test fsts insb and adc push loope fldt rorb dec mov dec add jge js fdivs mov clc daa aas int3 movsl sahf rorb stos or test sub xchg mov xlat push je xchg pop jae fcmovnu pushf jo add out xchg xchg inc lea fs repnz faddl jecxz cwtl lcall fldcw lods sub push insl mov shrl xchg add icebp inc jg cs mov mov mov dec xchg and and push bound mull sbb mov andl xor mov mov cwtl repz fistl fldenv sub inc bnd xchg sub jb sbb ror xchg xorb xchg xchg cmp pop popa sub mov in push mov js out jmp aas pop inc add jno loopne mov inc lret inc popa xchg xchg push test cmp shlb push cmpsb lret sub ds test loopne add xchg sub cmp arpl mov adc xorl test fs mov lock jns cmp cmp mov and mov pop out xchg out xchg pop imul das movsb fwait mov cli add xor and flds insl std push in call mov cmc xchg repz cmp in push inc sbb add nop mov (bad) cmp mov mov lahf push push cmp push xchg movsl lahf mov jge pop inc jb push xchg aam mov fwait call sbb les sub or fisttpll pop xchg int sub jo xorl jae int sbb cmp imul jmp push ret add lret in add mov dec or dec mov gs xchg jno mov ret in ret jl pop cmpl xchg xchg dec add xchg int3 push fisttpl push rolb aas adc scas mov mov jl push icebp fisubl dec dec dec pop int3 mov cmp notb dec int3 mov test (bad) and or (bad) jge test xchg sub pop push cmc fsubl jno push (bad) sub xor hlt aaa lods cld xchg stos arpl or aas outsb test addr16 xchg inc arpl cmpsl jnp jg fdivl jbe inc sub xchg enter ret out enter pusha xchg lcall xchg and dec cmpl push lret daa mov arpl inc dec and faddl mov ffree push cltd aad add arpl orl sbb cmp jmp mov and sti mov lahf mov call jne mov ja mov cwtl or repz adc lock sub inc dec pusha insb cwtl and arpl (bad) cmc xor xchg push (bad) add xchg push mov lret sub arpl push add push repz add cmp or add sbb sbb je push pop test loope xchg or and popa mov daa (bad) aaa imull sub cmp das lea popa pushf sbbl xchg int3 push push test dec push jge dec add push ss push std aad push outsl pusha xchg inc cmp push add rolb or mov data16 jge decl in pop sub aad cli fwait inc popf ja movb (bad) loope les rcll mov jbe mov or (bad) int3 dec leave add jne xor xchg and inc inc les sub adc int3 mov aad or (bad) rclb xchg pop sub (bad) or imul daa cmp pop xchg fstps xchg push arpl fsubrs adc (bad) mov popa inc pop jb adc cmp repz inc inc nop pop push stc pop movb je pop push pushf inc test rcrl or inc or inc or dec or dec sbb mov mov xchg enter cwtl addr16 test outsl pushf jae fs jnp jg into dec xchg cmpsl subl rorl xchg or notl cwtl cmpsl mov stos cmc scas pop test dec push mov xchg push enter cmpsb rclb fptan or and mov (bad) xchg loopne sub or rcr fiaddl or sbb push je rclb inc and add dec ljmp mov mov pop mov inc inc push pop in inc dec xchg jns dec popf cmp jns mov fildl jo push fs mov insl push in imul sub xor fs sarl enter fbstp aad cmpl inc int3 nop xor pop lcall and sub addr16 push ret mov inc or rol shl outsb inc inc push xchg inc pop aam data16 push inc cmp jne popa mov lret lret dec mov incb add jl push lcall pop loopne pop inc out arpl pop addr16 imul (bad) jecxz (bad) insb jne loopne jnp lret jg test mov (bad) adc insl jge dec rcll lahf jno mov stos lahf test jge fs mov mov mov lret repnz dec mov (bad) lock push enter into inc (bad) enter mov or cmp bound cmpsl pop mov jg sti or cmp bound daa or cmc pop jl inc dec xchg into xchg nop push pop dec mov and inc mov das test xchg dec iret jno enter pop jg add test nop aas sbb add push jg mov adc pushf pop test inc mov mov dec ret and lods or dec popf and or xor cli insb jle or icebp inc push scas and inc push inc dec outsb push mov inc xchg lea push roll (bad) dec pop arpl daa mov mov xor cmp je and hlt les arpl dec andl inc imul outsl cmp xor popf cli hlt jbe ljmp js jae imul inc or xchg sahf jg mov jmp inc jle shlb inc add outsb add xchg daa sub adc cmpl mov add jge sub push push movb fstl pop jl popa (bad) pop jecxz cltd loope jg dec outsl push outsb mov jle mov out jne mov imul gs xchg inc xchg (bad) rcl dec inc push mov rorl push fwait mov push insb test xchg jle test pop aas mov jbe mov mov mov scas push and lods lods jge fcompl lock jmp bound lcall push mov or xchg clc or sahf xchg pop xor xor out mov inc or jae pop push push jle pop mov inc (bad) lock jl add cltd mov fnstcw mov in mov xchg dec js insl sub pop or sbb repnz mov add push addr16 mov mov inc cli push push xchg divl add or int3 test adc push (bad) xor das repz ret push xchg shll mov (bad) jle sbb imul (bad) fcomps push fmull and xchg (bad) addr16 in cmp mov ret xchg jae push inc jle arpl fwait mov pop fwait cmp aad dec repz aas movsl inc inc into xchg ljmp mov adc mov les xchg sbb repnz inc test cli cmp insb dec addr16 mov cli mov and insl jae adc pop aam lds xchg nop aaa dec xor sbb lcall cltd int pop out jge mov test dec lcall fmull jmp push inc xchg jnp dec jl mov rcrl loopne movsl pop inc pop incl mov fild lods add je xor gs or in test mov inc adc mov out pop adc fsubr pmulhw insl sub test stc mov mov mov lock mov sub inc fdivrl jl outsb test sub daa mov leave notb adc cmp dec cmp js cld (bad) or adc push stc jo jbe test into andl push cli rorl xor mov mov sub xchg or testb mov aam cmp imul movsl inc call jecxz and sar pushf inc push lret or push std imul ficoml mov leave mov arpl outsl jo loopne dec scas vpternlogd xchg ss ret rcll dec lea popa mov out pop push xchg push imul mov cli mov cmp (bad) or jecxz outsb xchg ds enter push jl dec dec or inc repz int pop dec xchg push lret sbb dec xchg dec xchg and mov xchg mov scas xchg adc sahf sbb pop mov test loopne stc je push fmuls outsb or cmp in bound sbb push inc int push inc aad cwtl or inc xchg icebp int3 ret insl dec adc cli or aas jle mov arpl mov cli (bad) mov lret imul (bad) push sbb (bad) adc jecxz fldl mov xchg inc and sbb mov aad fimull pop xchg sahf pop std mov push mov mov sbb jbe inc fadd nop and cli rorl or jge (bad) jle sbb sbb cli lret insl sub fcoms jbe js insl (bad) fcomps mov mov pop inc lahf inc cmp xorl inc inc adc test pop inc and inc test dec mov rcll into hlt hlt ret jle and outsl lods or adc push or mov repz mov sti dec pop sarb jns dec jmp (bad) daa or fisubl out add mov mov fdivrs jne push inc hlt xor xlat lcall mov mov insl (bad) leave dec mov xchg inc pop arpl add fdivs addr16 push jno push pushf pop das adc (bad) mov mov sbb inc add sub jmp mov and pushf sbb shrl dec dec leave mov mov push sbb dec mov sbb xor jp mov (bad) mov test nop aad add jle add popa adc aas sbb mov mulb loop aas add mov mov into sbb adc mov fcmovnbe repnz lea (bad) inc sti in jp incb or out sbb sub sahf xor cmp inc lret popa mov cmp xlat pop lock cwtl in xchg xchg pop in out adc fwait lock push mov mov jmp mov mov inc leave dec add xchg dec jecxz jns stc clc dec sub clc cltd inc icebp add inc cwtl mov push jg hlt in out xchg pop jl mov rolb loopne xchg fwait int3 mov int fstps dec push xchg inc das insl mov push cltd in jl dec push dec sbb arpl sbbl rclb adc mov aaa sar mov fcmove sbb arpl push adc shrb sbb pop push mov xlat inc lock xchg fimul mov fstpt insl add imul aaa or test rcl call icebp int3 xor ds push lret pushf cltd repz pop add sub xchg lds inc (bad) fisubrl arpl mov movsl ds pushf inc push fwait dec pop in push inc dec popa in pop addr16 popf (bad) add adc push in pop fwait aad cmp mov pop dec xchg xchg cwtl (bad) pop leave rcrl cmp add in out daa sbb jbe sub pop rclb leave into lock push mov jo or data16 cwtl pop pop lret fild sbb (bad) push test xchg cltd lret mov rorb aas mov fistl mov push dec gs dec ror inc lods push popf and cmp mov sbb dec fildll sbb pop inc jle mov mov mov xchg xchg and fs cmp out mov inc or dec add test das sti test add mov imul fldcw add test xchg xchg popa mov addr16 cmp mov sub aaa test popa out sub jne scas insb leave push pop jp add xchg xchg xor into out movsl in add mov pushf jge (bad) sbb adc push xchg sbb cwtl loopne cld arpl add fst (bad) icebp mov iret fsubp aad gs jp mov push inc lahf cld jae sub xor jb push pop or xchg das cwtl ja dec icebp sub add xor add outsb js cmpsl test fcomp lds mov into push movb stos (bad) or repnz cmp mov push jecxz movb jecxz mov fcomip je xor ficompl orl adc scas (bad) dec jle adc xchg cltd cli out dec fwait repz ret movsl adc jmp out cltd arpl push push ret push leave jge,pn xchg adc loop mov rcl aam jle dec lret cwtl inc andl aam clc lea orl xchg clc xor push adc mov scas sahf mov gs cmpsb sub adc xchg inc xchg mov mov stos dec arpl inc mov mov sub adc push call mov das addr16 xor mov mov adc je aas (bad) negl mov subl xchg arpl adc push (bad) popf rol repnz lret jbe push sti lds addr16 pop add pusha push add xchg aas or jbe leave push cmp aam push (bad) pop in mov es in outsl mov push and push mov and sub cmp push add pop pop xor stos pusha jp ja scas sub mov mov jo (bad) test dec pop ja lods (bad) pushf push orl xchg inc push pushf mov mov mov into fbstp inc std rcr adc sti mov add movsb arpl jne aam jbe dec xchg xor push mov jl sti gs imul mov xchg pop outsl das out lods mov mov jne mov sub loope and mov ja repnz mov scas insl mov lcall push and rorb adc add adc call fisttp out sbb fldenv sbb push dec aas arpl inc jle mov scas fistl mov js jge arpl mov push sub movb xchg dec jecxz ror push pop mov loop dec pusha xchg dec ljmp js idivb imul daa gs or aaa outsb adc mov dec test rorl pop cwtl and xor testl ficoml dec outsb adc (bad) ss xchg std dec push or das outsl jo int xchg inc lret push jle test repz adc dec pop lret mov mov push inc xor fisub pop sub adc in cmpsl mov pop (bad) dec lret adc aam add lea jl pop enter dec aad daa jne cmp and stos in mov bsf xchg pop push lods cltd dec mov adc ja push dec call mov mov xchg jle pop mov xchg mov xchg f2xm1 fdivl adc mov mov cmpsl mov in mov enter pop dec cltd aas scas dec push sarl daa add sub dec and pop inc or push adc je push sub comiss inc mov dec dec ret mov xchg adc dec xlat pop cmpsl xchg xchg rcrb jns mov push xchg aam mov iret test mov je mov jp pop push and inc push jl or pop cmp pop shrb adc mov push push lret and xchg jecxz jg push std jno mov (bad) jns add fwait bound or jno mov seto sub inc jae push mov pop jns jle (bad) out test or loopne lods xchg xchg enter xchg test leave add push mov dec dec dec mov xchg mov rcrb cmp lret pop xchg and jmp std pop add inc push mov inc (bad) sbb (bad) mov scas das xchg pop mov dec mov mov ret arpl mov add (bad) mov xchg aas cmp push pop ja jg mov gs lea fstps xchg sti lea push int3 rcrl mov movsl sarb loop call add dec jno movsl lds int and ret out inc pop push out xchg xchg out hlt cmp shrl cmpsl jo addr16 int3 mov dec pop inc fmul push (bad) inc adc inc cmp mov cmp arpl pop push roll pusha xchg daa inc aas inc xchg pop cmc roll stc or push imul cs arpl loope (bad) pop rorl mov arpl fcomps iret mov stos add aad int3 and ss dec push js,pn xor push jne push pop cmp add aaa mov inc mov push push pop (bad) (bad) arpl pop in int in lret cwtl sbb aas pop adc inc xor xchg rolb pop int and sti jle jo xor sarl xlat unpckhps lea int3 mov les adc pusha mov cli in stos push out stos in push pop out mov jb sub jge and jle jg imul sbb lods mov jge dec jle std ret fstps mov mov pop inc xchg not mov outsl push mov cwtl and push insl inc (bad) inc mov push (bad) imulb rclb dec xor out xor pop and addr16 adc leave pop sarb daa adc int3 sub mov enter outsl out push enter dec aam gs push shr xor xchg popa sub shlb pusha mov adc rcrb rorl ret push (bad) js mov test jae cs push dec mov mov pop add je and in out pop das shr pop dec out daa mov enter sub xchg mov jo cmp inc out adc dec mov lret add lea dec in pop rorb jl push aaa cltd mov adc aaa jb (bad) push addr16 push cs inc les les lahf jp ss or xlat jg jne jo push mov push xor mov pop (bad) dec js dec aad push mov and jmp sbb addr16 inc inc je jle mov clc ds sub push add aam sub shrl imul sarl scas inc push xchg inc mov loope push and mov xor outsl adcl xchg jno dec loope in add pop jmp (bad) jo mov insl and jge addl imul xchg or add lds (bad) call adc into (bad) inc loop subl test dec cmp mov lahf test leave cmp xchg inc stos fnstcw (bad) dec mov stos or jecxz orl push xchg xchg mov and inc clc push sbb imul add cmpsl pop movsl fnop shrb pop xchg pop ss lahf into push xor out loope arpl jns jl cmpsl push imul (bad) hlt adc ficompl imul (bad) jno inc xchg movsb pushf dec int3 xchg xchg xor les repnz and adc xor jecxz xchg xchg daa mov ds adc shr and pop (bad) icebp gs sbb int3 (bad) daa push test iret push jnp popf sub (bad) leave daa dec xchg push xlat sub jmp jns jae fistl loopne lret call dec mov cmp add fldcw xchg mov jle outsb mov sub mov out mov mov push dec enter aas call xchg in inc add sub aas aam or nop out (bad) and lock pop popf push test (bad) mov (bad) push jmp aaa hlt jge pop testb xor mov lea push mov int movsb mov inc push imul or sbb mov movl adc dec xchg std mov jbe xchg pop adc loope inc lds inc aam sbbl inc loop mov dec clc lea pusha lea xchg push push and mov test jns mov mov stos add mov lods push mov xor lret pop or pop jge lahf mov dec cld pop jmp pop les jns lret push inc push imul push push dec cmp std xchg hlt or pop inc jmp jecxz arpl flds sbb dec dec repz lret mov (bad) mov dec js pop and pop icebp imul int3 jnp push mov xor mov mov add cs dec pop push push pop (bad) mov into xor rorl shll loop repnz inc xchg pop (bad) in mov cmp lcall ja outsb popa phaddw lods bound adc jb add cmp dec mov mov jae cmp inc inc sbb sbb arpl xor sti jns test gs push sub sub movsb push dec or fwait shlb ljmp ror movsl or mov push rcr dec das cli lret ds pop fcoms fs outsb push les pop cmp fildl int3 int pop sbb scas or push test jbe inc mov pop fs lock sub outsb sbb mov dec (bad) in sarl push rorl push or test pop adc leave mov lods cwtl sbb ror pop outsl leave push ret sub imul push or xchg pop xlat pop inc test or sbb arpl das push sub fnstenv or jecxz dec xchg add (bad) mov dec xchg ret and mov dec sub dec inc sbb add (bad) jmp pop (bad) test dec in loope leave mov xchg leave adc in pop fmul sbbl push xchg mov sbb inc and add sarb lcall dec mov nop adc inc in mov rolb push jg je adc mov xor push mov stos fcoml xor mov dec pop dec sbb jnp mov fs int3 mov jne outsl or lahf xorl or addr16 xor push loop cmc arpl jae jle (bad) cmp inc aas xchg inc inc scas or mov stos inc sub jne adc mov pop loopne and ljmp cmp and fidiv les mov add (bad) roll imul addr16 imul mov in pop jae mov lea jmp les or jnp stc pop push sarl ja (bad) or roll fdivrl or push adc addl mov or push or xchg fwait or lahf dec xchg push push lret scas cmpsl mov jne push pop fmulp lret fwait push stos mov data16 outsb mov pop or leave jecxz xchg int3 fnstcw fnstenv mov push enter sbb dec add dec inc loop adc into mov pusha outsb repnz mov mov fs loope mov das mov (bad) jne add add movl je or sbb adc jmp sub pop addl shlb insb mov adc (bad) or dec jne arpl mov imul xchg lret stos cmpsl dec and aaa mov xor lret xchg adc mov (bad) stos decb jne (bad) repz rcr inc add es adc fcoml leave mov jmp cmc cli (bad) scas mov push pop mov outsb lcall sahf xor scas lret (bad) std mov and loop lods sbb cld xorb test cmpl sub mov int3 daa inc push ret aaa dec stos addl and arpl xchg in mov jne add inc and xchg and mov jg dec in push rcrb outsl imul or pop pop and mov rorl sub mov pusha pop clc lahf iret push popf sub pop insl push mov (bad) outsl fs stos ja insb jb insb mov ja push addr16 mov push pop scas insb fwait das roll imul int3 lock dec rcrl push pop pop test imul jae lods stos shll fs test adcb lret sbbl ds cmp lahf lret pop mov fcmovnu in int3 fimul fistl jns scas xor in fldenv int3 sbbl (bad) mov cmp mov push cmp jle mov sbb sub (bad) hlt loopne movsl lods mov jecxz sub scas shrl sub jb or pop fild sbb add aas push imulb bound mov pop cmpsb inc mov sahf lcall inc addr16 (bad) jl mov fs pop mov push mov (bad) xchg (bad) and nop loope test stos jle sub sahf cmp stc ljmp push leave out adc (bad) lds cmpl (bad) mov cltd aas insl adc xchg dec jbe adc pop popf and mov cwtl push fsubs jnp dec push ret jnp (bad) rorb daa mov sub test rcll xorl lock call rclb decl decl jne dec pop mov xor imul inc pop sub fstpt rcrb dec xchg fninit or jne (bad) shrl sub fcomip jmp or inc jae cmp or (bad) loope inc mov ficoml jns sbb cmpsb lock jg mov mov mov adc push pushf (bad) in jecxz leave test or inc cmpsb mov cs push (bad) fldt mov pop dec push leave out jbe dec fstpt push leave and mov and sarb inc jne test in lea in sub mov cmpsb push scas arpl and push lahf clc wbinvd mov and outsb (bad) stos fdivs repnz push inc or ja mov dec jle or sbb arpl loope mov cltd sub push rorb jle dec mov pop leave adc (bad) sbb cmp icebp movntq push xchg ret mov scas lret xor add xor pushf data16 aas dec jle nop lods mov subl dec (bad) bound jle decl sub push inc xchg inc int3 lret push push loopne in in mov xor xchg cs subl jne adc add push (bad) arpl in push subl ss sahf in push mov gs pop xchg mov adc sub xchg lcall dec outsb js test int3 imul xchg mov or cmpsl fnsave cmpsl (bad) jbe and loopne adcl and jg dec negb cmp xor fisttpl dec dec sti ret sbbl ljmp sub inc out xchg (bad) dec cwtl data16 mov xchg lcall outsl cmp or and or lods sub mov xor dec push push sub lea xchg repz jno pop clc (bad) mov add mov (bad) mov xchg push add cmp dec add cmp aad mov cmp xor test jmp push stos dec daa fstpl dec push or adc xchg bound nop xchg adc push add in sub (bad) jecxz out and enter push sti cmpsb rorl ret lret mov (bad) lods push stos and push xchg call cmp jle dec push addl dec loopne enter jns mov inc xorl cmc lods (bad) repz fs daa xchg jecxz ja or and mov pop int3 (bad) stos test ret imul cs ror fildl or (bad) and int3 sub fcompl scas popa loopne leave outsl mov pop into mov push in insl inc fisubr fwait enter les push xor mov mov cmp push dec (bad) pop mov push fs dec les mov data16 mov fisttpl dec int3 push icebp push lods lods add fs out icebp in test insl ret sahf gs pop pop xor mov sub test rorb fnop jnp fcoml lods sub into stos mov inc or mov cmp lea ror add pop int3 xchg (bad) insb jl in (bad) jge in mov cmp xchg bound mov arpl jl rcll ficomp dec pop pop (bad) mov jns xchg std fisub xlat inc incb inc fldt dec mov push pusha ret ljmp arpl sti outsl js imul lods inc sub jns aaa popf push adc cmp gs xlat insl aad lret ds insl scas dec pop nop test insl rcll fdivs in xor sub mov imul sbb sbb pop scas das jo test cld (bad) cmp push mov mov cmp adc lret pushf add push xchg (bad) adc xor push clc mov iret fsubp jmp js inc push fcoml add daa pinsrw inc (bad) pusha mov gs inc (bad) ficoml loopne shll and aaa rol mov pop fwait cmpb xor test mov test dec and sbb daa jmp pop adc repnz notl shlb dec out outsl (bad) je cs mov call xlat aam pop inc jne mov sub dec test shr jg imul fsubl dec cmp mov push popa jmp int3 pop movsl sub movsl jecxz mov pusha inc (bad) lods dec stos xchg fist in add cwtl daa mov insl mov jo (bad) sub jnp test push xchg sti inc sbb push xchg add add inc jecxz inc (bad) mov or xchg orl or imul xor pop push daa and sub jno lea dec sub test push andb mov sub dec jp in mov adc popf sbb pop jne popf or cmpps push enter dec xor cltd stos inc lcall push sub jmp (bad) (bad) jle xchg test imul jne test xchg jl,pn inc hlt outsb insb (bad) mov in aam orl jle jmp or push fmul push mov stc pop gs roll jecxz lods mov xchg (bad) push movsb add cs outsb out mov mov push int3 daa xlat mov dec mov ljmp fs dec fnstsw cld lods xor xchg (bad) divb pop or mov jecxz movsl fsubrl js inc push pop test mov pop (bad) mov pop (bad) into inc cltd push pop push xor pop and pop jp roll lods add lahf pop pop xorl cmc mov xchg outsb dec rorb mulb ficoml ficomp push enter sti pop mov mov jne rcrb popa pop lods outsl ss mov dec and push mov or or arpl jb aaa xchg aaa flds inc js dec jg lret dec mov dec call fmul jecxz iret sub cmp add jle aaa mov daa xor xchg sarb mov into dec add xchg aaa fsubs dec mov rorb xor inc or mov into sub arpl cmp cwtl inc scas adc aas into cmpsb push xchg lds mov sahf mov ja cld sbb pop out pop hlt inc mov int mov stos mov dec ret inc pop movsl dec add dec imul out mov push movsl popa insb inc dec outsb pop cwtl enter pop dec leave or call dec loope xchg shll lret push leave mov dec push push aas shl sarb nop dec scas inc jmp ret pop (bad) mov or leave xchg dec lods aam cltd mov mov sbb push imul into push and dec pop repz fimull repnz push (bad) mov popl pop xlat roll jp mov loopne sub pop popf cmp cmp into setae xchg cwtl dec stos iret fsubrs or fildl adcl push fisubr in insb jle xor je mov ja xor fmull ss push xor in mov mov ret push jl push shlb aam les dec mov (bad) mov fdivrs dec push xor ds ror mov aaa arpl (bad) cmp push mov inc inc jl add and and add (bad) jno loope sbb fbld or sub aas jle lea jbe mov or imul push lds ret xor sarl sub cmp xchg jo dec in icebp (bad) imulb mov pop imul xchg xor adc mov sub fcomi test sbb test insb scas cld stos ljmp add fwait fwait les push xor xchg cltd testb push dec mov gs push lds mov inc imul ds repz jge loope js pop outsl cmp lret ret xchg push or sub pop sub iret sbb scas inc cltd push nop cmpsb jae push sub js inc test jle mov push les xor sbb push mov cmp (bad) add into loop sbb fs in stc mov mov aaa dec cs lods mov test frstor fwait mov push mov jl mov fdivl jno push addr16 dec xchg dec in pusha push stc test cltd fstpt pop xchg enter test bound fs pushf push mov sti pop dec jecxz out fwait rcrl repz or mov sar or aam pop out jo lret scas (bad) mov xchg shlw aas (bad) dec xlat mov scas je flds (bad) xor (bad) and add ret repnz aad lret repnz popf lcall iret adc mov xchg sub aaa push int lea jns xchg orl fiadd into cmp push cmp (bad) mov jg cmpb int3 push (bad) je mov scas xor out es inc rolb xchg dec popa or pop cltd seto fs xchg std mov and sbbl add mov xlat or and or and dec sub call push jnp xchg cmp fcmovne push popf stos pop mov movsl (bad) sbb pop addr16 xor push loopne rclb sbb popa addr16 test cmp mov push jo les (bad) inc push xchg addr16 and xor into std pop arpl (bad) sub dec mov mov push xor xchg or (bad) adc push xor popa test sbb mov jecxz mov jmp inc or xorl dec movsl push dec cwtl mov mov sub adc pop jns mov jmp push dec push cld push (bad) test push mov dec push sti mov push mov adc and pop int3 mov or pop mov out xor out cmpsl aam mov mov dec aaa dec pushf mov add xor into mov int3 jmp cmp (bad) lret push mov cmp sbb mov mov push jmp sub xor pop (bad) jge jns xorl cmp jl cs dec ret cmp das dec dec mov pop push xor adc cmp xchg int inc jge sahf mov addl aaa cmpsl push mov xor pop ret sbb cmp inc test xchg ss iret int3 data16 push mov add adc push jecxz dec fiaddl mov cs jo dec sub cmp sub dec push pushl loop sub lods ja (bad) xor mov bound pop push mov lea cmpsl xor lods daa gs or mov cmpl or sbb cmpsl or sarl std rclb sbb dec rorl add lds sarl jle cs lcall push mov in xchg push loop (bad) stc (bad) jge add into sbb sbb jns stc mov (bad) jo ss int3 (bad) mov cmp int jl xor inc imul fisttpl jmp inc pop and mov pop outsb and cmp inc or jnp mov imul or out movsb jb inc mov imul fsubrl mov mov push out jne dec dec inc dec cmp pop lds inc mov inc jae push lods inc rolb nop in cmpsl cmp call jle mov dec mov add ss add lret or mov pop push inc mov mov lods push inc or push enter mov sbb into push push pop xchg sub dec xor push mov pop outsb hlt pop enter jecxz mov aaa inc adc xchg push mov aad (bad) dec lret mov daa pop lret cmp cmc out ret push or mov lods cmp add stc gs xor aam (bad) pop xor mov out jae rcll xchg daa inc lods int3 dec add jle sub sub test pop sub les mov dec fs dec jne cmpsl or stc xchg cmpsb enter add push std roll xchg or jge push enter sbb int pop mov out insb xlat inc or shlb lcall xlat pop ret fisttpll mov push push jmp ret jle mov fldenv inc inc or inc mov lods test out dec mov sub sbb and loop mov jp addl fcomps inc aad or dec out cs jo add lock and lahf mov xor data16 push adc addr16 push inc jae dec cmp nop rclb jno jo sti rclb mov mov into push dec pop dec jl mov cs pop imul scas add mov inc adc lcall (bad) popl lcall push add cmpsl lods dec les out test cli fiadd jl inc inc push std push aaa mov aas pop dec inc mov rcr cmp push lea popa out iret loopne xor xchg ljmp nop je sbb mov push mov mov xor push pop ret jl ds cmpl cs imul out hlt addl push aad lods jae dec arpl pop flds pop shr xor fisttpl (bad) hlt ja test dec enter shrl push outsb addl mov push jno dec pop aad mov cs adc push jo push inc inc pop into inc fsub add cld sub cwtl dec add pop xchg mov and jae mov push frstor inc dec enter ret mov pushf scas nop pop rorl bound gs xor jns test push lret (bad) test (bad) aaa or inc cmp cmc sbb or push dec ds push int3 imul pop sub or iret sub pop outsb and push pop adc inc inc or add insb dec ret lret sub aam mov mov pop shl ss push xor int incb lret mov adc stos inc cs ret arpl jl mov icebp gs into dec push push lcall mov push stc mov mov dec (bad) das xchg (bad) jb,pn xchg mov iret mov jo sbb dec jle mov mov sti inc xchg cmp sub or sub mov pop cltd movl inc adc lea or cmp add mov cmp jnp cmp sub sub xlat sbb outsb mov lret jae cmp aas or fsubrl or lcall test mov push sbb add sarb mov shrb inc dec int mov or scas outsb movsl inc ret xchg inc cltd pop pop lea or cmc pop test pop mov cmp mov dec adc pop mov fs push push movsb jg mov loopne test adc lret add cltd gs xchg cmp jo xor cltd xchg stos in push (bad) dec rcrb popa lahf sbb fisttpl test outsb (bad) or push fildl jg or leave push fs cs aaa popf out arpl jbe ret xchg sub in outsb add sbb dec adc js mov cs lds aad lret push add scas cmp sbb jns jne push jb dec mov mov fisubl sub xchg add mov mov push lea imul cmp jle mov xchg fistpl jge mov hlt jb dec push lea aas sub mov xchg jp jge sahf ljmp out mov mov xor sub mov test in inc jge xchg das fs pop sti xchg ss orl xor xor sub sarb jge popa mov pop push aaa fwait lcall fcomps mov fldcw lret mov cmp mov xchg push lds xchg fild mov ljmp jns sub flds into xlat pop jns xchg push jmp push add xchg rclb hlt sarl scas imul mov pop sub (bad) fnstenv test sub pop jle rol addl push sub int adc dec roll adc orl mov mov pushf lret dec ja lea pop and inc push ret jle mov data16 jl cmp cld xorl push or into clc mov test sbb push cli test sbb loopne push fstps sbb (bad) jns xorl push push push jle aas lret jae jno imul icebp pushf and adc push push mov pop int3 xchg inc das ret xchg inc pop jmp cvtps2pi and adc cwtl insb and mov les inc adc les mov fimull mov int dec adc pop test es push pop pop lcall add pop xchg shrl jno les mov and negb pop int3 mov and add (bad) pop inc sbb (bad) mov xchg and mov ljmp scas jno dec xchg cwtl jbe mov mov pop mov cmp push std outsb xchg decb and jle mov gs inc jno jp lret rcll push pop mov leave xchg sbb lds gs jno mov push (bad) xor pop cmpsl pop outsl push rorl pop gs dec push nop mov and mov push inc movnti mov adc testb push sub jmp sub call insb xchg push cmp xor and lahf xor push movsb xor lock test (bad) faddp jg push (bad) lea fwait push xchg dec sub dec mov jo mov push loope repnz mov mov push pop (bad) sub mov jge sahf out inc movd (bad) std shrl in pop dec xor subl popa ret std rcrb and mov xorl sbb jb (bad) push and imul inc jae push inc fwait sub mov ss push dec push adc pusha xor xor mov mov push lea lods push out call mov and jnp mov ret mov int inc jle adc xchg ljmp adc ljmp ja shr in je inc and inc push leave mov leave and pop inc mov add push bound add mov inc les aad add inc daa jne pop dec jle mov imul xchg jmp sbb push sub push in push inc inc hlt xor jl pop add jmp add mov push and testl add pop test (bad) icebp in xchg aad insb xchg lcall push pop pop rorl dec and cli lret out (bad) push xor mov in mov push lods jbe addr16 int3 dec arpl data16 sub adc xchg movl ja mov iret or xlat jl ljmp xchg mov lods aas xchg push pop movsl test fildl je sub dec push xchg xchg and pop enter xchg xor cmp fs fistp push inc into dec int dec jg mov pusha (bad) and sbb imul push lods and fucomip or in fbld addr16 cmp add cmpl push cmp adc sub sbb fcmovne repz sti les mov sbb push mov xor dec pandn in xchg lahf cmp sub test sbb lcall lods orb fsts shrb mov cmpl jg mov push xchg in jl xor ss inc cwtl out aad mov pusha and pop sub clc mov ret cmp cwtl dec jae pop test sub mov mov int3 pop out roll inc and test imull cmp lock inc mov xchg (bad) ja jne jns stos xorb int3 bound (bad) pop ds push pop xor aad inc leave inc (bad) mov sbb sub mov cltd aam cwtl cs (bad) jmp sbb add arpl (bad) push iret sub addb push xchg mov pusha mov cmp int3 mov jo inc mov addr16 mov xor dec mov jmp push mov jbe mov pop mov cld adc outsb or inc ss pop cmpl jo or dec xor lods outsb pop pop xchg aaa inc aaa push jns lahf inc bsr mov lret outsb xchg sbb addr16 mov push aaa sub stc sub xchg jne (bad) loopne int3 sbb xchg cs rsqrtps mov xchg pop sbb and andl dec xor jne les lods pusha mov dec add push lcall ds add adc into (bad) jl outsl enter sub cmp aaa push fistpl jnp out loopne inc dec fwait sub fs (bad) test dec cltd rorb outsl daa movsb call mov mov fadd and cmpsb xchg es in cmpsl xor inc dec (bad) (bad) or or lods (bad) fldl push ss adc (bad) dec sbb inc push and or dec xlat xor ss inc pushf jae mov data16 sahf les out inc out (bad) adc mov int3 outsb and cmpsb test into jl cmp push or sbb mov bound movsb inc test mov or mov inc scas jle inc mov mov mov push adc inc pushf fs add insl dec rcl imul bound out (bad) mov mov xchg (bad) aaa dec into or aas test shlb xchg mov repnz arpl sbb jp imul mulb loopne outsl and adc sbb arpl sbb mov loopne popa jbe adc leave imul dec cmpl xor aad inc cmp mov add lods rol into popf outsb adc adc mov xchg sub lea hlt fcmovne mov outsb mov aad mov out lcall cwtl push scas cli ljmp iret dec xchg (bad) adc mov ffreep xlat xlat ljmp inc mov test into mov jl clc cs aad mov pop mov out push cwtl xor in inc pop inc mov je adc pop pop loop xor int in in jecxz into cmp mov test pop mov mov push xchg dec ja and pusha ret push repz cmp into add jg adc inc dec into pusha xlat (bad) in ljmp jmp les ljmp sbb stos cmp adc adc je push pusha pop sbb cmc test dec in ret dec call xchg lcall mov aam xchg dec mov incl xor cmp mov inc and sub dec dec arpl ljmp lahf insb popf sub fistpll in data16 xchg jno out xchg in lret out cmpsl fldt out jmp mov addr16 cli enter cmpsl pop lret inc dec mov adc (bad) cmc outsl sti aad dec xchg fisttpl or push out jecxz fcomip ret xlat jl addr16 mov jmp in pushf dec add jg jle jo or int add mov adc adc and and xor pop inc test mov (bad) cmp push push lret (bad) mov lea fwait or ret cmp mov cs out adc fistpll lods daa pushf push or add mov add repz push pushf dec ret iret scas inc and push fs call out mov pop icebp dec bnd sub les push cmp jb xor cmpsl and fisub cs mov (bad) loopne push leave xor lods (bad) mov lret mov dec out sub mov jg ret daa notl mov pusha xor insl push lret dec mov test push repz inc mov aam xchg ror int mov pop mov out imul lret or xchg fs mov shlb (bad) sbb pop pop mov inc sub mov fildll sub outsb lahf xchg arpl push dec and dec sub aam je fistpl pushf xor cli pop push mov jecxz movw jg fwait sti arpl imul insl pop add jne mov cltd fsubl cld fwait testl dec dec (bad) sbb lods pop fwait jl cld mov dec popa mov xchg pop (bad) addr16 xor dec cs lods dec int3 dec push push inc ret ds loope pop cmp outsl add inc rorb xchg mov sti ret ds adc dec xchg push rcrb xor or adc ret (bad) enter mov xchg cmp push push aad ffreep mov fldt hlt call fcomi or push out outsb push pop subb or cs pop cld sbb (bad) out mov add shlb jno js or dec mov pop out mov pushf cs mov add rorb or inc scas add pop inc scas sub inc test into ss jg addl adc int3 push je mov dec std dec xchg inc mov mov dec add sub cmpsl scas push rol mov jle hlt (bad) arpl add inc pop mov inc insl push push adc push or cmp mov inc pop sub jb push add mov mov mov push pop jl or push dec pop aaa dec jmp push (bad) mov mov jae jl ret push in push fdivrl cmovns dec fldt cmpsb pop imul fwait sbb pop jmp int3 dec cmp or fbld cli xchg rcrb pop (bad) and xchg dec mov dec test pop inc repnz ja inc push inc int3 xor (bad) dec jbe inc mov inc dec cmp mov aad push pop (bad) cmp stc pop or jmp loop rol add add jp rcrb xrelease mov adc (bad) sub cmp fisubrl push add mov ret dec nop pop (bad) pop mov daa sbb pop inc adc lds sbb pop stos icebp jecxz jbe mov add bound xor cmp jmp jecxz int3 rolb cmpl mov insl mov xlat adc fidivr test sbb in sbb test vpaddsb dec fidivrl mov push das dec push dec sbb in addr16 lret mov add or not xchg or mov imul jne jle,pn dec ficomp dec (bad) (bad) mov or test nop adc popa outsb sbb or dec mov pop or out jno roll stos movsb mov mov push push jb,pn (bad) inc pushf lret sar fimull cli or mov mov push push xchg mov pop dec mov sub dec (bad) rorl dec pushf test popf jno lahf inc outsb cmpsl dec push mov lret test mov adc xchg les movsl pop mov (bad) jmp fisttp ds xor lds stos test cltd call jle pop (bad) loope xstore-rng cmpsl inc push pop movsl sbb (bad) dec iret arpl mov or inc jo inc push sahf arpl mov enter adc sbb or test cmp push inc arpl and inc jae mov dec dec aam pop adc imulb push ret mov stos jbe add xorl stos jg add cs add mov xchg (bad) gs jecxz cmp mov mov int stos ja pop push (bad) adcl outsl int mov lods pop int3 lods push mov dec xlat sti movl lea stc cmpsl ficomp dec sub cli or push push nop mov pop rsm (bad) pop jno fldenv loope orl das add aad aam addr16 and cmp dec pop imul xor and push enter sti mov in (bad) jp (bad) pop xchg dec into push add inc push and gs fdivrs out cwtl dec pop add outsl (bad) cld fs cmp mov or ret pushl faddl aaa inc cmp inc push into adc xor inc jnp enter jl sbb js push test mulb sbb ljmp add inc arpl shl aad add inc mov inc and mov in push and fs aad pop (bad) mov jl inc aas std lret mull sarb cs gs cmp or repz (bad) push and xlat (bad) data16 out outsl dec out cmp imul inc mov cmp inc pop and jne inc rorl into jo (bad) mov add dec rol or cmp cmp jne ficompl daa adc add bound insb sbb inc arpl movsl arpl nop imul inc or and xor clc imul and aaa xor out add inc xor std sbb test out xchg inc mov cli jmp popa enter cmp push xor mov nop cmp add adc lcall jne adcl stos pop inc dec push std mov or sbb mull push lods add sbb or ja es test jmp xchg dec popl sbb xchg sti pushf pop xor add sahf shll mov mov dec insl shr mov shlb pop sub sub or pop iret jl lds shlb jae mov xlat mov xor xlat push dec arpl dec (bad) rcrl mov leave or ja dec out mov fcmovb sahf das dec nop sbbl jmp xlat arpl adc nop xor lret (bad) push pop jae sbb iret xor mov dec mov push add add or rolb (bad) sarl adc int fmul cmpsl cmp lret or lret xor xor stos ror repz mov xchg xor out enter addr16 dec mov sub daa rclb jecxz pop xchg inc sub or push movsl inc mov jae inc mov pop sbb jecxz or sarl inc or int3 shrl lcall mov fwait mov xor lods inc out out adc sbb push inc fldenv adc jg dec inc push dec test jno xor ljmp mov cmp les lods shrl jns mov push addr16 xchg cmp xchg lcall test add inc aad clc (bad) mov push jno sarb xor and push rcll adcl inc sbb or ret fidivl adc in xor jp adc cmp jg push dec xor inc fisubl cmp lret test jae adc jle iret xchg adc (bad) test (bad) test lret push and sbbl ret xor fwait adc dec xor sbb dec daa or add inc jg outsl rclb into xchg jle cmc dec or mov xor dec inc xchg imul fldt push add lret fwait repz mov xor imul mov xchg adc int3 int adc cwtl jecxz adc jecxz add and push xchg xchg dec popf orl cmp push cmp push and dec dec inc dec (bad) or push (bad) ds inc push push inc inc push arpl xor fisttp dec pop inc into push sti pop inc or (bad) lock mov pop cmpl cwtl pop push (bad) xchg lds loopne cmpsb push orl mov dec sbb dec or push mov nop push adcl and dec mov xchg push push push fmull dec push inc (bad) jge out ret out popf or or aam jle in fmull pop or arpl inc sbb data16 sahf les out dec fwait pop repnz adc push push int3 mov cmp inc sub sarb iret mov (bad) mov push lods push popf movsl jle jno mov and inc arpl inc push xchg dec les out ret scas add push or in lds (bad) pop add xor jecxz push jno sbb cmp inc jp and punpcklwd cmp imul in shr aam mov rorb inc mov add popa aad clc insb mov sub or insl adc outsb or inc mov push inc imul mov dec stos pop xchg in xchg xor or push popw mov mov pop add pop sub movsl dec dec (bad) sub mov fadds aam icebp mov add lret jecxz adcb mov inc dec mov sbb cmpsb inc sbb mov into or gs data16 pop insl xchg shll jbe push sbb push push adc mov dec popaw or sub jo ret push pop push jno or mov push in mov les sbb repz dec loopne in push or xchg fdecstp jg stos push pushf in adc (bad) or adc jmp adc adc push sub pop dec roll fiaddl insl sarb iret iret adc sbb rorb sbb (bad) sub push pusha (bad) clc or movsb push or addr16 push dec pop xchg in ret fdivp jo ret fwait push ficoml aad mov int3 xor mov mov cltd scas inc mov mov loop repnz hlt (bad) jne mov or hlt push adc add pop dec dec or dec mov pop imul dec xorl push pop push in pop mov mov cmp sub or pop cs inc decl xchg addl inc dec dec mov mov or sbb sub dec cmpsl stos test sub sub jecxz fnstenv lods stos adc mov sub jbe cs sti sbb jae mov repz dec sub jae pop push stos mov rorb dec jle adc mov jl mov test xchg xchg inc pop jp and fbld lock cmp xor xchg push jmp pop lods cld fs je out jne adc or jbe pop inc pop rclb push push in xlat cmp mov sbb mov dec mov inc insl scas push (bad) push in into push lret jmp loop mov pop movsl ds cmp push xor sarl and jns sub push ds sub mov mov cmpsl pop scas inc data16 push (bad) push daa es push (bad) scas or jae mov test insl dec lea lcall mov lcall leave dec mov (bad) xlat add lahf cmp icebp cwtl dec jno,pn (bad) mov dec andb pusha dec arpl push (bad) push dec add movsb mov push add sub add leave out push rcll dec fs test mov push fs mov aam gs push dec mov xlat pop xor lds insl inc dec xchg mov inc lea jbe sub outsl xchg repnz hlt repz call movb sub sbb arpl pop pop test xchg int les cmp ret dec outsb jecxz dec popa imul aam arpl xchg or lcall mov addr16 lcall data16 movsb sar sbb inc ret xor js mov ror or mov roll aaa push sbb cmp sbb dec dec arpl add sub xor mov orb mov pop mov pop stos jg and cmc dec int3 scas test call or xchg rorl sahf pop push gs aas inc cmp jnp adc imul sub ficom or jne pop dec push repnz sbb repz dec xchg lret sbb push dec jecxz test mov repnz clc imul les (bad) mov dec cmpl fs out ret push addb loope mov xor dec mov pushl sar adc test fwait dec jmp fs inc les mov cmp jne je dec pop (bad) mov (bad) pop inc mov pushf adc nopl dec roll inc mov aam imul test xchg fisubrl lret push mov mov das movsl test lret into clc ficoml add or mov jmp not pop lret jne jbe push cli push dec mov dec push pop pop xchg lock ret test sub out pop or mov mov ror cmp clc inc inc jl dec xor xchg lcall fs es imul les push xchg push aas dec and sti and and imul or rcll hlt imul inc jae fstp popf je push pop or jno push jb mov jns inc rclb aad and int3 sub addr16 sbb pop add int3 test test inc jns imul out push jmp mov and add jae dec adc test and int3 sbb dec mov or movsw xchg xor pop push adcb fstpl test mov xchg cs sahf outsb fs push ja es pop add or imul mov push push in mov jae or jg sbbl sub pushf jne xchg (bad) mov movb jl in test mov (bad) repz pop add repz jae stos xor add xchg test xor rorb test push daa insb jl push mov push imul xor dec push test push inc lret inc xchg int3 mov lea mov fdiv xlat out jae jae cmp repz (bad) adc cmp lret sti cmpsl mull xchg test sub xchg or pop divl outsl inc aaa dec mov xchg jl ret and mov inc roll push jge fs aam (bad) sbb adc imul lcall nop cmpsb call int3 push dec push outsl in int3 fadds jge jae (bad) enter (bad) push cmp ror bound pop sbb arpl pop stos fwait mov or push cmpsb out xor das xchg lock jmp push or push mov mov push insb enter mov lcall add xlat mov dec ljmp sbb xor adc loop dec or pop jbe (bad) mov sbb pop sub (bad) inc daa or out or and xchg int3 mov jnp xchg orl clc xchg adc lahf (bad) jge xor leave dec gs mov mov pusha std pop cmpl imul fwait arpl cmc xlat inc rcll jl nop pcmpgtb call orl push addr16 fs cmc push (bad) push sti mov adc and into xchg shl jbe push test or shlb inc mov pop (bad) jg test pop movsl ret mov xchg iret xchg push xlat scas jg (bad) outsb inc out mov inc jecxz repnz in std insl stc pop push xor mov mov stos (bad) sbb jnp andl test imul int3 add bnd imul lds dec test sarb orb das dec inc test push inc cwtl fs scas dec mov imul call add xchg xchg jg,pn inc lock in dec stos shrb imul test out repz inc fwait or add imul pop push sub adc sbb imul mov mov (bad) fcomps jecxz loopne lret xchg es pop lret mov mov fild dec ret repz les jl mov lds js repz inc cltd push in xor ret adcb xchg aas inc outsl mov cs pop addl sarl (bad) jecxz and clc mov mov lret cmp mov pushf push dec mov pushf cmp fs push shr lret rol lret mov sarb push arpl push push push (bad) les mov pop nop dec push lds lret xchg add scas ja pop push xchg push or in mov mov or incl ds daa pop (bad) mov and cmp dec mov mull repz or or pop lcall jmp dec push adcl mov pusha mov xchg imul in or (bad) out cmc mov in dec arpl out push sub ror stos xor push dec adc daa xchg les mov push sbb mov nop lock out lea adcl (bad) xor outsl stos test movsb lcall ret lret mov mov xor dec jg aas push jae dec xchg pop push push lret dec stos cld inc push dec dec lcall push cmp mov mov xchg and jge dec pop test mov test fcomip pop mov jae shll jecxz inc int3 mov in ja mov mov push jle outsb push mov dec jnp inc mov sbb les mov pop mov adc pop dec lcall imul imul dec dec ror rol xchg cmp test sbb mov addr16 sbb or xchg jmp push loope pop jnp xor ret in mov sub cmp leave mov sbb push jp aas push pop xchg out enter out pop xchg lahf mov xor xchg arpl dec xchg sbb enter mov stos xor dec (bad) repz cwtl and iret andl dec sub (bad) stos movsb rcrb roll xor dec test (bad) cld xlat sbb cvttps2pi test push sub push lret popa pop lret mov rcll mov inc add ret inc in cmp outsb hlt push jge hlt push cmpsl push xchg mov xor fwait dec xchg jmp sbb je pop fisubl (bad) push outsl xchg ljmp lods inc rcl lods adc fwait out jno lods xchg pop loop mov loope fucomi add fistp gs cmp xlat fidivl or out aaa lods xchg movsb cmp sub test sbb lcall fsubs mov rcrb daa aad fwait das fidiv ffree outsb rcrb pop nop lcall leave pusha ljmp cltd (bad) dec (bad) pop fist sub das sbb cmp dec xlat push leave (bad) lea fsubs fildl cmc sbb mov daa mov jbe lcall xchg jmp scas std push cmp jmp dec inc push dec inc dec xor cs insb add gs xor fs insb add test bt cmc sub cmp cmp cmp pushf call mov push push not push lods call (bad) repnz jns in pop addr16 pusha movsb movsb imul pop test out out hlt lret mov fs push int3 jle dec push dec push sahf mov mov sti push push lea xlat jne jne mov xchg fwait mov mov inc sti or pop dec xchg mov nop sbb mov sbb lret inc clc cmp mov incb sbb lret jge sahf aas mov sar imull mov mov movb movl movb pusha movl pushf push mov movb lea jmp add inc gs gs imul pushl lea jne btc inc test rcl mov call call ret dec xor or sbb fs jns mov push das nop jg es mov and jae jnp (bad) pop lcall mov lahf fistp mov mov add fisubrl (bad) (bad) in mov mov push sbbl shlb pusha cwtl inc mov out push add shl lock mov dec fs out in mov dec adc mov jecxz inc fwait lods pop stc pop ss cmp std mov out and xchg cmp push or inc mov cltd sub mov xor add add clc rcr lea cmp pusha sub call lea call pusha pushl movb pushl lea jmp cmc jmp lea je push movb adc pushl pushf pusha mov lea jmp jecxz in inc stc ljmp jbe jns xchg push in insl jb jp fimul (bad) lds out mov mov inc or jle jl mov sub pop movsl mov push xor iret adc ret loopne mov pushf (bad) icebp loope,pt sbb movsb xchg cmpl sbb addr16 lods and mov lret push das leave (bad) xor pop (bad) ja pop mov jnp ds jb mov jle (bad) mov data16 les aad test cmp clc addr16 nop out sti jecxz cld adc inc fcmovnb mov or out addr16 cs and add push cmc movw test or call movsbw mov jmp push lea jbe btc dec sub mov bsr mov sbb bt xchg sub mov xchg movzbw add shr bsf shr shr add mov bt movzbw add jmp mov movsbw rol mov pushl pushf add jae pushf or pushf lea je pushf or mov pushf call popa out (bad) jae mov push fbld aas loopne hlt (bad) dec out movsl stc int inc sbb imul lret push mov movsl cmpsb mov nop mov scas nop movsb mov sbb add sub cmp inc ret jge rolb jno lea xor jb dec mov mov testl flds pop sub push lods test jae std daa mov add cmp decl push sbb movsl sbb push addl addl scas rorb sti cmp xchg das jo imul fwait movsb in addr16 sbb mov test ss decl lahf (bad) movb setnp push push bswap movsbl call push mov push mov call sub xor shr movsbw btc sub add (bad) lock bt mov inc sar inc not mov cmp clc stc repnz call push push lea je push pusha push lea jmp push dec inc dec dec xor cs insb add ljmp popf aam add pusha call jmp pusha movl pushf lea jmp mov in aad std in and loope add mov sbb leave scas mov popf push in data16 jge jmp gs push js push jbe daa sub xchg stos mov inc push inc jbe cmp repnz dec jne insb add pop xor or mov loope push dec js in loop fbstp dec out inc sbb imulb and (bad) sbb push dec adc jl mov add push fildl lods orl cwtl ret or sbb mov stos push loopne sub cmp fwait ret loope mov (bad) jno fwait ds iret push scas das mov movsb rorl std outsb adc rorb dec cmc lret cli sti push lea out (bad) pop cld arpl mov mov cli pop sbb (bad) xchg or pushl imul hlt jae inc dec push mov sub test subb push addl inc mov xchg or cmp cmpsl fcomip xor das inc cmpsl jne cmp rclb leave ficompl inc scas testl and repnz enter stc inc lock cmpsb pop inc pop imul cwtl jb in jb lahf cmp pcmpgtb lcall jae mov rcll mov mov iret adc pop sbbl in push insb xor daa push sub fwait and cld xor push inc xchg insl inc js sbb (bad) dec mov dec jo jecxz pop arpl in in aad inc lahf xchg mov adc mov addr16 pop xor inc pushf cmp add cmp cmp cmp push lea jb pushf cmp push call lea call push push cmp lea jge jae clc push jmp xchg fisubl add lds pop mov in xor sbb jo xchg out test mov sub cmp jo fsubrl adcl popf aad outsl xchg xor dec xor ret adc int movsb fwait lock or xor inc test aas jecxz lret jns xlat cli movsl (bad) leave fiaddl shlb cltd jg push inc jp xchg mov mov pop inc out ret jnp mov sahf nop and repnz cmp inc pop jo (bad) sbb fdivs dec xor aas stos xor or inc popa pop inc aas repz cmp push jno cwtl mov add je outsl fs gs imul add into popl lea jae push lea jne add rcl mov cmc bt push pusha add push movzwl sub jmp inc jb jne popf inc push jg addr16 mov out mov movsl cli pop and dec test jno test mov mov test add push sub adc dec or shrb mul cld push loopne outsl xor mov lahf xlat cmp lret gs inc push adc mov push (bad) rcrb jns sub jle jno fs fst or push aas aas cmpsl sbb dec pop lcall jne popf sbb mov fild sti dec popa cmp movsl lcall mov mov mov sub mov (bad) aas in xchg mov inc mov cmp xchg dec lds cmp xor pop sahf adc or daa jnp cs cmp jne sbb jle pop inc mov xchg sub mov add pop inc push bound cli adc push aad pop push lods out outsl mov es mov xchg mov call mov ss inc jmp cwtl inc lock xor fbld mov pop inc cltd pop lods xor aaa pop lcall iret adc cltd les and dec (bad) (bad) icebp adc stos mov mov mov ljmp pusha pushf pushf setb mov movzbw not mov push call push pushf push lea call jmp cmpl adc xor xor mov dec xor jg adc js aam mov xor mov pusha mov sbb pop push fsubrs jo xor iret es pop dec xlat pop add div inc dec ja push xchg inc pop jo pop add addr16 test push push add addr16 jmp mov or inc jbe loope movsb mov or sbb gs and jg jg fiaddl iret scas adc dec lahf ja xchg fcmovnb loop clc or test rorl adc or xchg or sarl je push outsb push popa fnstenv sahf stos cmp ffree hlt imul push out das sbb cmp outsl outsl inc js shr std xor lahf pop mov fdivrs lods lods shr std pop jbe mov insb mov repnz cmc sbb data16 (bad) or add push inc call stc pop in sar xchg adc sbb sahf sarl dec pop iret in hlt or mov jno xchg clc xchg cmpl lods push sub movsl stc mov lahf mov dec add push cmp mov xor lock xor dec push rorb jmp sbb dec mov (bad) std loop out inc ficom hlt lret push sub scas mov (bad) in cltd fcmovu dec mov adc imul and cld clc mov gs mov les fmulp xor mov adc cli cmp inc cltd lahf repz fildll or sbb ret xor pop hlt dec sahf inc fs mov jno xchg or call bt pusha pushf pusha add push jmp bt repnz jmp btc clc jmp pushf pushf movw pusha cmpb jmp mov pusha bsr or rol sub call je pusha pusha jmp movsl arpl or jae jge mov xor fldcw jp jp (bad) aad fs (bad) ficoml inc cli cmp sub mov fldt pop (bad) shrb aas and nop das mov fsub fcomps lahf mov xchg cmpsb outsl movd push pop loopne testb scas jo popf scas mov or cmpsb sbb add cld mov sub or popl or pop inc cmp cmp jp popf xchg cmc adc push dec cmpsb pop rorl cmp push arpl cmpsl cmc sub sub xchg mov (bad) fbld inc and sti lea je pusha pusha push lea jmp idivl or fcoml jge sub ja mov lds sbb pop (bad) pusha imulb dec lds mov jns imul (bad) (bad) (bad) lock mov movsl add adcb stos mov aad mov (bad) mov insb loope mov mov cmp pop lcall cmpsb stc (bad) and clc data16 sbbb push mov and adc push addr16 xchg lods loop lea mov xchg in test popa sbb or je test mov je adc jp xchg sub test leave insl adc into fimull movsl mov sub add inc out adc inc mov lcall insl cmp scas mov sbb mov fwait mov lea xchg push sub push xchg call mov fild push adc stos test xchg adc fucom mov loope push dec rcrb dec nop jno xchg test cmp add shrb pop shrl loopne jmp mov das lock sbb mov aam aam arpl pop rcrb rcl xchg mov ret pop test jae cmp rorb mov mov (bad) loopne and push in or aad adc pushf dec jl (bad) fcomip mov push pop jge sub cmpl clc out or lock (bad) xor fsubl mov mov es ret sbb repz mov (bad) rcrl inc sub dec out xchg mov mov push lcall lret adc push jb pop push mov sbb xlat adc daa pop test sbb lret inc fstpt mov sahf frstor sahf lock lods pop cmp sub inc mov insb and sbb or jl imul xor mov pop xlat call sub lods lea mov mov sbb xchg dec ja lcall lods mov lcall leave enter js push lods jb jg cwtl pop in mov jb jb shrb pushf bound xor cld call pushf lea je push pushf cmp stc add movl pushf movb push lea jmp pop shrl dec sub inc dec jno loop sbb jns rcrl push mov adc and xor dec clc inc mov (bad) shr cmpsl cwtl fsts jmp dec push cmp enter test int3 pushf loop fistp mov xor addr16 inc sbbl or test out shl mov pop mov negb pusha mov mov xchg dec push mov sbb stc lock push lcall dec rcrb and pop outsb stos xor repz icebp and jmp adc lahf inc push fisub dec push cmp jno (bad) loopne call dec mov lods in hlt sub fldl bound mov loope fiaddl jns jl jbe xchg xlat or jecxz (bad) sbb (bad) jl fcmovbe (bad) or jne lds and test movsl mov pop push xor jmp cli mov int3 sbb stc or lock stc (bad) cmpsb loopne dec mov popa push dec (bad) (bad) cld or jecxz sub ret mov mov dec inc pop add push jl push mov mov cltd sub mov jmp hlt loope,pt ljmp test jmp out xor je iret pxor mov jne cmp lret pshufw ljmp pop enter adc pop (bad) fmuls inc aas and sub xchg adc mov movsb outsb icebp add out (bad) xor pop out dec or insb roll mov add cmp dec sub push dec aad out lcall add jmp xchg pop cmpsl ja mov cmpl test xlat push or fimull sbb add or test scas das mov mov repnz pushf pushf lea jne pusha lea jne pushf lea movb pusha lea pop not mov lahf pushf movsbw lea jmp bndldx or fwait dec repz cmpsb pop es pop mov in mov sub je loope and jl sub lahf push fdiv scas push insb loope repnz cli in rcrl cmp jns push xor inc pop and cwtl mov in inc sbb fsubrs cmp mov pop fwait das lock ljmp les or movsl and lock mov sarl mov and lods xor inc cmp xor jns lods mov (bad) (bad) repz (bad) sbb and mov (bad) fwait add hlt mov lahf jno lea (bad) sbb mov les adc repz stos je jo dec movsl pusha xor mov and movsl cmp inc cltd fisttpl mov (bad) cmp xor enter mov lods out lock ljmp sub repnz data16 xchg xchg int3 push xcrypt-ctr cmpsl sbb add (bad) lret or jmp xchg dec xchg and call mov inc sbb insb (bad) mov fldenv mov sbb ja in aas inc and daa and and lds lds into jbe (bad) movsb addr16 gs jno mov and xor sub push fsubs loope add addr16 cwtl cmpsl mov xor iret adc cmp add and lods jno inc xchg and int3 cs sbb lcall outsl sub xor lock mov stos int or fildll add fistpl out aam dec adc pop and (bad) clc xor aad or imull or or add add xchg mov pop mov push mov push sbb cld pop inc xorl sbb fiaddl dec popf inc adc push inc xlat in repz inc jne mov xchg mov jnp movsl and xor fiadd es inc cmp xchg xchg pop push cld jecxz adc lods lcall outsl out add jne das xchg cmp aad dec outsb in les push mov fwait sbb inc test cmc and int3 adc loope or mov hlt push or push mov xchg pop loop add dec jno mov les jne movb rep call mov adc mov sbb in fadds icebp and (bad) pop dec push xor dec inc insb mov je in xor sbb jge jns or out mov jae cwtl mov (bad) ljmp (bad) jae js test loopne pop add clc fstps loope into dec dec addr16 inc mov bound roll imul add or jo dec jp sbb or subl lods dec arpl mov lods neg inc cmp int xor push pop jge mov xchg sti xchg outsl cmp pop add fst shlb cmpsb mov cwtl mov and (bad) mov aad dec xchg xchg mov mov cmpl popa mov incb mov pop andb pop cld sbb mov add fisubrl mov test ret mov xor gs mov rorl insb dec cmpsl and (bad) cld jecxz shll add pop and js fs inc clc push cltd stc cmpsb mov mov jmp cmp add or lds pop inc pop inc push push loopne jnp sub sub push or push nop mov into fbstp dec jp mov lahf mov fistl push dec push jne sbb and pop and push stos xor cmp sub push cwtl jno mov aaa imul pushf push stc add pushf pushf push push lea jmp jmp aam das mov push pushl push pusha shl mov lea je call fstps and jle mov fs stos xchg and (bad) dec rcrl out hlt lret (bad) setb mov gs gs rcr dec ja and xor dec sahf dec pop (bad) cli fldl lods cwtl mov mov popf lret jmp xchg or mov icebp dec notl popa mov fldcw jb jle int3 jecxz (bad) sbb adc xor aas push flds jns xchg jbe idiv push cmpsl clc cmpsb clc cmp mov push mov and pop les pop loopne mov lret outsb adc fwait inc and xchg ret pop adc mov fmul in mov cmpb mov and aas subb les jecxz in pop call dec jo dec adc es (bad) (bad) dec sahf fisubr jne push dec jno loopne nop mov ja rolb sbb or add or in xchg jbe insl jo sahf mull xor xor sub lds push addr16 jl xor jecxz mov mov dec sub xchg fldt sub (bad) jmp mov das outsl jg daa mov xchg fisubl inc cmp sahf sub pop mov jge int3 je ret xor jecxz repz lods sub add sbb cmc mov faddl adc outsb pop push jae leave outsl in add scas pop inc cmp mov repz xor xchg xchg jp les push inc outsl push jne in push dec xor sbb sub dec es lcall sub bt imul cmc add pushf movw pushf mov lea jmp int3 popf pusha pushf pushf jmp and pop bound (bad) jne not xor (bad) dec push jecxz mov outsb adc sub int sahf fbld sbb adc push (bad) push or inc adc (bad) mov cld ret mov jno mov ss or pop and adc mov mov jnp jl je adc aad nop cmove sbb cmp movsb mov jbe jl into daa repz mov sub lock pop ret jbe push imul sbb jno xchg mov out sbb xor movsb fistp xchg fadds (bad) (bad) int3 adc mov (bad) mov (bad) js jecxz pusha pop cmp push imul movsl push xor daa xlat sub push (bad) jbe mov or mov lret fsubp scas iret xchg out lock call push stos or sarl jecxz or inc mov cli and sbb pop sub int lods shrb lods cs push mov lods jmp adc repnz jbe mov popf push add imull pop inc pop inc pop inc xchg sahf mov sub out call xchg sub imul mov pop xor movsb push jnp mov mov decb mov out push jns insb addb jle xchg push loop push in loop lret push movsl pusha xchg cmpsl lahf add int3 jecxz sti or xor sar ret fnstenv stos fwait cmp and sbb (bad) movsb ficoml leave (bad) mov lret dec push orl add out cmp sahf clc mov mov adc and aas jg test jae mov mov loopne out imul xor jle stc (bad) xor add ds aas fwait inc leave xor xchg sbb jno test fs ja clc add sub ror push btr add sub add and mov cmp mov cmc cmc cmp bt repnz pushf jmp repz xchg sbb bound adc sub stc push sub xor push dec mov push jnp push insl push (bad) ljmp int3 pop addr16 iret psubq mov aam das push outsl ret loopne push sub dec mov jb fld mov into aaa rolb mov push iret mov fwait add lahf lahf in ret mov xchg inc shrb add jmp subl leave mov xchg out pop fist sub jecxz hlt sbb es sbbl pushf pushl popl push push pushl pushl ret mov call addr16 movsl jle enter and lods adc mov and xor test nop and test imull pushl and andl xlat jmp xor mov jns pushf ret pop addr16 adc outsb xchg leave pop fcmovb arpl add mov das lahf xor and aad dec push data16 jb mov mov adc ja cld push sbb mov roll pop in es dec (bad) pop mov sbb outsl out scas aaa mov (bad) in mov dec mov aaa push and in adc mov sub sbb and cld push dec lods pop scas push mov stc sbb mov mov subl dec pusha sahf int int3 mov sbb pop and cs popa jb jmp xlat call imul push mov pushf outsb jno (bad) fsts lods pop mov ficoml mov es adc repnz push in jae add sub jg push mov mov sbb add xor cmp mov cltd ss xchg sbb inc test cmpsb icebp lods jle gs mov call push mov fucomi mov addr16 popf adc adc test pop loop adc push sub mov mov jl sbb mov (bad) or out pop cmpsl arpl rclb test mov arpl adc lret sub push js enter mov pop roll rolb movsl lahf jb push fs push jns popf popa jb fidivl or add mov xor jmp pop les inc (bad) test pop (bad) fcoms and sbb push mov in cmp stos bound xor xabort hlt mov out cld stos mov and pop and fwait cmp scas aaa cmpsl mov xor data16 ljmp inc mov pop or in push lods xchg aam and hlt dec xor jbe xor jmp scas mov gs loopne out fwait leave sub imul jmp xchg jnp rorl (bad) cltd mov movsb fcmovnb fdivrs dec jo shrb push mov inc cwtl fnstenv cmpb push or mov push pushf pushf pushl ret int repz pushf push mov lahf int3 test dec xchg imul mov movb or cld cmp pop gs cmc dec std loop lret and and push test pushf mov or xchg sub mov and insl jle shrl ret pop ja jl pop xor mov sub mov add inc lahf test push fsubs pop mov dec mov aaa dec dec pop rorl add pop mov and xchg mov add adc rcrl ret stos push pushf push out sbb mov das das mov inc jl sub cmp push xchg jno jg or movsl btc not xor mov xchg shrd ror mov rcr cmc mov cmp pushf pusha mov clc cmp sub mov cmc jmp lea jne pusha inc mov movb pushf pusha inc mov movl lea jmp pop pusha pop xchg inc push push mov inc jl mov add add sbb sub aaa mov je movsb mov sbb dec bound push loopne jg fsubrl call sti or out add ljmp pusha xor pushf (bad) insl in aad mov les nop arpl or adc mov ss (bad) insl sarl (bad) out sub popf loope ret vpmulhw inc ds xlat fadds aaa data16 incb in sbb lds imul mov hlt flds xchg mov push push cmp mov sbb dec mov lahf add iret out pop daa xchg xlat pop aaa rorb into xor xor (bad) js fsub clc push sar inc rorb and cld (bad) adc ja jnp insb lret mov int mov jo and in mov mov push out mov pop inc pop push sub xchg jg inc adc dec les lock rcrl shrl xor jp jno jge dec (bad) pusha add mov iret cmp gs jge movsl movsl stc in mov pop xchg mov adc cmp inc lds stc pop add sub push pop insl adc arpl pop and aam mov cmpsb cmp cmpsb flds sub cmp push adc inc dec push clc cmp add rol cmpsb push push clc cmp pop movmskps jl jns jle mov test inc je stos jno jge mov mov add and ret xor cli and sub jl test movsb imul mov in shll or sbb push outsl xor ficompl dec rcll lea mov sti lcall xchg out pop mov fimull and jbe int call rolb inc movsl enter sub adc scas xor sbb outsb sub fbld jns adc fcompl shr lock xchg jmp or and push lret inc cld adc sbb jl xlat add movzwl sar movzbw movsbw mov cmc add clc mov push jmp cmc pop and das ret jbe les mov mov cs and cmp or sub insb sarb jg pop mov dec xchg ds pop inc test push xchg daa mov sbb jle popf mov (bad) inc add js dec fdivr cli push sub das xchg push pop pop cmpsb mov js aas clc pop loop mov fcomps cli test cld mov adc in in cmp and cmp mov dec dec rclb or mov adc out inc push lods xor push gs inc ret or mov arpl mov (bad) xor xchg imul inc push mov push data16 sbb push mov ret pop nop push clc scas out xor and jo push cmp pop imul js movsb jp data16 and mov pop and jae dec pop cwtl daa push xor dec jns mov in or inc dec xor int ficompl xlat test jno jnp (bad) in lea call jp jb pusha pushl ret (bad) inc shlb xlat call (bad) jb popa cmc imul jbe data16 stos pusha sahf loopne cld sbbl popf ret jae arpl imul mov mov je xchg pop cmpsl mov and jmp movsl mov add cmp imul xor shll fidivrl shrl lock pop inc call push (bad) imul xchg mov addr16 cs call lea ja bt bt imul cmp bt stc add pusha lea jmp jmp sbb or and divb and pop (bad) bound lods test inc std mov in or test gs leave sahf aad lcall mov jl inc imul xchg mov sub add dec sbb insb jg jb mov stos cmpsl int3 icebp enter cli pop jecxz inc fnstcw (bad) xor dec mov iret mov dec xor js push cmp imul js inc mov rcl int repnz cmpsl clc sbb inc jno jns rcrb or xchg and call jmp call lea jbe movsbw shr sub shld stc rol btr mov add xor btr mov cmc add bt sub shr sbb data16 mulb mov mov mov btr add not mov pushf jmp out adc and adc lcall test xor inc cmp inc mov (bad) enter pusha adc or movsb cmp push lods repnz loop (bad) aaa dec mov (bad) and fwait mov mov popa add sbb scas dec jne popa jmp mov lock mov jne cli and fbld (bad) mov ljmp sub and sbb mov mov fdivl scas cmc jmp repnz dec add scas adc pop push mov jno cmpsb inc jg mov roll ficompl addr16 adc cmc stos mov dec xchg jo pushf mov mov call pop popa jge jns pop sahf ror fmull mov out mov sbb push stos call out sbb add or out sub jbe outsb (bad) sub mov loop sbb loope sub jle fnstcw iret mov mov xor cmp in (bad) leave push fiadd mov add mov inc mov jmp and adc or add jbe dec inc stc dec add fwait adc std push pushf mov daa jnp stc ja pop sbb xchg test rorl cmc mov add jl mov fadds aas aas sub scas (bad) lock jmp call rorl mov cmpsl (bad) mov sbb push mov sub std (bad) jle mov dec push mov cmpsl mov mov fwait outsl (bad) jmp je jnp movsb cmp jnp mov add pusha decb xchg dec mov xchg xchg lods sub pop lds es sub rcl jge lods mov pushf mov fisubl jle icebp cld dec lds add and fildl ss jo std pushf sub jne dec jg repnz jmp rcr loop dec jg push jo sub ljmp test adc pop xor rcr daa sahf and sbbb push aam gs shrl es add adc inc iret (bad) push negl jns inc mov pop jae ror movups add jno jbe pop std xor cmp mov fsts es jle jbe out outsl cmp (bad) jno add jae and mov lahf sub cld (bad) loopne mov cmp xchg jl and out popa repnz aaa scas xchg push adc cmc xchg lret rorl inc ret insb fwait cmp jo rcr popa pop loope cwtl jecxz jns xchg lret and ja lods pop push cwtl jne pusha jle ret and mov and std lea jne pusha lea call pushf push lea jmp (bad) dec xchg pusha movsl inc popf scas pop add push fiaddl cltd xchg mov lea mov test xor hlt push pop stos xor inc (bad) sahf add xlat dec out jb test test int3 push pop xor fisttp loopne stc icebp es push movsb jo pop pop pop mov inc adc mov pop fisubr mov fnstsw and push jecxz sub (bad) addr16 fdivl push out fs sub mov push push mov stos cmp imul xchg ljmp hlt or addr16 fimull std push aas pusha cmp out (bad) dec stc jnp add mov lods mov adc mov sub fnstenv lods xchg cmp lods cmpsl cwtl mov sahf andl cld (bad) mov mov in scas lock jae add pop mov not jle jne cmp inc lcall sbb in pop and jecxz add ja test mov dec sub dec pop push icebp icebp iret push stos cmc icebp in mov sub (bad) pusha inc pop fiadd pop push test fistp cmp cmp inc (bad) mov and cwtl cmpl dec mov ds in jb bswap outsl nop scas loopne ja stos xor mov movsl enter mov xor imul imul push pop add hlt mov xor out lock shrb in cmp mov mov or mov pop xor addr16 sub xchg test or jg fnstenv mov push pop js pop xchg sub sub inc clc jmp sub xchg or addr16 clc sub lea jb call pop (bad) jl pop (bad) dec pop in mov cmp jns push cli mov loope inc jp (bad) mov arpl mov mov mov loop repnz and jne ds push stos scas scas mov add or xlat xchg fistp adc cmp dec ss mov inc (bad) aaa test cmp sbb cmp (bad) xor xor arpl push hlt or xor mov push mov sub arpl mov sbb push inc pop and dec mov (bad) hlt add incl or loope repz and jae rorl xor shrl jno jb adc sbb cmp adc jb jmp repnz ret mov stc cmp cli lds adc stc test aas scas add loopne jne jge hlt icebp mov add pop pop mov cmp shrl dec jbe mov cmp mov lock push lahf pop (bad) dec mov fsubp xor movsl xchg cmp or mov lds sbb cmp std in mov mov mov dec pop cmovg fwait addr16 inc mov sbb mov rorl pop jno jno cltd and fsubrp cmc dec iret cmp add or cmp sbb mov add sub mov popf std in mov cmc lods xor pop and pop push cs adc jnp sub sub pop es add hlt push leave aad sbb or or fdivrp int test add (bad) and fistpl lds sub incb inc lcall xor ss dec mov add fstps test (bad) call cmp xor lea pushf inc lea jmp bt xchg movw movzbw rcl jmp pusha stc sub movb pushl popl call mov roll xchg dec add cmpb inc jnp jno sbbl mov jmp aaa js push ds mov insl jb adc imul cld sbb mov push add jne fwait push out xchg les cmc sbb xchg adc les jo xor adc and and add bswap push imul in dec push dec xor mov mov call das outsl das outsl pop cmp jae les (bad) fiadd mov xor insl inc cltd (bad) fisubrl sti fs push aam hlt mov xchg js (bad) movsb shr dec dec jno push fsub or xor inc cmp jo jno push push jbe bound jno outsl xchg mov adc loopne inc push mov and sbb notl jmp adc dec mov mov push fldl2e in out lret test cmp movsl jp mov enter sub inc (bad) mull pop daa loopne mov cmp or stc jae cmp inc pop push and mov jmp ja outsl out fs test je adc jecxz or and dec pusha imul jmp cmp (bad) mov xabort or movsb lcall add das iret ror (bad) shll mov in fiadd insb lods and mov mov push dec push outsl xor js xchg add cltd sub sbb inc std lock out sub inc cmp push push popa fs fwait mov rcrl mov ret aam popf push mov jp icebp add test add mov mov cmp jge inc icebp dec xor fwait jno outsb bound cmp pop push pushl ret mov in mov scas and pop pop mov in jae pop scas dec sarb mov aad sub lock bswap adc xor fiadd ret sbb shr fs mov dec push data16 xchg lahf movsb mov je mov xchg rcrl pop icebp lea mov mov pop push lea insl cmp dec iret leave cmc adc xor push xchg sarl shrl adc jge out inc pushw incb inc push cmp and and adc pushf stos pop pop in fimull add and vpextrw lds inc jp (bad) fdivrs cmp (bad) push ljmp lret xchg push and (bad) sti out gs mov or call fistp (bad) adc push out inc les mulb jge cmpsb in mov xchg mov or aam or stc es popf mov in mov and popf lret push jmp cmc test push pusha jmp in add pop stos in xchg cwtl in adc mov outsb adc or repnz mov add cli out dec nop outsb jg lods fildll cld or or inc dec dec dec dec icebp dec inc and mov scas and es sub mov push jns jp push clc mov fsin add mov push sbb divb jb aas push lds sub fstpl jle test shrl iret push ret mov mov lods adc leave negb sub xchg test jge shll jbe mov inc jns push pop loope jno mov push pop popa jbe je jmp push test faddl (bad) xor xchg std push pop in push lock andb sahf outsl (bad) mov cmp xchg leave out jo xor dec roll out sub or xor test or in lret adc dec adc into adc dec xor sbbl leave nop into adc sbb addr16 sbb pop cmpl mov inc les jmp jl pop mov xor push imul xor mov mov cmc clc dec pop pop (bad) jle adc jge shll je sub ljmp cmp cs cmp and xchg movsl fnstcw (bad) jae cs adc jnp lahf in out rorb pop out mov jge xchg insl jmp mov repnz test sti sub mov out sub jbe jb pop add or js adc ja fs jnp stos rcrl loopne icebp cmp lea add mov sbb lret fdivl push outsb loope add inc imul sub jno mov mov (bad) or pop inc and mov mov cs mov fsubr aam int3 loopne xlat call dec stc mov scas stos add jnp mov out or inc add push (bad) mov dec and adc (bad) xlat or inc mov into xor sub (bad) movl mov sub or stos inc das das fbstp es xchg push bound fcmovnbe pop jg cmp icebp xchg and mull in push sub pushf loop movsbl jno push sbb xadd fbstp sub mov repnz mov js mov mov aad outsb mov nop out xlat daa imul in push jns popf scas rorb insb jbe cli movsl stc nop iret fs dec mov xchg aad shl fldl jno pop pop mov sbb mov in fwait in xor pop rcl insl nop dec pusha (bad) (bad) pushf and lret popa lahf mov dec call jg aam mov scas lock inc stos jne (bad) ficompl adc push dec or insl pop jno movsl out and (bad) or fstpl jno imul xor ror test mov xor test cmc mov pushf pushl push add stc movb test jmp jnp mov xchg sub jmp stos inc mov mov cmc mov stc loop gs orl jbe es scas xor mov dec into (bad) in mov pop into (bad) divb sti fidivrl adc fistl xor xchg leave imul fbstp add mov loop arpl (bad) in add pop push sub dec aaa inc sbb icebp xor push call pop pushf pushf call stc test sub stc test stc neg mov pusha sub sub jno cmp test cmc shr pusha call dec or mov add and test push inc jl fs cs push mov push cs das jo push data16 mov jbe data16 fdivs clc inc pop mov ret sarl roll aam adc dec xlat cltd ja xchg in iret scas rclb jb cmp and repz inc fucomp push aad rorb popa mov and je popa roll bound faddl xchg je je clc or and dec (bad) pop jb cmc test xor aaa call aam insb repz cld or dec xor jge lods (bad) leave inc mov addr16 pusha call les or inc xchg int3 jl ret adc mov cmpsb mov sti addr16 mov rolb in mov add (bad) fisttpl shrb pop push mov test call mov push mov in xor dec xchg mov sub pop in jno mull dec cmp scas or mov lret inc addr16 adc mov mov mov mov xchg das (bad) out and dec inc cmp jo (bad) cmp sbb dec adc add push push out cli in icebp mov clc (bad) ds dec mov xor pop sub (bad) js js mov sbb sbb mov (bad) jns (bad) push push push in jbe sub adc lret repz (bad) aaa (bad) out jae js jmp faddl jae ja mov jb mov (bad) add push xchg mov into shll adc stos aas sbb scas addr16 test nopl push (bad) mov xchg out ja aas push or xchg jecxz adc sub sbb jg sub add icebp push or push out jb scas jnp int3 insl in adc out xor subl cmp mov fldlg2 rclb jno ljmpw loope or cmp inc addr16 mov fwait std loope cwtl xlat sub jp (bad) cmp and insb xchg or and popa mov sbb es neg imul sub fimull test mov out sub pop loope jb lods xor jb lock jle rorl pushf call or das pop test mov mov cmp cltd inc jns cmpsb push sahf xchg stos adc ljmp sbb or out bound outsb call ljmp push jno negb lds push sub pop popa and mov aaa out test insb push push sbb sbb and sub jo mov cmc cs es (bad) cmovnp fwait push fimull pop cmpsl dec mov jg xchg mov test test loopne add pop cmc shlb jle mov cltd add sar or loopne lds (bad) fcmovnb mov xor jb movl movzbl pusha setbe lea lea jmp mov and daa or call ljmp in mov jnp pop addr16 adc aaa xchg push cmpl add inc pop pop mov arpl adc jae jno add xor xor inc xchg pop pop fwait mov add stos aam fnsave (bad) (bad) jecxz rolb fistp add aas out scas rcl aam aas out mov leave cmc dec jne fidivrl add cmp pop and (bad) or pop push out std in cmc lea dec incb es imul pop movb ljmp mov mov adc (bad) addr16 mov lea pusha pushf pushl push lea call call cmp out jno popa mov jmp je mov push or fdivrl pop sbb push daa js adc sub and divl jp mov fisubrl fcoml xchg pop test add cmp dec stos xchg mov xor shr xor (bad) mov mov sbb push cmpsl insb les data16 mov mov xchg jbe stos jne jp xor pop inc stc and mov (bad) nop mov lods rcrl push inc ror sbb dec xchg (bad) mov jno (bad) cmc lcall mov mov out ret jo inc fildll out seto mov pop push mov mov std pop add stos loop lock or pop into popf loope dec cli sub call mov bswap xchg pop (bad) addr16 insl jb repz inc (bad) sbb pushf push mov push and push and xchg test jg test imull sbb push push lea push jge push andb fcoml pop dec mov mov mov test stos xor cmp sahf inc shrl test inc mov int3 loopne fistpl cmpsb ror pop adcb xor push cwtl daa ljmp push mov bound aam call xchg pusha arpl mov sarb adc out lea mov sahf flds and push lods clc cmp stos xor xor (bad) sbb dec call adc out es mov mov dec and sti loop dec mov dec and rorb dec xor (bad) je jecxz add das gs arpl (bad) and inc push lret pop sub adc ljmp xor stc and inc out (bad) out nop (bad) xor sub test je xchg cli or loopne fbld cld cmp sub xchg lret cli (bad) cmc jmp stos hlt in xor addr16 sarb dec mov enter cmpsl mov iret and mov iret stos ror sarl push and xchg sbb daa nop lret pop out shlb popa ds lods ljmp incb sub rcrb xchg in sub fisub adc dec shl in rorb sbb add jmp xchg movsl jnp pop pop dec repz not adc mov add imul sbb (bad) fisttpl int cltd or mov js xchg xchg frstor push pushl mov cmp add (bad) cld cmp dec push (bad) imul mov inc dec or or jo pop imul adc icebp dec push mov repnz loopne repnz jmp sbb jle bound jmp dec lahf (bad) pushf cmp test movsl cmc mov mov inc andb cvtps2pi imull jne jle in (bad) sbb xor dec mov mov mov xor test js scas mov xor dec cmp mov (bad) jnp hlt dec xor dec adc adc mov cmp fidiv pop pop jo xchg add add loope test clc add add sar mov bt bt call lea ja jmp dec jp sub mov or jecxz loope xor cld mov fcompl push idivb repnz (bad) jo jne add imul mov sbb push xchg orl or jo fwait lods pop addl (bad) roll movl xchg mov jne mov setl fcoms jne rcr mov ror jg rcr inc fimull mov (bad) mov sarb pop popa in xchg push xchg mov push inc lahf jecxz adc iret movsl sbb dec cli in cmp sub test sbb sbb addl mov mov mov jne and ret xor xchg in shlb push jp into and fadds inc sahf movsl fnstenv out inc roll fsubs insb jge (bad) jns rorl jae jmp stos mov inc loopne icebp adc jmp mov xor mov pop cmp mov mov addr16 dec inc dec push pusha lea jne bswap seto mov pushf mov pushf lea jmp dec frstor push loopne outsl call adc add nop ret into add xchg mov popf push or icebp pop push sub or es and push icebp lcall mov sub (bad) out cmp outsl adc int3 rolb mov xlat jbe pop mov dec push movsb add cmp dec sti sarb decb dec cltd es (bad) lds int3 xchg movsb in into dec and fbld enter sti xor push dec fs inc insl jb adc inc stos add cmp cli or jae pusha dec aad (bad) fadds sbb push jno test mull lods push in mov add pop add inc test jmp push mov daa negl gs mov outsl shl jno pop xor xor cmp enter test adc pop cmpsb vaddss jno xchg das pop and lret xor sub gs les push xor xchg daa testl repnz ja sti (bad) aad add cmp inc fsubr and arpl in cmp jo in aam out sbb fildl push xor sbb mov sub es jne je sub fld nop scas mov mov daa idiv or jno pop fidivl lret movsbw je rcl adc xor bswap mov xchg pop call add inc outsl inc jb popa je dec outsb jae popa outsb arpl movl pushf movb push movl lea jmp xchg dec iret xor les data16 pushf ret and mov jp movsb jnp (bad) mov mov xlat inc lret add push gs stc movsb stos js add aas pop xchg pop sub dec pop jmp fistp enter xchg outsb rclb or (bad) or imulb cmp les into push adc add stos jns mov pop inc (bad) aas ja add mov test in cli cmp es sbb xor ja cltd add imul addr16 xchg stc mov xchg in rolb mov or pushf dec ror ror mov cwtl jb cmpl nop mov out outsl xorb add adc pop fwait jae pop flds jo mov cmp push fisttp xlat sbb das push xchg mov cmpsb mov cmp fs ret pop jns xchg mov sub lods (bad) cmp fmul cmc push pushf inc cld mov sahf rorb pop imul push mov mov mov mov sub push out packssdw sahf add jno pop add sar movzbw add push or mov or sbb call push (bad) adc pop add test cmpsb mov pop and mov sub int or adc add xchg mov sub aam fildl dec aam mov dec mov clc cmpsl mov add stc inc push addr16 in inc iret lock cmp repz cmp sbb lea repnz test fbld mov iret je mov in cld aas or lret add out sub nopl push mov clc imul setbe pop incb push lock fucomp cmc fs sub and addr16 fnstenv loope add and lret call pop hlt mov scas pop mov dec cld mov jo imul and (bad) inc sbb mov add or jmp (bad) or into pop xor arpl mov jl insb ljmp push xchg dec pop cmpl pop lea cli out push xor nop mov subl and cld or pop sbb adc cmc lret ljmp fucomp adc repz icebp out xchg jb and (bad) cmova loop movsl sbb dec in xchg popa fucomp (bad) adc pop jno pop cmc lcall sbb inc mov mov ret pop pop aas pop mov das imul push mov jne mov pop sbb dec mov xor sub jp insl fmull adcl xor pop lock incl (bad) stc push icebp xchg in inc xchg push insl xor movsb hlt unpcklps push dec sahf xchg jmp pop inc jl cmpsl ja add jbe mov cmc jmp and push daa push inc and cmpsl ja push mov jo in inc adc nop dec mov leave sbb pop sbb push mov movb movl pushf pushl lea jmp xchg shlb outsb je insl xor ds push test hlt sub inc loope mov push push inc xchg test imul sub mov xor sub mov and test adcl fist dec or fcoms lock pop mov add jg pusha (bad) mov or ljmp sbb xor xor idivb scas adcl push aad or imul mov bound imul lret xor xlat enter dec mov fwait cli (bad) fnstsw (bad) xor addr16 mov mov sbb shrl inc jp and pop aas pop adc pop jg scas sbbb lods push add or rolb (bad) (bad) mov iret ss ret test shl dec dec negl repnz popa pushf inc les and in push push dec xor dec scas jl jecxz enter mov outsb pop ret xchg push data16 lods loope mov push int push (bad) sbb sbb fisubl cmp push xor cs clc out push mov and add stc push sbb sbb js outsl add repnz out inc clc in int mov jbe xchg jmp arpl addr16 orb pop jae jge mov icebp add dec lock icebp mov mov loope fwait push pop adcl xchg daa dec outsl jo aam aas push pop jl mov adc sbb cmpsb cmp sub jge mov mov jp push ftst lahf clc cmpsl mov (bad) flds mov adc push (bad) and pop fs mov cmpsl mov rorl jp inc mov sarb pop imul popa test dec jmp push subb js mov popa jmp jno push push jno mov imul (bad) cmp inc jge nop mov popa (bad) aaa (bad) push lret scas iret arpl sub jg lcall cmp mov mov call mov fwait movsb push inc push fsubr pop sar fiadd popa xchg mov xchg xor ret jmp (bad) jb (bad) jge addr16 xor jo mov inc popf add repnz pop into jno mov loop add dec sbb aam lods xchg call push shrl scas bound rcll enter sbb pusha aad pop (bad) call jno push (bad) leave aaa push (bad) lret repz jne test jo js pushf push mov test enter movsb cbtw inc fdivrl xor imul add clc pop pop sub cs adcb in sysret je leave mov push sub fistl add pusha subl arpl in mov lahf pop jae dec mov lock ja ret pop mov inc push mulb fs mov and bound sub and out in xor push inc mov int3 push out dec jno (bad) inc lcall and mov mov addr16 sub and in cs loope outsb adc sbb sub add sbb inc jle pop sbb fist jp jo (bad) dec adc jo cmp sbb mov xor mov add add push dec cmp jns icebp xor hlt push push or mov add cmp lock dec in dec xchg inc mov pop fwait mov lcall pop nop sbb (bad) cmp or fwait call out ror mov sub shl cmp dec aad repnz fidivl mov out and sbb mov repz lock xchg cli jns lea jne call fstpt popf scas push sbb push cmp or mov decl xlat add xlat mov fsubr aam int outsb adc mov mov lret (bad) fbld xchg or in sbb and xchg movsb test push dec out pop loopne scas (bad) std mov xchg xchg mov fucomp (bad) stc in sub xchg or pop mov enter ds rclb leave cli sub add test sbb pusha mov pop (bad) lock shl xor popf inc imul repnz push mov aas sub pop stos hlt mov nop push int mov xchg pop fisub jl jmp fs pop inc out dec pusha mov lds test inc std leave xor stc and out pop push or popf add lahf pop mov xchg mov iret adc es mov push lcall je or pop dec and and ja xchg fwait into nop in cmpsb loope out jo test (bad) enter mov lock pop (bad) or xor adc push mov int3 loope sub (bad) push call dec nop mov loope enter (bad) and add insb gs pop jno and mov insl das repz adcl mov js mov daa mov xchg xchg jmp dec xchg shrb adc xchg fs cmp cmp sbb outsl inc xchg aad frstor fcomi enter jg lds call cmp inc xor jnp nop lock push xchg lods pop out clc (bad) (bad) cld or mov inc test and mov cmc clc sub pushf push jmp sub rcl mov stc jbe cmpb jmp call scas out out ret xchg je jle xchg mov lret inc lcall insl mov scas lahf jg ret outsl iret lock adc out adc sub add aad ja jns pushw inc mov cmp addr16 dec push pushf ret or pop mov int mov xchg ljmp or pushf iret lahf pop scas (bad) ljmp or mov cli cmp rorb les insl mov stos mov insl xor push and movsl pusha outsb mov jno push cmp cmpl ja or pushf neg sub sub bsf add add and rol sub mov cmc sbb pusha pusha mov push repnz jmp out xchg stos adc push gs bound fcmove jnp sub (bad) (bad) iret cmp fs pxor push fwait mov loop into jae mov jae mov xor pop (bad) mov into out adc pop test lret icebp mov jp mov cmpsb cwtl sbbb test out add (bad) sbb ja mov mov or mov sub mov in pop mov sahf sub int int3 mov hlt sbb sub sub ja fisttp or loop pop int (bad) (bad) jnp jae mov inc ret sti ljmp loope xor pop and jl orb flds test inc mov sbbl inc push lds scas push in mov scas ret repnz cmc jmp fcoml mov xchg add repz add xchg loope pop xchg aad repz push nop dec xchg jnp movsb fwait mov jb mov inc std je lahf nop scas rcrb loopne int3 frstor cmpsb mov ds push mov cwtl jne hlt mov addr16 dec cmpsl js roll addr16 sti xchg mov mull sub push jbe daa cmp movsb push mov sti ret pop pusha sbb ffreep xchg enter int push push mov fildll or push sub fs or and leave push (bad) (bad) js insb xor ss mov lcall xchg mov ret pop addl sub inc mov jne mov or xor insb xor cmp mov jno gs (bad) stc push inc push into mov jns xor sub sbb test gs add xchg mov jae xchg push movsb and insl lods ss loopne aaa fwait mov mov push stc lds out add jno dec in mov mov jle push xchg enter test loop es out sbbl xor sub stos push cs pushf stos shrl add add test sahf rcr and xchg lea push adc ja push lret ret gs mov sahf mov ljmp xchg push repnz idivl out push mov inc sbb fdiv dec mov lcall outsl inc clc daa or aas add test adc mov out xor repz and pop cld bound sbb jb pusha jno dec popf repnz negl inc push test sarl xlat test loopne cld or mov out inc cli mov mov mov lods test xchg jo ljmp pop pusha jne pop jo mov push pop inc test mov lock jae jns sbb sub mov leave or test cmp push and or (bad) or faddl outsb ret (bad) dec sarl iret (bad) daa cmp push xlat out dec mov sbb cmc es ss xor add sub jb mov mov cmp xchg aaa cmp jmp push adc pop lahf xlat std rorb cmp mov dec adc out mov std bound cmp scas ja sub pop ljmp das inc xchg sub cmp xchg push arpl ss jbe cmc push ss xchg add es cmp daa ja pushf inc dec lock sub loop movsb jp push jmp mov outsl rcr add out out inc push insl scas cmp xchg cwtl (bad) cmc push ss (bad) pop insl movsl lret mov (bad) xlat xchg fsubl adc addr16 lods loop std fiaddl fcoml jle push call daa lods adc ss dec sub xchg xor sub fs stos cli mov sub (bad) nop mov jb or and pop sbb push adc imul sbb ja jbe xor shrb mov pop push out jns icebp (bad) cld (bad) jno (bad) lock add insb mov adc push push das out mov cmp imulb inc and jnp cmpsl mov or lret or add push or std cmp pop jno dec out cmp cmp arpl inc (bad) push cwtl mov outsl loopew add add adc sbb push or xchg stos mov sbb mov mov cmp mov mov hlt cmp sbbl cltd cmpsb hlt (bad) mov xchg stos sub jp sbb inc lahf gs adc stos mov adc test movsb out (bad) iret addr16 mov gs or jmp test jge xchg mov push xchg mov mov inc les fcompl cwtl inc cmp test (bad) decl or add xadd shl bt sub setb stc call movw call push call jl mov (bad) jge xor mov mov jecxz ja adc popa sbb add dec cltd inc push xor movsl in mov adc daa sub daa mov (bad) ret aam add cmpsb movsl sbb arpl rolb xchg or inc sub push mov sbb push xchg mov inc insl test sbb add scas psadbw dec jns popf mov pushl shll inc loop mov adc in xor dec jg mov repnz add fwait outsl jo lea or addr16 or xchg sti inc ret sbb push mov sbb dec (bad) xor xchg dec jns rorl test mov sti jbe push mov fmull f2xm1 adc mov cmc mov push jae jge jle and jle add jb (bad) jl sub cmp js lcall out or pop aam and mov jns rorl inc cmp test mov lods and mov mov push jns test imul ss xor popf incb pop es xor adc fldenv cltd lcall inc mov jne sbb nop das inc movsl sahf in aaa mov repz (bad) out dec sti inc int3 pop push psrad dec clc push dec sbbl dec ret push rcrb sbb mov inc push pop and sbb aad mov mov lods scas ret xor xlat xchg cwtl fldl lock xor out adc sbb mov ss les sub push or dec jo mov ror iret xchg stos jae push sub inc outsb and or cli and mov in adc cmc push mov test pop mov push loopne and jecxz loopne out adc lahf in shr iret ds xchg rolb cmp and (bad) push int int int jae dec aad rcrl add cli xor iret fild fucom and pop sbbl cld nop mov mov sub sbb jbe pop jno mov sbb out jge pop xor cmpsb popf mov cmc aas or adc mov sub (bad) test scas cmpl js lcall xchg pop mov xchg jmp (bad) and aaa rorl scas and push inc lcall lret push sub test aam aam loopne fdiv mov sub add sbb jge pusha push add scas in xchg bswap das jo (bad) xlat push mulb mov push sub inc push xchg rorl xor aas push gs sarl dec push sbb scas sahf adcl ficomp cld (bad) xchg arpl mov std ret subb fiadd lods enter pop mov int mov int mov sub push add adc adc jno inc test mov adc call daa mov not add clc mov clc cmc call add inc gs gs gs dec bound arpl arpl imul pop ds xchg jmp and cmp test pop in cmp mov loopne (bad) push (bad) shr pop lock jbe push add sti std loop push cmp cs aas add cmp int3 test pushf pop adcl fsub sbb sbb sub sub jne in icebp mov jl fisubl pop pop gs mov dec inc imul pop insl xchg or gs mov sub dec push mov loope dec mov scas lods repnz test mov cltd clc cmpsl sti insl icebp ret (bad) cmp daa push js xchg iret in ljmp mov mov fcompl scas xor pushf dec pushf shl not push pushf lods push cmc not cmc sub push pushf neg pusha bt clc movw sub push jmp add call popa in jae (bad) mov sbb clc push dec je movsb pop inc mov out add and scas es fnstcw out xchg sub fistpll dec in fcomps lcall outsl gs inc inc jecxz mov mov cmp les and fadds in cmp repnz (bad) movsl les imull mov std dec mov ljmp inc into mov test push mov popf add in (bad) push dec testl out sbb aad addr16 sub xchg push adc add shrb repnz (bad) mov push cmpsl clc into xor es jl xchg daa aam imul mov loope (bad) test mov sub frstor enter add cmp sbb push mov daa out scas mov add std (bad) jb xchg fs (bad) outsl mov rolb inc and outsl xor adc inc cmp fdivs jns jo (bad) mov lock mov (bad) or int3 (bad) repz (bad) fadds jle scas sbbl in jno inc sub jnp add push or push mov or bound pop mov jae mov pop icebp adc int3 rcl push mov jp scas icebp into sbb fadd dec negb mov xor pop and mov sbb lods mov cmp sub pop loopne adc inc adc push fsts hlt dec pop inc rclb popf push bound pop outsb shrl xchg jae cwtl lcall in lods xor dec pop cmp mov sahf subl mov mov adc adc repz ja js gs jbe xchg jno inc dec inc and jmp rol fidivl into hlt lret inc repz fwait add ja cmp xor sbb dec mov or xor push daa mov idivl inc dec mov cltd push jmp movsb outsb inc repnz xchg xchg mov iret sbb addr16 push add scas das test std (bad) loopne sbb inc cld or fild sbb pop and insl mov les jno inc ret shrb sbb jno fbstp sub cmp cs cwtl out (bad) int dec push and ror mov add mov cltd cltd xchg or rclb inc fldl lods aam mov insb mov push inc insl and fisubl imul cwtl in or mov xor aaa es cmp clc push loopne or sbb mov hlt lret sub ljmp rcrl mov popf xor cld mov das out cli in adc inc cld cmp call pop loopne leave aas dec mov dec pop pusha incl cmp or sbb jo jo sub mov adc movsl mov xor pushl dec iret cmp call sbb dec aad int (bad) xor mov fcmovu in in loopne leave jb ljmp scas sete xchg daa cmp mov shr testl lds scas nop pop out fcomps and ficompl call lret mov loopne leave fsubrl pop inc jl daa cmp mov mov icebp gs push xor ds jno inc (bad) cli test ficoml js ja mov idivl sub pop aaa or mov repnz push sub aam inc pushf scas pop mov sub inc jno outsl mov clc or rorb es loope clc cmp aaa lcall inc ficoml gs ret mov dec mov adc inc xchg jae and cmpsl push negl add pop (bad) cmp pop andb adc sub fisub adc mov (bad) or addl fchs (bad) (bad) dec push lret dec negl cmpsb adc or addr16 icebp sahf test xchg mov inc ja loop inc mov or stc in icebp std inc adc aad sub ret adc and lcall scas add or add mov xor lods mov jp in mov pop cmp dec pop insb iret push out (bad) (bad) clc sbb mov jo cmpsl jns lods add mov cld push jnp pop shlb and mov lds xchg inc test adc outsb push cmpsb dec imul jbe arpl es mov sub jae ret ja pop add mov sbb comiss sbb sub ds push mov lods stc in ljmp sarl int mov int stos xchg imul jbe jmp jmp mov mov cmp lea xchg int xabort (bad) mov or push (bad) dec enter scas shrb push je sbb and (bad) ret lcall lret aas cmpl popa fstl push int3 add adc (bad) xchg sbb aaa mov ret mov xor enter or mov dec cmp sub or mov mov aas shr vmovd push into (bad) btr cmc sub insl jno lcall loop addr16 cmp jmp push aaa sub sub fcomps pop loopne add adc sbb jl jge shrb fild mov nop mov aad inc or add or out cld mov imul cmp xchg cld mov xor or addb fld lods push test jmp inc dec mov mov cltd mov inc xlat mov ss inc cmp fs addr16 dec add bound popa movsl mov pop dec xor or mov xchg pop fbstp mov lea fdivp lods mov jl addr16 shl outsb inc pop outsb xchg addr16 inc js jg daa ret cmp cwtl (bad) fadds inc add lret outsl das inc mov sbb jae mov pushf xor dec clc shrb sbb adc dec adc (bad) fdivrl inc jbe push dec aas cmpsl ja lret cmpsb clc or mov xchg push inc pop mov scas adc add shrb inc out xor outsl movsb fwait push out xor cmp stos sarb xchg add sub lds fldln2 jl repz xor loopne lods push pop jb mov cmp inc ds dec jl aad cmp insb mov scas int3 xchg out roll ffreep inc inc mov (bad) sub sbb xor (bad) pop decl setns add pop sahf stc push jns insl push pop cltd or xchg cmpsb imul outsl aam mov lret loop lret jno je jmp mov sarb cmp cmp cwtl push scas lock adc push imul cmpsl cld jno cmp mov scas (bad) out cmp or in inc cltd stos and jae sub pop or das inc mov cmc push enter test push ret insb pop sub in (bad) mov push or push pushl lret mov dec mov inc xchg push or sub iret (bad) jnp mov daa push xchg mov scas pop mov imul stc insb shll or movsl popf out xchg dec (bad) mov out xchg pop cltd add pop sub and ret hlt pop inc mov jge xlat mov pop mov and (bad) mov jecxz mov sbb cmp loope out mov lea outsb sbb xchg int3 clc or push add xchg lret cmp insl mov mov repz les loope xor dec ss pop cld (bad) cmc mov jb or xor add mov out cltd stos xchg aam repnz jl and in sbb sarl sub dec in movq pop xor jnp sub adc inc je mov movsb cli push mov ss stos jge adcl dec mov jecxz mov pop movsl mov loopne leave out fdivrs jecxz sub inc cs loope,pt jno add aas movsb (bad) add sub aad adc push xchg sub inc sarl outsl outsl mov (bad) pop mov cmp or and bt jmp out sbb cmp jl out pop xchg sbb mov lret xchg pop test xchg sub jae repnz push or mov xor data16 inc loope xchg adc hlt or out inc cmp mov fucomi dec xchg leave sbb (bad) loope or cmp xchg mov loop or push inc sbb leave shr frstor into push sub mov (bad) pusha push mov xchg mov sbb mov sbb cmp stos adc add fs ja je stc push call adc inc rcrl jbe repnz or call mov jmp testl rcr das fadds jae dec adc sbbl test rcrb sbb sub je xor (bad) cmp xchg (bad) fadds mov fisttpll lods adc andb gs or push sub je dec sbb dec and jle cs adc (bad) outsl iret loopne push add repz sbb mov jno jns pop inc aas mov faddp add dec xlat cmpxchg mov mov lock pop xchg add into push xchg sub outsb popa push adc cmp adc cmpsb fnstenv jb jle ret nop ret into adc mov sarb sub and xchg sub les inc add push call dec hlt aad cwtl add dec pop adc iret nop jmp pop les (bad) cmp push mov inc mov jmp xor pop (bad) fidivrl jns adc pop jge,pt adc lahf ret add xchg xchg daa dec sbb xor jp sahf xchg mov pop add cmp push inc mov mov xchg and addr16 test lods popf ret push sub std enter push call addr16 sub insb pushf movl pushf pushl push lea jmp call push movl push pusha pushf movb movl pusha pushl lea jmp xor push inc mov mov inc or psubb xchg jmp aas arpl sbb sub mov hlt cli inc sarl nop rcr mov mov stos (bad) sub pushf ret xor insb push inc push push and iret daa (bad) cmp sbb lret (bad) sub scas cltd ffreep cli push jne xchg mov mov and push icebp stc mov xchg add dec mov ljmp ret pop jecxz incb xchg (bad) mov add lahf and (bad) test hlt stos jmp adc mov adc sub xchg jmp rorl out addr16 lret repz dec jno dec dec push loope cmp pop sbb and je mov xchg test xor repz and decb xor jo inc mov inc paddsb push out xor and adc inc rcrl (bad) dec int3 test into mov or push fs lods lcall (bad) mov pop dec mov cmp es jle push fs cmp lock test cmp or xchg lahf daa dec shrl cmp test dec and sahf push out dec pop fwait push ret rcrb xchg fadd in shll in cmp adcl dec cwtl daa imul push jno xor stc jmp pop jg arpl jb xorl xor bound insb ja ret sub jl mov mov fisubrl jo rorl ds push push mov stos mov loopne leave and lds inc jns iret iret xchg cwtl stc push sbb aam in nop mov xchg call jge cmp data16 xor jg popl out mov push inc sbb pop dec repnz clc out jno xor add dec outsl arpl inc jb add push dec xlat call cmp fldt insl test pop (bad) cmp cmpsb aam push addr16 cmpsl mov lret cltd stos xchg lods stc popf sbb mov push xlat ror add pop or and sbb xor jns push je cmpsb test and or cmp popf fldcw cwtl add adc jl mov dec data16 shrb push test mov mov lret scas rolb mov clc sbb gs mov jno xor ds pusha mov mov lea jbe push pushl test sub stc add mov xadd shl inc mov shrd pop add stc shr data16 (bad) pcmpgtd (bad) mov movsbw add pop movsbw pusha call mov mov fimul andb in mov mov (bad) fcoml add data16 cmp outsb nop rcll jmp cmp sub jbe aam in mov rcrb rcrb js sub sbb cmp test js pop pop pusha je pop push jne push pop repnz loope xchg dec scas rol sbb (bad) jle andl xchg push test imul mov cmc inc imul mov xor lret loopne cs pushf sub stos adc jbe and (bad) adc push int (bad) dec jno xor cltd inc leave push fiaddl loopne ds lret jne mov adc xchg inc add fsubrl push les std popa sub in push loope pop mov cli dec cmpsl shrl mov sbb mov cmp pop stc jmpw enter ds jge dec mov push (bad) fnsave inc push push add daa test cmp sbb jge mov dec popa movsb (bad) xchg jmp ja aam jnp xchg mov les leave in shlb jecxz pop scas adc sbb adc dec xor (bad) jno xor inc pop mov xor mov sub or out icebp pop ret (bad) xchg ljmp outsl (bad) xor and comiss and je fucomip push inc push jbe dec jns movsb hlt outsl popa inc dec aas inc gs xchg lret mov push call andb out pxor xor dec divb dec jnp test fcompl pop push inc sbb loopne lahf jg pusha imul push clc mov jae fcoml mov lret adc sbb testb bound mov jno xor fs jb bt cmp pusha lea jl push mov lea jae rcr cmp mov inc shld mov call lea jae jmp push pusha pusha pushf pushf movl mov lea jmp sbb push cs pop int pop sub inc add gs cmp je mov jb (bad) and loop ret sub pop inc pop (bad) push mov dec add xchg push int3 scas lock enter into loop into push sbb inc inc adc mov jo enter enter testb int3 mov pop xchg movsl enter and mov in dec cmpsb and ss pop test cmpsb into lock adc dec iret pop enter push flds pop jo lcall nop out mov lods cmp arpl ljmp jecxz call shr das jno xor stos loop bswap lea jmp cmp dec loopne pop and adc insb cltd add jne dec sub dec jno (bad) ss inc pushf bound clc pop sbb pop xchg and xchg aam jl into xor ret inc mov jne jecxz mov in fsubr add lret xor popa jge sbb push mov movsl dec adc dec adc sbb cmpsl inc jne mov push loopne stos sub add xchg mov (bad) xchg pop add cmc push popf push lock (bad) in or xor (bad) mov pop mov repz stos pop push mov fldl2t mov ret jb fnsave das aaa pop enter cmp je pop insl mov add inc aas shrb inc movsb jnp (bad) mov fwait inc pop xchg push out mov lcall hlt imul dec or add push add lcall sub xchg shrl hlt add ret inc daa push ret addr16 adc subl cmc xor ds and jl dec jae in outsl jnp or jle rcr ljmp inc mov mov lahf incb ljmp fbld outsl dec or rcrb aaa dec push (bad) xor aad xchg imul iret jno das cs sub or sbbb decl lahf lds mov clc add add rol call pop bswap comiss aaa inc cmp lock cmp inc sub pop loope (bad) (bad) cmp fcmovu mov adc mov aaa pop aas sti xor arpl xlat enter imul xor pop fwait jle jb ss xor mov and lret or pop mov insb pop gs sahf addr16 mov jno sarl adc and data16 mov fstpt repz js pop mov pop popa fisubrl imul cmpsb mov incb sbb push xor mov push lcall adc sub (bad) and mov inc pop mov es je jnp jb popa pop (bad) push (bad) add dec jae cmp ret mov sarl inc cmp jle sahf add pop pop push hlt mov fsubp in inc push pop pop xchg jg mov or ljmp dec pop jno sub rol mov test btc mov clc stc jmp cmp jno and jbe dec pop outsl or adc cmp sbb fsub shrb jno jle out dec nop repz and pusha pop test mov lahf mov lahf loopne inc push jns and (bad) stc pushf and jae jle sarb inc or fldt or jne adcl loop inc sahf repz push jne cmp push daa push call lods add int jno pop imul scas int3 mov xlat call popf jno pop out mov add cwtl sub jae mov lds jno sub mov pop lea jae btr lea call movl movl jmp cwtl dec mov mov xchg cmpsl lret ret je rcrb push fistp sbb test adc mov aaa jp cli (bad) xor sbb scas pushf bound mov insb lods scas aad lret fildll ret mov pop js xchg faddl into jg inc or mov jmp cmp push fidivrl les jne aad sahf jl fnstenv mov jno jne jg push jns imul pop xor fwait bound aas add psrad mov mov adc (bad) cmp xchg mov jae mov inc mov xchg ja addr16 test sbb ja add pop in out enter or pop push add add sub insb jae jne rcr aas xor and neg mov jmp push fadds adc in stc and adc scas xor in mov mov jbe das iret loopne jbe scas aad lcall cmp adc out das xlat in imul rorb jns stos int adc nop lock aaa cmp dec mov jns in pop (bad) idivl (bad) cmp ljmp push fdivr stos push test in cmp jne pop inc call mov fdivs jnp sbbw inc cmp aaa or ret jge xchg ret or sub xchg jbe push imul dec in mov add xor push dec test cmpl fnstcw jl adc das (bad) cmp repnz loop scas out jecxz jge jp dec pop rcl inc pop sbb cli inc das mov out xor jbe loop sub inc aad mov stos scas sub fldenv pop jo aaa or scas xchg mov push pop push sub js les jb jno pop pop test jnp (bad) std or fstp out or mov cmp jno sub pushf push lea je test call and pushf (bad) cmc mov sti into mov in push adc ds bound lods or inc push out and inc pop jo jno or dec mov aam inc cmc cmpl cli in lock xchg pop in add jo repnz jl outsl push ja lahf movsl cltd and adc add repz mov addr16 fsubr cmp outsb (bad) aaa adc jb scas pushf or loopne test dec jno pop mov inc in push ljmp jb addr16 pop mov cmp pop mov jecxz pop add cmp jno sub lcall jne jmp add dec outsb je jb outsl arpl fs js push inc fs aad sub cld dec clc inc stos pop cld xorl add rorl and mov popf and das and xchg fnsave pop test sub cld loopne cs lahf pop (bad) (bad) cltd mov xorl pop lea arpl jmp pop std mov xor xor push mov cmpsl xchg xor xchg pop repz fsubrp daa scas adc ret jnp js jl insb aas stc es mov inc xor adc stos xchg push std ret push adc xor push mov leave int3 repnz sti (bad) cld push sarl jno sub mov mov sbb xorb int addr16 ja pop fist repz out aam rep sbbl xor or xchg jno sub repz nop mov out mov nop or shlb sbb inc adc mov (bad) push jbe sbb imul (bad) mov push in fiadd icebp pop and adc mov cmp frstor dec pop xchg dec sub xchg int mov xchg orb pop andb mov loopne fstps jno daa jecxz loopne pop cmp fildl add sbb test add lcall pop and leave xor aam dec (bad) icebp int adc or inc mov insl shrb xor inc fcmovnbe dec loope xor mov inc sbb jns mov nop jmp mov push ret sbb pop test or mov jnp test pusha jno addr16 mov (bad) mov add add jmp lret adc xor in outsb mov outsl inc pop xchg jb stos test int lds aad pop inc movsl pusha sbb dec and rorb mov mov insl mov cmp das fidiv jl dec xchg push mov mov lds aas sub push iret mov or rcr dec sbb sbb jp cmp or or xor mov or adc push ss dec test scas das psrld pop bound jae adc loop negl jno es fwait ret fstps aaa dec dec adc bound add loop mov aam or adc xchg mov cld inc push loopne dec iret xor imul pop add add js insb roll js mov mov xchg frstor repnz sbbb outsb inc jns add test pusha shlb sub int3 cmp icebp enter push (bad) int3 xor cmp es lods aam mov cmpsl mov inc clc lret (bad) ljmp fildl mov and out add sbb push int fs lahf jo int3 mov jl lret sub rorb cmp and and sarb jns push sbb das daa aaa jg stos mov or out loope je (bad) testb jge or xor cs jecxz and dec mov test xor sub jo xchg mov push push (bad) pop inc push lret pop mov pop xor xor stos jl outsl push stos jae jg xor jbe or pop mov jae mov push movsb and adc aam fwait inc dec mov js push cmpsl aas cmp cmc mov mov cmpb fadds and mov movzbw movsbl lea pushf jmp stc dec or sub sar inc add add xor ror mov clc setne mov jmp jmp pushf pushf movb lea jae pusha test add mov pusha mov pushf pushl lea jmp jmp add inc gs imul outsl outsb dec outsb outsw inc add test rcr adc lea jmp movl pushl pushf lea jmp xor movsb dec cmc out cmp out es or aam faddl test or fidiv sar adc dec std pusha cmp adc inc (bad) mov (bad) notb jge mov movq jnp pop xchg (bad) dec rol pushf inc pop mov or sub mov bound mov inc rol shl fnsave out mov mov lds stos mov push (bad) sbb test pop xchg fcomps add mov pop mov or pop in shrb call in push fild jno and int3 pushf ret imul and in lock jmp add jecxz mov popf scas add ror or add push xchg lods mov scas sbb push xchg xchg sar cmpsl cmp mov (bad) (bad) aas xchg pop mov adc adc mov pop in sub mov sub add (bad) pop push subl sbb push and into mov gs movsb pop lock and in insl xor ds mov dec out jle insl fidiv cld (bad) sbb push out cmp jl sbb xchg movsl mov (bad) aam pop scas mov pop mov and mov or (bad) jns sbb xchg add repz jmp ret stos jnp aad cmp inc addl dec mov popa sbb aas pop pshufw xchg outsb jg and stos adc or cmpsl call xor bound pop push mov and mov mov fidivrl out out inc add jl adc mov jbe and push out push mul je xchg sbb push jmp dec lea fmull aas call pop (bad) int les mov mov push mov xchg pop jl inc push (bad) aaa lea testl mov dec jb mov imul shrl xor jg out shll sub lret cli (bad) call jmp sti les lret fdivl and push sti adcl movb pushf pusha movw lea jmp xlat jbe dec cmc call xor stos call pop xchg stos or adc fistp lret xlat dec adc xor movsl push lods inc pop sub inc fwait aam leave jae data16 cmp lds loop mov push test test jbe addr16 cmc xchg mov add or fsts push insb (bad) mov xchg scas jl dec and lret shrb out idivb mov daa mov xor aam mov dec dec push xchg jg sbb jns aam shrb (bad) adc ret add and push mov push out lods in iret das mov mov jle gs ret stc or pop jecxz push add and out xchg and jp jbe dec mov ret arpl push push mov push test mov data16 or nop mov cmpsb inc aad sub mov add xor cmpsl fcoms cwtl fstpl adc push jns fsubs inc cmp test sub push int3 cli gs xchg jmp mov enter sub push mov mov enter pop in sub add cmpsl push cwtl jno pop sub daa xlat sbb cld iret jmp add jne popf dec xchg in mov xchg jbe mov pop mov icebp add cmpl (bad) dec jno addl (bad) mov arpl sar sub lock test gs pop mov sub imul sti arpl jg mov xchg mov mov stc xor repz pop test push pop mov (bad) loopne sub lock mov jo jo mov mov lea mov rorl jbe add or mov mov or (bad) jno pop push cmp aas pop mov mov jecxz lahf ffreep scas adc sbb das mov add mov dec pop in xchg stos sahf adc mov int mov stc jle and mov testb pop sub insl sbbl adc js pop push cmp test into jg jmp cmpsl pop divl jecxz lods mov cltd stos cmp movsb imul out mov out mov or loopne dec xchg sti jmp fsub mov iret mov std mov cltd and dec xor (bad) pusha addr16 mov hlt pop and out rorb xor (bad) adc add sub push addr16 test call cmpsl mov sub jbe into mov fwait insb jae arpl andb daa cwtl push cwtl jp ljmp mov (bad) (bad) pop cmp and or jae dec xor add insb ds sub iret out stos jle in and jns pop ja les add pop and pop out pusha jmp gs pop jne xabort sub sub outsl lret xchg and mov xchg into cmp adc das fildl add xchg sub xor or mov ss sbb cmp stc call pusha movl pusha mov mov pushf pushl pushf pushl ret (bad) in dec xchg cmp (bad) mov repnz sbb mov or adc push sbb pop pusha sahf popf stos out dec pop lea push push stos cltd mov mov lods lcall mov insl repnz outsl out cld and stos out cmpsl (bad) lret aam mov icebp lcall add (bad) (bad) sbb sti pop and imul xlat ss adc frndint ds mov xor stos pushf outsl mov push fistp jb sbb mov xor cmp int xchg mov in movsb pop cmp push test inc (bad) icebp sbb mov repz shrb adc call and pop adc into addr16 inc push (bad) std jmp stos in sub lea xchg dec mov lahf mov add push arpl fwait scas push std and dec sarl xchg test push pop (bad) jg mov add nop scas rorb pusha mov lcall dec jp mov sahf inc gs xchg mov ret cld dec adc arpl sbb fisubr notb xchg aas and clc cmp hlt dec stos jl xchg cmp push jmp fmuls out dec inc js fwait jp lock jmp negl sbb mov cmp lods sarl std sahf loope shrl xchg mov into mov xchg inc pop enter out daa pop xchg or idivl int3 in in nop push ljmp inc mov repnz les sub push loopne jmp rcrl cmpb pop sub xor mov or stos adc (bad) call popa sbb sbb fptan cmpsb sbb fs push xchg adc xchg flds es mov cs adc lcall jecxz add fwait scas cmp dec pop sub (bad) je mov movsl imul icebp sub jno in scas rclb mov pop out xor xor xlat pop daa mov fbld mov pushf sbb jnp repnz ja jg fsubl leave (bad) pop jno sbb xchg mov call add inc gs outsl fs gs imul add test mov cmc pushf pushf or jmp enter into sbb icebp xchg ds (bad) jge xor in xchg stos hlt stos jnp push xor dec push mov xchg in pop (bad) aas (bad) ds aas sub cwtl push inc js sub test int movsb mov adc out jb pop push dec (bad) nop jae fwait lahf pusha mov cmc pop imul xor push jg inc imul stos mov pop insb outsb xchg and stos getsec adc add iret fwait (bad) aaa (bad) mov mov push adc (bad) fbld into inc (bad) xor addr16 push cltd inc lock cwtl daa or or inc pop pop xchg jno sbb aam add bsf stc push daa sub setbe lea pushf pusha jmp mov outsl popa or cmp inc aaa adc push xchg sub inc push call lods dec and jg pop pusha adc std xor jle jae push icebp lods ret imul rolb xor lret sbb cmc das inc xlat mov inc inc push std test call inc ret aam loop cmc sub inc inc and pop (bad) aas xchg jae inc xor nop mov mov jg mov and xor adc cmp (bad) pusha xchg arpl adc into jecxz push pop sub gs out lret jp lret inc cmp int mov mov sub inc (bad) popa add or inc (bad) fist aam xchg cmpl lret cltd jno mov lret sbb inc mov rorl cmp gs inc fmuls inc stos push shll sub (bad) and (bad) out fdivs push inc into mov fs xor lods out popl std and fsts inc mov pop jne push and movsl push dec fs std loop mov outsb incl lock sub into xor les inc jecxz popa idivb gs mov inc or xorl outsl mov rcl mov pop cmpsl jno jge dec cli outsl (bad) push adc pop jo mov popf out lret sbb mov fidivr notb and add sbb xchg fisttp maxps add (bad) out aad int sub dec repz xor es std xor fnstcw inc pop push jbe push add inc fimull and and inc mov jb sbb push pop pusha mov add pop inc push mov inc dec fiadd and movl ljmp ret inc mov jno fidivr inc (bad) or loope jecxz dec je mov inc or push inc pop (bad) mov sbb ss mov inc pop sub dec xchg push jmp daa jle pop addr16 mov das mov loope imul mov jecxz cmpsb sub movsl mov loopne ret add shll ficom inc sbb addl or ret ret ret scas addr16 dec lods (bad) dec push dec imul xchg push mov rcrb push dec enter dec fs mov pusha aam push repz pop add dec xor arpl xchg or lock pop lods bnd jecxz hlt pop inc out mov test jns sub inc cmp sti adc jge inc and test sbb jmp ret movl mov (bad) lahf xor inc or inc add or inc (bad) xor sbb inc icebp or je popf add xor jmp pop pop imul push cltd lock pop (bad) imul pop inc int3 xchg mov jb fdiv jecxz ljmp lret (bad) push adc sub pop dec cmp cmp inc test aam xor pusha mov or clc dec mov and (bad) inc mov or inc mov rep inc inc outsl jne test dec add daa cmp sar fmuls ret test inc mov push or js pop adcl (bad) xor push xchg test (bad) or mov rol out aad push and les outsb pop jbe and inc roll in out xor jo push inc ret dec ret and and mov out roll cmp or cmp call add pop add popa arpl push dec push js mov lock clc insb jo cmpsb int3 fldl dec ja andl test jb inc insb sbb adc enter mov movsl (bad) icebp pop (bad) push inc ss repnz pop inc lret xchg outsl pop push (bad) lock test inc sbb cwtl ret mov dec dec fstps mov sar subb imul push orl das mov pop pop xchg or xchg gs (bad) repz add imul bnd push dec xchg ficoml add movsl inc pop cmp imul inc lret mov fcmovne and cmp jp push jnp mov movsl movsb cmpsl arpl scas pop mov xor cltd add jnp popl cwtl mov or test cmpsb pop mov fist arpl arpl pop scas xchg scas xchg adc sub (bad) mov test dec insb stos aas inc sbb mov inc inc dec adc mov mov dec js jae xchg jo mov dec push jp jb cmpl sub inc push mov xor push test add fisttp push mov dec mov int3 mov popl pop aad nop inc and push xlat mov xchg jmp insl nop dec mov cmpsb dec add push xchg dec sub fistl xchg fist xchg ja mov subb gs stos dec jmp lea mov test mov jnp out negb jbe mov iret jnp pop mov popf jne push out (bad) (bad) xchg jne jne push stos mov pop mov stos dec mov in or mov dec push imul push jp aam and xchg mov divl mov mov stos mov mov jge ss mov xstore-rng cmpsl inc outsl arpl mov mov and dec imul xor xchg cmpsb mov dec pushf xchg pop mov test (bad) lea movsl push mov push test popa nop movsb dec cmpsb stos lret movsl fnstcw mov dec test inc fwait push xchg popl mov jg lods mov repz fisttpll stos insb imul xchg mov add mov arpl jae imul and bound adc push jbe jne jno xchg push xor mov test push dec out pop mov dec (bad) mov test xchg (bad) outsl repnz mov inc mov cmovbe dec (bad) pop push ret xchg lods mov cmc mov mov mov cmc mov lahf cmpsl (bad) sbb xchg xchg mov cwtl push xchg loope push aaa xchg inc xor dec cmp xor xchg sbb test cs arpl lea inc xor pop repz dec jg sbbl mov dec dec lret sub stos xor inc cmpl push push push inc push push push push push pop pop pop inc pop pop pop pop pop pusha popa bound fs inc imul jo jb jae jne ja jns inc jnp jge jg addl mov mov xchg inc xchg xchg xchg xchg xchg cwtl cltd lcall mov movsb movsl cmpsb cmpsl test stos inc stos lods lods scas scas mov mov mov sbb inc mov mov ret jno dec push or dec orb fsubrl mov push mov jg arpl aad inc push lds (bad) mov addr16 jne mov imul aad jae push jae jbe push scas jo fwait mov aas icebp inc aad int3 pop sbb xlat push mov mov push insl test stos and xchg adc jno mov stos test dec movsb jne mov arpl nop pop movsb mov dec mov dec jecxz mov dec xchg cmpsb arpl and arpl push pop test fadds jne xchg (bad) jno inc adc jo jmp insl pop scas repz imul test lcall cmp xor lahf scas xchg imul test outsl das scas jnp and jo loopne mov jo popf xchg movsb insl mov jge cmpsl sti xchg and jge xchg xlat xchg dec leave fisttpl enter fcoml test dec subw cmpsb and mov xor pop mov xchg sub cmp addr16 mov mov mov pop mulb jno mov dec test xlat jnp jge outsb cmpsl subl mov mov ja cmpsl (bad) jnp jp add xchg mov dec mov out aam pop cmpsl mov fs repz movsb pop xor jge iret xchg mov xchg or mov jne jb xchg adc or aad cmp stc dec pop int stos adc xchg arpl cmpsb fwait sbb pop mov pop lea ja das add data16 mov sub mov mov cltd cmpsl flds scas mov lods lods adc mov in xchg outsl jnp imul mov xor push jno test jl jecxz mov mov push mov push outsb inc jnp cltd scas movsb push add jne cli insb mov push test in fsub mov dec mov mov pop push leave test cmpsl dec sbb dec mov shrl push dec push rep andl push movsl ds push rep inc push mov pop push jecxz inc pop addr16 mov and xchg int3 popa push and mov repz sahf gs (bad) push mov aam gs xchg vzeroall xlat test aas hlt pop mov push xchg xchg popf pop (bad) pop cmp add mov push insl jno or popf xchg stos imul xchg test fist fsubs xchg xchg sub adc cwtl push xchg mov pop insl dec pop je (bad) int3 inc xor pop dec push add fbld pop inc rcr xor shll rorb sarl (bad) jg xchg clc mov xchg mov dec dec mov mov mov inc push xchg lds push dec pop mov cld fbstp cld xchg jnp movsb mov lcall push lret pop mov imul and pop pop testb dec mov dec sub inc in sti arpl inc shrl sub das (bad) enter les lret lds inc pop sub arpl cmp inc daa fiadd call mov ret inc mov push imul jg ljmp inc xor ret push adc in inc ret (bad) (bad) enter lret int3 int iret rcl inc rcl aam (bad) xlat fcomp inc fcmovu (bad) (bad) loopne inc loop in out call in in out out lock inc repnz cmc div clc stc inc cli sti cld std (bad) incl add add inc or or push movups inc adc adc push pop sbb inc sbb sbb push pop and inc and and es sub inc sub sub cs xor inc xor xor ss cmp inc cmp cmp ds inc inc mov loopne je mov mov ret sbb arpl xchg mov scas test fcmovbe xchg movsl lods and xor push mov mov jnp mov or lods test xchg loope mov and mov bound je test push adc jmp mov mov arpl xlat xchg test dec mov or mov mov iret test mov (bad) dec add mov cmp xor negl cmp test (bad) and imul addr16 cmpl int test sub mov mov ljmp lods cmp push lret mov and inc sahf lods mov mov arpl popa cmc mov arpl stos fs test mov mov mov mov mov pusha mov cmpsb fs xchg int (bad) mov mov push xchg sbb push mov xchg mov sbbl pop test mov xchg stc cmpsl dec mov data16 push lret pop xor lea call jb add mov pop in lods jnp test ret scas aam cmp stos add pop mov jmp jecxz inc cmpsl and mov int3 movsl jge dec push test loopne mov rorl orl or outsb gs mov pop mov rcll outsl lods push stos xchg gs jg test jb jnp insl mov lret dec dec and insl pop lods dec dec test shlb mov into lret unpckhps push imul stos popa cmpsl or mov pop das push pop je push jns out push clc dec movsl lods push imul mov xchg (bad) push sbb sbb lahf addr16 mov leave fldl2e jns push out cmp jmp and pop or repz (bad) int3 lret push mov mov movsl scas dec ja dec stos push cmpsl cmpsl dec mov gs xchg jg jnp dec out andps outsl int3 imul arpl push ds dec addr16 mov mov cmp mov aam sub push sbb mov aam gs xchg out iret push ret scas mov arpl mov por iret push stos mov xchg scas mov dec sub sbb addr16 mov aam gs xchg outsl into aaa mov mov or pop (bad) int3 arpl std les or mov fwait mov cmpsl jo xchg xor outsl scas push (bad) push mov (bad) pop fisubl xor sub popa cmp stos jbe mov mov fsts fs ljmp jns pop movsl pop arpl push (bad) lahf (bad) mov mov jo mov stos mov arpl pop arpl test mov push test xor pop cwtl scas push ss push dec ja rcrl scas (bad) je jg js lods aas mov nop aam loop pcmpgtb int mov jnp pop iret idivb push mov test inc stos dec push pop mov repz jo scas or push pop adc rcll imul popa push fldenv dec cmpsb mov addr16 mov cmpsl xlat sub and xchg cmpsl (bad) ss jl jmp pop adc div test pop xchg addr16 mov push insb cmpsb mov cmp mov push adc mov es pop scas cmpsl push pusha xor mov mov mov inc and hlt xchg (bad) out jl xchg push pop mov aas mov xchg stos xchg pop push mov adcb scas pop xchg pop jmp (bad) push jo adc stc push fs insb mov bound mov cmp stos stos mov xor adc mov mov orl adc mov (bad) data16 mov call scas mov ret sarl aam loopne mov movsl test icebp dec aad inc movsl out cli cmp jg hlt ljmp dec xchg scas vphaddubq cltd mov (bad) js sbb cmp scas push cld and imul mov jne nop xor rorl dec repz pushf fldl mov test xchg inc adc or xlat shll xchg cwtl xchg jne xchg jl dec test jg cmp test xchg push xchg outsl popfw mov dec imul xchg xchg push dec pop or mov arpl ljmp jg xchg mov rorl popl pushf dec xchg cmpsl push fadd xchg dec jnp fs popf lret mov add test dec xchg dec mov mov dec and fcom adc repz ret movsl fist enter dec xorl dec loope xchg outsb ret xorl xchg dec addr16 sbb push xchg xchg test pop dec cmpsl arpl jns xchg repz xchg adc dec test ret lea sub mov xchg dec or dec rcll imul in dec inc (bad) xor pop dec xchg push paddsw sar xchg dec cmp dec mov xchg addr16 fwait jns push adc mov push cmpsb jae pop movsl mov dec stos pop das hlt mov jecxz jmp or popf jecxz pop insb jnp aam xchg cli inc or push mov loop insb push dec xlat dec orl mov xchg xchg leave add push (bad) rorl popf test pop andps aad (bad) fcoml pop (bad) xchg or dec mov mov int jmp lahf repz and jns and sub dec add mov xchg pop test sub mov ret sub mov push outsl je mov mov js mov pop lcall test mov mov in push (bad) push (bad) mov nop sbb push out push mov fisubl xchg ficoml (bad) jmp les xchg (bad) dec add addr16 stos mov inc jmp inc js dec jmp jo insb dec fistl setne inc test inc pop cmp xchg aad add adc inc ds lret test sub add insb ja addr16 (bad) and popl sti and (bad) lret int3 lods mov das jg inc inc dec pop mov jbe sbb dec inc cmpsl push mov pop gs jg jmp or insb jnp aam jb test push xchg orl xchg mov scas cmpsl orl xchg xchg fwait cmpl mov jne mov aam or jne jb push pop inc les lahf cmp jne jnp add sbb inc inc dec imul pop cmp jl stos arpl ret es icebp js shlb inc push dec push fs test xchg movsb dec gs push jne aam dec test add xchg adc addr16 movsl mov ret mov ljmp add cltd ljmp add hlt xchg mov xchg mov popf push jmp (bad) loop decl xchg push and dec push test dec movsb mov gs dec push test data16 xor addr16 and xor sar adc add std mov and loop jo arpl mov lret es popa and mov sub es jnp xchg std mov mov mov push cmp inc and mov push dec lret mov out cmpsl mov lods jge and je mov add mov loop lods sbb jecxz mov test loope xchg cmp divl push pop mov lcall mov mov xchg mov mov mov int cli xlat lret movsl sbb mov shrb inc (bad) (bad) rcrl and loopne dec push cmpl mov bsf cli push or mov pop mov mov add (bad) lret add sub xchg pop mov adc dec cli insl push nop int3 lods fisttp test push test icebp add imul adc fwait nop clc pop stos orl arpl stos mov pop ds jmp mov inc lods stos mov xchg jne popf or stos out pushf jl movsl jnp mov adc stos xchg add dec xchg mov mov aas pop push xor stos test mov ret daa leave lcall in rclb cli xlat xchg roll mov pop xor insl imul lret (bad) popa inc push subb test dec test popl aam sub jl cmpsb jp jp fs iret mov ja test jnp lods out arpl mov mov fs mov dec stos mov out xchg mov shll das lea fnstsw or dec in mov xor sub push test test xchg cld in sbb fidiv add gs dec imul push test aad mov and bswap xchg out cltd lods pop pop xchg cmp mov std pop xor fs or xchg push shrl pop out ja insl dec insb pushw adc push or daa dec jl cmpsl int fmull xor test or out adc gs sarb cli out sub pop mov (bad) xor sarl pop call (bad) aam orl ret jecxz decb sbb lret nop cmp ret or inc pop and jo cmpsb xchg or xchg test add add mov leave pop (bad) xchg inc cmp xchg (bad) mov or xlat test outsl (bad) jmp push (bad) in int3 test and jge clc or mov in lea aad outsl outsl jae outsb in mov insb mov cltd fadd jmp subl pop lock mov push ds mov push aam xor push fldenv xchg mov (bad) divb sbb jo nop test je pop jnp cli sarb stc and adc xchg sbb mov mov (bad) or xchg je pushf xlat dec xchg push jb (bad) mov push pop lods inc inc stos enter (bad) push popf fs jb es jb (bad) or loop sbb rcrb sahf push sbbb xor pop mov mov mov jo inc outsl mov dec scas push mov (bad) shll inc xchg jp xor shlb mov mov outsl jno xorb push mov sahf popf jge mov gs mov mov mov daa mov les sub mov iret mov pushl addr16 test push sbb imul aam daa insl nop mov loope xchg xchg aas movsb lahf mov iret insb test or outsl iret mov rolb lods int3 xlat jo xchg or stos or cmpsl mov push stc arpl push insb dec movsl hlt aam xor (bad) mov jo cli dec xchg clc pop inc cwtl pop jb fcoml test js js addr16 (bad) mov (bad) mov cmpsb mov (bad) sti xor sbb xor setge xchg jb pop lods add ret inc test xor sub mov mov mov lds lret insb sub push fsubl orl scas fstpl nop sbb adc mov cwtl pop mov mov (bad) (bad) add ja or pop mov repnz loope xlat adc lock mov repnz add mov xchg jne call lods mov xchg mov mov out je imul insb ret and stos add xchg mov rcll mov xchg adc test lods out cli int3 mov pop jns,pt cmpl std scas test xchg (bad) cmpsl jns sub inc mov int3 faddl test mov pop lds imul pop push test mov pop or movsl xchg xor mov dec pop push add ficomp enter or xchg xchg or jge cltd stc cmpsl int3 scas mov movsl mov stc into jns test ja hlt cmpsl mov std gs popa dec fnop mov jmp adc (bad) pop ja mov fisttpll in xchg xlat or mov maskmovq adcb or mov rclb jmp int3 incl sbb (bad) lahf rcr add jecxz decl mov ret in cmc dec scas pop addr16 stos jl xchg mov jge jmp cmpsl adc xchg cmpsl fnstenv sub in addr16 mov pop test cmp adc enter lret divb imul xchg sbb mov in and pop daa out out negl adc push movsl cmpsl xor fstpt mov cwtl addr16 mov mov pop xchg clc jle sub pop mov in mov pop mov popf imul lea mov xor adc fistp cmp cltd adc fdivr lret arpl cmpsl pop dec fisttp addl int3 or addr16 xchg imul pmullw xlat push mov lret and push add xchg dec lret das rcll add push fwait addr16 pop lret das rclb jecxz mov pop gs roll mov aam mov shlb stos aam ror iret (bad) sti push lret addr16 mov xchg or int3 fist addr16 pop lret aaa int pcmpgtw xchg mov sub cmpsl lods dec rorl arpl xor inc sbb mov aam outsl jns lret xchg xlat int3 scas push mov mov daa leave push pop gs cmpsl xchg ja push gs enter sti aam gs xchg scas (bad) in (bad) pop mov (bad) gs ret xchg int3 ja aas lds addr16 arpl mov and adcl cmpsb cmpsb stos nop loop pop lock movsl addr16 and mov mov jl push pop pop mov dec mov dec cmp cli hlt mov mov push cmp gs sahf dec sbb movsl jg and jnp (bad) jne (bad) or xlat lret pop aam gs sahf popa sbb outsl cli hlt out jge sbb ja jo imul int3 js movsl dec subb xor jp pop push (bad) inc in pop movsb inc or ret push mov gs add mov stos push add pop jnp dec test xor jo mov xchg jnp pop rcrl imul mov xchg sbb lds jp and stc iret mov sbb add rorl push iret mov push jnp and (bad) inc xor xchg je cmp nop aam sub and push dec scas xor add ljmp (bad) arpl mov inc mov jmp pop arpl test iret adcl dec inc jecxz rcrb mov cltd mov jo pop xchg dec xchg xchg jge mov xchg mov adc jg xlat aad in xor out pop jg das lea lahf out sarb xor (bad) xor sub mov hlt int3 mov leave mov mov sti (bad) dec or lods dec fwait lds jbe mov push subl ja icebp ja decl xchg xchg rorl jno aad pop jo shrl les lods mov mov scas scas in cmpsb push scas mov jmp adc cmp ljmpw ja sub sub mov and mov pop shll push mov adc cmp fxch xchg mov (bad) mov push mov movl cld xlat or imul mov push mull pop stos out out scas adc ffree jne mov nop cmpsl gs xchg jnp mov test mov xchg insl mov pop add cs adc xchg jno imul and fimull cmpsl jno cmovns scas jmp (bad) mov mov add dec push jecxz (bad) outsl mov sub mov stc mov enter aad pop sbb out mov cmp (bad) or sub fbstp mov call lods jl aas outsb jae insb mov xchg test push dec mov push lret xchg dec movsl jno cmp ret jecxz add cmp pop adc lahf insl jno insb dec imul add in push imul (bad) and mov pop in pop out fwait in pop dec pop mov dec xchg (bad) cmp cltd lcall mov xchg inc inc xchg fisttpl inc lahf xchg jnp jno mov xor mov imul inc jo xchg test mov lcall les nop fs out jb lahf orb jne nop movsb cwtl mov push (bad) lock fstps arpl (bad) out loopne orl lds xchg jnp dec sbb cmpsb push xchg pop inc lock xchg cwtl ss dec xchg insl xchg cltd dec mov xchg xchg dec rol cwtl xchg (bad) jae mov jnp outsl xchg jmp mov mov xchg xchg xor test dec les pop cmc and inc fwait subl jp mov jge push dec fldl lds and mov jle pop sbb idivl jmp arpl sahf mov xor int sbb push mov repz and push repnz psrad xchg stos or test scas mov stos xchg jno pushf xchg and jge scas insb pop push dec subl sbb daa or pusha fsub push pop xchg frstor pop or inc sahf subl cmpsl sar in loope cmp fild fcmovnu nop jbe xchg jns pop insl js cmp mov scas out aam jne adc mov test pop jno push add xchg inc dec arpl sbb pop pop imul ja jmp cltd (bad) sbb dec insb inc mov std push mov mov mov mov add rorl insb add cltd lods scas add dec imul fsts insb xchg scas sahf sti lods (bad) mov loopne jb and aad xlat ret cmpsl mov mov je xchg notl mov imul repz mov push dec xchg lcall nop xchg sahf stos mov push xchg mov sub negb mov mov es fimull xchg cltd jo (bad) pop pop push les mov jae xchg cwtl jge dec mov sti xchg cmp mov ljmp les lahf dec inc rcll out pop stos outsl adc fstpt scas pop and xor xchg je jne loope dec clc pop scas setbe xchg sbbl outsb pusha test jno dec test bound sbb xor mov pop outsb pop (bad) loop pop xchg push pop clc and dec data16 xchg lds cmp test fsubrs stos mov jne das mov pop mov test mov push pushl jl mov adc jle pop push pop mov scas insb test xchg xor nop fidivrl lret sbb jg mov (bad) inc xchg jmp push daa jg fcoms jg movsl cmpsb jmp push (bad) mov test adc jl,pt push jbe movsb dec mov mov (bad) mov and sbb cmp pop out and mov cmpsl insb insl xchg arpl ja fsubrl push xchg in (bad) fwait cli xchg cmpsl push mov sub mov icebp imul jmp mov stos (bad) cltd mov jmp fcoml dec movsb in xchg or jmp scas cmpsl dec mov push push mov cmpsb inc comiss adc scas lret aam arpl loop jg jle dec push rcl pusha push lret dec push jns pop xchg mov enter shll jecxz repz xor push and scas mov push mov ret int3 (bad) int ret aad xchg or dec rorb jmp dec adc xor jl and test andl add addr16 cmpsl je push adc rcrb ja pop sub je adc shll dec and std push xchg ret xchg fcmovb (bad) xchg mov cld hlt (bad) or adc arpl insb lcall xchg bound notl jae xchg mov test mov call dec dec adc mov ja push inc lds std jnp xor mov imul push inc mov mov push lahf jnp xchg in sti mov mov into outsl test rcll or mov fildll jecxz fistp insb pop dec pop out shll movl push dec pop push push dec sub push jo pop sbb fbld cmpsl push push popa pop loopne outsl into mov mov ja mov (bad) stos dec in mov push or fisttpl stos loopne adc outsl dec out push pop ja jecxz lret lcall fs pop sbbl xchg jp adc pop dec arpl push sub cmp test jb (bad) mov xchg addr16 in jae jnp inc xor in jnp xchg mov lahf aam ffree push pop jbe or add int3 add mov or pop or push out data16 or (bad) push xchg mov mov mov or leave (bad) jbe fwait ja loopne dec dec push (bad) test lret lea xchg mov pop ror (bad) adc cli or pop pop mov mov sub pop pop out dec test gs push out daa and and addr16 (bad) imull pop outsb jg ja mov (bad) lahf (bad) xchg xchg inc outsl insb test push mov je mov in (bad) mov gs sbb sbb ja xchg pop arpl dec xchg test xorl dec inc adc jae pop notl ja pusha jnp cmp jg pop cmpl fwait xchg rorl xchg mov shrl fs outsl shll adc iret enter imul dec scas jno les pop push insb roll inc je leave fnstsw pushf xlat push fnstsw lods pop jg (bad) sahf or jg insb push fadd lahf loop fwait lcall adc adc cmp and icebp (bad) cmp mov xchg std mov add or jo dec mov dec push and clc push pop test mov pop and lods dec (bad) rorb jg push imull pop (bad) (bad) aaa loopne pop ja push std mov lahf push push fstp pop lret roll call mov push repz jmp pop push in js insb adc pop sti sub lock jg inc lret jne fs std dec mov jne inc jno mov idiv mov inc sub lret cmc test insl adc push gs sub lret add xchg dec fs gs dec jl jp ret and in adc push and mov push cmpsl test gs or or xor dec ds push sub push (bad) bound ss mov test sub and cmp xchg jmp mov test into pop mov add jnp sbb fs daa lcall cli cmp sbb or push inc mov mov dec push aam and aam push mov pop mov add dec stc dec lods pop sub out test lds push fs lret (bad) dec jmp dec dec sbb fs mul aas rolb daa mov lods inc stos (bad) push mov inc aam dec gs and mov les pop lret add into daa mov add into xchg dec mov aas out imulb lds push adc add outsb dec jg int mov pop mov and daa mov adc jmp xchg ss into sub sub xor push aam and ss into sub adc mov mov aam and add test cmc mov jns je stos es es mov aam arpl xor add mov xchg adc mov jmp icebp mov or std jb scas mov xchg pop ret sub pop xor arpl push push ret add inc jb ror mov add inc jb mov xlat sub decl test inc mov int3 inc pop mov dec mov mov mov rorb mov rorb mov rorb mov add inc into out dec std pushf rcl ret mov ds sbb or jb ror mov add into daa mov add out add or pop fsts adc inc imul jp rcl stos rcl dec es arpl popa add daa xchg adc gs or mov sbb jns arpl push imul inc jg dec pop pop xchg arpl xor pop dec and gs or mov daa mov das mov lahf mov (bad) mull inc popa dec jns fs lret add push les mov add pop push insb fs gs cwtl (bad) data16 fs into daa xchg push lcall fs mov jp or gs gs mov inc and mov mov (bad) and lods ja xor jge sbb mov cmp lds push mov pushf or shlb pop cmpsl mov xchg pop cmpsl test in loope mov cmp mulb cmp push ret add loope imul and and pop sbb sub push xchg xchg mov and leave cli cs mov mov jo pop adc popa sbb push xchg xchg nop xor pop rclb jno movsb ret mov xorps bound lods mov aas jg ja sbbl test cmp jecxz loop jno insb ja mov imul dec (bad) insb mov dec cmp movsl andl aam mov (bad) jne js cmpsb outsl insl jnp jg test jge jo add js outsl out iret lea mov outsl lahf or stos outsl xor jae mov (bad) mov and mov insb aaa add xor mov mov dec in pop stos gs push push js mov jns mov cmpsl fistpl cmpsl out cltd pushl mov jo leave and cmp push mov hlt mov xchg mov (bad) xor cld mov xchg icebp arpl xchg movsb xchg xchg cltd (bad) mov sub jno push dec movsl pop imul scas ljmp dec or insb les push in mov cmp test scas xchg xchg scas push icebp pop sbb fiaddl mov in mov push jnp dec dec out dec dec (bad) adc xor xor mov xchg jmp xchg fwait lods sbb repnz and jns push mov out fs adc dec lods lret (bad) cmp sbb xchg cmp mov iret in jg push addr16 push xchg sub cmpsb jo mov push xchg out stc or sbb aam pop pop lea into sub cmp mov push mov inc jmp in cmpsl push ja sub stos rolb dec fwait test xor stos insl int3 jbe push out or out jb mov xchg xlat daa (bad) mov xlat (bad) fs dec mov mov mov xor mov dec pop je dec jno cs outsl cmpsl fwait mov js (bad) cmp test jmp cwtl push out jle lea xchg cmp push push pop lods jne jmp jbe fnstenv add (bad) sub dec cli test push fdivrl xchg mov cmp mov xchg or mov xor icebp adc push push fs xchg ret ljmp cli adcb mov fbld inc jbe and push sbb int3 jmp cmpsl mov sub jge dec sbb loop mov in mov imul fsubrs jge xchg stc mov test fisubr jns pop (bad) es jne pushf xchg pop inc mov inc adc mov mov or or inc mov push xor in in int cwtl xchg jge adc push outsl adcb outsl mov sub mov xchg jg or push and mov xchg test out rcll out jge jnp test and call xchg mov scas imul cmpsb mov outsl je orl test imul jae mov jo je scas int3 lahf lods or mov lret sarb mov push sbb movsl imul mov mov scas xchg mov mov adc mov push lds (bad) jo arpl andl out push and mov iret ljmp test aaa jne jae dec test in push fsubs sub outsl (bad) insb mov nop sbb jle sub mov out lods mov into sub pop push cld mov in int3 stc sahf movsl ror mov push test dec inc xlat sbb push mov dec mov movsb sbb push add push cltd mov push mov mov jo mov xchg xor movsl push (bad) jno imul jp cld and outsb int3 rolb insb jmp repnz (bad) mov jb xchg xchg xchg jl cmpsb adc cmp ljmp xchg imul popa ja imul leave stos rcrl lods (bad) push lods cmp dec push cltd fsubs ds shr and jg jns jp in or ja mov nop icebp dec mov xchg adc shr clc pushf popf daa test call mov imul daa jp loope mov fs ja mov scas daa rcll pushf fidiv mov mov xchg adc (bad) mov dec outsl cmpsb scas xchg out xchg dec cltd stos insb hlt xchg fisttpll pop push xlat jae ljmp fwait mov out rcl and stos mov jg xchg lret test bound sbb dec test movsl insb aam fiaddl pop jae mov mov mov xorb and sbbl pop cmp les jl scas sbb jb and cmpsl sub stos lods dec stos fstpt sbb xor pop adc push test es xchg cltd sti scas mulb xchg cwtl insl xchg scas push sbb jae push imul jp aas jbe fimull test adc mov insb jae fs imul mov test mov xchg xchg dec (bad) or or mov fs lock mov sbb cwtl jnp mov mov orl outsl jb adc in sbb mov out jp or add mov sub test test jp rcrl mov inc ss cmp xchg mov je mov cmp jns push arpl (bad) sub pmaddwd imul nop xor pop sti pop sahf out and push xchg lea js jbe push jl push mov push xchg lahf mov daa in mov xlat imulb hlt aam stc cs faddl adc nop das fstpl pop out and scas xchg jle (bad) in dec jecxz adc push cmp cmp or cmp pcmpgtd out sub pop sbb push sbb stc inc jmp out sub ds xor lods cmpsl imul stos adcl scas inc cld sbb sbb adc pop test xchg adc cld lret mov pop and push mov into xchg mov mov pop dec jmp loopne scas inc fnstcw jo cltd mov adc jg mov test call mov inc subb or mov fs xor adc and incl lea cmpsb cltd mov mov push cmpsl (bad) lea cmp test fadd movsl pop jp int inc mov jg mov mov lret inc jae cmpsl mov lods pop movsl sub (bad) scas das push out inc push aaa inc adc scas xchg push test cli nop mov adc mov repz mov sbb mov sub and fbld mov je xchg sbb add cmpsl mov cmp lds push xchg jb xchg mov mov je out jle fs mov pop inc xor inc addr16 out mov jecxz cld sbb popf xchg lea clc or mov dec addr16 andl adc xor push insl mov stos push mov imul push push cmpsb or lods int3 ficompl hlt push dec dec sti outsl (bad) mov fsts inc in jae andl cld jg xchg mov push xchg cmp cmp aam test sub pop nop xchg jg jne aam xchg ss ds push nop mov push jmp cltd add (bad) jo xchg xchg push and movsl xchg pop addr16 sbb lahf jge cwtl adc push dec test aaa std (bad) lds (bad) pop mov lock mov out mov jo in notl cmpsl xor mov clc pop add mov ja cmpsl fs sub rcrb jae and pop (bad) lods cmpsl leave jbe jne popf hlt mov fmul lahf gs mov test xchg mov mov test xchg cmp ror xchg mov mov and lret cmp call cmp nop scas fldcw sub xlat pop sbb cmpsb movsl in jl fs jno outsl scas jno sbb in xlat mov es and jge pop push int pop jae push push rorl test or jns mov (bad) mov mov adc js xor out dec push lahf icebp fsubl mov jnp jno inc (bad) xchg test sub jne pop cmp outsb mov pop pop mov aas out sub insb cwtl iret div in stc jne add pop loopne push out dec jb mov push call outsb xchg push fwait arpl xchg lahf insb insb scas jno mov outsb xchg add test enter movsl ror jae mov call out (bad) mov xchg xchg xchg ret sbb daa sahf mov shl xchg adc es sbb xchg mull xchg dec mov mov sarl (bad) mov (bad) jbe addl dec xchg push pop mov inc imul xchg stos sbb xlat adc jp mov jp ja cltd enter hlt cmp int3 mov inc mov jne insb sub xlat fnclex xchg xchg mov mov negl adc cltd adc dec (bad) jne inc pop push fwait test jmp jmp dec test ja jae mov ss mov add inc mov lret cmpsl fdivrs imul mov push jno jge dec call xchg push mov icebp test cmp sbb pop rorl outsl arpl lea imul dec jo mov xchg push std ja in adc aas mov push sbb or cmpsl shll icebp dec cmpsl arpl out mov mov pop mov push sahf cmp push mov jp mov push jo jne xchg push mov mov add ss pop xchg call mov xchg push and xchg rorb lea xchg xor rcll jecxz es mov mov dec jle mov add inc in mov dec pusha mov mov xchg test pop sub mov sahf or xchg test jae mov aam insb ret test inc in test jne push (bad) sub mov xchg in sbb scas popa xchg xchg xchg nop xchg pop outsl clc bound jo dec mov call ljmp in test int3 sbb sbb scas pop pusha fisubl cs inc or bound daa inc mov add dec dec dec dec dec dec inc dec inc inc push inc push inc push loop out or stos fisttpll xlat (bad) and mov dec aam or inc inc fisttp outsl dec inc iret or pcmpgtw out scas int3 das push pop fisttp pop gs (bad) mov ljmp add movsl push and aam gs mov xor aam gs lods push sub aam gs mov mov aam or push sub mov aam sbb push cmp mov aam adc push xor mov aam and push inc addr16 mov aam gs fs movsb push and push mov aam gs je int3 mov xor dec mov aam gs insb in int3 lods push sub pop mov aam gs jl int3 mov mov aam or push sub mov aam sbb push cmp mov aam adc push xor mov aam and push inc push inc dec (bad) add out push std xchg out idiv xchg std xchg out into std xchg std xchg out out std xchg std xchg out fdivrp xchg std xchg out (bad) std xchg std xchg out lret mov out or xchg out ljmp sub xchg out (bad) xchg std xchg out cli std xchg std xchg out sar xchg std xchg out repnz xchg std xchg out loop xchg std xchg std xchg into out inc std mov arpl mov xchg gs mov int3 mov stos mov fwait gs mov addr16 mov xchg gs mov bswap (bad) dec xchg push push data16 cmpsb shll popf jmp push push gs dec xchg int3 push push dec addr16 mov pop gs xchg int3 push push dec addr16 xchg inc jne dec push addr16 mov push gs xchg int3 pop pop out int3 (bad) or sbb xchg rorl dec mov ret inc mov imul lahf push pushf push inc pop push pop jl pop pop rcl pop xor aas pop sarb bound icebp int mov das pop dec cmpsl notl inc push aam or push mov xor xor inc mov loope mov jg and dec cmp push push in cmpsl scas dec andb (bad) mov xchg dec mov and dec add mov dec jne pop and adc xchg or sbbl shr ja inc pop outsb aas jl js jo push jle (bad) push scas inc pop push arpl push mov stos jecxz push addr16 mov gs xchg int3 push outsb addr16 jle xchg xchg out push mov mov lock sub in xchg inc lcall je scas loop movsb add pop sahf add jmp (bad) and gs pop cmp xchg add imul cli mov add int mov push mov push enter dec xor aam or inc mov adc inc push adc jmp mov mov jbe jb mov mov and dec dec mov imul fisttpl movsl je shrl cmp mov dec mov sub int loop arpl scas xchg inc dec mov pop and jae mov xor xchg dec fsubl pop mov (bad) aaa lods mov call fsubs push push out pop mov cmp adc dec add jo sub pusha dec add cmpsl push cli mov inc mov movl daa and aaa or push (bad) cltd fildl push add scas cmpsl mov das or int lahf inc inc push sbb dec cmpsb lret adcb cmp rorb arpl lods (bad) daa test stos in roll mov inc inc mov push adc call scas fcomi test or push cmpl shlb sbb lahf and pop pushf adcb jae sbb jge and movsb inc adc clc aaa mull inc negb push call ret inc imul mov or dec hlt inc lret jb (bad) stos fwait inc out pusha movsb add jo stc inc roll inc inc jmp fldt sbb (bad) int3 enter clc stc dec call jbe sti sub or dec mov shr dec flds fistl (bad) push lods ret xorb inc inc lahf cmpsb sub xchg scas pop movsl movsb cmp test xchg push test mov add dec lds or test sub cli push sub lret inc cld aas and movsl mov sbb iret test pop ds fwait movsb cmc nop adc jo mov jmp inc and call fcomps pop pop adc out aaa sbb lods sub inc xchg sbb ja lret stos inc lock mov inc xchg pusha inc jbe (bad) dec inc in or push and dec mov push arpl leave arpl or clc stos lcall pop test adc cmp mov gs jmp or mulb les jno lahf add lock scas std add sti xor dec testb dec and hlt mov dec mov sub pop imul pop mov dec cmpsb inc es jle xlat subl adc loopne dec pop (bad) push inc pop hlt loope rolb out lret inc inc popa inc add movsl inc cmp stos test mov scas (bad) pop sub scas mov pop pop inc and push int3 popf mov lea stos mov cld cmp xor jl xchg cli pop sbb repz roll in add xor (bad) xor (bad) jmp (bad) mov mov (bad) pop dec repnz mov sbb cwtl daa stos mov je add push pop (bad) test mov jns stos xchg fadds dec cmovbe pop inc gs dec cwtl add std or add aad testl ljmp adc into loope inc outsl pusha icebp and imul lods mov inc in dec dec sbb enter push lcall fcoms sti and mov fiadd adc sub inc xor mov pop inc push pusha leave test and bound pop add sahf inc imul mov mov push pop sub push inc or lahf dec inc push daa loope inc shrb scas movsb jae scas inc pop mov adc movb testb movsb imul lods mov mov lods adc pop popf sbb test jle (bad) jp inc (bad) in or (bad) and inc adc mov clc jae jnp add int std or jmp dec jns xor dec sbb insb inc lcall jno mov movsb pop inc inc pop stos mov jp add in dec push aas and popf (bad) xor gs sti dec repz lret push xor lcall repnz sti (bad) repz jmp jecxz sub jb jbe addl push and dec jle xor and inc rcll inc sbbl mov movsb mov ret lds add aad gs mov jnp outsb inc jae inc pop lahf inc jno cmpsb or push fwait adc loop inc inc roll inc and lret (bad) xor cwtl stc popf out mov and mov xor inc loope fbstp mov icebp pop out sbb ret decl inc mov (bad) lods sar sub (bad) pop popf and ljmp mov cmc lahf (bad) (bad) mov mov and cmp xor rcl xor inc sub adc (bad) or cmp jge add out std ret and into inc shl movsl (bad) xor decb in out lret adc sub inc ret loop in (bad) mov mov ret inc sbbl rcrl xchg sbb add pop gs lret stos mov mov mov ret into mov dec (bad) ret or inc xorw jle xchg xor out pop repnz testb into push dec sbb add push out repnz inc xchg rcr inc mov pop mov ret jae cmp xor ds and mov movb sub adc jmp ret xor and push push push dec inc add or test push pop fisttpl inc adc jg inc adc adc pop mov fcmovnu ret sub into das hlt dec pop cmp repz jnp add (bad) fistl inc bound inc bnd inc sbb add (bad) mov mov orl arpl (bad) xor mov les mov pop inc mov push jmp mov inc mov inc push pop mov cmpl xorl mov aad xchg cmp push add gs sbb (bad) repnz push xor and (bad) jg loop inc xor inc aam add (bad) daa mov inc aaa roll inc repnz xchg pop inc push mov dec or mov cmpsl sub roll inc test inc out pop bound and out pop neg fild and push movsl inc mov (bad) les or xchg popf aam mov aaa jle xchg inc stos add mov inc pop xchg addr16 (bad) cmp adc and aam in push and jg dec inc popa dec loope pop mov jnp inc push jae je inc lock xchg fwait mov pop jne dec ret add inc (bad) xchg call lret cs (bad) inc pop iret lods pop add pop pop or inc mov (bad) jnp jne inc or pop xchg pop push mov repz inc ret pop jecxz mov sub dec lods ret sbbl test inc mov stc inc xchg mov inc ljmp lods ret shll inc sub sbb or ljmp shrb jle test xchg lods push and dec push inc (bad) xor in and add adc push imul mov inc scas cli lret xchg and es ret inc inc mov fiaddl stos sarb iret jmp cmpsb inc enter cmp mov stos lds or popa roll mov push arpl add int3 sub jne mov sbb mov adc inc lcall and out ret pop cmp daa pop lret and ret sub cmpsb adc inc cmp and and addl popf cmp popa xor jle (bad) mov mov push xchg ret loope mov or cmp cli ss sub cmpsb out sbb push xor sub cmp loop imul inc push in add mov iret xlat add out in jmp jge aaa xor jbe inc inc inc xchg pusha mov inc xor out fist push sbb jl es mov jno mov outsl or std inc inc adc or fldl cmp aam jns cmp dec inc cmpsl adc mov sub dec mov xchg imul out cmova (bad) xchg sar and and mov mov pop mov pandn xchg (bad) repz cmpsb inc push mov (bad) xchg das scas inc jb xchg pop cvtdq2ps push dec int pop icebp fs movsl sub dec inc cmp and out std psubd push and hlt sub inc insl pop negl imul (bad) aaa xchg and pop or scas sub repnz inc lret sti ss (bad) repz sub sub jbe inc xchg aaa pusha sbb data16 and jmp sbb mov out inc orl cs inc roll lret std inc or jmp imul jge inc xchg mov push mov mov xchg dec lret inc cmp lcall mov jecxz inc inc test mov std jae cwtl (bad) out inc addr16 rclb rorl inc dec int inc xor ret lods inc mov xchg and adc inc cmc out cmpsb inc das add sbb fildl hlt and cmp xor mov mov jge and clc out inc jmp sub das inc and xchg mov loop mov jae or lock ror adc pusha (bad) xor inc icebp mov mov fisubr test aam arpl lret inc sti xorl sahf pop jbe or cmp popa pop inc xchg fisttpll pop push loope jmp call andl mov mov mov sub mov inc pushw xchg mov xchg jns popa in stos stos jmp ja and mov inc pop loopne loope push inc jnp icebp dec sbb inc cmp outsb mov dec mov ja ret xchg push int3 inc outsl arpl imul and dec daa push aad inc inc xchg lahf nop pusha popa mov (bad) push roll call sub mov push pop jle test int (bad) jecxz sahf arpl cmp mov aaa fwait shll inc jge ds iret push or xor add insl out xor mov and xchg pop jae jl push lods inc xchg inc outsl pop loope addl and adc inc cltd test jp inc push inc popa ja add adc cmp mov inc faddp call inc jb loope push movsl xchg aad adc and mov sbb dec jmp jmp inc lcall cmpsb and or stos mov inc adc adc inc sub jns repnz sub outsl lret bound (bad) push mov jle mov ficom lcall ljmp pop fildl das pop mov xchg bound push sub cmp pop jle and popa dec inc stos cmp rclb mov pop stc scas pop add mov jecxz adc mov decb cmp or jg pop pop scas (bad) or xor sub inc fild xor ljmp lahf or inc faddp int into aam pop inc notb insl jle out push inc lahf outsb in repz sub mov ret push xchg mov dec jb or fnstenv pop sarl rclb adc lods inc mov ret mov aaa dec inc not push sbb into xchg pusha test mov fwait inc inc or es addb lret repnz std pop fdivp push loop sbb mov and cli cmp mov fistl inc in (bad) lods stos dec (bad) mov insb inc inc mov or mov lret daa (bad) xor sbb daa push scas inc sti loopne rol out push mov jge lret ret mov jle popa push inc xchg jo movsl push in bound cld sbb mov lret push pop adc cmpsb movsb call hlt loope daa jge push jle je fldenv jno push imul repnz imul mov aas jnp mov into xchg lret (bad) repnz out adc inc hlt jmp mov mov mov rcll push out inc cli cld incb inc out pop mov cmpsb mov insb push jbe fwait mov test adc inc push fsts repz stos (bad) int jmp add xchg pop jecxz jbe inc jge mov jp sub outsl add pop sti adc inc xchg dec cmpsb inc mov out inc adc fucom inc (bad) dec pop add notb test daa bound push arpl jae icebp jnp dec xchg pop test jecxz push sbb mov popa cmovae mov add push pop adcl xor cmp sbb int rclb stc sbb lea mov push xor mov adc and xor ret inc or xor inc mov cmp mov inc adc lret cmovae pusha (bad) push sti roll inc repnz fildl jecxz jg xchg mov cmpl mov ret mov lea pushf (bad) mov xchg mov inc inc mov sub inc lock inc fidivr les or out inc cmp push (bad) repz daa (bad) lods push loopne push out lods mov and dec pusha dec dec mov bound arpl insl inc and pop adc divl fadds inc aas (bad) cmp in inc xor pop bound ljmp dec lret test jmp inc pop cld jbe (bad) dec stos dec xchg lods cmp iret dec dec xor inc push xchg jge jb (bad) push mov lret jecxz mov jp ljmp rcrl mov inc mov inc jl inc push lods inc into pushf inc or inc js push push roll fsub subl or cmpl pop test fldl pop fildl div cld fisttp inc lds arpl push int push fmuls iret inc or add push sub xchg add ljmp cmp popa add push xchg inc rorb inc fcom rorb adc adc sub or mov test xchg cltd inc mov fistpll xchg cmp mov movsl (bad) outsl insl pop inc inc dec pusha sbb aas dec leave xor jbe (bad) mov imul push adc inc rcrl cmc or inc pop aaa or jae je inc mov dec xor mov push arpl cmpsl ret pop mov mov inc jb dec mov mov xchg mov cmc mov imulb aas mov test lods aas inc cli or stc inc xlat popa fisub idivl lret add sub push inc xlat or adc cmp aas push and inc cwtl sub in (bad) xor inc daa add jns popl scas push test jo ror hlt or out inc dec add mov popf pop lods jge mov jg inc cmp and inc xchg insl test outsl push outsl push pusha inc inc jge sbb inc repz inc fistpll jno mov push lret outsb push test push cmp inc xor cmp add fcomps jno and mov rcll mov push jae lds mov inc mov dec insl xchg test inc pop mov xchg inc and mov jl sub cmp inc repz inc xor sub mov inc sbb push insb pop jg in dec aas and push xchg pop jmp push push ret mov jne xor inc ret pop jmp ret jo lret out inc mov arpl dec cmp xor or lret sub mov mov fs push jp inc add (bad) mov sbb into jae jnp gs dec push or ret loope mov incl push sti lods mov fst cmc fisttpl int jmp and xorl shrl dec xchg arpl mov mov mov xchg nop inc inc inc jle enter sbb leave stos fiaddl fwait stos orl je mov cmp aam shlb sti add and adc pop pop pusha arpl inc sub xor push stc pop adc or insl dec je outsl mov iret inc insl push pop mov mov pop push push fs inc js insb or cltd ja mov leave xor sti and sub adc sbb and cmp xor cmpl (bad) xor mov jae jnp inc arpl sbb adc jae test sahf jecxz sti mov mov shr fcmovbe (bad) movnti addb inc jg sahf inc (bad) mov imul xor fisttpl push dec pop jns pop inc gs pop mov mov jg inc ret stos loopne out fwait jae scas push mov jbe mov push loope int lret push cmc inc sub add or repz fwait stc xchg rorl add pop arpl jae xor and imul std pop adc jnp jae insl jne (bad) xor xchg sbb adc lret dec fwait test mov inc outsl add mov pop and inc xor xor and sub adc sbb insl push xor and adc xor arpl jnp xchg inc inc sbb or ret sub xor dec jo gs xor fs and push (bad) xor sti push repz mov jecxz out push mov mov sub dec xchg xor mov popa mov pop mov aas cmp xor dec stos loope lock jne mov sub pop xor add addr16 jmp les ret repz sti fsubp fscale inc xchg loope dec inc push push pop inc arpl movsl inc loope inc jmp pop lahf cmovae inc ret xchg add jmp ret sahf mov nop leave dec dec dec testb inc push out adc andl add jmp xor lret bound ret or push rorl jl mov lods jle addr16 xchg xorb add or adc jge mul lock add inc lods icebp xchg aam ljmp mov scas push inc mov (bad) mov xchg xlat sub xor fnstenv push push mov shlb fdivs mov test jge pop (bad) jge pop push movsl inc push mov pop jg popa push addr16 jp dec push fmull bound pop out push mov test lock xor sub loop cli aam add jnp push dec add xor cmp and inc inc xor leave push std dec subl push movsl mov inc pop fisubl (bad) icebp add adc xor and (bad) cmc mov push xchg push cwtl ja mov jle mov faddl inc test mov inc jp subl mov xor addl fdivl inc mov jp movsl inc add (bad) call sbb out inc test inc enter jmp mov scas jecxz mov hlt push enter fild fistl dec xchg pop outsl lret push add daa pop xor dec jno mov in push rcll add inc stos push push inc jb,pt jo mov jle lret cmp xor inc adc adc inc adc push mov xor inc lea sti cmp lock mov dec xlat pop cmp pop repz stos cmp xor add sbb inc and pop inc pop stos sbb data16 out icebp xlat xchg into call pop insl push fsubl sub arpl scas jae push nop jbe lea xchg fdivrl xor inc sbb mov std scas push test pop arpl inc cmp lds add inc insb test jbe fwait mov fsubl shlb (bad) mov cmc (bad) adc cmp sub lret aam (bad) frstor inc je jnp pop scas nop mov mov jle inc outsb icebp push sbb xchg sbb sbb dec pop mov cltd push cli test inc mov leave outsl and mov test data16 mov jg push rclb sub add cmp fadd fcmovnb clc jle mov cli rcrb cmpsb and jmp or mov aam lods flds (bad) lret push call rorl jne arpl push cmp inc movsb in ljmp jl jbe and test fld sub adc insl fadds dec aad mov cmpsl dec stos (bad) and mov cmp push inc mov stos rolb outsb fnstenv dec mov ds cmp sti out mov roll jae dec lock inc dec adc xchg stc mov fcoml inc pushf sub enter push inc xchg out cmp and jno iret sub or loope lahf loopne movsb mov mov inc fsubl and ja sahf sub and scas pop cmp push fiadd nop (bad) aad stc inc sub sbb mov or inc jb add add pop cmpsl mov pop add iret sub jecxz mov jmp sti lcall push cmp imul push cmp lahf lods in lea (bad) (bad) loope in jbe xor pop stc pop and inc add ret inc cltd xor mov pop sbb fidivl lahf cmpsb jnp loopne push lods push fwait ja push dec mov pop and (bad) std inc sbb roll pop xchg aas xchg jge xchg push push dec inc out repz push inc loop sarb jb push pusha ret cmpsb inc dec mov cli dec inc shlb push mov loop add or fidivrl daa sub enter inc pop inc xchg pop stos test mov mov inc push xchg jnp imul repz stc jle (bad) push leave mov jecxz imul outsb daa pop dec and or adc scas adc and rorl cmp insb ds mov inc (bad) stc add or repz sub fiadd ret xchg ds nop and int3 and xor inc hlt repnz popa jle imul rclb mov mov sbb cmp orl ret sub mov xlat cmp mov mov cmp or cmp fstps and add jecxz mov adc jnp test sbb popf inc jno mov push dec pop mov int3 jecxz adc lcall pop rcl sub xor push jl mov (bad) ljmp pop (bad) (bad) and rcrl push inc push out test mov jae jo (bad) rorl jnp je add sbbl add inc dec rcrb stos loope punpcklbw mov and sub sarb iret or cmp ret sbb mov inc out enter rorb dec adc fiaddl lcall inc mov mov ljmp and inc cs pop dec cmp outsl dec shrd mov jno adc loope jno add pop fstpt cmpsb sub int3 inc inc mov lods jbe mov inc jae xchg outsl inc jo push inc adc jge jns mov cmpsl stos mov sarb jbe mov das xchg scas jb jns gs outsb inc push or adc sub xor inc cmp stc fbstp ljmp and scas into xchg pop and (bad) lods mov adc loope inc mov test pop sub imul imul out fmuls in inc ret popa mov fnstsw push jnp add dec or jbe mov adc out xchg cmp dec imul xlat mov push inc insb pop and repz xor jecxz mov inc jl movsl roll jmp shrl add add mov ljmp inc push cwtl aas lods jb ret lock and and stos dec jmp enter in sahf dec loop in ror xor adc dec pop sub jnp xchg cwtl daa ret clc xchg and inc (bad) push push cmovae pop pop add inc fcos sti push push mov mov int3 xchg shlb cmpsb std inc add cmp test adc and cmpl sub repz lcall mov jecxz fxch inc fmull lods adc mov inc out out sub mov ds and out in sbbb inc inc xchg mov in jecxz inc push jae jmp sbb in pop mov sarl xchg inc pusha or adc push and jne add repz inc test mov icebp inc call (bad) fwait pop mov inc cmpsb add out and clc dec sbb loopne shlb xchg xlat scas (bad) fidiv pop out inc in lock aam fild pusha repz (bad) mov popf inc lock ret jno jo mov mov stos mov fistpl xchg (bad) inc test inc sub (bad) inc jle xchg nop xlat xchg xor push adc outsl icebp mov movsl dec (bad) insl jl bound mov adc inc xor ret incl push cmc push add jbe sub dec inc push mov push mov dec jecxz jae sub cmpsl repnz jb push mov xchg addb fwait mov popf (bad) push aaa inc lahf ds push rcrl mov inc lea jge xchg sub roll cmp sub add lsl stos inc jno jbe mov loop lds fisub rcl scas enter push rcrb push cmp out xlat add pop loopne jmp mov (bad) pop shll mov fimul insl cmp cmpsb pcmpgtb loop xchg inc nop jl ret jl icebp daa push inc jno cmpl xor inc xchg (bad) pop insb adcl mov push ds iret bound cmp jb inc pop xor in dec (bad) mov icebp incl cmp shr sub scas pop inc clc out outsl xor cmpsb or (bad) xor cmp or in inc adc loope ljmp and enter jge ret sbb xchg je fwait inc add mov test rcrl adc imul jl pop jecxz outsl mov in mov movsl jecxz das cmp push dec repnz adc sahf mov pop jo lahf lods jno mov adc fwait leave mov scas adc loope jecxz (bad) stos xor pop es jecxz inc les sbb adc push jmp jecxz cmp stos dec lret das fild and pop inc rcrl and inc scas add sbb push sahf inc push pop xchg dec push dec cmp into xchg inc mov mov mov inc ss insb or sbb lea pushf (bad) mov mov loop mov (bad) mov inc rcr (bad) xlat sbb or loopne or cmp loope inc into mov mov inc fcomps call mov mov test xchg inc daa arpl jbe jmp ret nop je dec test (bad) clc inc out outsb loope pop cmpsl xor es mov push inc inc sbbb add cmp pop sbb sub loop add xor inc xchg cli inc shll lret or loop sbb inc and out stc pushf jecxz les inc xor sub inc adc sub push inc cmp adc pop outsb ss mov mov inc stc cmp jecxz lret int mov inc roll add popa int3 add inc popf inc xor inc push sbb push in jge inc pushf mov inc pop sahf mov insl mov pop sub fwait inc cmp jg inc mov imul faddp in mov inc movb jmp lret add out push add inc xor pop mov rolb add ret mov loope inc out insb loopne (bad) cmp xchg pop pop les sahf or outsb (bad) mov mov pop mov sub lods mov inc mov add sub in inc int3 ret leave push jmp xor call cmp or sbb daa sub sti adc xchg and add cmp jo fsubl lds int sbbb movsl add jne popa lret mov xor inc mov add or inc inc push loopne imul mov aam mov icebp inc sbb or jno decb dec scas sarl dec test mov fst push pop adc loopne aad adc add enter lods inc cli lret cmp inc add mov (bad) xchg xor adc sub fsubl cli inc push xor stos xchg mov pop inc aam icebp mov aad inc loopne add adc mov cmp cmp pop or and mov stos xchg inc cmp add adc lock or jno jp aam lods mov into cwtl jle pop sbb and jmp or inc addr16 push pusha test mov aam jne in mov mov insb adc das mov iret aam ret mov sub xchg (bad) lock std repz dec bound addr16 fwait lret jge inc jg pop xchg add dec xorb sub inc stos (bad) xlat inc dec int add jo inc jge scas cmpsl mov sub add xor insb inc lret mov mov mov pushf fisub jbe cmp mov jae pop and inc xor fistpll mov ficom andb insl or mov inc fwait and sahf mov (bad) out inc jbe inc mov pushf arpl jns mov mov inc sbb (bad) pop stos xor stos push xchg xchg pushf inc rorb pop out xchg xor cs ss sbb sbb push jg popl lcall les xor aas fwait cli jo add mov pushl sub pop sbbl sbb inc movsl push mov or jecxz loope push in cld add inc mov test add pop mov outsb stos cmpsb jne inc data16 push inc cwtl enter cmp sub data16 inc push jg jnp nop inc mov cmp mov mov jp jo sahf ljmp (bad) daa hlt inc adc sub jns dec inc test fstps shrl and inc lahf fcomip mov mov orl xor pop xor in inc bnd adc push icebp cmpsb stc sbb add jge dec push loopne push ret inc addr16 insb pop dec js mov jge (bad) mov mov inc jae mov mov bound push inc add outsl sbb inc in in push stos pop aaa and add jns adc mov or and icebp ficomp lret sub mov dec arpl jle push inc xor sub inc jl lock dec inc mov xor fild inc push movb aam jbe rcll jno cmp scas jnp inc lea mov mov pop xchg sbb sbb xchg push and (bad) cmp mov mov push mov add test add cmp mov outsb push or pop jl mov or out inc mov cmp push idivb or addl inc test fistp cmp push add add arpl into rolb cli xchg xchg ret or dec subl push add sahf adc cmp and bound adc and xor inc dec ds es das lock fidivl hlt out jmp fstp fild das xchg daa xchg inc or add sbb rorl into inc xlat stos xorl and inc (bad) pusha int in inc std cmp jae jl dec orl ret mov bound sti lret jg xchg push shrb add jg push push jecxz subl pop (bad) xor xlat addl mov test xchg mov jb (bad) ret fbld sbb xor int3 out rcl fidivrl inc stos jge add pusha push lods dec mov outsl ljmp cs sub rclb xchg inc pop mov jg imul lods inc pusha inc dec inc mov xchg pop mov mov xchg jae mov cli mov mov mov inc inc or or xor inc ret sub xchg out (bad) jo cmpps (bad) les loope jecxz cmp repz pusha sub inc jge lea dec add add jecxz sbb scas adc sbb lret or push testb ss fisub jge or mov jne mov lahf mov (bad) mov mov xchg cmp test inc mov and subl dec mov jb mov mov mov icebp mov movb and out lahf inc ds ret cmpsl inc pop (bad) ja mov mov lods bound cmc add adc inc jge add arpl inc test inc fdivl scas das sbb xchg imul jb inc mov jns pop and es jle fcmovnb inc push mov daa test fmull lcall movsb mov out into aam rorl imul (bad) popa pop outsl add inc stos ds sbb jp cmp dec jg add js adc mov je ror mov test arpl addl divps mov outsl mov mov jecxz mov inc mov dec sbb insl rclb push mov and out test fwait cmp arpl sub inc mov mov push inc dec mov pushl fimull mov inc data16 inc into push jg fwait xor add fdivr inc cmp rcrb inc enter stc jae mov inc pop popaw dec das addr16 and (bad) dec in jle xor outsl mov insb mov repz inc jae sbb pop incl xchg lea lock inc push xchg imul sub lods push and aas (bad) inc add mov lds sbb nop adc xor xor pusha aam jno js cmp in shlb repnz addr16 jnp pop mov push inc jmp inc jecxz xor hlt dec sub adc adcl movl iret xor sbb or pop jae push add add imul mov iret push (bad) mov inc les adc sbb ret mov mov mov sarl pop inc popl sub (bad) hlt aaa xchg icebp add xchg fisttpll sub (bad) dec mov jmp iret inc sub mov outsb mov pop lea xchg inc fcomip adc inc sub addl cltd mov sti (bad) dec rorb in lock mov scas lret cmp add and mov cmpb xor int daa dec fimull out cmp int3 xchg sbb xchg xchg cmpsb cmp inc jb xchg adc test fldt mov fimull mov inc xor mov pop inc ss out bound in inc mov adc movsb inc dec pop jne pop das test cmp mov outsl gs sbb sub sub daa (bad) or aad jne mov icebp add pop inc mov scas test fisttpl pushf inc fsubrs sub add jg in lea jge lahf hlt scas outsl inc into test mov cmpsl inc cmp sub xchg xor mov test loop inc mov push (bad) sbb dec mov mov icebp or inc (bad) push stos pop js ds jg cmp lods cltd fdivrs sbb push sti push (bad) mov sbb aaa mov pop pop ret push jle (bad) in stos ret lcall inc jb mov stos std sub int3 sbb pusha jnp mov pusha hlt loop inc bound fst pop incb js movsl mov out inc in pop dec notb mov scas jnp cmp sub (bad) imul and pop pushf add adc dec xchg addl inc aam fnstcw insl loopne inc cmp movsb pop xchg ficomp inc les mov loope std add jne mov sbb pop dec and shrb xchg inc (bad) out sub push inc adc jo jl mov jge enter iret clc inc inc mov data16 sti lret dec or and icebp in mov mov data16 lock or imul outsl inc xor dec enter fnstcw push xchg and sarl testb inc pand es inc sub sbb push int3 jnp lret fldcw icebp inc loop out sbb pop mulb jg mov inc push cmp out sub xor fstpl mov pushl mov cmp sti and adc or inc mov pop test inc push sub (bad) scas repz lahf sahf test lcall mov mov xchg push mov stos inc aad out and push mov and rorb mov mov mov leave and imul icebp es in push xor fsubr in aas lods out inc mov fiadd inc popa jl inc mov scas inc mov iret dec or call inc pushfw shrl mov pop stos cmc (bad) out ret xchg adc cmpl inc test pop jge jl mov xchg mov add aam inc sub xlat (bad) lret sub cli fwait sbb enter fbstp sti aas test mov inc test cmp mov std loope ret xor rep aaa push xor fstpt lahf sub xorb ror into (bad) and mov inc aad clc js pop and push inc jno jle ss outsl and jge frstor inc test dec pop je out sub or mov xor add inc sub dec repnz mov insl sub push out push packuswb xlat rclb lds pop lret sbb add popf add dec pop adc aas mov inc decb leave dec (bad) (bad) jno inc push loop mov fwait pop inc mov xchg sbb jle inc inc cmp out daa cld sub andl push fildl lcall inc cmp push sub mov clc jb dec jo inc mov jae sub sti dec mov adc outsb roll fidivrl call or push sbb sub xchg in cli ret pushf mov mov lret mov addr16 jg mov lock cmp xchg popf adc pop int3 dec xlat lret repz pop rcl add loopne aam outsl out dec xor mov lea mov sti clc inc ror xor inc sub icebp nop setl inc outsb mov mov pop mov inc pusha loop pop and or fwait jmp inc loope sahf sub mov popa imulb ret ret pop mov pusha mov outsl mov fist (bad) jmp adc dec mov sub cmp sahf xchg push xor push pop enter fwait jb jbe mov jne scas inc add jecxz aam inc loope out aas rolb (bad) xor sahf sbb inc sub inc xchg pop mov lahf sub dec clc lret xlat loope mov pusha out insb into ret subl loopne int3 cmp or push or lret insl ret and xor dec sub in ljmp or adc scas inc daa jae scas mov push (bad) jb dec cmpsl mov scas ret push addl add mov inc scas popl pusha xchg push cmp lret inc inc loopne mov inc (bad) mov inc xchg inc dec cwtl insb sahf push mov stos inc hlt (bad) repz and les mov jp inc or (bad) and inc jle mov xchg push dec inc ret pop pop fs and add dec loop inc mov fs jo add inc outsb jmp out mov mov dec mov mov cwtl subl mov inc mov cmp xor sub xor adc jno inc cmpl pushf adc inc add aad jecxz fsts (bad) aaa int jl xchg push test jle jae add inc pop in xor test mov testb pusha out out xor ds (bad) xor inc roll xchg inc bound mov mov pop pop das popa incb mov mov das inc inc sti dec negb pop scas test clc adc imul sbb aas jge mov (bad) call push (bad) sub bound push cmp jne inc inc lds lret or mov sbb dec (bad) push sahf sub sub jecxz fnstcw push (bad) int3 insl orl xchg inc (bad) int ds mov jo pop mov sub inc rolb test push movsl inc test sahf pop mov inc fcmovnb in inc sub sub push push xor test cmp rolb cmc aad enter call (bad) ror push mov mov xor mov test mov push inc call lcall cmp fildl cmovae pop mov inc and xchg push xrelease mov mov xlat fldenv fmuls ss lahf (bad) les mov and sbb pop cmpsl push add mov or push int in out shrl popa test cmp outsb sbb xor adc sub add in dec inc int add mov push movsb xchg pop xchg subl jbe les inc add mov jle addl pushf mov lock out sub mov xchg mov fwait mov mov xchg cli inc pop add xor inc call lret (bad) arpl sub dec cli inc fwait rcrb insl fst (bad) jns or jl fcmovb repnz sub std mov mov jecxz inc out push jmp sbb xor jl and inc and dec push outsb movb lret jmp sti cmp int3 ret roll jle pushf add adc push xor lock push fstl inc pop inc imul inc dec lret out jb jo inc xchg lcall loope in inc and dec or xadd mov in in mov inc int3 push ficomp rorb call inc cld fs pushf rep inc les adc jno pop inc pop popa inc jg pop dec lods mov pop in inc loope add xchg ljmp sub hlt inc and arpl (bad) enter js scas sub pop jge inc push push inc pop loopne outsb stc rorb mov and test push push and jno (bad) ljmp addl sbb mov aaa daa shl mov xchg (bad) pop dec icebp insb popa sti xchg inc roll dec fidivr sub xchg sahf xchg daa jbe leave sub test inc push sbb les inc jnp and mov mov outsb sub sub xor sbb popf lock sbb inc add mov pop inc dec pop mov inc mov or inc pushf inc (bad) in push mov arpl lahf test or inc roll cmp push int3 test sti inc lahf pop lds jnp lods mov inc repz repnz xchg xchg pop inc cli pop dec (bad) std and mov inc adc xchg mov inc dec mov mov add inc pop lcall jle pop (bad) jbe cmp lods pop inc and testl inc cmp sbb pop push test dec mov je sbb xor sti repz mov test bnd pop hlt push fimul xor inc sub cmp jae push or add (bad) fmull jecxz xor ret sbb (bad) jmp pop adc jno je xchg push push das sti leave daa mov mov pop out int add mov sub data16 push pop xchg ret call mov mov sti inc enter shrb push js nop mov mov in mov leave push cmp mov xor adc fstpl lcall xchg enter inc es pop mov mov push jl push sbb pcmpgtb fbld lods jmp xorb xor insb inc bound hlt les sbb inc push jbe mov popf shll push adc cmp mov fadds movsl xor or sub dec into cmp out add movb inc in or jp vscalefpd mov ret xor adc arpl ret mov and jbe inc pop mov cmp mov subl loopne jg adc cld (bad) hlt ret or loop adc jge arpl addb pop jmp inc loope sahf movsb mov stc inc inc adc call inc cmpb inc inc rcll pop xchg xchg out test rclb push sub inc dec lods mov mov lfs inc fidivr cmp inc and pop (bad) adcb insl inc dec lock and mov jnp cltd ret or cmp jbe xchg or pusha rcrb push inc xor popf sbb inc lds fidivrl out mov test mov dec adc aaa adc cmpsl mov pop inc mov dec mov dec lods cmp mov shll test sbb imul ja,pn icebp sub mov das outsw sub or cmp mov push ja aad (bad) std or outsb sti inc out (bad) cltd sbb cmp mulb stos repnz dec push jo xchg sub push mov xchg mov mov sub movsb xchg sti iret xor xchg fldlg2 ljmp mov mov xlat iret leave mov insb or movsb jno or out jne cmpsl insl jge mov push mov adc jmp jae scas xchg mov dec movsb in jns (bad) mov jae stc jl stos push insl cmpsl jge test or or jbe dec addr16 (bad) adc je loop mov stos lods daa imul lret out mov sbb insb mov sbbl call mov add mov and cmpsl gs movsl xchg lods mov xchg decl jb mov daa xchg (bad) out popf sti mov test push cmc stos scas (bad) and inc lahf subl mov or inc out add idivb divl adcl adc inc sbb cli in or out sbb outsl pop add addr16 addl and jmp pop or daa or xor mov mov adc pop push xchg xchg mov cmpl leave xchg mov std dec mov jl cs aaa adcl sahf scas clc jp add mov mov and push call mov loop fwait arpl stos cmpsb test and lcall out cli cmp sub cmc inc scas int3 push xchg mov aas or cwtl mov loop mov cmpsb movsl ds icebp cmp cmp pop data16 fs loop adc lods jle rorb jg call (bad) cmp jne xchg cld mov rcll mov push daa mov add sub jae adc add sbb push stos enter xor lods adc xorb xchg xchg outsb ljmp bound and fwait imul xor nop in pusha and fistp pop in mov xchg and add jnp lcall test in sbb cs inc xchg out xchg xchg in nop push jo push outsl inc sti (bad) ljmp movsl mov lea xchg rcr aaa jbe test gs outsl hlt out jne out shr les test inc xchg mov mov out arpl cmp lret sbb in push stc dec iret pop leave sub mov push jmp jae sbb jge in pop xor xlat push cmp mov inc mov jne scas jno movsb sbb out sbb push mov push arpl aad movb or pop (bad) jne pop scas and mov pop fs push xorb xchg daa xchg xchg addr16 ds sbb out jecxz xchg mov imull shl dec fsubrp adc jl movsl cmpsb ficompl fyl2x ja ja add sub jno dec aad or enter movsl (bad) frstor jns std shll mov jb arpl mov pop pop dec mov cmp fisubl scas xchg xchg inc or insb xchg mov xchg cld aas stos push test jmp mov dec imul push inc mov push mov cs jne pop adc stos push addr16 stos cmp pop arpl rcll lret pop sub or sbb in pop sub sub mov sbb daa lods xor mov pop gs ss push xor mov fsts adc add cs subl fnsave cmp call pop mov lds jbe mov inc (bad) mov pop imul pop sbb leave cmp sbb lret dec data16 repz and iret jl mov inc dec mov add add cmp mov repz les sub pop hlt sbb xlat (bad) xlat stos jp dec push (bad) cmp inc sub inc (bad) or dec stos (bad) pushf or arpl inc xor push mov (bad) push mov jnp push (bad) ja xchg dec mov and push mov (bad) fcmovnbe mov mov inc or inc sbb sub call arpl pop js pop imul xchg xchg pop js addl ja insb test jge outsb stos mov dec mov (bad) or rcl shll and mov call push iret fwait fs sub fbld jae mov dec roll jns fild push mov xchg in stc popl aaa mov jp and daa xor or jne fs (bad) daa jp inc test repz dec jae xor push repz cmc repz fs mov cmovne fwait int3 scas push call sbb dec outsl inc loopne push jnp sbb fistpll xchg out call inc mov setns xchg or fmull xchg dec xchg lret das mov cmc add jg and (bad) mov and pushl pop (bad) jl and xlat imul pop jnp out andb popl pop je jae addr16 jl das outsb pop adc movsb inc fcomps fwait or pcmpgtb addr16 sub jnp jmp out jge cmpsl push jmp aas lahf cltd movq inc xchg movsl addr16 mov iret das int3 fmull pop xchg mov jecxz aam xor mov xchg jle xor daa mov xor lods xor inc mov dec fwait or dec cmpsl imul adc cmc mov ja stc (bad) lock (bad) or ja sub mov fistpll pop adc lret sahf cmpsl fisttpl cmp stos mov and jl push or cmp ret inc add in push xchg inc fistpll mov shrb jl,pn push inc jg dec cmp lret push xchg mov mov sub cmp ds ja pop dec and cs inc add repz sub add adc sbb pop das xchg adc and mov sub pop adc pop cmp pushf sub xchg mov pop das sbb in or rclb cmp rcll push testl test and pop int inc inc cmp mov push inc mov outsl loope cmp inc xchg xchg cmp inc jne sbb les adc addl mov push into jp mov jg xor xlat xchg repz xor inc call mov jle jb int sub push hlt cwtl mov daa jge dec sti jne fbld lret lcall pusha (bad) repz ret push enter xchg test add push lahf int fs lret and clc int3 jg fwait xor xor cmp leave mov imul jae xchg enter (bad) lahf fstl push pop push dec outsl mov arpl dec sahf xor rolb dec movsb xor bound inc (bad) pop pop pop or scas imul stos loopne jbe lret xor mov add sbb push sub pop in (bad) add aas aad rcll cmp xchg movl pop ljmp xchg mov imul jnp js arpl enter das sbb inc dec test xorl test xor addr16 sub inc push jno lret mov add push adcl into push mov rclb mov popa test jecxz mov arpl fwait xchg lock pusha xchg inc aam cmpsb pushf xchg daa jmp call insb mov dec pop incl push rcll inc mov sub and push dec xchg popf arpl cmpl gs (bad) pop popf fwait lods addr16 bound jecxz mov ja push xchg jp ret adc push push dec fcoml sbb fdivl subl or dec (bad) inc mov pop jecxz pop inc push das mov testl fs pop xorb dec addr16 lret iret fstpt arpl dec dec fild aam add sarb add dec inc ds jecxz jmp lahf mov (bad) lea out pop lret dec jecxz arpl xchg mov (bad) mov ret mov xchg stos push mov idivl push mov popa pop rorl out dec jno or cmp jmp popl das xor mov inc outsl repz pop dec xchg or or mov call fistpl ljmp inc mov (bad) or add inc mov and mov mov fwait pop mov pop repz push jg mov push push test js push iret scas sbb (bad) (bad) sti data16 dec popaw pop scas mov mov jnp (bad) daa daa fistp (bad) imul (bad) mov push mov inc adc (bad) xor jl jecxz or jecxz cmp js cmp pop and stos in mov or and xchg mov aad cmpsb lret dec pop sbb xor fwait jg mov xchg fisttp and (bad) xor lea add and xchg (bad) loop inc ljmp mov imul lret aaa repnz mov arpl outsl data16 cmp push push push cs movsb pop dec jg dec pop xchg jae call mov aas ror lret push (bad) aas (bad) aas mov nop dec in std inc jnp mov sbb imul push jecxz mov xchg jbe ret or jae and mov sbb pop xor daa int ja insb addl add movsl ret mov xor scas imul cmp sub mov rcrb cmpsb shll cmc mov inc cmp mov (bad) push call sti mov xchg rolb cmp xchg xchg rep or inc xchg pop imul negl jnp bnd mov lret xor idivw lods pop out (bad) (bad) jg jp jle aaa lahf dec xchg dec flds sub (bad) in int andl mov data16 pop fwait dec fdivrl cmpsl lret sti xchg mov (bad) fwait or cmp jnp add xor push (bad) mov in shl push fwait xchg cmp mov stos xor iret jg addl xchg jecxz ret mov inc enter xchg loopne or and pop rcll jecxz push (bad) jae cmpsb jnp sbb sub mov fild ret test add sti test (bad) dec adc xchg sbb or push xchg pop test mov addr16 (bad) or mov or addr16 and or lods sub pop jo pop mov mov pop jg andl in int add lahf fist out jle gs pop dec das xchg mov daa xchg (bad) dec outsb xchg lea push cwtl dec or cwtl push mov and ja and xchg jmp data16 popa jnp inc xor rorb xor insb pop notl cltd rorb adc sbb cs or jae popa andl lcall mull cmp mov dec lcall psllw and inc jge popa insl mov add les call sti or adc leave ret stos outsb divb mov lods inc imul fildl pop push inc mov cli loope inc ret mov call out mov stos cmpsb fiadd aas loope gs repz adc sub pop hlt inc rorb js fs dec inc aas insl adcl (bad) xchg mov inc clc and fnop hlt push mov mov inc sbb test faddl test ret sub inc fisttpl lock dec movsb add adc int3 adc mov pop es outsl xor popf icebp jns pop or flds and pushf dec xor inc sub aas nop xor inc xchg fdivp aam mov dec dec xchg lods and inc addb xchg repz mov push loopne cmp mov add sbb sbb add movsl inc jmp inc fwait aas mov incl aad inc adc sub fiadd clc insb mov rol add adc mov fsubr add lds (bad) sbb sbb jo sub push cmpsb jecxz inc cwtl scas mov stos add mov aam ret flds lods ret xor or mov aam gs jnp pop addr16 (bad) xor add xchg mov popf push test mov xor xchg loope rcll cmpsl mov mov push dec mov repnz add or jmp dec scas les (bad) push jg xchg cmp mov pop aam push cmp add addr16 mov xchg lods add xchg outsl mov (bad) (bad) shll xchg pop lret jmp mov aam gs gs lret cmp adc push (bad) aam lods mov imul inc mov mov andl int3 int shll mov test xchg int3 cmp pop push or mov aam lds test ja imul and int3 icebp push loope rorl int3 xchg addr16 mov cmp xchg cmc lret mov (bad) jmp lret push mov movsl mov xchg int3 dec push aas mov mov aam gs rol int3 scas pop cmp mov xchg lret imul lcall or int3 repz (bad) mov xchg lret aas mov xor adc fcompl dec pop push mull mov (bad) add mov mov out pop rorl stos addr16 mov (bad) imul scas les sbb jbe popa (bad) dec jmp adc dec mov test dec mov repz cmpsb psrlq jne jmp mov xchg jne ja xchg xchg dec mov je inc gs xchg dec add xchg test push dec pop subps push push aas arpl popf dec fildl push imul ret inc or jmp insl pusha push fisubr add ret fcmovbe dec push gs xchg dec push dec addr16 mov push gs xchg pop addr16 mov xchg jmp push dec dec rorl pop lds pop pop dec dec lret dec mov jb xlat jae dec push stos test lret cmpsl cld ret mov jb fmull xchg adc push into mov cmp push sub mov popa mov insl push inc cwtl dec lea cmc mov xchg stc fisttp sub in (bad) and popa mov inc inc pop rcrb je sahf lock adc hlt mov fsubrs add fistp inc mov mulb nop or pop dec pop mov insb lea sub fcomps lods inc add in fs or mov rcrb ret dec lcall adc lahf popf push pop cmp aas inc push inc dec xchg inc in dec jo pushf dec push xchg inc mov pop imul outsl cmp aas and pop add push xchg pop mov fdiv setae sbb push or neg test inc push and (bad) and and inc dec mov ds cmp push inc js rcrb fsubs aad pop lock lea sbbl shrb adc add in mov and cmp decl lcall mov mov push fs into test sub add inc jno pusha add inc inc and in inc xchg inc adc push andb mov sub mov mov imulb ret in mov lret and ds sbb pop cltd fmul mov jae andb inc xchg jb pandn xor imul inc test cli sbb and dec outsb or sbb dec inc inc pop (bad) repnz xor dec inc push popf daa xor mov addr16 pop mov fmuls das xor inc and push pushl (bad) push sbb sahf out mov mov popf pushf pop rcrl dec call mov adc (bad) sub add cmp mov push or sti bound or jbe addr16 inc sub mov int3 jge fcmovnu inc cmp arpl ja push addb cli and loope scas pop inc push sub je xor jg inc mov push data16 aaa inc mov push shr push dec add jns popl jge add push add aas dec push (bad) std inc ret dec outsl test popf push call (bad) xor movsb sti cmp add scas jno repz les dec or ss jo aam inc add cmpsb std fs push xor mov xchg pusha mov inc mov xor push clc insb mov jg push in mul loopne pop xchg lret out popa adcl jb inc xchg mov sbb jnp cwtl ret xchg sahf inc dec mov int insb pop jne fs jp and fsubrs inc lds or repz iret dec or xchg mov ja in enter add mov stos testl cs jno jae inc dec or jle inc xor sbb stos decl pop nop mov daa cmp or adc (bad) lds xor xor pop mov xchg cmp movsb sbb cmpl jmp mov xlat (bad) repnz in pop cmp adc xchg jg push mov and lock push mov pusha mov adc stos cmp inc ret or adc xchg adc flds ja push push jo dec add mov inc inc (bad) popa mov mov pop xchg adc sub mov test mov int3 adc add push xchg push dec inc mov xor in inc sti jae cmpsb and dec adc nop adc xchg cld sbb das cmp dec clc (bad) dec dec inc jb (bad) add add leave and inc sbb push stos inc cmp std addr16 cmp mov outsl loope and int add xor inc mov jl roll shr sbb rclb adc mov cs mov add and add dec push mov mov outsl fs mov jmp leave sub inc mov insl add cmpsl in mov enter arpl adc pop pop sahf jae push test in add imul es das sbb (bad) and xor push mov cmpsb insb std sti dec loopne add mov lock jnp sub pop iret cwtl and pop (bad) inc inc push adc inc idiv xor arpl mov test out addb adc inc mov xchg das ss cmp sub enter ret out ret inc push rcll dec jne jmp sub scas inc lea or cmpsl cmp pop adc mov adc cltd cmp add int3 cmp sub jno (bad) int add jge pop push cmp dec sub fldenv dec inc aad ds and sub mov dec inc movsb cmc mov sbb inc inc mov fldl pop mov mov or or mov ret mov mov jge cli repz inc and xchg loop inc in (bad) icebp sar mov inc and fidivr xchg inc enter pop jg gs scas push aas repz jmp addb jg in mov inc pushl out dec push xchg inc push sub pop sbb jl in mov cli dec inc xlat and fldl test popf sub out jbe inc mov inc repnz aam rolb add outsl fidivrl data16 mov adcl mov adc inc add add mov add xchg inc inc cmpsb push xchg add int xor mov add mov fwait and mov jb xor dec sub in xchg movsl xor push xchg fadds test jg pop inc mov inc push (bad) cmpsb and sbb outsl inc enter add adc jnp faddl inc aaa push mov imul and cli ret or inc jo pop cmp jb jnp mov dec inc xchg fldcw enter sbb in add mov jb ds pop push stc pop xor cmp repnz je outsl arpl mov jne sub (bad) inc lds xor out cmpsl shrb mov addl and inc cmp and or clc mov (bad) mov jg inc aas xor cmp test mov inc and pop addr16 inc sub inc pop movsb sbb mov das std xchg in sub adc xchg cmpsb repz lods xchg mov inc roll scas jo ss cmp dec xchg mov cmp and and loopne xchg sub dec out and sub jo mov and (bad) cli xor ss or cwtl push clc dec sub adcl mov insl sahf ret adc xorb jno ss in lcall arpl sub fwait cmpsl inc in cld ficom inc or lret inc push mov cmpsb xor adc inc push hlt push adc mov lods inc aad int3 sbb dec inc mov repnz pusha add ljmp inc add dec cmp inc ja call mov int pusha arpl (bad) xor jno push fcomip inc mov xchg rorb push (bad) mov repz push cld jnp cmpsb jae cmp (bad) jecxz mov jge adc or outsl xor push jo (bad) mov jmp adc arpl push push insb inc push add daa cld adc push inc lcall sub xor mov mov jne pop pop mov les fwait rolb adc lret dec mov dec dec aad add jp xlat cmp xchg and stos sub int3 inc lods push dec cmp inc cmc push pop cld and or adc call add lea repz pop in inc jnp and aad push push inc adc mov lods sub inc rclb inc mov inc jnp xchg inc repnz iret mov dec xchg sarb int decb push adc inc jo pop insb pop call and dec dec aaa lcall (bad) or fsubl gs sbb dec xlat jnp inc dec push xchg cmp adcl loopne roll jno inc jmp dec mov inc pop sbb lea arpl (bad) sub mov stos inc ds or pop test push mov imul out jo lea fstps push inc inc mov popf inc inc pop push call mov xchg pop cmpsb out add inc sar ljmp es fisubr fldl out xor test mov or in popa adc aad and std push lret adc cmpsb inc jb call cltd xorl add or (bad) pop jle sahf ret cmpsb cli adc jno,pn inc mov incl inc adc sbb push scas inc inc andl or mov inc jno aad sub push inc inc scas in sbb pop pop inc inc adc xchg cld aaa popa dec jnp xchg (bad) movsl orl and (bad) mov outsb jno xchg int push fs je pop cmp inc fisubl outsl cmpsl (bad) xor push inc push mov cmp jno mov jae inc (bad) dec daa (bad) addr16 test insl pop push xchg dec sbb lcall inc incb inc xchg ljmp inc popf mov mov inc insl mov into pop out adc (bad) stc xchg jmp inc icebp dec xor popa mov or loop cmp leave lock xchg cmpb pop ret cs dec xchg fnsave popf inc jp imul popa jne inc mov cs lods fwait inc les mov and (bad) mov inc hlt ja sahf mov sarb xor mov mov xchg and inc jle movsl (bad) dec inc fistpll jecxz push stos enter sub (bad) jns xor ds aaa sbb push push mov inc inc mov or flds inc cli jl cmpsb ljmp fildl fs inc push sub sbb jmp fisttp adc lret inc adcl add mov mov andl in fidivl repz xor xchg ret inc pop pop addr16 lret repz sti ljmp inc fbld ret dec xchg pop inc imul inc jg mov jnp inc xlat addl mov adc or daa nop cmc sbb mov lock in dec dec andl (bad) mov imul mov inc or js dec rcrl inc les mov jle xlat (bad) repnz jbe mov arpl add cld test xor shll (bad) movsl ret sbb inc nop fdivl int3 out jne jno adc push sbb adc inc xor xor loop es mov dec repz pop xor pop inc mov cmp inc cld jbe adc test sub popa jno xor xchg inc push inc adc je das mov or mov lret inc lds into jo and inc rolb cmpsl gs add mov cmp push inc adc adcl rcrb fidivrl je jb dec dec stos js or aas jae (bad) pop cmpsl loopne bswap xchg dec sbb inc aam cmp (bad) lea lock sbb jo fnstsw pop cltd bound adc lret lods std mov insl and xchg bound cmp push rolb cs inc stos icebp mov dec xchg dec sub jp cld (bad) mov xlat sub lret cmp jae mov sti adc jmp stos cmp pop ret push je jnp gs out and mov pop pusha sub push adc adcb mov fwait push and add mov inc and outsb out mov ret pop add xchg lret into and dec int push jecxz xchg and imul lods das pop push sahf pop popa jnp mov push jp or cmc xchg dec (bad) (bad) fistpl pop ds div xor sbb mov push fcmovbe aaa fldl repz push data16 fwait mov js es out pop inc push in addl inc inc cmp (bad) ret lods pop cli stc nop push and xor dec fcomps mov pop loop xchg mov aaa out dec rclb popf adc inc inc iret arpl xchg fwait cld fstpt mov inc sbb pop xor in adc or es mov pop or inc jb xor inc dec fwait pop adc (bad) mov inc inc push mov mov inc daa ja pop push outsl pop dec and cmp add pusha cmc out add xchg push push cmp cld mov xor outsl mov pop mov rcrb fucomp aas inc and mov or dec std and ljmp lcall imul xor fsubl lea iret cli insl mov xor push lret and stos cmp std inc or cmp sbb outsb loope xor cld int lds ret cmp mov dec pusha stc in adc xchg inc pop jl sahf push dec pop sub clc fcmovne inc add mov inc sbb cmp bound mov jno inc pop pop jne outsb or push xor sub dec dec shrb sub (bad) jne aad inc or jge inc mov pop sub outsl sbb inc xlat cmp dec inc and (bad) shrl xor mov fist xchg pushf jno push push cmp rolb add mov sub in jae stos xor (bad) pop and scas pop adc (bad) cmp fcmovnu and arpl ja in cmpsb shlb mov jp and aaa repz out and jnp or jae mov aas inc inc movsl jo cmp aad cs inc scas sbb inc loop (bad) pop int (bad) iret sub inc push hlt add gs (bad) aaa je jg,pt dec inc pop lods and push xchg add mov add adc hlt inc jo test pop lcall add mov out (bad) notb jg mov inc xor gs jle xor sub ljmp jmp (bad) add leave pushf int3 mov lods fsubp sbb cwtl in sbb sub addl add adc inc mov pop inc pushf (bad) ret jle clc (bad) add inc push cmpsb sub sti push mov adc sbb cwtl aas int3 pop int mov fwait out inc inc aam or push (bad) cmpsb jp loop jnp inc push push cmpsl (bad) or arpl dec mov int jae pushf push call cltd int3 jl test adc xchg dec pop inc sahf addr16 push mov aad in dec pop test enter stc sub cwtl or imul add popf sbb inc cmp and push xchg push faddl push push or jb or test mov inc add sbb adc and sahf push jb or pushf inc push mov imul lods test mov popa fdivs jb pop and inc mov push sbb dec lret (bad) rcll mov sub mov testl pop ja jae stc fsub cli mov cs je xor add jnp popa inc push jbe dec jmp addr16 dec or or ffree sub out inc pmuludq outsb ljmp xchg test (bad) inc mov sbb jne jle scas pop xor mov imul loop repnz lock xchg fwait cltd xchg arpl push mov pop test inc sahf inc mov int3 mov in sbb ret movzbl cmp inc mov lret in andl mov inc js repnz out jecxz cltd adc mov stos ret inc pop inc dec insb adc and clc or aam and pop sbb movsl pop cmp gs (bad) rcrb sub testb psubb ret mov (bad) xor and lcall or aaa pop jp inc xor dec add ret icebp ret and rcll test pop (bad) mov cmp add sub repnz xor mov mov (bad) aam stc and mov and ja inc subl pop jae mov nop inc cmp outsw popf in (bad) das add fcmovnb inc xchg iret mov sub cmpsl lods mov cltd pop inc mov and dec cld icebp mov lcall (bad) push dec je pop dec sub push and inc cli insb lea int xor lahf scas (bad) lock fisttpll mov dec or inc xor pop andl aad pop push xchg inc inc inc js dec sub pop inc cmp pop fisttp (bad) mov jge out ret ret subl and popf mov gs lahf jae repz and xchg loope jecxz sbb jecxz mov (bad) pop je xor clc jne xor pop adc dec into inc inc jbe fcmovne xchg add pop inc dec sbb pop xchg inc stos (bad) and xor inc jecxz push pop (bad) jmp sbb test dec test aam out scas inc sub jae jbe or and cmp inc imul jge dec loopne or aaa inc mov adc pop test test cmpsb clc push xor (bad) cli add int3 pop mov mov insl push push loope mov mov push pop dec mov inc jo jecxz lahf mov inc cld pop imul (bad) flds dec daa fldl lea addr16 dec movsb dec dec or rcll xor mov mov add call pop mov push out inc ss inc push adc xor loop xchg mov pmulhw jno mov iret mov ffree sub (bad) cld jle dec cmp sti pop jecxz push stos mov inc dec pop add xchg jae addr16 pop outsb jo lret xchg or add lret and mov xchg aam repnz sub inc push (bad) ds fstl jg dec lahf xlat in xor push mov pusha push arpl mov push sub mov jecxz scas stos fstps inc fisttpll and or nop scas dec jns in fisttpl xor push jge test dec sub adc arpl jecxz arpl dec jnp xor and fmull scas test insl fcoms rorl (bad) jns push inc mov adc sub call inc cmc mov mov cs dec pop inc mul (bad) loope test inc cmp inc sub xchg mov mov jge mov loope add add jmp out dec ss xchg cltd mov pop and lock loope mov lock ja push ret fimull xchg sti rcll add xchg xchg cmpsb cwtl test shrb stc add out push pop scas or xchg (bad) jmp pop mov sub push xchg cli sub dec jne jle adc dec inc mov in mov add cmp shl push js sub int gs imul lcall pop jle push mov xchg in cwtl cmpsl pop loopne jno jne (bad) ror cmp bt cmpb call repnz pusha pusha call pushf pusha lea jne add xor mov pushf mov push add bt call push lea je pushf cmc add pushl lea jmp xchg xchg stos test mov and jno out out out lods (bad) mull cmp add adc fstp pop ja dec loopne aam xlat dec idiv call push hlt or insl lcall popa mov pop mov outsb shrl adc imul xor jbe dec pop push imul and out dec idiv out lea test in jl popf loop cli int3 xor xchg and and xor inc sub je adc and mov mov nop pop test aaa xchg jo lods hlt stos aam fdivl je outsb cltd xchg cltd push cltd es aaa lods xchg daa cmp mov lods lret xchg push enter rcll jge mov arpl pop mov nop sbb fucomi jp aaa inc call iret xchg sub sbb sub nop lret lods adc xchg push mov lds ljmp xchg xor addl inc daa aaa fildl mov pop fcomps popa cmp adc add jge jbe in lcall pop xor cmp cmpb int3 and or lret lods rclb (bad) sti movsb mov cmc mov cmp and (bad) dec jp ss jae mov mov ja dec mov pcmpeqw inc jge sub mov jmp sub xor pop jg pop pop aas mov cmp xchg mov push flds adc (bad) adc jl loope push enter inc pop sub push test mov test mov pushf and xor mov (bad) mov dec (bad) dec sti mov adc lahf (bad) jae fistpll fneni(8087 lods rorl xchg mov sti push or xor cmp sbb pop push cmp jno jae adc jmp aad imul xor or adc cld (bad) int jno lds fistpll subb jmp das (bad) lret shl addr16 sub shrl pop cmpsb sbb mov ds push movsl push (bad) incl jle dec cmc scas lahf pop loop loope in jp inc jb push mov in sbb icebp pop adc cmp xor jmp enter push push adc dec pop fcom ja (bad) aas cmpsb andl lods xor inc jl xchg insl xchg mov (bad) stos roll into adc sar negl jnp xchg sub jnp into aaa ror ror cmc push clc push movsbw btr movzbw mov adc movzbw bts call aas mov xor push mov loope in push jmp push scas and mov and jl popa add leave xchg cmpsl lret or gs nop cmp rclb dec sbb pop iret in sub inc add (bad) dec adc enter andl das (bad) xlat cs aas xchg mov loop xorl inc push popa xchg ss inc pop inc pop scas les sbb sub adc add inc inc imul mov std cwtl (bad) xchg pop sbb imul mov push leave push or in fsub fisub or adc data16 std incb neg mov mov pushl pusha cmp jmp push sti cmpl or pushf inc mov cli movsl stc movsl gs fiadd loopne lret push dec push faddl inc lahf and (bad) sti or xchg add stc inc xor mov add lcall sbb sub mov push pop aad mov push cmp inc xchg dec mov sbb dec repnz sbbl ljmp mov lds nop in or out das gs inc test rorl xchg mov add adcb mov icebp dec mov mov xchg and mov sub sbb out jo push sub sub mov or dec push pop lahf es dec adc mov sbb aaa int sarl pusha jle arpl repnz sbb mov sbb jo lods out (bad) lock push mov jecxz in fstpt pop pop jecxz pop (bad) scas inc js adc nop push mov mov mov (bad) xchg cmpsb seto mov mov les dec jno daa mov pop and cmp jbe sbbl in fiaddl mov scas xchg mov popf adc xlat inc mov and and loope adc icebp outsb mov jno outsl pop js xchg test adc mov cmp xor test sub flds xchg ljmp outsl mov mov insb repnz xchg movsb dec jge inc mov mov ljmp xchg imul fsts gs push lret fdivl sarw mov movsb (bad) xor xchg jo mov xchg mov xchg jbe (bad) sti repnz mov sub pop add add stos shll les mov dec mov xchg (bad) enter je fwait jae loopne jnp xor cmp mov cwtl sub xchg inc pushf sbb jge (bad) enter mov add outsb adc js movl jmp pusha pushf movl push call push dec dec push inc push dec cs insb add inc and pop pushl lea ja pushf bt stc imul clc cmc add pushl pusha lea jmp add inc adc fwait mov add push lret and add add adc add add add adc add add and add add add add add addb add mov add add jns add add add mov add enter add add mov add add insl adc add add xchg test add push push add add add add and adc add add or and xchg (bad) and mov adc scas lods adc inc enter test add add add push test rcll test cmp sub xchg call jne leave lods (bad) icebp mov and pop aad mov imul icebp adc ficoml lret mov pop xchg lea adc mov outsl cmp sbb cmp xchg (bad) aad xor and inc xor int ja pushf sahf jbe loopne scas xchg sbb test insl orb adc imul and lea mov std cltd jg dec (bad) or mov add fiaddl ljmp repz dec xchg enter and enter arpl dec cmp xor lea imul daa inc cmp aaa mov lods loope sub mov pop mov arpl sar mov std cmp jl dec xlat dec xlat aad icebp jne or mov cmp xlat pusha bound push jmp ds inc ret fsts cmp dec xchg outsb jle jmp ret and ficomp (bad) (bad) sub lock shld mov (bad) pop mov mov insl int3 mov sbb pushf aad scas cmp add test test flds pushf (bad) in push imul sub mov push pop dec in lea pop ret cltd (bad) and pop and mov cmpsb pushf mov in cwtl outsl popf cmp sarb mov jno cmp pop and sub int3 mov aas int3 xlat dec or sub fldcw pop inc jo jnp ret pop cwtl xor enter popf add push test out pop mov sbb pop shrl rolb aas pop pop pop jne iret pop insb xchg mov push ds or jp sbb pusha push gs das movsb and test pop rcr sbb cltd out arpl icebp nop push pusha in xchg mulb repnz or mov xor inc (bad) movsl daa pop xbegin sbb icebp mov jb cltd adc (bad) and pushf ljmp clc pop loopne and inc in lret pop xchg mov nop inc mov daa push add xchg jp xchg aaa imul pop mov and pop movsb cmp sahf lret push cmp adc test adc inc (bad) lds push push jmp xor nop mov push js mov pop xchg fadd aam inc xchg xchg or xlat sub mov xchg push xchg dec jg sbb add lock and movsb loopne stos test fidivr mov and push mov ret mov cmpsl sbb popa and testb xlat fisttp xchg push mov dec push xchg mov mov xchg fcoml inc ljmp js das xchg push sbb test mov imul sbb (bad) cmp sub std pusha int3 sahf ret enter mov arpl cmp pop mov pop push xor push dec enter sbb adc and xlat into and add outsl stos test notl mov xchg sbb xor xor mov enter jae sub push call js add sub sub cmc jnp lea lock mov repz xchg (bad) xlat xchg inc jge lds gs cmp inc inc sti jg sbb or test in jg mov fmuls and rcll fstl add mov shr cwtl sti adc sbb jge add loopne arpl add push or cld fdiv icebp cwtl test lea and xor call inc das (bad) addr16 push fdivrs pop jge xor sub (bad) lods mov pop sub push aam cmp or mov xchg fimull push mov rcpps jae lahf push mull mov or or sub jmp in xor and out pushl and push push ror int push or cltd xchg movsl subl in lahf adc stos test lds lcall sub mov dec test enter inc pop jp and add call push in push xor (bad) or jg outsb bound insb lahf push add push jmp and arpl aas xchg push fistl scas addr16 (bad) mov mov adc xor pop (bad) push cmp add rcl mov pop pushf mov cmp fldt lcall push add lock adc sub dec jae hlt nop push push sbb cmpsl jmp xchg and mov lret das test xor sub mov fsub in imul push mov jg (bad) sbbl jge and dec nop out or and lret push sub cmp ret push jnp movsw dec mov pop lea inc hlt iret inc pop cs push stos pop mov xchg ret or ret fisttp mov sbb jl inc (bad) sub mov lret push or dec push and arpl jo cwtl lds xchg repnz cld cmp lret xchg adc sahf repnz (bad) aad in shrl mov lods dec cli cmp pop repnz mov add mov mov insl aaa inc sbb jp inc xor jecxz and inc popf call pop (bad) cmpsl outsb xchg aad push js ficompl mov jle aad mov sub ds ror gs push inc mov or dec (bad) fiaddl cmpsb cmc mov int3 pop push adc dec sbb inc and jecxz sub mov mov test addr16 outsl xor scas mov xchg dec or push enter out cs fs inc dec jns into loop mov push ret aad movsb push (bad) jmp ja das fisubl sub mov data16 mov jecxz push push mov insl xchg inc test aaa sub pushl push sbb popa test negb pop je (bad) xlat pop mov out dec push shl pop aaa iret fisubr call xor popa (bad) mov cwtl sbbb daa cmp push jb lods xor nop lcall shrb push xchg mov sub mov jl or and sahf lock dec sar inc push mov inc dec mov or sub cmp int data16 xor loopne add cmp enter lock (bad) xchg pusha enter push cmp dec into jnp movsb sbb js mov pop pop xchg lahf jnp lock pop jne test push push arpl in cli incl fisttpl daa cs adc sbb pop sbb and xchg je movl adc cmpsl das xor cmp mov cld push int pop imull dec xor dec push adc rcrl xchg lret push stos sarb cs mov popf jb inc arpl data16 adc sbb xlat insl imul sub pop loope mov mov and dec mov (bad) adc scas push push andl cwtl xorb jb inc xchg xor add insl out pusha cmp out mov pop xchg jb icebp and fs ret xchg xchg mov push test xchg and (bad) arpl fwait push jmp jbe jo hlt insl mov jo outsb or out and mov mov loop leave sub lock sahf fsubrs xor aas gs mov lret push mov dec xor pop and and inc icebp mov mov xchg fsubrp repz push xchg sti push xor out push stc test fpatan in mov adc out aaa cltd (bad) into sbb cmp jmp addr16 sbbb (bad) cmp test ret and xchg xchg imul pushf mov sbb mov xor lcall outsl pop dec int adc sbb int fsubs mov pop and or (bad) insl jmp jecxz push pop test fisubr mov bound jb aas add sub cmp push (bad) mov jg out repnz xchg and and jne les xor sub sub mov repz shrl cmp scas aaa cwtl mov sbb inc cmp and faddl enter pop shl cld call jge lds mov sbb xchg cli mov stc jno cli push int3 cwtl jge sub push int or in shlb stos in rorb push out or mov aam loope rcrl push or in (bad) pop pop es mov dec nop div popa test (bad) in jecxz mov fsubrs add lcall mov mov flds dec mov fnstcw in sbb mov add sahf xchg mov sub push gs add cs fnstenv out popf mov xchg mov jbe adc pop lds xor xchg push mov cmp rorl divb outsb sub add jno std mov sbb push movsb fistl rep sbb mov push les adc adc pop aaa sbb xor sarl cmp fstpt rorb sbb repz cmpsb and icebp fidivr arpl das outsl xchg mov inc loopne mov dec popf push mov push or jbe add sbb rclb std or int shr mov pop and (bad) dec sbb sahf cwtl js popf decl test add flds enter ss jl test sbb iret std add mov adc nop int mov outsl hlt lahf ret std mov jecxz orl sarb loop jno pusha xchg gs in adc mov cmp fiadd sbb cmc and in loop xor sbb push dec jge movsb xchg sbb aam out outsl pop ds imul xchg ret sbb add insl loopne lds mov dec scas pop adc pop jbe call pop (bad) or mov dec mov movsb dec jg leave cmpsb lods pop mov adc jl jg xor loope pop cmpsb or lret fwait je icebp hlt or inc (bad) or fnstcw xchg jg cmpb push jnp mov sub cwtl (bad) mov xchg cmp minps mov and or clc daa pop push rol movsb or notb sti popf jle sub cmpsl cmp test xchg mov repz inc in imul cli lret xchg jge mov lahf ljmp adc inc sub add mov icebp outsb leave cmp (bad) ds daa sub jns xorl mov or sub jnp loopne xorl sub jnp pushl repz lret jns fstpl inc (bad) loopne js cld and xor jne ljmp ss aas mov sbb data16 dec mov in dec lods mov hlt ja pop sbb or (bad) jne rorb mov ljmp pop sarb mov dec fstps jb jae sub push sahf cmp sbb jmp dec out dec mov rcrb or movsb xchg scas add pusha or mov cwtl pop rol inc pushf js movb push popf cld orb push pop xor xchg gs or jmp fisubr cmp jae gs jg xor dec adc rolb mov or and arpl test jae or cmpsb fidivl xchg jo in fiaddl inc push fsubrl cld push jecxz mov in pop cmp dec push std mov mov mov mov popf test xchg inc mov loopne int mov sub or std popf sub push aaa mov jae dec inc enter sub mov fnstenv sbb add xchg out pushf sbb jmp add subl adcb xchg dec lret cli fbstp addr16 jmp popf mov xor imul fs adc jp pop int or ret jae std add std ja jbe jg mov outsl inc cmp mov dec pushf adc xchg lret aam mov hlt jmp mull adc fwait test cmpsb (bad) in cmp mov jge cmp stos test mov dec mov mov imul inc outsl ret mov dec jo cmpl in mov (bad) adc pusha out repnz iret dec incl loop pop mov jb mov inc pop adcb inc jecxz in ss divl (bad) sbb mov cmp leave (bad) lahf lahf shrb mov hlt es xor mov cmc imul mov out aaa or loop jno,pt dec mov adc push pop mov divb fidivl fistpl daa pop test adc xor mov movsl aas call pop fsubr sti inc push jmp mov fidivl add xchg popa lret jl jg sbb dec imul fldcw xchg shrl mov mov (bad) push pop pop test cmp mov clc adc dec ret int3 jecxz (bad) movsl cli vunpckhps pop and push mov mov or inc jp cmpsl or (bad) cld mov xor sbb jno dec sarb and fs jbe bsf bswap xor mov pushf btc sub adc add bts pushl mov lea rcr btc add jmp cmp push mov push dec pop fs or popa ficomp js cmp cmc push aas mov sbb (bad) icebp in cmpl sub mov sub es out and and dec ja popf enter or cmp cmovnp inc add aas and mov jp pop fisttpll and cmp dec clc int shlb jns inc cmpsl inc xchg add and push and hlt sub lds mov cmpsb cmp aam clc data16 pop sbb mov pusha pop jle pop test xchg scas (bad) fisubrl adc and xor pop lds imul mov test add mov pushf lea jmp pushf inc sub mov pushf cmp stc and call in lcall push dec pop add mov cld push dec add add and mov mov sti (bad) aad mov (bad) std gs and add fwait add mov mov adc xchg push mov and sub test sbb pop in std cmpsl xor mov popf ret lods repz andl dec push scas rol pushf stc (bad) cld (bad) and or test push das mov jnp iret push movsl jecxz je xlat fsub sub sub add add and ja mov insb mov mov std xchg cli test and jge jo rsm xor xor dec mov addr16 mov xchg rorl mov pop out mov cmp or pop mov cli push and or pushf and xor sub je je fadd (bad) mov (bad) inc gs (bad) int3 sub daa les lock aaa sub pop pop cmpl in lods out sub and jae sbb lock pop bound cmpsl pop xchg push pop loopne inc mov cwtl jns inc lcall dec push cmp jnp xchg pusha movsl mov dec pop xor inc adcl mov mov (bad) lock sbb insb sub push imul stos and adc fsubrs xchg mov stos add pop pop data16 arpl mov sbb stos add xchg int test es stos mov mov mov sub pop push addl data16 pushf jmp rcll mov cmc lret mov push sbb lret cmp add cmp (bad) sub scas es ret fnstcw and jbe sbb mov das sub cmp sbb pop push test fwait mov loope dec sbb cmc push shr (bad) incl dec xor mov sahf pop push cmp iret dec xchg movsl cmp adc repnz (bad) aaa adc pop js pop out and cmp addr16 call jle scas nop mov test mov cli movsl ja fcoml xlat lods xchg jno pop and mov adc jno cs fsubrs arpl stos cmp mov adc xchg aad and (bad) rolb fwait lock sahf add adcl push sub in cld inc pusha pop dec xchg sbb in (bad) leave mov jno dec test push or sbb mov ret loope sub wrmsr add pushf stos xor movsl fimull pop cmpsl ss dec xor mov pause and xor sarb push mov cmpsl mov or push insb repz mov jo adc lret imul sub daa xor fwait xlat pop out mov jl mov mov mov ret aam xor cltd movsb fs mov sbb lcall scas or xor inc pop es enter stc inc stos jne stos jae push push cmp cmp inc (bad) and movaps add sbb stc xchg mov add fidivl into in movsb cli mov dec add out pop and and int faddl inc sti jg push jmp aas test in fistl out das jo in sbb inc ficoml fcomi aas int (bad) pop add (bad) movsb cmp movsl pusha mov std pop inc push test int3 mov dec out mov orl or (bad) lock dec push jne sbb push push call mov outsl aas iret cmc popf xchg adc daa or scas ror or cmp mov mull sarl jnp push or sbb inc cli xchg aas adcb sbb jge jo lock mov adc jns mov mov (bad) nop into inc inc sbb xchg std roll orb add fstpl cmpsb js mov mov ret and cmpsb adc add ljmp insb pop jno sbb push sub outsl pop fistl inc mov push cltd shr jnp mov mov (bad) (bad) std data16 xchg adc adc sbb shlb fsubl outsb imul jo dec ds xchg dec out nop mov xchg and repnz pop lods aam sub inc jmp scas lock (bad) fcomps bound jmp bound mov mov in in repz or push cmpsl aas lahf stos repz sub lahf test cwtl push xor dec mov sub lock sti inc fsubr or sbb xor hlt ret xor xchg jl mov lret pop addr16 scas inc insl js mov xchg mov jbe aam lcall insl adc test int3 or in fldt mov xor fs mov mov pop or or hlt jmp rcrb lds adc arpl inc mov push or call jne sbb scas iret adc pop xor sub lods rorl in ror push scas cmpl pop and ret jg xor push daa push sub jbe jp mov cmp push mov pop adc xor inc cmp or (bad) push dec mov dec mov inc lock (bad) fildl xor cmpb sbb scas cmp mov mov push xchg clc addr16 mov pop test popl sarb sbb pop scas xor rorl sbb mov mov mov out xor rol fldl inc iret rolb xchg or insb fmull pop out rcll lret and sbb cmp xchg mov nop mov bound inc das mov subl xchg or les push xor lahf push repz hlt sub and xchg nop lea mov aaa adc and test jecxz fnstsw movsb pop adc lods mov mov push jbe shrl mov hlt lret imull scas (bad) mov jno inc or cmp xchg js mov movsb mov mov out mov outsb xor lret lds sub xchg pop out mov popa fldenv xchg cmp aad repnz and addr16 mov and push lods and out icebp jp adc xchg mov iret lgs jne jno inc ja sub lea jne inc (bad) icebp (bad) icebp bsr mov add bts sar test sub movzbw not mov pusha jmp adc xor cmpsb xchg jle mov pop cwtl insl or jge fnstenv popf loope sahf add inc jno jge mov scas insl xchg mov cltd sbb add fwait push dec pop or sbb in push mov enter iret jo sbb pop mov mov loopne (bad) mov aas add rcll sub gs mov loope pop popa jbe fcmovb fisubrl in cld xlat lahf aas es add movsl fldcw adc xchg jb push add and int3 inc insb inc sbb lods push in dec xchg nop out dec xor inc cmpsb cmp inc sbbl add pop imul and std or inc subb repz (bad) or add int arpl mov adc jg push fs and scas jp leave shrb pop loope leave imul lds xor aas lahf mov mov std loop xchg xor mov (bad) mov add lret es enter test lods jae lcall mov inc jge fbld hlt (bad) cld cmc adc and pop and bound sbb xor mov in xor cld ret xchg enter cmp and (bad) enter xchg dec inc jp and jge lods push mov push int3 (bad) and dec in std popa stc movsl push fiadd repz data16 cmp inc popa out push xchg insl jle mov in (bad) ss test pop out jo aas (bad) xlat mov movsb xor adc repnz inc cld call push (bad) sbb mov mov mov idivb rorb pop lods je inc inc mov repnz sub rorl mov cwtl test or and jg repz inc std or push push push sbbl in lret in jb test jnp popa adc (bad) in mov mov jmp sbb or or inc into rcll sbb fmul cmp mov xchg enter push je mov (bad) rcrb shll ret push cmp sub test jl loop outsl ret insb roll adc cmpsl popf mov mov jmp (bad) mov ja fs push xchg loop ret icebp adc add test jl add sbb cmpsb pop xchg jae lret imul shrl pop add push test pop jno inc movsl ljmp bt clc movzwl shl mov pushf add cmc clc call pushl test jmp add add inc adc adc adc sbb adc mov add add add mov add pusha pusha push mov push pushf pushf lea jmp mov lret sar pop addb int test jns sbbb out scas arpl adc nop out inc sbb clc inc movsb jnp mov push xchg inc jl bound repnz push mov out xchg aad pop xchg mov pushf cwtl es data16 out mov jecxz enter fsubrp pop and push scas mov xor insb int3 test inc or jmp inc insl push push sbb adc jae mov cmp xchg aam dec je jns mov pop in push mov xchg xor pop pushf jno aas js push sub loop icebp xor notl push rcrl mov push sbb repz lcall aam xor (bad) jbe aad pop mov cwtl pop mov mov jmp jb sahf pusha ds push mov inc sbb pop push cmp imul cmpsl call flds (bad) movsb jbe sbb inc jb xchg movsb insb js push js imul mov add into push fiaddl nop mov sbb mov clc push dec lahf aas cmp inc int aam xor push push std adc mov lea imul stos push mov push inc sbb cmp mov or nop cs or mov shlb jno sahf insl mov cmp inc add pop mov leave rcll repz (bad) xor adc jl pop rcl dec call jecxz jl and inc (bad) jne cmp xchg xchg or mov mov nop pop int std push ds dec sub dec jge mov mov int3 adc mov xchg mov (bad) ret dec xchg dec mov lds mov in test arpl pusha pop xbegin (bad) dec pop jno cmp call pushf sub sarl fsubs mov icebp scas pop mov xlat inc enter in rep repz mov addb nop std jo scas rcrl xchg femms cmc aaa sbb cmc dec add fwait (bad) cmc lret cld xor jmp loop ret enter jmp sarb push cli xchg pop (bad) or inc push cltd cmpsb out (bad) jb in mov jp push mull subl in xchg cmpl jmp (bad) loop cmp insl lds outsb jg xchg mov repz (bad) mov mov adc lahf mov sbb in add jno cmp inc inc cmp push (bad) sti inc idivl add jo xchg dec mov xor push push pop sbbl pop arpl test popf xchg das or pushf pop mov inc mov outsl mov cmp pusha pop jo out inc push lcall cs adcl jg jmp mov pop xchg jecxz add jl push icebp movsb pop cmpsl lret inc add sbb or push cld ret addr16 dec jle jle loope scas mov jnp ret adc xor into dec scas add je pop mov inc jmp clc out icebp or cmpsb or mov adcl (bad) mull cmpsl inc pushf xchg mov mov iret rclb test cmp cmp les inc push dec xor cs insb add stos xor mov push xchg fadd daa add test dec movsl jp cmpsb push out pop inc pop es jb mov hlt lret fnop decb sbb sbb sbb cld pusha in jb push xchg (bad) fsubr push sub bound jns adc jne ret pop test mov int add adc push or jecxz adc dec ljmp push jecxz aam hlt push push insl shll loop out out adc in pop add xor push and add sbb fxam fucom and mov rcll (bad) fdivs cmp test cmp jle out pop (bad) pushl and xor rcrb and inc sbb mov imul ret shll cs mov stos lods push and xchg mov mov and sub fcompl ljmp jge xchg scas xor sbb outsb mov divl jb mov cltd fwait mov sub lcall xchg inc fistl mov cmc push sbb stc pop pop insb xor jae cwtl sub jp xchg sub aaa dec hlt lods lds cmp lahf sti lods fwait outsl iret aas (bad) mov mov mov pop lds push cmpsb fldcw xchg sarl cmp xchg movsb push fmul xor aas lds push stos cltd mov sbb (bad) stc xchg jno fistp fsubrs repz insb dec mov lret fmull cmp and xchg in inc mov into fbld (bad) lods mov push test out test or adc jo fmull pop pushf setbe push call pop pop push lret mov out push nop out push sub cmp push inc push dec cs dec dec add xor movl pusha lea jmp ljmp or or pushf add push (bad) mov pop fisubr push gs icebp lret mov aaa jle sub jno lahf sub inc push mov mov (bad) scas xor addr16 mov jno add inc in and stc fnsetpm(287 or sub insb outsb adc test and xor and jmp fnsave (bad) sti js xchg lea mov sub and sarl scas addl xchg mov icebp cmp pop shrl mov loopne sarb adc pushf and sbb les cmpsl nop outsb inc ret iret nop stos aam jno cmp pusha aaa push (bad) fild mov cltd sarb ds mov add xchg sub in push inc movb or xchg inc int dec add mov outsb (bad) add data16 sub sarb add dec or inc sub cltd inc xor cmp pop js inc jbe rcll dec mull dec push test add add mov lcall mov dec les lea jnp xchg aas inc das addl or push aas jp and sub aas jmp jne lret push or incl leave out cli add push lret popa lods push inc imul push mov sub (bad) dec pop jnp pop mov stos notl sub or xchg mov dec mov inc insb pcmpgtb arpl dec (bad) (bad) je dec pop stos daa lea push (bad) (bad) lret sarl lret das mov repz stos pop rcr out test lcall add push xchg cmpsl ret ret push sbb dec cltd int3 xor js fs push insl push faddl addr16 lret movl xchg push mov addr16 push sahf mov mov sub xlat dec andl shlb inc jbe adc addr16 es aaa (bad) or insb or les dec inc popa sti decl mov inc hlt inc int push cmp or xor push add loopne addr16 int3 mov fistl push stc mov lret repz inc cli sbb nop dec inc inc fnsave int3 lea xchg ds dec mov pop add mov push daa or (bad) push int push xchg nop aas adc add push pop pop stos mov (bad) (bad) (bad) out test (bad) les into push pop fstl jl loop out hlt roll inc xchg (bad) out and cmpsb (bad) xchg pop insl xchg ret imul lret ret xchg fistpll int3 ret dec xchg jmp push sub gs in hlt inc incb sbb xor push or mov fimull mov arpl shr jae dec outsl int3 rorl jns arpl ret insl rorb and out jns test rclb test mov cmp xor fbstp mov and inc mov jae jecxz mov enter enter inc xor pop inc add push cltd cmp test daa sub jnp mov rorb into inc mov jbe pusha sbb lods test leave pop xchg mov lock fidiv cs jle cmp mov pusha add mov or dec loop add dec mov dec mov inc xchg xorl or xor xchg push (bad) scas sbb dec inc xlat pop dec sub clc test mov inc xchg inc xchg xchg sti dec out mov xlat sub imul cmp fcmovnbe imul into xlat neg aaa dec fcoms push jns fcmovnu inc cmc dec sub fstp mov inc (bad) push dec dec loope ror dec xor push es adc add pop fmuls aam in push xchg or jecxz scas dec (bad) push jecxz jl dec mov pop ficomp imul cs mov inc nop pop inc xchg xchg jecxz dec clc aam dec sti out in inc inc cmp sub sub push xchg shrl adc push scas imul jns add sahf adc les fwait scas cmp mov push (bad) and inc enter cltd rolb hlt mov push mov outsb in rorl push or mov push push sub (bad) incl sbb add or dec scas gs inc add (bad) mov dec and loopne arpl aaa adc push push ja lret and movl xchg shll push pop add das mov aam int3 sub xchg jb pop shrl cmp movsl daa mov scas out cmp insl (bad) inc jmp shlb pop pop cmpsl xor dec aam push ds lret das (bad) xor sub sub push and fildl mov inc inc dec xchg test aaa xchg and jg gs enter addb sti ret dec fidivr mov dec pop iret mov inc scas jg xchg sub jmp pop inc mov daa fcomps adc dec jmp cwtl notl fstpt dec xchg or cmpsb or push mov test and fcomps pop sbb or push enter data16 nop fadds inc xchg xchg and mov dec mov mov pop push sbb push xchg pop inc cli jbe inc cmc or stos xor xchg das mov adc cltd je sub scas jecxz xor jp jb push imul xchg xchg push mov sbb pop les add fsubrs mov pop sub out cwtl pop loopne (bad) (bad) (bad) int3 loop jnp les jge xchg add mov sar or daa xchg fimull outsb sbb loopne (bad) cmp or daa out dec inc and inc andl cs push dec outsl mov xchg test inc lds mov inc fldl push (bad) xor aam outsl dec push xchg dec addr16 jo push les popf jae or int flds fistpl jp int mov inc cmp das push cld dec addr16 jge int jge mov mov jmp (bad) sarl add addr16 mov dec lret sbb aas dec sti inc push mov jp imul cltd lret inc pop push ljmp dec cltd sub aaa je mov inc arpl jl mov mov pusha rclb mov push mov test dec int3 lcall in mov inc pop mov lret pop cmpsl cs test mov arpl pop imul daa pop lods or ja fdivrs mov push (bad) out lea fsts stos jnp mov subl mov inc das jge inc ret xchg cmpb mov dec int ret cmp sub pop inc adcb lret push push dec jno,pn cmpsb (bad) orl pop xchg popa push lret jne mov push pop popa test pop (bad) mov aaa shrb xor xchg dec and ret and je mov mov add jmp push inc dec gs jno cmp adc xchg mov cltd mov mov outsl sub dec lock fucomip jecxz ret cmp jne inc lcall jnp arpl subb pop dec push dec push std sub mov loop pop shl xor cmp outsl lret add and inc add and mov imul sub jnp sub mov jl sbb je insl out adc leave jnp cmp adc inc inc js jno push rcl adcl lret stos gs pop cmp xchg and and sbb gs fldt sub add xchg lret int mov mov adc repnz testl stos popf pop lods repnz push inc xorl push lret clc jo pop inc ljmp int push rolb int loopw jge fbstp mov or lds mov adc sub cmpsl stc jnp pop add or xor dec or xchg (bad) (bad) push cmp and daa inc xor inc jnp cmp xor xchg les ja outsl fistp mov mov push stos les sub pop test push mov xchg ret mulb stos dec adc cmp imul adc rorl cmp xchg mov lret gs sbbl cmp add sbb push mov add rorb inc int3 mov dec (bad) jb xchg dec out fbld fdivrs rorb adc fistpll push into mov insl push xchg mov imul inc pushf imulb or dec sub loope dec nop dec arpl cld add inc inc ret mov cmp in push sub outsl ja fiaddl sbb and pop repz or les mov push (bad) dec test cmp add (bad) mov fmul fucom cwtl push adc insb scas std in xor add je and mov mul stos int3 sbb call adc push sub outsb pop lods sub mov mov push test or inc aas jecxz jge cmp fild jecxz movsl arpl jbe mov mov push (bad) outsb dec pop ds icebp add push and subl lods test test mov shll ss xor cmp or rclb xchg adc and jle out jns leave cmp addr16 dec mov or mov dec lds jmp xchg pusha lods add sub add pop sbb lret pop xchg mov movsb test lret rorb lret call dec push xchg xchg rcll nop add repz cmp imul adc loopne dec call ret or push orl inc std es mov pop sub out xchg insl xchg dec add inc mov adc dec pop xor mov (bad) and int mov jle dec dec add dec xlat inc pop das ret mov pop dec aad imul sbb pop rcll fiaddl int3 push xchg hlt pusha lods xor dec xchg push addr16 fildll jnp sarb sub scas or sub jecxz icebp rorl aad jns (bad) ss arpl insb in mov sarb push daa adc out mov into cmp addr16 aad mov leave roll add push fcoml adc adc mov inc pop (bad) push dec add (bad) jg imul mov aad (bad) hlt bound adc cmpl sbb pop jo and fadds pop pop xor (bad) pop xor mov int3 in addl cmp into jge jnp in fildll mov jae jl sub test mov lret popa inc daa add addr16 mov fisttpl gs push addb in xchg ljmp test insl xchg rorl or inc push je jae out pop sub xchg stos sub inc push xchg xor stc or push sub mov mov fucomp lea sbb cld and dec xchg mulb inc mov int jo jl (bad) loopne fs pop dec sbb push cmpl dec ret xchg rclb stos inc inc or int3 mov out fs (bad) test lock adc ret push sub stos xor pushf jge out jge cmp inc dec sahf or push pop and sub or cwtl cmpsl rcll xchg lahf addl je dec xchg int3 xchg (bad) adc mov push cltd mov jnp push fdiv insl arpl (bad) cmp pop pop sub dec dec push lock or dec sbb outsb (bad) pop sub mov mov in xchg sbb sbb jo and stos add dec call jmp xor movl pop scas mov add loope inc ret add aam cmp pop lret push mov add dec xlat (bad) dec sti (bad) repnz mov sub jg addr16 cmp stos xchg add imul or xchg dec pushf arpl add imul in sub pusha sbb mov out iret xlat mov fistl out mov ret push mov dec dec sub push mov addr16 mov inc xchg mov aam int3 ss or adc mov dec sbb push adc int inc mov imul pop mov push sbb xchg xchg movsb inc sub fs ret inc mov inc ret dec cmp outsl (bad) insl dec out mov push idivb cmpsb into pop lods cmp lcall push push ja add sbb adc aad cmp shll fcmovnb dec adc sub dec dec test or stos xchg enter or and cmpsl out xchg (bad) je out ror mov pop sub and scas hlt jne fstpt mov imul (bad) in add or pushf push shrl cld jnp xor out jbe outsl sub sbb loopne decl pause cmp enter imul inc std popa fidivl imul jmp dec pop cmp inc int3 mov push inc jno stos push sbb cmp inc push add push and movsl push inc (bad) and ljmp lcall xchg mov adc push int3 sbb int3 repz mov sbb mov or fisttp nop sub enter adc push pop xchg xchg outsl xor lret (bad) xchg mov es outsb add dec mov aam push adc cmp sub lea into inc or sub imul shll cmp inc sub inc jne (bad) (bad) aad arpl stos gs (bad) push xchg push jg adc or cmc in lods cmc lahf leave jge outsb dec add lods push (bad) (bad) cmp mov int3 sub addr16 aam movl aad mov cs iret add push fistpl mov lret fstp int inc fbld test movsl cld mov dec dec xor xor and into mov inc mov lcall outsl mov je push call les pop enter out loop push (bad) dec in ljmp xor (bad) xor ret idiv push lds repz int mov stos dec dec pop mov mov sub inc std cmpsb out cwtl push incb sbb and in sub sbb sbb add ds or adcl cmp rclb push adc mov stos mov pusha (bad) cmp lds scas jg stos inc pop imul jo movsl es imul pop cwtl loope cmp and and dec or sarb ret inc lock repnz sub dec test test mov or or mov lods subl or (bad) pop or mov sub test sub pusha pop mov arpl insb or add add das fildl and push adc cmp int3 sub push sub jecxz push inc add arpl das sub jb sbb push je lcall addr16 sbb adc fild xchg loope,pt scas pop popa cmp and out test aaa xor stos pop popa fldcw cwtl dec lret adc fwait sub jns movl push cmp or enter mov pop xchg push je xlat cmp dec push stos push sbb jns mov cmp nop aas (bad) pop int loop dec int3 xor in jmp fsts mov fnstenv ljmp dec (bad) das aas push xchg or les cmp push mov jns mov sbb punpckldq mov fcmovnbe orl push jg stos jnp pop jae hlt jnp (bad) movsb jbe sub test cmp or (bad) rolb push cmp and scas cmp xchg lods pop cmp rorb dec adc dec dec mov jmp cmp lea pop sub and sub add mov rcl jg or push sub fnsave arpl add inc jne addl push test iret push subl adc cmp jae inc inc adc lds or insb add sub out mov dec cmp daa aad pop fistp jmp push dec movsl xchg sub pop std sub popa mov push push data16 call fist in shl mov popa add ds and inc test mov sub inc adc je push pusha inc adc and pop pop or adcl sahf mov je icebp and sub sbb mov and fadd outsl jne arpl sub inc lds dec push into mov nop fwait xchg dec xchg inc push insb adc push adc out mov sbb add mov xor mov fiaddl mov fdivp subb xor cld xchg mov pop pop pop pop or adc xchg scas push cmp xor daa out pop push adc stc pop ret sbb add jg mov xchg (bad) pop inc fwait or imul fcmovu cmp mov inc sarl rclb pop vmovaps movsl xlat jno jl push adc jmp cmp orl sub dec mov ret test insb (bad) lret pop adc (bad) jns shll vpandn mov push (bad) cmc cmp sbb inc loopne xor jbe and imul and add sub or xchg dec dec jne xor fs mov imul in mov ss push les cmp call int3 (bad) adc xlat adc jnp in fidivl ret in stc jno ss xchg movsb subl mov das sbb pop imul popf xor lahf mov xchg loop cmp or or or ds xor (bad) mov dec jnp ja insb sahf xchg clc iret movsl cmp mov xor lret lret sub nop xor ja pusha xor popl jns inc loope nop rcrl adc pop cmp mov rcll jns xchg push mov mov cmp mov aaa pop cmpsb sbb mov jno insl sbb stos xchg call and cltd pop (bad) outsl notb or clc aaa cmp rcrl jg arpl cmp inc subl rcrb aas mov dec mov xchg cmpsb mov (bad) mov pop or (bad) mov adc push das aam into movsl lret adc ror add adc dec cmp jle mov sti mov lock push push out inc cmp mov int3 test push sahf xchg je adc inc sub js sub in cmp clc out pop and cmp add fbstp sti fiadd sub gs xchg dec xchg fninit xchg les lds add or aad cld shll add jle (bad) str sub xchg fstpl xchg (bad) (bad) das jl (bad) add mov (bad) and das xor lret pop test mov loopne daa ficompl push (bad) xor hlt adc test cmp stos dec sbb repz aam (bad) mov sbb std pusha ret lds lret or sbb dec xchg push or ss cwtl xchg lret outsl jecxz add fisttpll test and cli xchg or inc (bad) xor pop dec or sub xchg inc sbb or adc xor pop popa pop adc mov movsl dec repz jns rol and adc mov or push fdivr test adc xor mov xor les arpl jns inc dec inc xchg xchg cwtl pop and outsl imul push adc pushf outsl mov cs push call and (bad) out mov addr16 jno cmp inc stc push inc sbb and aas mov pusha jmp repz or add cmp sbb jg ds dec je enter scas cmp sub push addr16 pop xchg pop mov sub push mov mov mov into jb inc iret adc dec aad fs insl sub lea mov or pop cmp dec pop push loop adc jl or fsubl add loopne das sbb (bad) in xchg fild cmp sub dec mov test stos je jge insb (bad) test jns test lcall out dec lods sub add testb popf dec add dec dec into or mov sbb push stos imulb (bad) lret xchg lcall push add das sub inc hlt sbb test stos adc fldenv or xor ret es cs mov cltd inc inc stos aas dec ret sub stos xchg sbbl xor xchg add sub fidivr aad in mov lret das jmp cmpsb push sub mov and lret cmpsl andl xchg add sub sub add cld pop sbbl lret xchg lea sub arpl xchg sub xor je int3 lods (bad) sbb sti jmp sub insl add outsl cmp jnp jl sub push mov lret mov adc mov mov (bad) push popf dec lea or inc cmp sub push sub sbb lret jg xchg arpl sub int3 lret jae enter pop xchg push adc (bad) xor cwtl je xchg xchg sub inc stc push subl fild int3 push xor inc insl fmuls xor pop fs fwait sub ss ret fsubrp pushf cmc mov jns jo sub fcomps pusha lods iret sub push jne sti cwtl (bad) lahf ret test lea loope push arpl das mov test adc sub jnp xchg xor std push fs dec xchg cltd add push out test xchg enter mov aaa sarb push dec inc int3 mov push (bad) cmp lret fist push je aad mov sahf push jb insb repz inc push arpl cmp adc loope fwait or gs jmp imul and cmp in out push jno cmp jmp push or addr16 out pop add push sub cmp push dec jl aad and and sbb jmp imul outsl add or xchg jns push (bad) jp iret lods stos test lds push sbb lret cmp das fist dec test mov inc inc jno ja or dec inc pop adc jnp inc les dec dec dec dec inc jno xor dec push loop mov lea dec dec stos inc inc dec nop outsl push subl ret push ljmp jle repz jg cltd xchg mov push xlat dec push adcl push jl push or xchg pop pop sti bound pop rcr adc dec push dec addb adc loope push xor mov dec pop mov insl mov fisubl mov vpor pop jg into pop imul dec movsb adc loope add (bad) and jne mov in mov push lock lret pop xorl lea aam push xor adc mov shr ss inc loop sub (bad) sub popa dec jge mov adc daa fadds mov xchg sub push outsl xchg repz (bad) dec (bad) push fiadd mov stos push dec xchg xchg lods leave pop cli pop or mov adc pushf cmp add sub fcmovnu arpl or call dec dec into add popa loope lret inc push testl lds jg sub lahf mov cli imul jne and sub repz sbb dec rcll rol imul cli out pop lret sbb aas dec dec pop ret jbe inc dec xchg fwait add mov mov inc or push aas adc (bad) ljmp xchg sub hlt dec lret aaa std ljmp in adcl xchg pop ror sub adc pop pop and jno or add jl jle mov imul jo jbe call into push mov sti repz mov cmp stos sbb pushf dec loop stos fisttp xchg idivl xchg mov std inc pop add roll lds xchg test loopne stc mov cmp inc (bad) xrelease mov fcomps pop inc jl push aam gs inc int3 mov setns idivl pop aaa mov in mov dec lahf out rorl loop dec push inc data16 sub mov mov jae (bad) movsb cwtl inc jge xchg mov sbb xchg inc insl stos pop jnp test jno mov nop or jecxz mov int3 xchg cld and push push nop je out fnstsw xor jmp dec mov shlb xlat loop lahf xor and xchg aas pop (bad) mov add dec popf das stc mov paddsb push movl cmpsl jge out xchg mov mov stc cmp inc xor jns call inc and or dec inc add add bound cmp inc cltd sub jno xchg (bad) pop fcoml sbb dec (bad) ss jne cltd aad lea ficomp xchg mov cltd lret push stos daa sahf jnp mov mov push mov addr16 rcrb xchg adc dec std dec insl sbb jae es cmpsl mov hlt addl pop add push xchg mov inc add addl sub push fildll sub adc sub inc pop aad cmc push aad sahf cmp jg push (bad) mov cmp lods outsl (bad) dec js dec jge xor dec stos (bad) cmp sub cs or push lds jae arpl movsb iret push push add arpl or shrl clc sar mov mov sbb lret add sub sbb add lret data16 or or out pop jmp dec push rcll int3 jae push lcall cmpsb lock sbb jnp (bad) imul push sub aam push pusha push jno test (bad) repnz fwait jecxz imul pop inc mov test push cmp dec stos mov mov jae adc sub lds xchg fist jecxz int dec inc dec mov imul push inc or cld pop lcall mov sbb pop mov push repz ret fs rcr fstpt push (bad) jmp inc cmpsl cmpsb jae imul sub (bad) shrl mov mov jne stc dec mov inc int icebp pusha adc mov loopne jne inc pop add (bad) int push ljmp cld outsb and fnsave sti dec into int3 xor cmp dec mov sub dec outsl ret xchg aam (bad) dec sub fisubrl data16 decb imul (bad) jb repnz push jo mov mov clc sub outsb add or jno bound pop es or test outsl sub mov mov arpl xchg cmp dec shrl xor xchg mov scas test in pop repz sub xor sub mov rcrb in jbe dec mov (bad) pop fwait dec or or push repz addl mov xchg sub (bad) dec int3 xchg lds das loopne sahf sub mov xchg push adc aam pop into leave aaa pop (bad) out cmp aam push rol xchg addl arpl cwtl (bad) jo cmp int les orl subb test scas or leave xchg (bad) aad or shlb ret mov fs push movsb push shrl xchg jae sti addr16 test (bad) sub or jnp dec movsl pop mov stos xor imul jge or mov push jbe aad mov std xor pop daa lahf jecxz push dec stos dec cmp sahf (bad) aaa xlat (bad) xor jb lahf fdivl ja in jmp or sub imul insb fs ja cs int3 shl cmpsl sahf sbbl mov xchg icebp push xor cmp mov fs enter fidivl sub inc dec or loop std repz subl in jecxz in inc repnz lods mov call repz pop es std fiadd mull push dec into (bad) pop mov inc cltd in jmp hlt aaa push pop mov mov in sar mov cmc push ret pop and (bad) daa cwtl dec into dec in addr16 jae cmc xorl (bad) cltd cld mov jecxz lcall in lret push pop cmp cmp xchg push or (bad) out popa js add loop into bsf fs stos notl xlat fcmove lret dec insb cmp rolb movsl aaa xchg jle out xchg (bad) ja adc daa or lret xchg mov adc jecxz sub nop jl push out les and mov inc sbb movsl (bad) enter enter je sub sub int cmp sub pop ljmp aad cmp sub mov sub fbstp jle xchg dec scas dec lods dec jae adc lahf mov cmp fstps aad sbb inc push mov xchg loop dec iret subl mov iret pushw sbb cmp pop lds int3 or dec rclb stos lds or inc xchg fstpl cwtl cmpsl pushf dec xchg loop fs sub sbb subl scas dec xchg daa (bad) (bad) (bad) call clc movsl jne mov mov mov xchg add push mov adc ja mov in push ss cli jle or mov adc mov mov aad mov shl sbb pop das mov jg sub mov stos inc pop mov pop enter xchg cmpsl cmpsb (bad) jnp aas mov dec push xchg xchg ja and aaa ljmp inc mov ja xchg stos add sub dec push call push pop mov sbbl gs dec mov ja leave push sub enter jl mov imul je or inc cmc mov roll fild (bad) lea pop std scas and out add cmp cmpl testl add iret int3 sahf mov or test adc mov ljmp mov jae js rcl sub (bad) clc pop cld xor out adcb ret rorl dec inc out clc int push (bad) (bad) pop inc cmpsl mov and lods push xor lock dec mov call dec xor push mov lret or add mov ret xchg fimull insb xchg leave ret imul xor popl pop das aam out leave outsl ss out add or arpl mov jae addr16 (bad) (bad) fwait sub adc xchg xchg rcrl (bad) mov sub mov add cmpsl dec loope into ja xor out fwait insl out mov sarl adc ss stos push xchg movsb daa jns jo lds xchg or (bad) pop fsubrs mov and mov lahf jns imul mov jo xor inc lret pop xor pop (bad) dec fisubl inc xchg sub add aad pop jb imul pop out dec jno sub mov dec push shr dec jg inc rcr stos sub or jns cs jge add negl cmp scas mov sbb push dec sub (bad) push mov stos jg jge mov iret test ja jnp mov push sub aas mov test repz fsubrl pop xchg fsts (bad) fmull push inc dec loop out add (bad) lods xchg push das daa mov jecxz (bad) jmp lock in dec push pop jnp dec inc dec pushf cld notl add mov xchg pop div aaa test dec arpl xchg mov pop add mov mov adc and xchg sbb inc cmc jnp faddl cmpsb push sub mov jbe mov push or int3 (bad) xor jmp add popl pushl cmp (bad) dec add pop add sub scas adc sub fiaddl or ds movsl xor cmp leave stos push subl cmp add xchg mov bound xchg sbb jg sub xchg loope stos jae dec sbb mov dec sub inc int3 inc cli (bad) and repz dec cmpsl jmp dec lret (bad) lock test pop repz mov lds (bad) mov (bad) sub pop add loope negl dec fstl popf push adc sti cmpb sub xchg daa outsl dec xor add and pop dec (bad) (bad) sahf mov mov mov lods inc cmpl outsl mov ss stos or pop xor pushf lret mov aam arpl sbb add cmp cmp insb div adc jb jne mov fnsave sub cmpxchg in dec sub xchg dec fbld fcmovbe or pusha pop rclb or mov dec mov inc add add sub addr16 jbe or jecxz fwait mov mov sub in dec insl pushf jecxz (bad) in ror cmpsb arpl stos ret or push mov sub jno inc pop xchg add mov adc xchg lahf sub ret stos icebp mov add imul inc push adc nop dec sub cld push cmpsl orl mov into dec add xchg dec aad cmp repz loop adc or dec lcall and pop js fucompp mov mov mov pop xchg xor sbb int3 ret sbb add iret add (bad) mov xchg xchg outsb rdtsc roll ss popf push loope (bad) mov sub stc dec push pop mov cmp data16 (bad) hlt pop xchg stos sti into cmpsb and mov mov imul sub pop shrl outsl cltd movsb adc (bad) das dec jle inc mov les jl (bad) mov je pop rolb sub or cmp mov cwtl add in lock leave sub pop cmp test ja lret inc mov xor test test or andl cmc inc lret xchg push cmp xchg xchg (bad) mov and sahf dec or cltd xchg int3 xor add adc bound mov (bad) inc sub ret loope fist aam xchg daa es sbb sub (bad) fdivs sbb cmp cmp sub dec ret push dec aad data16 imul mov xchg stc push mov add ret jmp or cmp icebp dec setae xorl iret mov repnz aad xchg daa dec outsl fcmovnbe enter iret loop dec sti inc cli inc aad and (bad) push xor or fidivrl inc cmp imul xchg std xor rcr adc popf aaa add rcl arpl lds ret push repnz and and or popa fmull inc ret outsl xor inc xchg push sarb shrl mov mov and inc cmp jns xchg rclb inc push or test lods push mov pop lods ja enter (bad) mov push cmp push jno test dec pop imulb mov cld inc mov or mov inc pushf push mov cmp mov out vpshufd inc inc jg and push push test sbb fucomip mov jle and jecxz sub jmp xchg inc sub xorb mov inc loopne or mov pop push xchg outsb jg jns add jmp pop dec or ret cs pop pop inc jle cmpsb into divb inc jl mov mov mov cs mov pop inc xchg inc data16 push cmp dec dec addb adc jge inc cltd (bad) ret shll inc mov lcall jno (bad) pop es stos jmp idivb cmp mov inc sub mov leave dec int (bad) jl (bad) sbb cld aad jns mov das adcl arpl flds imul inc push push aas sbb cmp roll sub addl mov shr fwait cld add fwait mov push and lret jne push mov stos nop ljmp add cmpsl mov add xchg add lret sub push fistp dec pop sub mov (bad) pop xor out cmp aad inc lcall andl xchg push fcmovb loop call push mov movsl xor push jns sahf ljmp pop dec loope or mov sarl (bad) bound jo inc data16 add pop mov rolb cmp (bad) lahf (bad) mov sub pop out mov pop pop stos lds (bad) (bad) xchg or inc pusha dec inc sub pop mov jg pop mov aad inc mov jnp cmp test mov xor enter mov lock scas dec sub push xchg inc xchg push mov push push cmp mov cltd and arpl imul push mov inc inc (bad) icebp add in add xor mov pop ljmp jg pop xor dec pop cmp cmp cmc add aas dec stos mov lds shrl call sbb xchg imul inc ret xchg xchg outsb rol arpl jo push sub insb dec add inc test inc inc enter aam xchg jae push xchg sbbl jns adc sub and std es dec ret sub dec shr sub jmp sub dec xlat sub dec mov jg (bad) arpl (bad) dec cmp les andb aaa mov hlt repz mov sarl jge sub hlt add mov arpl sub sbb mov inc outsl es cmpsl push jb and stos inc cli adc dec insl imul jle mov (bad) mov jmp inc xchg addb (bad) dec outsl or adc test xchg jne fstps xor inc enter aas dec (bad) repz push dec sub sub (bad) in lret outsl inc rolb (bad) aaa push fcoml lds (bad) fnop aad inc cmp call mov mov lret fnstenv fadds add cmpl jbe cmpsl mov mov jb ljmp xor inc movb aam cmp mov shl insl (bad) xor fild fmul in sbb sub andb popf loopne sub out push inc popa insl dec out push xor add or xchg mov mov outsl ja aam add int3 dec mov xor addl int3 add sub push cmp sub cmp or xchg adc test add aaa test dec rcl jle lahf cmpsl arpl inc sub mov out or fldcw mov mov inc inc mov rclb es push lds movsb fldenv mov js mov repnz pop std das addb mov adcl pop dec lret fldl or cmp xor psraw sti xor (bad) repz lea in adc test push adc clc or fstl test imul pop inc insb push jge andl xor pop pop addr16 inc (bad) fmul cmc mov and and fiadd outsl dec imul js and inc jb inc lahf loopne sub push (bad) into je sbb jmp loop (bad) (bad) inc ljmp mov lret mov mov loopne cmp cmp sub gs xchg inc call push xchg mov xchg ret adcl paddb inc mov sub lds repnz shrb test dec or aas mov std mov inc pushf lods pop dec pop jns or push (bad) push (bad) leave inc mov ljmp inc sahf jmp popf in cmp xlat inc cmp je (bad) adc inc cld xchg inc std lret ss cmp ret xor aad loope and inc cmp sbb stc inc sub (bad) push sbb addl ljmp xor mov (bad) sub dec lret or xchg neg push nop fldt dec ja cld test and xor pop mov aam addl sub (bad) (bad) out xchg xor push (bad) push sub out adc sub in mov xchg call jne (bad) mov jp inc jae jb jns mov fcomps into mov add mov insl enter lods sarb mov xchg in lds out adc stos (bad) push add mov jmp push outsb loop push sub push or fnstenv test adc sub pop (bad) dec add out movsl inc fist dec pop sub adc xor and fistp loopne jnp push divl popf dec arpl inc fisubrl add xchg jg xchg dec mull push jo pop daa movsl xlat sti xchg lcall cltd jno imul inc sub sar mov mov jecxz out icebp xchg push testb xchg out sti inc bound sbb inc outsb imul jnp pop negb adc aas data16 add cmp cmp leave lret inc cltd mov bound add dec popf ficom aam xchg aas movsl cmpsb sahf inc lds movsb ja cmp jecxz inc mov push mov mov cli gs add pop (bad) cs inc xchg ffree mov in inc add mov das cs push lahf and xor cwtl cmp sub adc jmp or fisttpl sbb in dec movsl inc call sbb test xor mov sbb ja mov jecxz and bound xchg add pop bound ret jo lahf (bad) pop jae add mov cmp push scas mov jae and adc mov sti or data16 push xor inc imul loope and inc adc outsl xchg inc (bad) insb sbb xor inc xchg fcomp lods out add sbb das push xlat outsb inc and cmp jmp movsb add roll scas (bad) mov test icebp inc fistpl imul cmp stos mov dec faddl lds dec xlat inc shl in (bad) xor pop mov inc dec push mov mov fwait sub hlt and lods mov push or add imul jmp (bad) push pop rorl imul sahf iret dec mov popa xlat fnstcw sub in bnd je mov gs stos icebp ljmp shrl mov aad sbb jno fistl dec pop mov xchg or int xor push std (bad) mov dec fcmovb xchg lret cmp ljmp test jg int3 sbb mov data16 sti aaa scas scas iret dec sub (bad) mov imul sub fcompl add pusha loop or push mov mov mov pop jne arpl fistl out cmpsl loopne sarb xchg add into dec dec hlt ds push xchg sbb mov xor (bad) test lods pop int ffreep rorb movsl faddl push (bad) mov ret sbb mov push xorl add daa in lods mov xchg mov push cmp add and iret cmpsb push and sub jns pop mov pusha push push hlt push in lds jg das gs sub cwtl or call push lret stc scas dec mov popf inc fadds pop ss lds add daa mov jg int flds roll mov mull loop xor repnz sahf stos (bad) fstl into mov push sub mov mov insb sbb or adc shlb sti movb in jecxz roll test (bad) std inc mov push mov pop cli bound sbb call inc loop popf adc je jb push addr16 stos add or dec aad sub inc push push sti cltd incb call push jg inc sbb mov pop icebp inc mov xchg adc cmpsl pop cmp dec push std pushf inc jmp or xor sub out push mov sub andb xchg push int3 imul jo sbb imul pushf rolb jne mov pop fldl add fiaddl lahf inc mov aam mov xlat sahf xor fidiv mov (bad) pop push rcrl fildll daa cli ret test scas in sarb sub mov mov lock mov mov ret or pop je xlat hlt xchg pusha inc gs rcll inc inc dec outsl cmpsl shlb or xchg add xchg sbb adc dec clc scas and jnp pop das inc jae lcall fucom pop sub jge stos fisub inc (bad) imul in pop enter scas inc dec sub ds sub push stc inc rcll push pusha dec push outsl notl insb pop push inc mov fwait xor pop arpl sbb dec je mov mov lret push dec subl mov ja mov jno or test xchg pop jp push pop mov out pop fimull addr16 xchg pop mov dec dec jl mov insl inc call push jb dec (bad) push push cmp push dec jo push push inc xchg lea addl jp into mov push neg sahf or xchg stos dec packsswb dec dec mov mov in push push pop bswap bnd push xchg clc loope (bad) lret xchg cli dec aaa call jmp test daa sbbl repz mov add lods dec pop jmp pop inc (bad) aas popf mov or inc sbb sub push lret cmpl push or pop dec inc jne andl (bad) inc jl mov inc mov mov sarl xchg adc sbb jg and sahf sahf jp rcl stos mov push xor add aaa rorl add dec aas jbe ljmp std xor mov mov or pop ret xchg cmp into iret or inc daa aas xchg cld aaa sarb cmp and sbb out enter mov mov jge lret cmp xor push inc inc xchg test cmp mov cmp lahf inc cmp adc aaa cmp fsts jbe xchg test popa cwtl shr rcrl enter mov into in mov xchg add (bad) aam cmp imul incb jle scas into add jmp (bad) out inc cwtl or in (bad) fyl2xp1 fistpl add pop popf xor cmp push and dec sub sub jg cli mov dec aas mov ret jle dec (bad) hlt rolb pusha cmp hlt stos dec setle mov je mov ret out aad mov leave cmp rep xor jns loope out arpl mov pop cs sbb test add test dec jnp fisubl or in dec or add test or imul scas mov adcl and (bad) dec gs dec test lock and in push leave and decb insb mov repz and pop in in imul arpl movsl test push dec ljmp push out jae and mov push and enter jnp (bad) cmpsl je mov sbb (bad) pop test dec add test and or dec adc add es addr16 dec stos (bad) stos iret std outsb mov jge or cmp stos repz xchg jns sub ja pop cmpsl cmp pusha dec jecxz cmp imul pop mov jg dec aas adc stos rcr adc xchg idivl push or jg push call fwait (bad) mov stos repz or pop insl out lahf xor outsl (bad) adc push pushl fistl dec pop xchg movl pop push loopne out shll insl mov push out (bad) sub insb pop mov dec (bad) out orl adc dec shrl test push add jbe mov push pop loopne dec mov adc stos push adc fisub pop (bad) pop cmpsl ret (bad) or adc sbb ja or imul cmp jg jmp mov lods shrd or (bad) in cld neg and popa mov ja and jns dec roll pushf (bad) lea stos mov or xchg imul imul pop push inc stos sub nop pop sahf lret (bad) fdiv push push sub ret inc outsl into fcompp mov jnp xchg push and shrb mov data16 cmc clc ljmp das xor idivb sbb sub xchg loopne lods and fiaddl ror ret hlt daa push cmpsb into xchg sub test fcmovnbe clc push sbb (bad) fsubrl mov pop stos stos mov add mov repz test xchg cmp (bad) dec mov push sub iret clc in adc stos divb cli out mov xor sub es inc stos xchg sub fcmovbe sarb cwtl repz (bad) mov pop loopne sbb sub sar mov adc jae mov frstor inc std dec shrl mov arpl pop jbe dec lret mov leave movsl stos shrl (bad) pop sub push imul popf (bad) in mov cmpsb lcall cwtl (bad) stos push cmp dec (bad) fisttp pop add movsb push loopne pop out ret orl xor mov jg cli inc sbb rcll ret sar and outsl xor mov fmuls int3 dec pop lret stos xor fmuls loop mov xchg push or popf dec fwait jnp sbb lock insb dec inc mov sarb lret dec (bad) (bad) js mov push sub fwait sbb xor sub mov push (bad) insb inc pop les insl test or and scas sub push loope mov cmp ljmp dec data16 sbb add xchg sbb fiadd and cmp xchg in scas jmp dec and sub in mov cmpsl ret mov xor aad cwtl jae adc jne dec add sub add xlat repnz scas push xor xchg int3 (bad) sub mov fucomi pop jno inc push push in test adc lds jnp stc push jo dec push rcl mov xchg stos les xchg jae and fs cmp insl cmc test inc fidiv or inc pop sbbl cwtl fildll sbb js mov xlat cld jmp push sub pop imul aad xchg arpl into inc adc push (bad) shlb add imul sbb fisubrl and mov sbb fisubl pcmpeqd fist xor xlat dec inc decl jg inc shlb or or and inc rcl push cmp js inc insb xchg jo pushf enter pop adc push mov js std icebp aam dec inc push imull pop fisttp pop xchg rcll xchg xchg cli nop adc js bound out stc insb pop mov inc xchg shll adc aad and inc adc xchg cmc adc addr16 imulb dec jbe (bad) lock fsubr fild push (bad) and add xor rolb data16 jns mov jbe (bad) mov fs push inc jg inc movsb mov pop imul cwtl inc adc pop mov out insl xlat pop fmull xor cmova js or clc jno mov add and repnz lret lds mov mov ret sbb sbb sbb inc pop sahf mov std inc out xlat jge gs jl push ret jbe mov arpl inc dec and movsl xchg jl or or cmp mov and outsl push iret inc jle inc fs icebp out test inc xor test pop xchg outsb inc dec ja mov stos sti sbb sbb xor inc mov sbb pop gs imul arpl sbb jge insl jle dec dec stc stos out inc push xchg std adc dec or popa xor add jnp add outsb xchg inc test add inc mov ljmp xchg nop mov cmp lods (bad) or jge (bad) adc lret fsubs add (bad) pop scas movsb and sti inc std inc pop lods cltd add sub jae jge fstl inc push adc xor inc jge push jno jp jg cltd mov adcl push outsl xchg inc jae xchg lock icebp ja adc mov aaa dec pop sub stos hlt and and sub lret cmpsl imul (bad) jmp gs or add jbe fbld cmp lret dec mov scas daa jle push pop fimul addr16 movsl jb pop pop sub inc or jl sarl inc mov mov jle mov int cmpsl lods dec rcr repnz sbb push inc sub add ret icebp pop roll and int inc mov shlb or in sub ret jae cld sbb cmp inc add mov (bad) aad adc in pop cmp addr16 jo in add notl jb or push rolb mov jno pop sub fst mov mov fild and (bad) adc out push push insb sub std inc adc inc push ret lock sahf lret lret dec stos xchg dec inc in imul lret pushf out push dec fimul jl les cmc sahf jae addr16 popf arpl fadd mov add fldl fadds adc jmp addl mov inc repnz dec movl arpl ficoml sub repz lahf jb sahf jae inc inc push and into mov or pop in pop pop add setnp mov repz test scas adc inc ds aas movsl outsl gs inc push mov push push adc les inc incl (bad) mov add inc xchg (bad) outsl mov inc (bad) xor sbb cs inc sahf fbld add jge les inc enter lea pop dec fisub mov xchg (bad) je push pop jecxz lahf pop jae push pop outsl call cli jmp sar ja inc test pop pop mov lahf in sub xor lods pop jecxz or movsb fcmovnu scas negb sti cmp push clc jge pop ret adc in xchg xchg fcom push fstpt stc cmp mov pop leave add inc jmp pop test dec inc test cmp mov dec (bad) or mov xor fcmovbe inc cmpsl xchg mov call jge (bad) xor (bad) cmc pop pop repnz mov xor push mov mov ret imul inc insb sbb mov xor xchg cmpsl or lods cmp incl xchg aam outsl cmpsl push sbb xchg mov (bad) inc std push sbb xor dec push fwait mov jecxz and mov bound jo cmpl addr16 xchg ret jp fistpl jmp movsb mov jmp loop inc pop sbb lahf and xor mov (bad) icebp xor iret inc loopne sbb cmp sarl pop pop stos mov push push adc aas or lock daa inc push (bad) push inc mov inc xor cwtl ret cmp stos in flds movsb inc and lcall adc cltd lods rolb adc add fsubrl mov push xchg cmp or gs addl sub push and (bad) das and dec xor mov and push daa mov push pop lcall in clc mov xchg jge sbbl popf test mov push or push jnp mov jecxz roll daa xchg mov sbb sbb jge std aam in int3 inc clc sub dec stc dec (bad) push inc push aas es das or mov lcall jne mov movsl adc add sbb (bad) mov add lea mov fild xchg es cmc sbb mov add imul ret pop sbb fistpl pop lret push ljmp sbb lret or mov ret pop mov lcall into outsl inc or fist and mov fstl or jg ret pop stos push ds mov sub push mov lods pop and sbb scas (bad) jg mov inc add pop decb jmp inc rcrl je xchg mov dec adc mov es pop clc xor jb sub cmp mov mov xchg dec in cmpsb mov mov xchg jae mov test loope inc popf addl pop cmp lds pop sub (bad) lods add es (bad) lret setbe adc and in roll jmp cmpsb fidiv xchg pop inc sub fidivrl sub sbb xchg push cmpsb cltd les sbb ljmp xor dec cmp mov pusha (bad) inc pop insl test in sub ret adc push or lahf add mov testb fisttpl mov jbe ds stos push jmp jecxz xchg out add jno jl dec ret jae fidivr lds push mov inc jne xor scas out inc push push cmp inc push out arpl inc jl jbe,pn push and fwait lock jmp inc mov out ja dec js mov ret addr16 (bad) dec sub (bad) aaa inc push fmul push pop xchg imul mov loop jns add (bad) or sub je sub jnp (bad) rol mov push inc xchg shrl imul inc into pop leave and pop test sub adc in cmp jno dec mov pop push push fild addr16 imull push add test and jne inc rcll sub mov test movsb pop inc (bad) mov dec cmc mov mov mov cs scas (bad) loopne xor add dec leave inc sbb xchg int inc cli ret fcmovbe adc inc lcall jle mov xchg add push inc arpl adc add mov inc aad jecxz push jnp sub add pop dec dec dec movsb xor mov fisttpl or sbb xchg mov in stos mov mov movsb and arpl insl inc and ret (bad) jno mov mov inc movsl es add and adc dec (bad) jae sbb inc in (bad) dec inc add inc stos sub mov imul push mov das imul inc dec aaa test ficomp in daa pop inc sbb cmp mov inc or in (bad) fsubrl std jg mov rep daa movl dec mov mov inc aad and dec pusha or xchg dec sti inc dec pop jo or inc fiaddl or inc mov or push imul loope push fiaddl out sub jmp stc imul mov inc jbe in lds outsl inc les mov xor dec inc add out pop rcll negb rcll out jle push pop (bad) in inc or sub sbb fnstenv push clc jnp add (bad) jbe cld xchg sbb (bad) pop push data16 cmp add inc (bad) mov outsb mov ss mov mov mov mov adcl inc scas ja mov inc adc add push inc jo (bad) jle rcr jg lock outsb inc inc lahf mov add mov lea xchg dec inc sub cmp daa jl movl sbb inc repnz push int3 nop push test cmp xchg xor sub add pop inc scas push js pop xor mov cmp lock bound inc sbb insl ja mov sti lea scas pusha mov pop or xor adc jmp push inc rcll xor and xchg inc add sbb mov imul cli jle cmp push sbb inc mov test and inc sbbl (bad) cmp repz addl popa sahf dec (bad) xlat in mov dec outsb cld enter test jmp (bad) jo dec dec jbe mov sbb and roll sbb popa xchg cmpsl mov xchg lock mov hlt inc (bad) pusha jg cld xor mov push mov test stos push mov add and fdivl rorb mov jns (bad) lock push add and mov pop or xchg add jnp mov cs outsl stos mov pop (bad) sub jnp mov lods and fwait (bad) ja dec sub roll fidivrl adc outsl movsl sarb and fnstsw inc popa cli stos mov daa jne xlat jge cmp jp xchg sub jno lret push jg cmp cwtl mov mov sub jecxz push push cld push gs ficomp cmovs cwtl ret sub push andl inc out xchg aas (bad) mov insl fstpt pop scas add fisubr cld cli daa (bad) repz out aad ljmp ret fstps mov inc jnp sub repz movsl mov adc leave xlat xor pop sub and les outsb lret inc cmp sahf (bad) hlt or pop fisub aaa (bad) fadd (bad) push (bad) push xchg and aaa cmp fs inc and dec cmp out rcrl imul add jecxz js push mov sub cwtl fldl lahf pop ret imul cmp pop add and mov icebp push xchg push daa mov add lret out subl dec int or mov clc push xchg (bad) imul inc adc into lock adc fsubrs sbb lahf ret mov and stos inc popa sub sub and imul add push arpl (bad) stos pop pop out arpl jne into arpl repz dec test (bad) jne aam and outsl xlat (bad) jecxz push pusha loopne inc arpl sbb fild sub sti sub cld xor mov (bad) rorl lret aam jge jecxz pop rcr cmp (bad) fbld sarl push not arpl test out cwtl sub vmovups dec xchg dec pop push mov rcll sbb sbb (bad) ljmp adc icebp movsb scas and jb test (bad) sbb adc (bad) in shrb (bad) and cli pop adc sbb mov jbe adc mov cmp insb xor pop cmpl pushl push sub lret les fwait push loop sti fs and xchg popf test dec insb jg outsl ret dec test xchg in int3 add in adcl enter hlt sbb test lock jnp (bad) ja mov inc pop push aaa and xchg cmp (bad) enter pop jmp repnz mov mov es pop mov lret aaa add ret pop pop test sub fmull aas jg adc jle call add xor arpl or (bad) mov fcoms dec pusha jmp mov add (bad) into stc inc dec or cmp mov sub mov add mov insl mov std and adc (bad) out sub or addl iret pop pop scas movsl push pop sbb dec unpckhps fwait cmpsl imul mov push popf popf mov adc sbb enter out fwait or bound adc sarl fisubrl mov push pop sbb arpl mov pop popa push pop adc or scas sub sub sub or jnp and adc mov dec cmpsb pop mov ss xchg imul dec orb jge cmpsl (bad) jg xchg (bad) mov sahf sbb dec lahf xchg inc push and ror mov pop xor xchg and mov jecxz ljmp dec dec sub clc jecxz dec aas roll mov pop sub inc jmp icebp ds xchg mov sub ret mov fwait or movsb cwtl jecxz mov sub dec dec jecxz add sti xchg fwait push std xchg std ret and mov loop insl push pop mov sbb es cltd jns pop and mov fwait inc dec clc fwait xor inc jb dec mov mov xchg and mov mov loope icebp jo cmp lods loopne cmp adc mov das fisttpl jbe (bad) mull mov popf pop xchg mov add cmpsl shrl stos pop clc mov movsl push lahf in loope or orb add mov subl dec faddl inc test sti and jnp inc faddl mov int3 mov push bound xor imul sub aad mov lret ja inc or xchg fiaddl lcall sbb cmpsb adc and fcomps outsl add push lret pop dec mov jmp add movsl lds decb leave xchg pop sub jle inc dec cmp roll cli popl stos fisttpl mov sub addr16 xchg inc sbb push int and and add fdivrp xor push popf lock dec lods aad pop test fcmovb cltd sahf pusha xchg (bad) dec cli inc jne cwtl into int3 (bad) aam jae rolb ss shlb inc pusha sub push jnp (bad) mov lds je mov lcall fistpll dec loop aaa popf add xchg add xor sarl push sub pop cmp fincstp lds jge shrb or cmp mov mov (bad) fwait sahf leave inc add stc mov femms cwtl pusha stos dec inc jno ljmp fldpi adc xchg addl out data16 pop pop lock push inc cmp cmp (bad) (bad) aad and (bad) imul test cld das push dec lahf xchg inc sbb add xchg testl cmp push jne decl mov xchg ss and inc fcoml int3 or add inc add push pop subl arpl shrl adc and inc jae out jmp rcrl (bad) cmc fisubl mov aaa sbb and popf xchg dec sarb outsl inc sub pop int repnz sub add lock pop mov in jp std mov les or xchg lods xor add lcall adcl push imul scas add mov mov (bad) in dec sbb adc jge jne lea mov mov in cmp adcl and inc (bad) stos testb xchg pop fwait cltd jmp bound loop cmpsl movsl popf mov mov into enter jae jb les xor cwtl pop insb in loop fiaddl sub and cltd xchg lds mov mov and ret cli jp adc or sub loopne mov pop outsl dec dec pusha xchg jae mov into fwait mov clc lret in fild pop fmuls test or outsl negl add imul dec imul or jno in ljmp xlat inc add xchg pushf nop jb jnp inc inc mov insl add mov call stos pop fnop mov inc test sub jg movb jle xchg xchg jmp jg mov (bad) aad cmpsl push pop xor xlat sub scas dec mov jle les pop outsl aad add inc jecxz ljmp std push (bad) xor jge sbb cmp sahf mov cs mov xchg stos add xchg ja xor xor js fcmovbe pushw dec push cmpsl push cmp cltd pop dec dec sub test lret or mov jecxz dec sub and inc aad jmp out (bad) popf sub sub mov lock cmp aad and adcl mov sahf mov push mov jg dec inc xchg sub adc adc add xchg inc test add jecxz cmp xchg mov cmp out lcall or inc les add sbb dec or (bad) xchg sub sub push cltd dec xchg xchg sub cli dec xlat mov repz (bad) lock and mov inc mov in push mov (bad) jae mov jmp inc scas sbbl cltd inc cmpsb inc lcall dec in and mov xchg test xchg inc rclb in jbe xchg into jg sub mov int3 cmp xor cmp gs dec jno data16 fwait cmpsl pusha sti (bad) dec pushf push xchg (bad) pop sahf and xchg icebp or ja mov and repz push mov dec add adc push pop inc fabs cltd cltd lods adc nop inc push mov xchg clc daa xor rclb mov ret push dec fwait les lahf aas (bad) repz cmc jg popa add adc sbb jo daa ja cld inc gs sub arpl idivb jno inc cmc xchg cmc xlat xchg mov sahf in mov lods mov (bad) lret ja mov sub rorl movsb dec mov mov cmp push jae arpl mov and movsb test (bad) sub fild leave mov enter add lret xchg cld cmp inc pop mov aaa ss push scas lea xchg push out fcompl mov (bad) ja imul in int3 adc dec jbe cwtl sub xchg mov flds cmpsl mov xchg lahf and js jo pusha xlat jae adc ss ret xlat out xchg lret xor int3 sbb push (bad) xchg xlat dec inc lret dec mov adc stc pop jmp repz pop inc sarl add inc cmp lock sub inc cli int3 xor sahf mov das xor add mov das xchg xchg insl pop mov cmp loope mov ss dec xchg test cli fcoms mov stos cmpsl mov xchg ds stos sbb push xor pop push (bad) sub cmp mov rcr xchg sbb stos and retw jg ret sub stos lea rolb das mov in mov mov cmpsl sbb add cmc ja inc cmp adc cmp inc push jecxz xor inc fidiv cmpsl dec inc shll mov jno push ds inc jb je sbb sbb daa mov sub xchg in and mov jecxz fcmove fldl2e inc mov fisttpll inc pop inc lcall mov xor pushf mov dec mov cmp mov lcall mov push jo mov imul in push insl and add rorb mov sub adcl mov pop cmp push sub adc dec add movsb (bad) test or insl aaa add incb dec loopne es lods mov scas push out pop xchg out push inc adc inc gs pop daa jle (bad) fild mov dec out stos (bad) xor inc ror cmp fwait notl adc sub ja,pn push test cmp adc inc push (bad) jbe lahf popa test inc xchg es leave fstpt inc mov cmp inc repz sub xchg push mov icebp inc shrb or ds adc inc add push xchg sub dec inc in jo fstpt inc lahf in andl stos and jno adc bnd (bad) int xor sub icebp icebp mov scas push cltd (bad) int3 sub jno mov jge faddl add sbb dec pushf inc dec pop stos cmp leave adc lret mov in mov jae pop out rcll mov push lds push and push ja push xchg sarb repz lcall js sbb arpl loope sahf shrw dec push shrb mov dec dec lret out pusha xchg (bad) arpl push movsb sarl xor dec dec mov rorl xchg pop fsts shlb mov ds mov adc ja data16 push xchg xchg cwtl or or pop mov stos xchg pusha inc add (bad) rcr jl stc lds push push jl cltd push jne lods add pushf jl inc sub cmp incl (bad) xor lds lcall mov sbb icebp xor or scas push push mov test lock ret aad jae lods mov inc mov add es (bad) adc addr16 cmpsb push push subl fisub inc loop xchg nop sti dec fcomps inc lahf inc xchg sbb popa and pop lret fadd outsl mov movb fnstenv inc push sbb lahf loopne addb (bad) pop jp and dec mov fisttpl data16 sub iret inc jle or inc hlt adc dec pop or xchg mov test sti mov jno (bad) in cli cmp xchg jle push decb fdivp mov insb lods bt add lret or repnz add mov xchg pop ljmp cmp push outsb sbb orl mov (bad) mov sbb inc lods arpl repz pop icebp xchg sbb aas sbb int je push pop test sbb sbb clc or (bad) nop out mov scas pop xor inc add cmp and movsl stc xor inc lock test cmpl popa das ss xor or xor stos mov pop (bad) (bad) pop (bad) dec dec rclb mov dec notb sub stos cltd in shll outsl (bad) flds dec es pop push imul push mov mov out add arpl cltd loop xchg push sub negb lret sar mov xorl stos dec jp dec dec mov ret sub aad test jae cld mov rolb mov ret (bad) or push arpl add or insl mov int sub sub ss push in sub sbb sub mov daa push (bad) adc xchg scas rclb cli pop sahf sub xchg jae es xchg fnstenv into stc loope dec cmp ljmp fcomps xchg and or into aad and dec xchg jge push mov or out cmp ret pop xchg sub push jnp lcall xchg mov lock xlat jb sti cmp stos les push xchg in dec push fidivr inc out sub loope push shrb cmp xor mov mov add imul pusha into lock fwait push jge in cli sub or sbb or xor cmp inc adc cmc mov inc inc xor push icebp inc push cmp dec aas popf inc incb js sahf xchg sub loop and shl mov mov (bad) into push xchg clc fimul adc push scas jbe inc mov movsb mov inc lds mov scas adc scas cmp mov xor es shlb in les push aam repz xchg orl negl stc lcall inc lea cmp inc addr16 fs rorb sbb pop sbb sbb mov pop inc inc jge and mov push dec lcall cmpsb lahf cwtl inc repz in out mov mov stos cmp push test cmpl cmp lea leave sub sbb mov push imul mov sub in dec lods inc imul loopne sahf add stc xor mov push out test lea outsb mov sbb pop cmp outsb push mov jp mov sti xchg and cld inc stos push jne fldenv cld rolb push (bad) cltd adc insb jo outsl xchg lds mov jmp xchg lea inc (bad) lcall repnz mov int3 mov stos jae xchg dec jg pop xchg jp cmp (bad) mov jns lea mov pop fdiv xchg jo dec ja (bad) lods test sub xchg inc cmpsb lahf int3 xlat (bad) pop sub popa push jmp jae stc imul movb mov inc aad into add push and loopne out sbb dec in push add in mov jo roll vzeroall push ja sbb pop cmc popa imul adc push shr rcrb lods fdivl rcrb sub push stos push xor sbb mov mov mov lds and loop sbb adc dec out dec (bad) and repz das fcomps outsl sub adc push mov dec xchg aaa lcall mov hlt roll stos or or adcl jo and clc mov out cmp imul inc dec mov lods sub cmc mov pop mov shrb rorl adc sub popa dec add xor lds loop cltd orb into inc fdivs cli mov (bad) or jle adc ja lods xor cmp paddusw push sub lods inc dec xchg sub lock xchg dec aad cmc aad test dec jo dec dec ds daa aad or imul iret insb cmp negl dec std ja arpl inc sti add imul sbb leave pop fisttpll mov jae mov jle jne movsb dec sub inc aam mov (bad) dec ss sbb mov les lahf fs dec or xchg loopne rorb fs cmp repnz popf dec xlat cmpsb std std jge (bad) jge loopne insl add in add push fs sub ret xchg dec pop aad cmpsb aas sbb xchg push and pop fldcw imul imul push or push push mov mov mov cltd cmpsl jmp inc popf mov fmuls xchg push int scas out test sub mov fildl movsl xor imul lret ror add mov fiaddl xchg mov lds inc int add pop insl and jmp andl xor fistpll pusha push in sub dec xchg sub outsl inc scas adc xchg dec dec cmp jle xor nop xchg icebp add ds stc call js cmp into jp add jge pop xor jbe push aaa stos add das out adc and (bad) mov and xchg mov sub ja inc push cs mov jmp (bad) add mov cmp push (bad) dec xchg bound insl and insl and loop orb ljmp fucom and stos fldcw popf cmpsl xchg into fisubr xor movsb fnop push mov lret jno lds xor push xor or pop sub and and mov xchg stos out or loop push inc scas movsb sub adc gs push push imul mov clc xor push add or mov add std and push push sub test stos lret pop push repnz xchg cmp mov push rol je inc mov ja insl jb jmp fwait mov xchg or push fistl xorb dec in in jno sbbb notl dec fdiv into adc or test mov xchg daa aas aaa dec jg insl pop add mov test ficomp (bad) dec inc sub push xchg mov add sub movsb lcall push inc jae sar adc jbe movsb sub inc out stos inc pop imulb adc imul mov mov sub test subl or jp inc fbstp outsl hlt orl dec jae cli arpl xchg xchg cmp inc and dec lock mov mov xor sbb dec push adc cmp adc data16 push xchg (bad) mov sub aad push xchg cwtl les fist fs stc push mov roll stos mov (bad) or loop loopne fs (bad) popa gs inc push sub or insl lret sbb rcl xchg adc mov add rorl xchg mov dec loopne inc xchg sub movsb jo mov push push add inc mov je add add mov pop out sub mov test popf cmp adc mov xlat add inc xlat cmc inc mov fisubr call fadds dec push sahf or stos in sbbl mov sub outsl fucomip mov stos push xchg test and clc jg enter lcall dec scas loope cmp aas adc jg mov xlat movsb mov inc sbb test fucomip sti sub add mov mov push pop dec lods add pop (bad) xor insl pop sub xchg jae inc mov adcl lods rcll data16 xor ror jmp cmp pop mov pop push stos enter sti popa jns push adc jae sub jg inc xor mov sub stos or inc or scas (bad) jbe or insl inc scas in push clc push mov out adc ret (bad) repz cltd clc sarl pop popf push (bad) cmp stc ret inc das xchg (bad) inc inc add outsb cmp xchg clc add rolb pop sbb jns imul mov mov inc arpl dec pop mov pop inc movsl mov fildl icebp add hlt sti xlat sub (bad) dec in xchg mov jne sti inc jns rorl push (bad) mov (bad) pop aad pop inc imul loop jbe inc inc call or ficom aad inc mov test add xchg lods and roll jb out es xchg push test xchg mov outsb arpl fmull sbb add adc jl popa sub lahf sbb fsubl imul xchg mov popf icebp fwait lret inc jnp inc test pop or dec jb ja xlat test xchg ret mul pop inc outsb (bad) loop rolb in stc mov addl cs nop adc dec xchg add test std inc sti cltd or push mov arpl xor mov scas push mov ficoml sub aad cltd cmp pop cmp inc xchg pushf aaa sahf sub mov inc jne and and jne bound dec (bad) xchg sahf shlb cmp shll push and ja add lods insl jnp mov and arpl or jbe push ja repnz iret sub inc or mov push rcrb sub and movsl enter andl sbb test fnstsw repz inc mov mov mov (bad) sub dec add and jmp or lock push dec mov xor sti stos stc pop ret in mov repz xor dec out lahf jb js dec enter cli (bad) scas leave bound adc ret xchg jmp arpl enter ja (bad) mov cmp inc xchg shrl fdiv mov jbe and xor add psllq add int3 (bad) push push lcall pop jae cmp xchg dec fs movsb insl es or mov push fwait add push mov lock loop push iret out inc leave stos cwtl in test roll incb enter xchg clc sub pusha sahf (bad) xor mov fildll inc stos jl push xor lock sub loop roll les mov inc and dec sbb cmp das bnd adc mov fbld jle inc lods sub fidivr js jb pop jno ret jge mov (bad) sbb push push das jecxz xchg push ret pop inc lret push adc xor or lea xlat notb test js inc sarl stos mov push inc mov ficompl xor arpl add pop test inc mov (bad) xchg stc inc cmp jecxz adc cmpsb jle and push inc jnp in faddl aaa pop lret inc rolb or jo iret popa jnp mov dec stc in int3 pop dec fisub cmp cs popf scas push or xor pop cmpsl bound les lahf xchg iret pusha mov aas lret addr16 js test daa push inc pop dec ja adc xchg fisubr and add fstpt push dec in orb mov inc xchg pop fimull cmp fldt xor rolb shll loopne inc lods sbb inc pop or fmull inc dec xchg pop or and ret sbb fidivr ret xchg mov xor cmc call in dec adc testb mov dec add dec daa inc movhps adc dec fucomi dec aad mov mov inc mov lret jne je addl scas repz inc aad and sti (bad) sub push mov adc cmp out mov inc das xorl pop xlat inc fs mov (bad) (bad) insl xchg and inc sbb push movsl leave pop out pop lds test outsl pop push jns call (bad) incb int and lds and cmp repz xlat push ja inc out cs cmp jp inc rorl sub leave pop je mov sub stos jns ss movmskps int3 inc adc repz lea (bad) (bad) mov adc addr16 lods addr16 call dec sbb mov xchg jb xchg sub js inc add inc inc cltd pop ja lahf jbe gs mov inc fucomp icebp aam rorl (bad) dec mov add sub push (bad) add xchg and inc dec lods mov sbb inc in fadds mov mov nop loope (bad) out mov aas mov dec divb cltd jmp (bad) in sar sbbl or fwait dec dec sahf xor push (bad) cmc (bad) push int3 sub jecxz in icebp inc and and lahf cmpsl inc sar sub inc inc xchg or cmp rcr jl sbb int cmpsb das mov leave inc fsubp and mov push inc or in cmp mov imul and pop inc popf cmpsl ss loopne rol mov out inc jns (bad) std inc aam mov mov into cmovle enter in imul inc dec lahf jae push cmpsb stos flds sti jbe sbb cli jecxz cld pusha mov std mov inc out ret into aad or (bad) repz adc xor mov push lds (bad) test inc push push lcall arpl xchg add jne mov sbb jmp sbb mov jbe inc push xor aas (bad) xor rcll mov dec shl pop and out pop or jg pop (bad) cmp dec mov jno nop dec sti das addr16 sub pop faddl pop push fwait pop loop xchg mov xor xchg daa or mov stos mov jl pushf out iret inc push push out push pop aas cs xchg cmpsl adc add je xlat jge lahf inc add push inc jp or or jmp inc push daa xor push shll sahf lret imul adcb mov popf inc stos lahf inc int3 mov cmp roll pop fwait inc test mov out (bad) fiadd test push lret push inc iret jne sti inc or xchg sub dec test (bad) int3 add pop lods fwait dec inc dec xchg push mov inc inc cwtl dec lock mov cmp imul in jle jge ja repnz dec (bad) cmp jl in movb cmpsl cmp fwait pop (bad) adc cs aas or out inc insl add in test inc enter fild std pop (bad) inc dec sbb dec dec xchg xor test and insl xchg test faddp push pop and fildll and stos rcr cmpsb sub jbe and jg inc cmp xchg stc lret dec lret inc out mov cmp jns sub rep push in aam mov xor les iret das mov mov inc addb xchg je in sbb test shlb push inc inc or add mov inc push push jns imul out push aad ljmp lds andl jae mov ljmp push push push inc inc mov xchg and (bad) inc fdivr inc add xor andl imul inc adc rcll pop add int3 pop nop mov pop addr16 aas mov xor xlat insl fisub lods add jbe add inc adc adc inc aad in lret imul jnp iret rclb out inc push dec sbb jae add inc sahf imul mov std negb jecxz (bad) mov or inc (bad) scas pop mov leave cld inc and mov arpl in outsb enter mov cs cmp push sbb pop addb ja mov sbbl mov bound arpl pushf jmp rorl fiadd (bad) repz add pop lahf sbb movsl out andl dec inc and ret fwait xchg mov addr16 stos add mov jb mov test movl sub das push xor les push sbb fistpll sbb jno mov jne push jg cmpsl mov sti enter ret and (bad) fistp inc inc inc les imul inc lcall inc inc mov or mov cmpsb sub inc lods jnp mov inc mov fsqrt or arpl xor fstl and push lea icebp push (bad) in adc push xor mov cmp push lret add inc lahf inc push inc cmc mov sbb movsb push xchg adc leave or and shll ror stos push or xor imul pop add fcmovb jno sub sti dec shr insb push out push pop lods nop popa stos cmp test jecxz dec ficoml enter ljmp sub pop sar stc push test mov test outsl loop cmp push ss repnz hlt mov outsb sahf sub xchg pop cmp dec mov pop jl pop dec mov ret shrl push jg into inc popa sahf out mov stos (bad) ffreep dec pop out adc push sbb punpckldq and inc mov aas xchg or push inc mov mov (bad) mov xor andb das jne cmp fdivrs in inc data16 and (bad) sbb add or insl lds fisttpll sub out push inc push jb mov and mov jge jae (bad) inc mov mov adc adc inc xor jg sahf sub std xchg (bad) outsl add push add or addl mov inc lock or mov test imul pop into inc inc in pop lcall add dec and fsubs roll add jo insb out call add add pop push push cmpl push addr16 inc and mov cmpsl mov popa clc ret or aas xchg dec outsl fdivl mov outsl ret push jg jno ljmp push jmp pop push das inc scas dec dec fcoms ret les sub cmp adc inc push lret mov ljmp mov pop sahf inc xor aaa mov pop inc enter jno mov inc cli test iret or adc imul cltd or maxps push andl and fisttpl jns in jg push loope iret mov pop gs scas sbb or jecxz outsl xor mov jne pop insb fildl inc push pop insl pop movsl stc xor pop push adc inc dec push (bad) mov push imul das mov and aas cmpl inc (bad) lahf loopne inc sbb jb pop xor dec mov sub xchg das and aam imul gs imul leave mov add pop mov push aaa js ret aam pop je inc add test jae aaa inc cs pusha add jp push imul arpl jno rclb inc pop outsl lcall or jbe pop pop xlat int je gs xor das push jecxz inc push insl jle mov lret push repz repnz icebp and dec add mov inc (bad) xor sbb incl stos sbb (bad) mov movsb cmpsl cltd inc jns inc push push cmp (bad) popa ficoml dec and gs rcrb repz rcrl or jge jb jg inc jecxz push dec outsl jbe ss aam jmp ret push ss jo shr inc sbb lods dec cld loopne test stc inc in je outsl xchg aam cmp dec ds push jb scas loopne inc sbb and inc xchg (bad) mov addl lcall mov sbb mov pop enter data16 nop in add mov inc pushf outsl or cmp sub (bad) popa loopne cltd out pop inc jge sbb dec mov dec dec jo mov jge aas out dec inc cmp jns (bad) push sub dec push test adc sub sub sub jb jne sbb dec push cltd dec and xor or das movsb cmc or dec and pop inc pop fsts pop mov stos jne jnp addl (bad) icebp je imul sbb inc (bad) inc jmp fisubrl inc add jmp ret das push sti inc daa (bad) in xor pop or scas xchg outsl mov sahf mov xchg outsb (bad) fbld shll cs mov push setne or inc jae into add in pop xor sbb lcall jb ss or movsl pusha mov inc fidivrl addl inc out adc mov adc xor jo jmp inc and sub adc jg xchg sub ret cmp (bad) pop and jl sub out ja stos movsb addr16 dec frstpm(287 mov sub mov inc aas mov loop inc (bad) adcb pop sahf aam inc and fcmovb inc jns aad inc fs xchg bound shlb cmp or inc mov pop in imul jmp in sbb popf fsubrp lcall mov jp test clc int cmp ja xchg xor jmp cmpsb or scas and ja sti mulb adc add xchg (bad) jecxz into mov mov out pause addr16 shl fistpll sbb pushw das mov jmp jnp mov repnz add (bad) push pop mov cmp jp insb pushf lds fwait add inc jle insl out (bad) xor jecxz xchg pop inc daa arpl add lret mov ja ljmp das dec pop inc ret cmp in loope inc icebp xor add or xchg movsl inc and xchg dec pop fdivs inc xor stc lret in ss inc orb jne add inc or in ror ja push inc out arpl cli xchg sbb lds lock pop mov mov sub xor mov ret subl rorl fsts lods push xchg push jmp xchg mov stc push push in ffreep and mov stc clc inc ss sub (bad) lock cmc (bad) xor xchg fwait ret inc jg lret push mov mov lcall add sbb lea ds sbb dec sbb (bad) mov mov into rcrl add jecxz push fmul flds and je call repnz in fucomp xchg lahf out popa pusha add inc add in incl sbb aaa xor sti (bad) fistpl insb fidivrl push push inc sub pop and inc cmc add push std das in xor mov cmp imul enter insl jo popl movsl out (bad) repnz jo pop gs in mov arpl insl cwtl jnp lcall pop (bad) jb inc or sbb dec inc xchg rolb xchg mov pop in push mov mov add aad pop inc and xchg cmpsl sub fwait inc jnp add jb pushf leave mov mov and sbb sbb rcl dec pop out fwait jb lret inc mov lock push inc push adc inc idiv and adc mov imul cs mov mov add sub scas inc pop fdiv scas mov pusha mov xchg adc inc or test lock fdivr sbb inc add imul popa inc fsubl (bad) aas jge clc inc call aam add jb cmp dec out (bad) jg (bad) int3 sti out movb inc and fiadd sbb getsec cmc inc dec dec and mov mov jmp mov cmp ret push inc cmp inc shlb mov xor mov mov sbb inc mov lahf call (bad) jge pop dec jle fs inc push jmp jg out imulb dec jo mov inc mov loop pop inc adc jb out ret cld cld sub dec sub or push xor add sbb (bad) loope xor in pusha cmp lds out or xchg cli int3 xor aas or sbb add (bad) minps inc es int3 scas xchg inc imul inc in sahf cmc (bad) stc lods out (bad) scas jmp inc fidivl push scas push dec data16 shlb or jno stos cmp sub mov add xchg rolb repz mov push out pop repnz in xchg and dec das push xchg lea imul jle inc xor sub inc dec sub sarb fcmovu inc into push jp mov icebp dec jg sbb jle flds ret iret in fmuls inc (bad) mov xor jge mov jns in xchg and xchg adcl mov mov adc fucomp inc imul inc or nop aam rclb cli dec (bad) dec pop jno repz int inc mov pop or fldcw push pop mov mov cmc dec mov pop dec adc inc leave jo rcrl scas push fcoml pushf mov dec xchg aas in jecxz loop add (bad) out out xor xor les inc stc mov sub aam xchg nop movsl inc jl aas popa cmp jne push adc inc inc hlt into lods and mov js add and adc pop lret dec jl add xor lods lock sub inc outsl rcl repz (bad) xor (bad) pushf pop orl mov addr16 sar pop lcall dec mov aas rolb sbb pop xlat sub inc or ret mov lret fwait scas cmp dec dec cmp dec imul inc jle fdivrp sub inc and inc mov pushf dec and inc pop xor mov jbe push jge ja add sbb inc daa imull loopne inc test cmc push jg sarb mov dec pop jge pop call or xchg sbb cmp adc xlat lods js and lahf inc mov lds pop call cmc cmp dec inc jge push dec jp and push fs add pop jecxz out inc jbe iret sbb aad fstpt mov sahf add mov push dec jnp mov pop push (bad) imulb dec aas inc add dec scas imul aas or stos mov push push insb imul sub mov dec int push rolb pop loope fstpt sti inc cmpsb dec lret aas aaa jae jno and add mov arpl mov arpl outsl test sbbl je mov cmp inc adc (bad) or popf mov mov mov xchg inc jns (bad) xor jl pop dec inc or roll std enter ret push adc adc jb sbb jmp aam enter inc sub inc pop int and dec xor in repz pusha cwtl cld add xchg jae sbb imul data16 divl dec xchg cmp adc mov inc fild adc dec (bad) and adc mov movsl rorl iret aaa add push sub sahf inc pop cmp jb add int3 push xor inc mov or iret jge pop aad jmp inc (bad) jae mov pop adc inc loop or pop sub stos add lcall loopne dec daa popf icebp push inc les adc pop rclb pushf xchg mov xchg stc mov and pop sti jno mov (bad) sti lea popl xchg aas push jae ljmp lret mov je pop dec pop mov mov je inc sbb mov ds scas dec jo sbb les xchg cld inc imul jp sbb and ret jnp jmp call or inc lods aad (bad) jbe mov out rcl jns inc dec cwtl mov out lds and add sahf inc xor (bad) sti rolb subb dec icebp pushf leave fidivrl inc cmpsl jnp mov add cwtl push xchg cmp jmp in (bad) or inc push jbe movsl popl inc dec mov xlat mov pop inc or std ja imul (bad) div cld xchg xlat arpl out inc xchg sub fld mov dec ret aaa sub (bad) push notl cmp outsl lea push mov out enter or xor pushf loop xchg jae loope sahf es daa mov lret or insl dec jle sahf out leave pushf mov mov xchg inc add dec fcompp and jl jl cmp inc stos sbb mov into and or lret out fwait and call push sub fimull mov daa jge dec js out jmp adc jo dec ds jno test jae cmp sbb pop aam push jmp sub add inc inc xchg in jns test xor (bad) mov scas mov (bad) mov push cmp std xchg xchg shrl xchg call insb mov xor jle dec inc sbb pop mov mov xor cmp jp mov ret ret outsb inc adc out xchg lods jmp mov test sbb inc and sub add or sbb andl mov mov (bad) inc stc or sti and arpl xor ss pop add xor in mov pop test out sbb push inc cmp cmp cmpsb inc pop pop xor inc mov mov jne sub mov clc sub sti jg pusha in dec push xor and mov roll jmp adcb xchg add cmp sub pop add xchg mov loop or fucomip ret mov cltd mov mov lret daa ljmp imul xchg cmp mov aas mov sahf out jne mov jb sti add push sbb and mov int shr popa pop jo les cmc sbb ret and adc pop sub outsl and adc std pop jo das mov in rcl arpl lret or nop aas sub ds add push and inc jmp add mov (bad) push jno inc mov pop sub adc (bad) out ret dec jns scas ss push and leave aas repz loop and dec ds lea rolb dec es mov dec inc add inc mov jae lret xchg hlt add das fistp lea xchg add addr16 inc imull adc push add jg loopne out pushf fiaddl lret cmpsl pop fsts in push insl (bad) dec pop push lock insl inc mov (bad) sarb pop inc int3 pushf push sub ffree faddl out xchg push adc popa and ds iret fsubr sbb popf xor xchg xchg das mov fisubl jnp xchg inc jbe and sub dec sub pushf lcall or jecxz or ficompl std loop push dec hlt pop mov dec jno add sti imul add or repz dec mov inc jge jl (bad) push add sub fcmovne popf das sbb add push xchg jle lods (bad) hlt cs fstpt jecxz sub mov (bad) scas add iret idiv mov push hlt dec vmovntps (bad) cli adc sub std mov loop enter (bad) imulb lahf jns lret mov inc jo push adc inc test mov xor rclb and adc aaa cmpsl pusha inc fs sub push cmp ret and add (bad) outsb sahf jg xchg inc push pushf lock jle pop call mov or mov push repnz xchg inc stos or inc jo pop mov add inc inc pcmpgtb mov cmpl and cmp or jbe subl mov pop dec add mov xchg adc sbb jae ds daa icebp lea dec pop jmp xor rcll (bad) dec push inc (bad) das sarb mov ret inc popf scas fadds xchg aad inc lock sti pop jo mov and cld (bad) inc push pop repz test rcrl and inc (bad) lcall or mov adc aas mov sbb ss push imul inc mov mov rolb inc sub inc sbbl test or inc (bad) insb adc pop or or bound mov shrl (bad) jle push dec jbe ds jae xchg inc call sbb inc sbb aad mov es push xchg inc push popf dec mov inc mov inc adc xlat call pop aad add pop push push addl dec notb aaa mov xor pop xchg pop inc insl andb inc mov out push test (bad) dec inc aaa push hlt int mov (bad) cli fiadd cs cmpsl inc std ds xor inc xor mov lds mov pop xor dec addr16 inc push iret sub ja push inc cwtl add add add inc pop ja outsb or sub adc add in jl lea flds jmp and adc pop and xchg mov cli std xor out and inc add jl xor mov mov push xchg pusha movsb mov jae aad ljmp bound xor pop cmp pop jb mov or in sbb popa inc push push mov dec jl mov mov pop ljmp mov jmp pop pop orl jae bound xchg hlt call sbb sub dec inc dec pop addl cs loopnew xchg sbb or fimul ret push roll leave divl dec pop push data16 jbe inc xor cmp cmpsb pop sbb xchg sub test lods inc fwait popf fcmovb inc mov aam (bad) fdivr or fcmovnb inc push jo or aas xor mov fst dec or push sub fs cmpsl imul orl inc test pop inc push pop sub inc mov inc and hlt shlb push inc sub stc pop ja mov les cmp inc sub inc jno int3 push and (bad) bound shr push loopne jecxz imull inc inc adc arpl add adc outsb fldenv adc inc push push pop inc cmpsb and xchg jle insl les pusha push inc mov cmp push shlb dec jno test jecxz cli or inc push pop xor jbe jmp mov mov add lret push jmp and cmp dec mov fisttpll cmp das sbb cmp inc fidivrl inc and xor jecxz lret cmpsl add out dec inc ret sbb andnps push fisttpl mov mov stos or push pop add cli inc inc xchg fsubrl outsb inc jge aas (bad) and adc and xchg cmp inc xchg mov scas incl (bad) (bad) xor jae daa popf (bad) jp popa dec adc sti dec jg pusha movsl stc jno arpl dec mov and adcl push addb push mov imul xchg mov inc addl ss jae mov mov inc les mov hlt je adc push and mov ret sti mov arpl loop sbb scas push mov xchg and mov (bad) rolb mov inc ja fneni(8087 adc cmp aam inc out sub adc stos (bad) pop pop inc loop testl mov enter dec mov jmp xor (bad) lods cmp dec mov bound repz push pop imul inc sbb lock add inc (bad) imul shl push xlat sbb mov popa jg inc cmc (bad) (bad) mov imul push into outsb xlat sbbl cmpsl add xchg insl xor ret stos inc jl or pushf add ja lea lcall loopne,pt inc add loope inc mov push push pop sub in (bad) std into push lock dec push add aad loope sbb imul add push sub mov mov cwtl daa cmc fildll push adc fnop pop xchg sub push sti push mov subl xchg add (bad) repnz incl aaa sbb pop mov add push clc sbb cs es call jl sub test cs fbstp imul and xchg mov or sub fisubr push sub aad mov jo fild push push in inc push into inc mov push popf push loopne sub pop (bad) idivw les mov and dec pop (bad) into icebp push xchg sub arpl inc inc sbb test add nop xchg mov adc jnp pop or subl mov cmp mov inc sti les lock testb xchg cwtl loopne xlat add dec mov or sti sub cmc cmp out loope mov push jecxz sub push (bad) fs pop sbb inc dec loopne daa mov adc push add jne mov push push out shrb inc (bad) inc cmp pop outsb xor (bad) mov jmp loope pop sub popf inc fs xchg test mov ds daa insb mov out xchg mov pop dec js xchg cmp pop lret inc or ljmp test (bad) (bad) push push jmp rolb scas test call sub shl xor jmp lds dec mov xchg push xor sbb cltd in add mov int3 outsl (bad) (bad) or and add push fild loop adc dec adc (bad) adc mov push dec into pushf inc fsubrl flds sub jge push popa sub call push or sub enter cmp shll sub lea adc fwait (bad) out push xchg or sbb pop addl cmpl orb pushf push inc adc mov (bad) cmp jecxz xlat inc sub push adc dec cltd fwait mov cld mov cmp cli out pop mov jnp mov xchg std push dec adc cmp jb xor dec inc mov xor cs ret pop or bound test and mov outsb sub (bad) mov cmp lret dec (bad) test lgs cwtl inc popa sbb mov push and xor add cwtl das xorl inc fmul mov mov out cmpl inc mulb ljmp push repz sub repz cli pop jns sub pop inc xor cmp (bad) stos aam js jno arpl mov xor jb scas mov xor shrl fldcw sbb mov and pop adc xchg sub pop dec mov les mov lea or push sbb aas and dec sti add enter sbb ja inc movsl test out push enter arpl shrb mov faddl cmp pop xor (bad) mov insl in mov or jnp mov push sbb xchg dec cs in stos add inc jg or inc mov (bad) xlat mov inc stos (bad) pop mov sbb jecxz in dec (bad) aas pop dec sub popa ret sbb outsl cld mov fisttpll lret cmp jo repz out imul faddl or imul mov pop inc fild rclb into push lret aad inc aaa stos pusha and mov inc inc or xchg dec add cmp jmp repz lea jecxz call (bad) xchg xchg add xor sub (bad) orl dec movsb test add dec loopne cmpsl les mov mov xchg out fisttpll and add subl cmpsl fwait repnz inc rsqrtps pop arpl pop sti pop rcll in das push pop xorl xor fldenv xchg mov dec or imul adc stos pop xor jbe jl not andb fdivs push cwtl into stc pop xchg (bad) xchg (bad) sub std jb std and test push dec lds test xchg mov ds ss fisttp loop or fildl clc rdtsc shlb sub ret pop mov loopne xchg sti call je add and sbb cmpsl xlat or imul outsb xlat call popf xor inc cld in jecxz pop int3 jns xchg jb pop gs cmpsl std (bad) xor cs fiadd cld icebp je dec lcall inc movb jge pushf fnsave fld lods call sarl repz pop callw jns sub add pop (bad) jg inc pop push je imul int3 sbb inc xchg xor sbbb test adc aad (bad) jne cmpl mov or pop ret add sub dec mov mov push cmpsl inc test sbb cmp or pop mov jge inc mov ret mov ja push (bad) push repnz ss adcb test mov bound inc into sub jmp dec stos mov rcll inc ret insl ja pusha movsl orb cli or mov js popf cmpsl mov mov ret xchg mov call push xchg cld imul pop jge rcr shll jns addb add test hlt adc inc sbb pop outsb sbb test lret and dec mov jg pop stos inc dec clc insb pop imul daa jo sub pusha gs pop outsl or in clc stos or mov jg mov gs and movsb outsb push pop andl jb mov aam cld mov mov jns das aad fcmovb jns cmp dec or cli daa xor push push cli or ret jbe push adc bnd into lock lds mov push inc add dec ds xchg sub into mov dec sub arpl cmp mov cmp sbb idivl inc pop or rorl jp je xor stc test out fistp pushf pop inc inc cmp rcrb fneni(8087 jge bound push icebp (bad) jno adc or or in cmpsl inc (bad) mov adc jg cmovnp outsb cli xchg sbb into int3 jmp bound cmp push loopne enter test insl xchg ss sub aaa imul dec xor push cmp movsl cwtl mov cmp pop add fs ror scas fwait xor imul loope push sub xor daa loopne stos int insb jb and or cmp ljmp mov push cmpsb mov cmc enter test xchg fistl jp inc inc lods mov adc push xchg sarl repz push and add dec das out loopne or push add stos stos mov fwait xor fs dec inc dec pop sti sub jnp dec and sub jo sub call dec sar arpl loopne fdivs leave int3 adc dec aaa lock fisubl ljmp rorl inc stos cmpsl imul ret scas lret in sub push sub mov pop inc cmpsb jg ret stos jns lcall xchg mov ffreep mov and pop (bad) out faddl (bad) cmp pop push stos outsl inc (bad) call test pop andb lret (bad) inc js fild pusha inc or xor cwtl pop xor int push popf pop xchg adc stos mov incl pop cmp sub cmp jae rolb lods enter mov arpl sahf movl dec cmp pop sarl dec loop je nop repz push aaa mov (bad) pop pop lds inc icebp sbb jnp dec addr16 xchg add dec mov sahf popf dec shr inc rorl jae stos loop xchg (bad) out jae xor outsl call in sti jmp test ret arpl ds jne imul jmp sub cwtl (bad) in lds lock mov lods add (bad) scas push mov sub dec cmp jg enter arpl xchg movsl loopne jo lock fstps test xchg mov add (bad) jmp and jecxz stos xchg push rcrl je,pn mov mov mov cmp mov dec into lcall rorl inc gs mov icebp imul cld xorl rcrb xchg push xchg loop add xchg xchg xor (bad) or xchg adc cwtl (bad) popf add pop test jbe fbld fnstenv push (bad) adc adc cmp rolb addr16 outsb out jecxz out xor (bad) arpl pushf cmpl aad mov and pop lret data16 pop add out movsl test cltd mov jno fisttp (bad) jecxz lcall or insb shrl icebp sub xchg cwtl in push fdivs cmp sbb adc cmp xchg cmc cmp aad (bad) cmp ljmp push dec push (bad) pop ret fsubr lds pop in xchg cmp jg into jbe outsb sti dec inc dec xchg popa arpl mov dec mov xchg xchg inc and stos jmp (bad) fnstcw jg in xor pusha and jo lahf mov aaa mov (bad) (bad) xlat aas push and (bad) xor and inc movsb stos loopne fwait push or push clc insl push sub pop test in jecxz mov lods mov loopne adc or hlt sbb push out push andl dec dec (bad) pushf imul std nop insb ret mov ds add pop add push sti sub push xchg bound ljmp inc or sbb pushw and xchg pop sub push imul cmp repz mov lret cltd cltd test pop (bad) loopne popf inc inc xchg sub mov jp pop sub mov push int icebp fs arpl push repz push je xchg pop xor stos sub cmp sub movsb mov add adc add scas dec fldcw jae jne mov data16 xchg movsb jl adc xchg outsb cmp lods sub popf cmp mov mov sbb test mov fiaddl mulb inc adc and aaa cmc lock enter cmp cmp test out add and xchg pop push into (bad) sub xchg test enter addl loopne cld pop cmp dec fs sub and pop push push loop dec bound iret xchg enter xchg (bad) in daa std sub (bad) xor push xchg xor shll adc cmp adc sub inc out xchg mov rorb inc rolb sbb pop mov mov jo arpl fs pmaddwd jns mov mov call fldt hlt aaa dec outsb lock loop mov push mov sub in aaa cmp mov clc cli inc leave xlat xor sub add sbb fimul test add xchg xor ss iret xor int3 mov xchg push sbb (bad) and ret jne add test push (bad) mov dec mov cmpb xor sarb fstl sbb mov mov xchg xor inc loope int mov subl ret jnp iret bound cmpsb xchg ja outsl cmp in (bad) dec mov cmpsl jge hlt ret repnz outsl ja add inc or shlb pop xor and push mov mov sti inc pop adc xor movhps xor lock fildl cld inc pop insb xchg xor addl sbb in movsl fnstsw addr16 xchg inc add into cli pop push jge xchg leave lcall mov out adc fwait bnd xor lds xor xchg or out sub icebp adc movl (bad) popa dec ret aad loopne stc sub dec inc adc dec adc insl js les ret (bad) mov aaa scas mov inc movsl stc dec adc pop arpl mov xchg negb outsl jbe pushf jg sbb dec pop leave sub add push int inc sub fiadd jnp lret pop cwtl scas ret adc in jl ljmp sbb inc jp outsb mov fiaddl icebp inc pop je bound mov mov leave mov rol inc dec fisttpl mov inc cmc xor dec lahf xchg lret call ret jb xchg lods in mov xor mov aaa outsb inc jae aad xor test xchg sub mov cmpsl loop and mov loop outsl aam push push inc js fisubr xchg test pop sub dec cltd push inc inc lret jns dec sub (bad) repz adc cli ret push (bad) mov push xorl ret roll mov jp sub repz sub cmpsb adc shll sub jns sbb call outsl xor sbb aad xlat cmp dec inc sub push (bad) out dec mov enter shrl pop aas mov cmp lahf xchg cmp outsb inc fldt and int fs arpl (bad) sub xor mov or add push btc pop out xor jae dec std xchg stc js shr mov (bad) sbb xchg pop push addr16 out and dec push lret mov xlat adc inc lret pop loopne ss in cmc mov xchg outsl dec add jg pop mov into pop fist jl sub int add mov cmp enter or scas mov xchg in jno xchg int3 xchg xchg movb xchg dec rcrl jb mov add not dec loope iret xchg je sub pop cmpb lret outsb in mov movsb push add in in mov sub (bad) dec jb dec xor dec mov out inc aad shrb sbb movsb sub aad dec inc aad pop xlat fxch add inc jne sub xchg movsb cmp jno dec jecxz decl lea stc inc bound cmp stos fcmovb pop lcall jnp imul std jb and push sbb call jecxz sub jo inc int3 adc xchg loop scas dec jmp sbb outsl cld dec mov std rolb sub arpl pop xlat push ja jg mov push enter cmp outsl imul mov rorl push xchg aaa jae lcall xchg (bad) ja iret ret mov icebp or fidivrl push cld ret sti fnop inc push fadds daa add sub xchg pop std rorl mov xchg aad cmpsb push leave push sahf dec dec (bad) jb cmp xchg sub sub cmp mov vmovntpd icebp pop bound inc js in add sub push add jecxz mov pop jne push and out scas adc cwtl add stos dec inc decb push pop rorl insb dec dec jb adc push jae xchg outsl sub in pop or pop cltd xor (bad) lds subl adc inc es add jno xchg sarb icebp push stos or cmp sub mov push sub xor test dec enter adc push inc push xchg es sub (bad) mov sub or test lock mov andl sub mov dec js sub jb lods lret pop and ljmp jnp and sub inc sbb jo cmp rorl jb xchg repz addr16 scas dec or ret fcompl popf mov gs test bound into mov inc (bad) fnop rcrb xchg jb xor mov rorb add lds stc shll or inc inc jmp nop sub ds loopne jecxz insl fimull fsubp fild daa jmp mov fist add jb inc push cwtl adc push push test rcr jae sub inc dec mov xor jge mov push mov push aas sub vpunpckhqdq cltd int3 repnz rcll jg cwtl sub push xchg sub fmull sahf and adc (bad) ficom add lret add cmp (bad) lahf push pushf jg (bad) lret les in gs add push fincstp ror aas xor add test push add inc jb push pop repnz jnp jbe int and (bad) es (bad) lret adc jae inc js pop int dec (bad) push inc jge data16 or xchg rcrl cs dec sbb push mov push inc dec add or inc cmp cmp inc mov push cmp xor sarb adc add or mov mov movl rol inc pop mov push into test jge mov (bad) cmp and and and xor add sub pop addr16 mov pop fstps adc aas shll and xor mov pop enter cmpsb sub test mov stos adc push inc sbb mov cmp (bad) sbb enter cmp xchg dec into mov dec fcmovne movd dec call pushf pop mov jo addl mov push inc cs je dec clc addl and xchg pop lret pop xchg mov pop nop sub pop dec add enter or out inc dec inc rcll bound push popa pop dec pop dec cs mov dec jle cli inc fwait xor mov cmpxchg8b inc pop sub push push ret (bad) aaa dec xlat dec sub xor mov sub insb sbb mov cmpsb int3 sbb loop sahf insl push jp inc jo scas pop push pushf es loopne int lods jge lret cld aas shlb insl cs pop sub imul jbe jno aas inc and mov xchg xchg xchg call cld pop inc push (bad) movsb cwtl mov das cmp mov mov pop dec nop cmp jle call movsb dec mov sub sarl xchg fcmovbe mov inc cmp pop mov mov icebp cmpsl cmp arpl pop (bad) ljmp xchg movsb mul ret loope push cltd pop lcall ds mov ret lods pop mov inc cmp imul jae,pn pop jle call ret mov inc imul mov jno xchg (bad) jle addr16 int3 cs xor add leave mov mov shlb lret pop (bad) adc mov test cmp xor push lret dec sub lret sub inc js daa inc pop sub inc inc adc loope mov dec imul or aam pop insl push cmpsl icebp fidivl xlat lret xor jnp repz aas xchg mov cltd push int pop adc mov dec inc scas aad jg adc dec push sub outsl insl pop mov sub or ja push out fcompl ja cmp add sub jno push push push push mov dec cmp and test mov push dec into adc xchg xchg stos outsl (bad) insl ds shrl cltd mov aaa std xchg push mov jbe cwtl push lods xor jl push (bad) mov dec xlat push loopne in arpl xor gs data16 xchg imul push aaa and into cwtl or push (bad) jp inc xchg dec ret dec arpl xorl imul mov dec inc nop shrl nop sbb jge add lock fildl shrl dec lods add inc xchg inc fwait sub mov mov pushf sub pop gs arpl imul mov rorb push cmp rcll or test leave ljmp dec inc inc jnp mov in or ror mov jae or les mov arpl or in out and inc push pop mov pop push jae inc sub sbb dec lcall out aaa mov addr16 (bad) push or int3 mov les cld iret (bad) mov push ret rolb int3 or loope and or xchg dec rorl push and pushl test daa jb dec leave pop lret orl fwait xchg shrb xchg jp mov arpl movsl pusha cltd pop movsb dec jae cs xchg dec push daa gs inc mov lahf mov cmp pusha sub fs test mov inc fsts sub xchg push cmc popf sub push stos out pop ja lock push add pop jle (bad) jbe imul inc mov gs test or stos mov (bad) lods dec mov push jge lock addr16 mov icebp push add cmp xor int dec inc jmp dec cmp add inc into das aas mov imul lcall adc and push mov or dec adc push out push pop test pop push xor das pop or dec addb push push rcl fstl lret lahf dec das push push mov arpl lret lds jno inc cmp mov and repnz mov or xchg les push loope sbb popa into ss imul ret mov daa cmp mov jmp sti adc inc int3 jnp inc outsb sub bound std push jne add mov out leave or mov ret add aas mov mov or movsl jl dec mov inc mov nop pop mov insl add jbe xchg mov dec pop push dec inc mov jg xchg cmp mov push fwait mov mov mov ss pop fs pop xor jae movl xchg jbe adc cwtl cmp sbb lahf gs dec dec mov add or lds loop pop inc je dec idivb arpl add call aas mov iret stc arpl gs outsl (bad) arpl xchg and gs movsb popf lcall mov (bad) xor push pop int les inc lret inc addl (bad) rclb sbb mov xchg shlb sub popa adc pop inc test fnstcw dec mov inc mov inc or dec aas aad mov dec pop das cmp fidivr loope xor bound stos mov xor enter inc loopne mov pop push pop arpl stos and lret pop push cltd sbb das sub insl inc or movsb jae outsl sub scas mov bound aaa cld fstps dec ror or loopne icebp xchg int int3 shll movsb daa pop inc das xchg sti jne loopne (bad) scas cld mov (bad) cmpsl popf jne stos test dec int inc clc or jne,pt rorb arpl inc sbb xor adcl int test mov jl or adc ja dec jg fsts adc fs dec mov or mov movb dec cmpsb hlt rolb add push inc dec xchg cmp inc mov jae cs cmp ret ret mov ja pop je idiv push add nop xchg mov mov data16 arpl sahf mov or repz pop enter lods add mov cs out mov xor or pop imul inc adc or xchg cmp ret fcmovnbe adcb adc out (bad) mov push nop jnp mov jle bound jl cmp dec fcomps call and and inc mov vsubsd mov bound fildl mov lahf imulb push ss lea mov dec in js push (bad) pop add inc (bad) and mov ss inc aaa dec push sar mov lds or mov fsubl dec test arpl or push pop arpl imul mov adc mov sub dec inc hlt cmpsl push stc or mov aaa mov imul addr16 jns addr16 dec inc fild dec xchg sbb adc add into xchg daa int3 adc push gs sub xor cmp inc jno inc cltd jne cmp jne dec imul repnz dec adc addr16 dec pop inc push push pop out push xchg push movsl outsl rolb jne adc addr16 xchg inc daa aas pop xor cmp lods xchg cmp cmp outsb (bad) out je cmp jp sbb aad inc pop (bad) and xor fstps out xor insb shrl mov xor testb jbe push lahf gs cmpsl xchg (bad) ficompl pop sub push pop mov push pop mov push mov dec pop mov dec mov inc pop mov out addr16 xchg pop int rol sti insl stc iret mov pop push lock jmp lcall out (bad) fbld lods subl sub lret stos dec xor sub lock fistpll arpl and pop lret push rclb adc aam push push mov dec pop sub js mov xor in movsb mov into mov pop rol push pop dec pop jmp ret mov jns mov mov notl mov lods inc push xor push lds leave and jbe push into xor mov xchg cli js mov and sub adc mov inc jge call insl dec enter xchg cmp inc ds mov ret lods sub pop sbb cmp xor inc nop enter jl out sbb fdiv push das jle or enter jno dec aad xlat mov mov mov or mov and je in xchg push jmp fisttpll push mov mov push test push hlt imul test mov push ret (bad) or aas xchg mov shrb pusha dec fs arpl dec dec xchg xchg sub inc cltd pop popa test arpl push (bad) fild dec inc aad sub icebp fisub jo addr16 fistp gs adcl andb lods inc xchg sub in cli push imul (bad) mov (bad) mov nop mov dec scas mov negl jp cs pop mov xchg push or call pop sub xchg dec xchg gs dec shrl pusha push xchg adc les jo out push mov (bad) or dec cs push ficoml dec xor inc jle cmc push repnz lret dec mov lods iret dec xlat stos mov into push rorb nop pop pop aam cli or add roll dec popa dec lret dec sub xor out inc cld mov enter add int ret lahf push adcl pusha bound push xchg dec dec addb dec jno sbbl hlt xchg lcall test add jnp dec ds push (bad) lret dec dec push pop andl enter xor inc jno loopne dec push stc or mov outsb add xchg rcl xchg push arpl mov jl inc and test stos and jge cs push push xchg je jo outsb lcall (bad) push enter fs adc push jns iret mov mov ret inc (bad) int dec test inc mov arpl (bad) lret aas aam inc cs or icebp dec push rolb sub jbe sbb daa (bad) aam fs or xchg dec into fadds jecxz inc adc ds mov adc add mov gs gs cs or mov add jbe push sahf sub and adc jg in fistpl mov cmp in inc mov scas and pop into outsl mov push xchg dec fwait jb xchg push movsb test mov pop inc loopne les js add cmp jae xchg mov pop imul inc or jge adc aas (bad) in inc int3 mov int3 jae add out outsl or cs jae push push andl rclb sub pop pusha inc pop adc xor popa or dec inc jmp sbb jnp mov pop cmp inc cs mov mov sub dec jbe push arpl incl jo (bad) push pusha imul jg cs cmp outsb or sbb repnz icebp sbb jo mov int3 mov enter aas or loopne sbb push jl rorl fiaddl int jae xor pop mov les inc jbe mov cwtl pop sub cmpsl insb dec jp les fwait inc rclb lcall imul pop adc (bad) outsl int3 mov jl dec push leave cmp les mov or pop add jo fildll insb mov xchg xchg jne daa shrb jno hlt jecxz fist insl (bad) jae stos imul dec (bad) xor ret iret (bad) jle xchg pusha loopne mov cmp and repz adc sti loopne outsl (bad) or add mov into or fmulp xchg add cmpsl fisttpl int3 stos dec xor das xlat aam push test and orl sub mov cli dec out push inc push sub add cmp enter movsb mov cld inc mov and cmp es sub test cmpsl xchg dec or pusha inc mov je,pn mov jl imul fwait jmp inc pop mov dec push repz xchg nop and rcrb push dec lret icebp xchg mov jb mov fs (bad) arpl cmp sub outsb lret push sbb push insl mov lret leave mov ss fidivl xor arpl sub mov or into rorb pop cli cmp int3 mov iret (bad) dec push mov mov mov into adc inc pop and int adc cwtl push and push dec push pop adc pop jmp flds in inc test xchg dec xchg dec add jb sub push dec int pop pop lret push ret adc dec mov pop or cld jnp push dec sub cmc sub cli push hlt or cmp push dec cmp push adc gs jle push xchg push ds les or mov adc dec outsl imul or and out mov fstps in xchg adc push sahf push adc adcb (bad) stos imul dec mov pop mov gs nop push ss (bad) stc jns (bad) repz fld test lea pop repz pop xchg dec mov aam add xchg sbbl jo mov inc fcmove testl call or fldl (bad) lods add ret mov adcb mov mov mov jp cmp jecxz rol mov jp ret lret sbb mov iret mov push lods push mov in push (bad) or cmp cltd xchg (bad) push mov mov arpl push sbb push in xchg (bad) push sti stos not jg enter fidivrl inc pop pop (bad) mov pop out movsl push push fmulp gs pop xchg dec xchg in rorb lret fisubr sub ficompl (bad) or mov xchg (bad) jbe xchg lret imul (bad) sbb addl fwait mov fldcw and outsl inc aam lret mov mov pop sub pop inc sub xchg imul xor dec dec call scas into pop subb imul mov add lcall mov push sub jge adc fs pop clc in pop xchg (bad) pusha mov pop cmp out jne xchg push sub pop dec pop pop (bad) dec adc push jge pop stos xlat push xchg add pop inc and jbe sub xchg cmc mov int lret pushf mov sub out test and cwtl sub pop inc pop lahf push sub loope jb or aaa mov arpl loopne addr16 aas push cmp fisubl test add push rcrb in jne push dec pop dec aam xchg push test and xchg stc lahf push jbe add dec sti adc lcall or xorl push add sahf sub rcr push int3 leave aam fs push xchg daa push aas into popa cltd mov stos or xchg push mov stos xchg xchg pushf imul xchg and jne lret and xchg (bad) fsubrp sub dec in jge pop cmpsl inc sub lret pop std (bad) (bad) jne mov mov lret add xchg lcall mov into cmp jle adc pop adc adc push into inc inc jmp pop lods xchg dec pop or push pop push outsl jmp cmc xor pop jle adc push loopne ss ret jecxz or ja rcrb ja mov aam dec leave je mov mov aad test nop pop outsl iret mov lret jg jle xorl iret mov mov lahf add out mov push out inc addr16 xlat pop shrl push scas enter ret sbb xor mov xor pop insb xlat push cmc mov gs sbb pop dec movb (bad) mov jae fldl add arpl or fcmove xchg addr16 mov or dec (bad) push out push clc xchg test imul aas xchg xchg mov dec push xchg xchg je mov (bad) cmc push or dec pop movsb push mov enter mov decl xchg es out and mov mov adc pop dec push arpl xchg js out repnz push push fs (bad) fildl addr16 sbb xchg lret stc or inc inc mov dec jg imul lds ficompl xchg push dec sub cmp aad (bad) fs in insl sub push test or movb mov je fild adc or in xchg lahf out in or ja push fistpll ds xor arpl (bad) (bad) and cs js addr16 mov cmpsb push (bad) sub les and aam test pop in adc ficoml xor inc xchg into xor pusha cmpsb xchg and jnp pop in lcall addr16 xchg lret int andb pop lds (bad) ds sti sbb mov xlat aad mov into nop xor mov inc popf cmpl cmp bound mov or out addr16 (bad) jle push push out cmp enter mov xor xor ds insl aam addr16 mov inc dec dec push rolb pushf aad cmp dec push rol roll fwait cmp add jp xchg dec cmp adc mov pop mov mov cmp push dec push test insb addr16 movb dec mov and mov in xacquire lods cmp outsb inc adc xchg sub jo push outsb lret sbb (bad) into push insl jne cmp mov dec mov fistpl adc pop nop push shr into mov jge sub jecxz push rcrl jl dec (bad) pop sub aaa cwtl les add add mov test cmc cmp mov pop gs mov mov dec int3 arpl arpl push or imul rclb (bad) mov insl mov fdivl dec xor mov push xchg mov inc stos lods xchg into das sub fs jns inc push cmc sub movsb bound lods lret lcall pop mov das lods test cmpsl xchg int mov repz cmp or roll sub mov mov inc and dec rcrb pop lods dec enter inc xchg imul xor mull dec jecxz jp sbb gs aaa mov inc inc cs nop xchg mov das sub cmpsb xchg xor xor les and data16 ret mov das mov fisubr cmp pop int or add rcr pusha dec jl pop adc or test call xor adc bound push dec mov sbb gs imul movsb sub mov pop arpl and call or divb jle adc test cmp dec mov rorb mov cs gs or xchg lods push jge or data16 jns imul enter inc mov or xchg das pop dec stc inc push sub xchg int3 test lds (bad) jp push xor mov dec dec cmc sbb stc xchg mov xchg int3 sub pop test test lock sub dec mov out adc inc cmc adc mov xchg ret cwtl dec fwait cs scas xor jns cmp cmp out ret push cld jmp xchg mov (bad) lds test dec push jnp mov adc cs xor fwait dec inc sbb adc rol out in pop or daa imul call imul fcomps jb push daa pop inc pop int3 cmc imul jb jae mov dec popa outsl pushf dec and test push fcomps (bad) loopne fs adc xchg test dec push shrb pop loopne je pop dec call decl ror xor ss xor fisttpll out inc fstps aaa pop into mov push daa push or fcomps into add nop lock pop mov pop add sbb clc and scas add fs adc jg outsl inc in push test test dec xor jbe sahf and jl dec and arpl aam fsubrs and mov insl loope sub and cmp adc inc cltd mov sbb push pop mov (bad) gs sbbb iret or pop mov jle xchg mov cmpl xchg insl jbe cmpsl sbb xor test daa cltd fnstsw mov add jae sub xor das ret dec mov cmp pop mov call sub das cmp int3 push addr16 adc lcall push jle inc cmp clc mov movb xor push and fwait push ljmp in sbb rol pushf jbe push les sbbl (bad) push rcr xchg add rcrl js mov push pop cmc test jae push stos inc or ret dec or and inc pop dec arpl stos shll aam ds or xchg mov xchg lds (bad) xchg pop adcb pop dec into sbb jle xchg or cld jbe daa (bad) iret dec into outsb or lret cmp stos xchg outsb nop fsubr push xchg pop push ja cmp in push add push arpl pop mov test mov jne,pn aaa add (bad) jle mov (bad) sbb sahf ja test jg pushf xchg or das push lea mov repnz bound xchg add pushf rclb mov jecxz rol arpl cmp jp imul inc enter in rclb jne push lcall or daa out mov bound mov jmp daa dec mov daa adc or inc mov sbb mov (bad) cli cmp jg inc jge dec jno or movsb adc jb outsb pusha cltd (bad) test pop outsb push les xor add clc cmpsb daa mov les rcrl adc mov lret gs mov int push push jp sub jae test test adc or popl lret (bad) push orb jb out (bad) mov es ja ds repz leave xchg push dec inc lcall dec hlt jge orl mov mov or adc aam jle inc jl and xor add and rorl je mov dec sti adc in in ret fcomi loope dec js cltd loop mov lock mov aas movsb ds lds adc and xchg sar fs mov jecxz pop test cld push fs mov mov mov add aad in into movl push (bad) jo or pop add enter sub xor aas leave (bad) pusha int3 xchg dec cmp repnz in pop pop (bad) push add mov (bad) sbb ss (bad) push mov ffreep mov mov insb jno cmp lods pop fwait mov (bad) stos (bad) lret repz fs scas pop fsubrs push pop mov sbb out loop push int3 mov xchg adc outsl pop cli xchg sbb jnp dec pushf mov inc adc xchg fs daa fdivrl inc jle xchg aas push addr16 push jb jne cmpsb test sbb fs movb lret mov or fcmovnb xchg or pop sub cmp push mov ja cmpsl xor mov push xchg cmp add push mov aam push push xchg cs (bad) xchg pop inc mov add bound jno inc mov ja pop out mov clc scas pop lret aam mov cmp sub inc push sahf jecxz,pn arpl push call dec pop stos rcrl stc mov shld int3 mov dec out mov dec jg out mov dec add jecxz rol and mov dec mov test cmp scas rorl sbb inc clc mov (bad) clc inc sbb sub mov enter mov push inc out (bad) pop mov pushf jmp mov cmp xchg xchg dec arpl inc jmp mov push sub cs jmp jne pusha int3 mov lret sbb inc int3 push or mov inc pop push mov fdivrl lods into pop pop dec inc mov add jle jmp xchg xor push jmp jb xlat xchg outsb dec cmp mov inc xchg and add adc cmp rcrl mov aas cs or arpl sti cmp pop mov dec inc mov (bad) lret (bad) dec loop dec inc inc fadd fstpl cs push or bound addl mov lods inc xchg and (bad) fldenv adc push pop cs fisubrl xchg (bad) xchg mov cmp jl outsl mov dec mov push sahf sahf ds (bad) dec test mov out jl sub xchg test (bad) mov dec adc pop jp popf aad jnp xor dec movb add sub addb pushf adc jp cmpsb ret je cmp jae cli inc adc sub mov mov cmp insl (bad) mov xchg pushf adc ret imul movsb pop outsb fisttpll xchg mov add shlb clc pop lds sub out leave xchg fs (bad) aaa or cmpsl repz insl adc dec lods mov int3 sub push fist ret add xchg mov jg call es xchg dec push push push sub push lods into sbb das sub das push and push shlb int mov xchg enter inc cmp jecxz push iret mov test inc mov mov stc ret add mov mov (bad) jae jmp sub lret adc jle out jbe daa jo dec lret push and xchg outsl xchg push gs xchg out inc daa pop rclb cmp xor out dec mov dec inc sub std imul enter pop clc jb sub pop xor inc sti lods rorl inc xchg (bad) jmp jne fsubs les arpl outsb jle inc out push shrb int3 call call pop dec sub push ss inc fmuls xchg out imul gs dec jne push and in mov pop add mov aaa xchg add cmp add stos sub pop dec inc lret dec xlat push and jb mov (bad) scas mov pop push gs xor lahf dec arpl mov (bad) jns pop inc ret fstpt or cwtl jg inc jbe bound test mov xchg frstor bound dec subl dec arpl mov arpl andnps pop xchg rcr cmc sub dec pushf sub dec mov jae pop movl dec notl mov roll jmp dec dec dec dec pop das dec test arpl out (bad) and cmp addl aas xchg sti pop fsubl mov fnstcw mov cmc sub bound push jb or roll mov repnz std dec add add xchg ds imul aas push inc mov push dec out call adc stc pop adcb fcoms out shll int dec movl lcall xorl outsl jnp mov add mov ljmp lcall dec insb rolb jbe enterw cli cmpsl fcomi jae mov enter icebp fbld test pop or lds or dec push ss insl out shlb xchg in or inc xlat aaa mov adc out bound mov repz ss gs sub sub test jbe adc (bad) jge mov jbe daa or xchg add mov fdivr bound inc loop call pop ljmp sarl pop cmp les and adc lahf in das mov pop mov dec mov addr16 pop enter push ret inc daa gs adc inc cs cwtl into jbe cli test cltd cmp mov test sub nop push inc stc repz imul outsl mov or fcmovnu out xchg inc and xchg push xchg aas sub (bad) pop mov imul dec rorl (bad) fdivl rol or ret sub jmp cmpsb lcall (bad) dec cmc iret (bad) out cmpsl dec adc push fisttpl out push add jo in dec jne pop addr16 (bad) enter lcall into loopne sbb dec pop les xlat mov mov jnp mov dec xchg aas dec jae adc imul add subl repz lret cmp jno ret sbbl add sub cmp or lods cmpsl dec cs sub aas aaa and mov imul push jo std cwtl push jae mov adc into outsb outsl (bad) mov fs mov mov (bad) xor xor pop mov outsl (bad) jmp outsl cs mov dec fdivr pop fstpl stos mov dec popa inc jbe imul mov push cmp (bad) adc sbb roll sbb mov popf pop rorb push pop (bad) lret in cmp es xor or push mov sarb mov or dec dec gs lods pop push fcoml sahf pop push int3 add enter in sar xor shr arpl push xchg mov repnz xor xchg fwait jecxz cld jmp dec into adc jl cmp jmp or subl xchg pop push aaa idiv dec lds dec xchg movsb pusha jnp mov and outsb jmp adc out les dec xchg test lcall in push outsl sti inc lods jo cs cmp dec dec inc movsb clc arpl faddl pop pop into fistp xchg push je outsb and xor dec mov test adc les jno (bad) mov pusha loopne adc orb or inc (bad) or dec sub sbb mov mov aad cmpsl daa sahf xlat imul mov mov fildll xchg ror notb imul roll dec sub dec inc add dec ret lds rcl pusha and cld (bad) sbb sahf pushf xchg daa fs call cld std jmp ret lret subl call xchg adc jo fcompl insl sub aas sahf jl jno push rol dec dec arpl xchg sbb adc ja imul retw (bad) pop push aaa pop dec imul sbb bound pusha scas jecxz test pop jae dec aas lahf leave mov xchg dec aad sti inc cmpsb jae cld push xchg sbb adc flds pop (bad) xlat loopne jl dec out push gs (bad) mov pop mov mov mov mov cld das dec icebp pop xchg pop xchg pop xchg fsubl push jnp or push adc jnp outsl and rorl insl jo test ljmp and movsb pop mov fwait pop and add xchg mov jo insl mov int3 pop or adcl test and pop outsb push xchg fmuls std pop pop dec cs push inc jmp jnp cmpsb mov subl shll repz daa push sub hlt xor jo pop and (bad) sbb test pop xor (bad) aad xorl subl adc int3 mov inc fsubr jmp das add mov add aas dec dec nop dec data16 lret push dec hlt sbb mov adc test add dec and popa test xchg push lret dec cltd arpl mov dec xchg and lcall pop dec mov xchg jbe stos insb add hlt mov stc jl mov pop mov aaa outsb sub aaa ficoml pop sub outsl push fsubrl outsb daa (bad) imul adc adc lds test sbb imul ret nop sub (bad) or in pop push dec push pop and scas mov inc push outsb adc and and and or mov cmp out cs xchg jle mov add fldenv push dec add inc cmpl and (bad) movsl int3 cs pop jp inc cmpsl sub ss out cwtl xor jmp add push (bad) mov popf push imul imul mov sti scas inc sbb pusha into dec lahf stos cmc dec andl mov jecxz mov mov aaa cmpb fistp arpl xchg mov mov bound popa mov dec xor mov push lods cmp cmp push sub cs lds push add pop push call mov mov iret jle add bound loop out leave xor mov inc push push mov insb mov dec xchg pop add in mov (bad) sub loopne aam aaa je hlt orl test mov jmp dec fucomp add int add mov pop pop in lds jmp or pop mov mov mov sub and dec push js sbb xchg pushf ds jle adc mov jp (bad) jo xor inc out ljmp fs andl or (bad) dec cli mov sub xchg push cmc xorl rorb dec mov pop jle mov aam lods mov xchg addl push inc cmc mov dec mov das (bad) sarl sarl pop stos jecxz sub orl dec out xchg pop push cmp stc add stos sbb std pop cli pop dec aaa in mov je ja cmp call add or xlat mov stos xchg (bad) fwait test mov insl cmp pop xlat xchg lods out pop stos add dec push rcll arpl push xchg pusha add pop inc sub or pop fwait int pop in push mov loopne sahf loopne and pop pushf daa fistpl loopne xor int lcall dec and xor pop jle mov and (bad) jp dec mov jb lea mov dec in sbb nop mov xlat imul and pop loop,pn stos sub sti and mov inc push das push xchg dec lods mov bound sbb cmp insl xor les ds imul xor test stos mov insb sub push ja xor sbb cmp dec movsl (bad) daa (bad) xchg and xchg sub jmp fwait jcxz pop dec (bad) movsb popa push in pop aas test or inc pop xchg stos jae lret mov lds sti test mov jle imul shrl shrl (bad) fcompl jle dec repnz je stos push ror push dec or jae subl mov mov cmp imul push into push test add jne repz test or dec mov push jnp fwait inc mov add insb inc mov shll xchg mov rol sub mov nop and dec sub dec aam arpl rcl or aaa fsub ret pop addr16 (bad) arpl (bad) xlat dec push inc sbb or inc or mov in dec sbb mov xchg shrb dec clc out cltd arpl mov dec out dec les arpl jae lret std pop mov cmp (bad) jle bound enter jb stos add jecxz ds pop add testb or inc mov inc rcll mov into test test nop in dec dec add push ret xchg inc cmpsb cs jb (bad) lods cmp push mov out jno pop lods push iret enter xchg push pop pop ljmp andl dec mov dec (bad) mov mov aad stc imul inc inc fidivr inc push iret mov pop cmc ja add mov push frndint jb inc push (bad) mov mov xor adcl clc shld sub hlt int3 push pop or mov or sub into imul ret rcr mov xor pop adc into mov popf jbe mov pop sub arpl xorb popa xchg push rolb dec mov pushf push mov or pop int3 sbbb test test xchg sbbl mov (bad) xchg adc jo outsb int (bad) int3 and mov or xchg insb add dec and push sub ret mov rcrb or inc repnz or out push (bad) fwait xchg jp cltd xor xor inc jnp arpl mov push push inc push sbb stos push not push xlat push mov jg,pn out pop adc jns mov outsl inc xchg mov push jg rcr push subl mov lret inc mov push and push mov jne aas inc add ret arpl (bad) lock (bad) loop inc push or sbb mov adc mov ss xchg es adc and adc in pop push jno inc sbb (bad) or inc mov icebp mov pusha push xchg bound cmp cmpsl jnp inc repz or xchg adc repz push xchg mov inc insl lahf test mov pop mov (bad) out in (bad) mov mov cmp adcb int3 aad dec fistpll or int jbe xchg dec jmp jp in pop sub flds inc sti sbb push sub xchg outsl pop (bad) arpl xchg lret movsl jl pusha enter (bad) push jmp xchg lret pusha movaps sub imul mov js call pop push jnp mov xor repz rclb mov (bad) mov test aaa cs add sub dec pop jns je cmp (bad) insb fildl cltd test orl fistl shrl xor jp in xchg faddl fldcw push jg lds lea dec mov aad out adc pop cs nop scas add xchg cmpsl into dec lods inc fwait out dec cs test jg mov (bad) jp push or push xorl mov dec cs outsb or scas lcall mov jecxz fidivrl fsubs xor nop shrb aas sub push jmp fwait add aam fnsave sub cs in add add lds and imul mov dec and push cmp movsb sub jae cmpsb cmp repnz cli add xchg jne test and in or shrl xchg push inc outsl push into sti jg and lcall sbb inc mov in imul or adcl out sub or inc mov popf add push cmp or in mov mov or lcall jbe ss fs mov jb faddl dec sub gs push jns test repz sbb mov insb mov jge sub fwait ret mov sti sti cltd sub adc sub test lahf in sbb mov xor shll aaa sbb push dec movb sbb xor push add push jns adc sub fwait mov mov loopne,pt mov mov (bad) push inc or and xchg mov out mov scas push mov mov sti dec pop push dec ss cmp inc cmp sbb scas or hlt rol cmpsl jl (bad) jne bound test xchg aam push mov jns shll dec or mov (bad) (bad) push xchg adc (bad) push addl dec lds adc leave (bad) push push adc dec aam xchg leave pop lods dec sub xor xchg xchg pop imull int3 mov cmp mov mov xlat inc out xchg dec dec inc lret sbb (bad) lcall push cmpsl loope out hlt pop jae scas or int3 outsb and fwait je push jbe inc adc add mov cltd and out jnp nop pop push int3 push cltd dec xor xchg aas je xor or mov fwait and or pop jecxz mov mov push push into inc inc adc jnp cmpsl mov das dec out test test insl add pop inc int3 nop xchg (bad) lret arpl ret or lds inc (bad) (bad) (bad) xchg xor out and push daa sbb xchg ret pop mov mov addr16 out jae mov lds xor pop cltd leave push jge lea lahf cld gs les dec mov fldenv jecxz sub outsb add add inc xchg imul and mov popa xchg push jl movsl mov stos (bad) push jecxz or xchg imul sbb push xor push mov and pusha (bad) std gs jl dec inc aad push jae push sub jp pop loopne,pn orl test mov inc xchg lcall fstpl push enter cmp out mov push shl sub pop (bad) mov cmp pop aas mov mov add lea push inc mov imul pop addr16 dec add enter (bad) and xor aam sarb sbb movsb mov add add insb xor cmp mov or into pop int3 jnp addr16 jae inc pop sub push push inc addr16 fwait add mov sub jno arpl (bad) push roll (bad) repz xor imull daa dec inc sbbl cmc sub insl push mov (bad) sub and inc jo sub jnp push in mov aas in pop push shlb (bad) pop xchg or pusha je sbb mov xor enter ja hlt push dec or mov fwait inc add loop and xor movsl cs ror pushf dec out push hlt mov orl xchg je pop je pop jb (bad) mov xchg daa xchg jns push (bad) lock repnz cmp je (bad) scas xchg mov das sti sar mov sahf inc and lds push mov in sub or cmp les dec les mov push add lea mov insl mov pusha lret mov add mov or inc or iret inc xchg cwtl add dec xchg push mov aas push add push jbe inc rcrb into push int3 cwtl aaa fstpt test loopne stos dec cmp add inc (bad) movb popf or sub xor arpl push rorb fs lahf sti xchg mov pop cs shrb and (bad) pop cmpsb or test ljmp mov hlt or dec adc fidivrl adc mov es rcll aam mov ds jns ret sub mov cmp jns ret push mov mov jnp fs outsl pop out dec push xor fs repz mov dec cs rorb icebp adc repz dec mov popa mov jae (bad) movsl addr16 cs xor and and sub das pushf sbb lea push xor mov lret nop push inc add in push mov ret shrb push rorl pop cs pop dec xchg mov pop xor push push or mov push add clc adc xchg in imul shl push sbb push lahf out scas mov cmp stos push jo and push inc mov aaa mov sbb jbe lahf dec dec xchg dec push ror xorl mov mov ret mov imul jge inc push xchg (bad) jmp dec mov push cld push push in push xlat sub pop or outsb (bad) or out push repnz pushf inc mulb mov dec dec outsl mov push cmpsb popa push out and pop int3 orb pop loope push mov mov jae xchg testl push mov enter pop jns pop out sarb jae stos pop test test lret sti int mov push or pop icebp jnp hlt fsubrl dec mov jbe dec push ljmp dec cs xchg (bad) repz xchg mov dec in into call or xchg fist push dec lods stc (bad) push pop cmpsl mov xchg push lods jns or jae ja mov popf pop orl dec add into ds lret sub adc adc test popf ds outsb mov dec mov dec cwtl ret insb cmp inc outsb adc dec ds add lret mov mov push int3 scas push push data16 xorl adc sub push push xchg dec stos mov push sar mov daa inc pop hlt xchg dec inc pop pop sub rcr and ret fisubl clc loope imul or (bad) mov out (bad) lret xchg inc mov jbe nop (bad) inc sub stos pop es and mov in dec popa sbb in pop add inc or xchg aas adc push mov inc mov push imul push rcrl sub inc sbb xchg jge xchg arpl aas add lea inc pusha lahf xor pop into mov xchg and pop movsl stos imul and push imul pusha dec (bad) add mov dec jbe ret mov adc xchg xor js mov dec add inc xchg int je pop jne mov ds push fcomps dec ret mov (bad) xchg cli fist or lcall fistl arpl dec adc outsl andb addr16 arpl adc jns jno xchg pop aas mov mov jecxz sbb cmpsb sbb test push xchg fidivl jnp pop push (bad) jb and insb fdivr xchg xchg aad in add inc aas hlt and lret mov outsb (bad) aam mov or xlat xchg test adc dec mov push outsl xchg cmc xchg pop dec data16 pop out lea lock pop ss mov inc imul xor mov mov insb sbb jle andps push add test addr16 cmpsl adc push dec frstor mov mov roll ja repz inc clc mov (bad) inc dec outsb fs add (bad) xor in loope xchg mov (bad) cltd lcall push xor jle cs mov jbe out jo ret (bad) sbb pop xchg (bad) or data16 mov movb push jecxz jle sbb into pusha in pusha addr16 mov sahf fwait cs xor xlat dec pop xor push fstpl push aaa mov xchg jge call sub and sub nop call dec outsl (bad) scas ljmp iret jp mov les adc insb adc outsb jl mov jl xchg push inc fstpt aam imul dec inc sub mov cmp test push adc lods arpl mov fistp dec outsb loope push xor push adc loopne pop loopne ror lea insb (bad) pop rol mov sbb jnp mov inc das data16 lret xchg dec dec inc push mov cmp fs outsl xlat andl jno hlt lea test dec mov lcall cmc adc mov mov push rol in rolb (bad) roll mov mov push shlb and pop mov dec jle call in dec cs data16 push jnp dec (bad) (bad) out mov cmpsl jno jae dec jp or add int3 dec lds push push (bad) popa (bad) jle out adc (bad) sbb xchg mov sbb pusha fildll sub push mov push cltd lcall sub nop adc dec push add lods scas out xchg add mov les sub dec dec sub push push lcall je inc or mov pop outsb adc (bad) mov mov inc push dec inc xlat dec gs pop or inc sti jb ss (bad) dec aam sub push push inc fist adc or push inc mov stos aas insl fisttpl sbb push push js sub scas sub jnp xchg mov push push adc mov aas (bad) pop rorl in arpl cmpsl dec jnp enter (bad) jg and ret cwtl mov lret jge lahf lahf in pop mov adc jo das out push cmc (bad) xchg repnz sbb xlat lcall lods and push inc subb dec mov add add cmp cmp lret push sbbb mov push jb jle insl mov inc hlt gs mov sub push xchg aas inc ljmp divb adc divl jg dec outsb pop repnz pop shrb xchg jb ljmp xchg xchg pop sub or loopne sbb sub mov repnz xchg out dec gs cli sub cwtl clc inc push dec dec nop dec cmc xlat mov dec push movl push dec jns imul ja xor push stos outsl (bad) dec jbe add icebp dec ja cmp les xor pop jg and hlt sbbl push ljmp mov stos pop (bad) js sub dec loope push out adc (bad) fidiv add into dec stos xor leave mov mov mov mov or mov pop sahf (bad) adc test movl iret outsl rcl lret cmpsl xlat gs pop fisttpl leave test mov test push cmp lret out sub pop cmp das push cmpl push lcall cmp push push push or lods out dec jle pop xchg push dec jg push data16 pop roll dec arpl cmpsl je inc addr16 pop pop les or pop outsl rorl jae pop out arpl mov dec call dec xchg inc lods sub inc dec (bad) inc add insl cs fdivrs add adc or inc mov into add pop arpl add mov (bad) xor pop xchg ds (bad) push (bad) adc fmull dec mov hlt nop dec dec in dec popa (bad) nop dec jns cmpsl sub sbb adc xchg sti int sub fs dec jbe pop gs imul push xchg dec cli add xchg or pop sbb push inc cmp pop xchg dec xchg fs dec notb gs cmpsl xchg (bad) ficoml inc and dec dec fcoml dec or insb cmp inc adc inc cmp mov inc in (bad) rcll xchg dec rcrb add stos mov mov add cmpsl cmpsb rol jbe aas mov shll xor mov push cmp bound rolb jmp inc icebp dec test aas sub outsl xchg mov rorl xor mov sbb xchg xchg outsl dec lods mov roll add adc xor aas mov dec bound xchg cmp or ja cmp mov fdivrs sbbl add dec adc dec cltd dec pop aad fcmovbe mov nop clts shlb dec pop jle cmp mov jg (bad) pop nop std xchg mov pop mov rorb fwait (bad) mov xor out mov pop or pop mov inc inc loope test sub mov cmp sahf (bad) fxch insl xchg les jb sub add jo fnsave mov jns loope sub repnz daa cmpsb or ficoml shr dec mov sbb pop jns les jnp iret push adc test ret cmpxchg xor lods pop xchg out dec push dec sub (bad) mov cs xor test (bad) (bad) jmp mov imul out mov outsb mov mov inc shr jmp dec fs enter mov loop jo jbe mov push mov sbb rorb dec int3 andl pop or adc mov dec push mov aas push aaa sub jnp dec jg subl popa enter dec cltd jl inc sub inc xor cmp fwait sbb mov xor cmp add mov (bad) clc pushf adc js dec sub repz pop dec lods arpl sbb sbb push dec ret mov hlt addl inc sub dec dec arpl int3 cmc fwait loopne imul inc insb add push in inc mov push cli pushf sti jo (bad) or dec cs mov movsl jp or cltd mov pop add or enter gs rorb pop xlat aaa loop dec fistl mov xor bts pop jmp int inc pop lahf test dec mov jnp pop daa sbb sub sbb dec cwtl and dec sbb and xchg fadds (bad) je sbbl adc xor xlat mov push jno insb scas insl pop and inc pop jecxz inc or pop xor jecxz lcall (bad) mov cs sub repnz mov mov push cmpsl xchg push out jmp iret xchg jp and sub sub mov faddl push (bad) sbb dec or push cmpsl add mov stc rorl push ret sub roll aaa dec add cmpsl insl mov inc sub imul mov cmp rcrl mov cmp (bad) rorl loop aam (bad) pushf (bad) fwait lahf xchg stos pop in mov xchg xchg in mov pusha push jne jge insb dec enter sub in cmp imul pop fcmovb jmp das inc sti shll mov sti rorb nop push aas xlat lds jl (bad) aam jae jecxz mov lods pop aas enter xchg gs push inc dec mov arpl mov xor pop loope mov xchg adc jmp sbb mov inc rorl popf push push in and int3 push push enter fdivrs xor js push shr icebp fwait ret jge push aaa sub cwtl xchg xchg xchg lret stos lahf cltd fsubrs pop int3 imul lahf sub jae mov cmp mov int3 mov inc jecxz mov fcompl int3 mov mov stos adc dec xchg ds push stos cld pop push xchg test repz sarb aad push push and mov pop test push jbe and mov ret or lea sahf pop sbb mov sub in push int3 inc sti aam push cwtl repz inc mov pop dec pop dec imul insb test dec rcrl sub adc adc inc pop mov jecxz (bad) in fldcw or or sub push xor sbb or xchg sub test cmp jbe scas push push int testl push stos sar inc sub cld add and pusha pop jno mov sub cs mov jecxz sub xchg mov mov mov mov imul ret inc xor sahf push adc lds and and enter je or sub cmc faddp les mull inc mov and inc fnstsw sub addr16 adc ss clc repnz into inc sbb lea mov idivb leave jne push shl sub add js inc xchg adc cmp push rolb inc (bad) pop sbb (bad) jecxz repz cmp and adc mov out cmp imul jo jg add sbb xchg push xchg or dec xchg in dec mov sub mov xchg mov popf mov or push cmp dec rcrb into subl push add mov movl into add push inc xchg cmp inc repz ss in adc and cwtl dec and pop sub xchg push popa mov test xor xor sub lahf out inc xlat push mov pop jmp jecxz daa pop or xchg in insl sub mov ja out clc jnp xchg in shrl or push loopne loopne jae (bad) das aas xor clc enter lcall in (bad) cmc push push mov sub ds inc or fwait addr16 push jne add lret loopne loop ret (bad) inc add je fadd stos cmp insl push jle ja outsl aad pop rcl into leave sub adc mov xchg sub roll inc dec lods dec jle in push (bad) loopne mov inc pushf dec or xchg sub out (bad) into subl mov (bad) push xlat add mov int3 shlb push xchg dec xor dec andb dec cmp xchg push cmp jno test lods jg jg jl xor mov xchg (bad) aad stos inc (bad) cmp test ret cmp sub pop (bad) mov xchg ja cwtl aaa sub dec sbb dec cs mov fdiv pop cld jge xchg (bad) mov addr16 inc insb jae cmpl sbb enter xchg xchg aad jge ret (bad) push hlt inc jg xchg int3 push cs das movl rorl aaa or imul inc fucomp mov mov cmpsb mov (bad) xor cltd out into xlat sbb sti mov rorb aam insb fcoms jae inc add jl jg jb fs iret pop movl xchg inc (bad) jnp or pop push imulb addr16 adc subl iret adc out mov (bad) fdivrs shrl enter add and xchg int cmpsl inc add or cmp ljmp test stos lret stos cwtl fadds pop mov cs rcll jl jo out int jne or jl mov lds inc fisubrl test push int mov pop xchg push ja int3 xchg cmp test gs mov mov lret add pushf leave int sahf addr16 mov ds arpl or (bad) call pop jmp xchg jl fdivrs aad dec int dec test cmp or inc push orl int add js std icebp (bad) aam outsb and insb xchg push imul add repz inc push lock jge push dec mov or popl or jecxz mov push push das stos xchg xchg mov out packssdw sbb (bad) and sbb sbb push sahf test inc lcall lds push push inc and clc cwtl fistpll and cld xlat push lret (bad) enter adc test mov mov or dec inc xchg adc outsb push pop (bad) jne outsl jg dec mov jmp push add lods push pop (bad) jo,pn inc fwait outsb add xor xchg cmp es arpl loop incl xor les fisubrl into push outsb or subb hlt inc lds insb mov push cmp mov cmp mov adc xchg dec push cs sti or push bound (bad) insl cmp bound nop xchg pop add jg add loopne lds dec mov into mov (bad) jl in xchg aad dec lock aas mov and sub rcrl xorl jnp (bad) js sub sbbl into pop (bad) arpl fmul outsb jbe push mov or lock fild out je and fild mov icebp push or mov add xor pop push pop push jno loope bound cs mov pop pop mov daa mov sbb push add dec mov add sub mov (bad) push (bad) mov or push bound rcrb inc pop xchg push (bad) movsb (bad) int3 inc or in popa dec push sub mov push lds mov mov mov movsl (bad) lock loop fs jno scas lcall dec inc dec xchg addl sti xchg clc (bad) xor in jbe lods push (bad) enter add inc imul xchg lods sti inc push sbb mov jae das in jae imul (bad) dec lods pop add or cld in cmp dec ja add cwtl test cmp daa mov mov into sahf add jg push popa sub xchg mov push cmp test je ret sbb mov mov sti daa add lods ss dec inc js scas adc jecxz pop and dec mov les cmp mov imul jecxz les dec xor dec (bad) or lds mov dec push rcrb xor dec les pop jne xor test cmp bound mov mov xchg jg mov cmp pop cmp lock leave call inc xor adc dec repnz call movsl add cmp xchg push adc xchg jmp inc sti lds mov sbbl stos mov inc add ret cmpsl jno fsubs (bad) xchg gs int3 int add sarb out sub push xchg inc aas lds xorl mov xlat movsl fwait adc fs daa cmpl loop push xor rorb inc xchg flds mov cmp xor cmp sbb cs aam xor or inc mov int xorb dec and push stc inc test adc push je fsubl mov mov xchg dec or adc (bad) jb inc mov aas cmc shll cs data16 cmpsb test (bad) lea cltd arpl sti jg sar sbb pop xor arpl clc add push xor mov push push cmp into or dec jecxz test inc pop (bad) std add testl pop jl std xor push cmp loop cmp xchg pop and mov imul fwait and dec test xchg aaa dec mov int3 pop xlat jns clc pop mov cld ljmp cli (bad) icebp inc rcll leave imulb add dec jo cwtl shlb pop xchg aaa clc mov cmp mov into ret push js push or or sub pop sub lahf jmp pop lods (bad) mov jge (bad) fmuls cli outsb lods inc mov dec hlt push push push dec pop inc xchg sbb mov jno push mov (bad) mov lea or pop stos dec push sub fsubl inc dec inc adc test stos xchg xchg addr16 adc xchg push shrl mov mov xchg sub xchg mov pushf dec mov pop or push dec jmp dec lret dec cmp and popf or stos mov loope adc pop dec mov test shr or and push sahf lea xchg (bad) lcall addr16 icebp stos xchg sub push (bad) or addr16 xchg int3 (bad) xor mov int3 pop scas dec and pop inc ja cmp lods loopne outsl mov add push repnz les movsb ret (bad) mov xor repnz adc mov mov rolb (bad) mov ret outsb push (bad) adc cmc add loopne adc mov ret inc lcall mov pop movsb cltd cmp outsb push (bad) jl (bad) push in mov aam mov daa mov cmp mov fwait push rol push mov push in mov aad orl test mov daa sti into add call push fimul enter xlat push dec loope rorl cli out idivb (bad) xor fsubrl es pusha or popa (bad) xor out loope sub stc enter add mov (bad) (bad) js dec in jne addr16 inc adc jge out daa pop sub and gs sbb rorb push pop jl aaa mov insl mov mov xchg arpl movsl jo fdivrl ficoml pop pop cs push xor flds inc push sub push cmp js cmp adc inc rcll jge clc add mov outsl inc (bad) jl add pop iret in mov or notl scas jp lds mov sub imul adc xor rorb je mov jne adc mov mov xchg or bnd aaa mov aad out push push mov pop int3 cmp daa ret inc shr test jno sbb adc jp sti hlt popf (bad) test out clc ret test add pop jnp mov cltd jnp push dec inc pusha inc mov xlat add int fnstenv mov add or test dec or lcall mov mov cmp sub jg (bad) dec test add sbb fmuls xchg and clc sahf es in xchg sti bound cmp xor mov inc addr16 pop dec (bad) in ficompl es add cwtl call xchg pop xchg xor dec ret jle andl bound adc inc std pop and cli test xlat inc push mov adc mov jne add stos xchg movsl mov out mov cmpl adc dec add idiv pop dec out inc pushf push stos loopne push mov fmuls out xor test xor ljmp mov jle and lods (bad) jbe out mov push das jb rdtsc fstl pop mov pop mov out enter sbb mov ljmp push stc and fidivl int push inc (bad) xchg inc pusha mov popf push cld inc in and inc cwtl sub rorl inc xor je sub inc sahf and mov test sbb xor cs jne mov mov test int3 mov jl adc xor fdivrs sbb mov jo ret in dec or lahf push push mov pusha movsb sub outsl fwait clc xor adc nop int3 scas jp jmp ds ss jl dec jno and or stos xor mov pop sarb outsl mov inc dec outsb adc shll xchg and arpl jecxz pop repz fisttpl ret dec js (bad) gs test lret push pop movsl pusha jecxz dec (bad) fs (bad) dec or fdiv decl inc add push pop enter popa dec sbb in pusha xchg test fsubrl push dec lods sub inc ljmp lods xchg pop pusha sub pop lods mov sub mov or jg fnop mov add xchg movb mov jae fdivs xchg dec mov or lret inc dec pop add data16 into pop push inc pop push (bad) pushf xlat ja inc push addr16 jo nop enter sahf movups and inc mov test outsl mov cmp push push inc aas xchg sbb inc xchg imul push lret sub pop bnd push cwtl mov mov mov inc mov sbb mov lock pop dec jle into push mov into dec imul enter cmpb xchg dec cmpsl mov cli fdivrs daa les les popa xchg jl xchg (bad) jl dec in dec push jecxz cmp je and dec (bad) dec into in sbb xchg dec or pushf mov movsl dec stos push mov push and sahf or mov push mov into call test cld or and out jae sahf int pusha outsb push and mov xchg lods aaa cs (bad) cmp inc dec cmp pop mov cs pop sub fidivr mov stc xor pop sub ficom loope fs cmp mov mov cmp imul mov (bad) pop push push inc dec (bad) mov push arpl ljmp mov imul lock inc dec cmp outsb sbb das fdiv fnstcw inc jnp lcall mov pusha mov sahf dec jno mov incb jmp nop and pop adc lret pop adc or mov jno cmpsl mov lds jmp jl mov cmp call dec dec sub push cs pop mov in scas xchg jmp inc pop pop les pop stos lods les jne cmp mov int3 in xchg nop jo push sbb inc push adc add adc pop ficoml in cwtl push xor pop cmpsb inc xor call add xchg add iret push repz push dec cmc xchg pushf pusha push int stos scas cmc inc mov xorb cmp push inc in mov inc jl mov into aaa sti imul push add pop fdivr int mov mov mov dec fsubrp mov or dec push int3 pop aas mov loope and xchg push in js or adc and out in cmp gs dec add fcompl outsb (bad) leave shrl pop xchg xor mov push das decl movsb or add push push cs inc gs push cmpsb inc popf mov jp int3 dec mov inc push out fwait shll pop push mov lret sbb cmp dec xorl pop jne xor in sbb sub stos adc fcoms push pop aas xor mov push shrb inc repz jnp mov or xor xor sti cmp in add xorl cmp aad dec cs jl outsl push or inc push (bad) jb pop mov data16 iret xor dec sbb shlb (bad) repz les cmpsl (bad) iret inc fmul pop or pop sub add add push bound scas cwtl je es fwait pop sub fimull sahf or ficompl aam jo adc xor dec lods inc outsl xor dec push jb xchg xchg loopne mov sbb out sarb lods jmp cmp movb mov aam jp mov push sub daa mov jne cld xor xchg xchg dec pop xchg or mov in outsb add cs cmp into cwtl ds push xor jmp nop dec mov in fistpl push sbb call lret ds sbb sub push mov sub inc ret sub scas (bad) dec lods pop mov jecxz (bad) iret sahf or stc or mov (bad) ljmp in inc into dec inc dec jbe pop rcrl aas push sub fcoms xchg add sbbl (bad) fiaddl push mov push gs aad push jb ljmp mov add cmp inc jge push push inc repz xchg xchg push push push add sub push push push xchg pop mov jl inc push mov push mov int3 inc cs cld xchg sub mov (bad) iret jne ja insb mov loopne ja mov adc cs nop xor and and dec loop fnsave and pop cltd xchg daa push dec jge mov out ret rorb notb stc arpl push imul rolb xchg cmp dec jge mov test mov xor push or and dec sbb or mov mov std les mov loop lahf inc push mov mov (bad) pushw cmpsl lret cmp out cmp cmp (bad) push pop cmc or fprem1 mov adc xor push jno mov decb sub repz fsubr xor mov xchg mov les cmp sahf cmp pop (bad) sub xor dec fsubrs push sbb cmp mov into jne rcl repnz cs loope mov add nop daa xchg (bad) mov mov xor fcomps xor add popa int pop xchg (bad) push insl adc pop gs jns sbb jns repnz dec push stos pop cld cmp mov push fcmove aad cmp in xchg or sub enter sub or pop jg push int3 push dec or pop cmp sahf jecxz dec cmp je rcl aad fidivr test jmp scas jnp inc xchg divb mov (bad) sub mov int3 add adc mov call jo cmp rcrl imul pop add cwtl sbb orb mov cmpsl dec pop inc enter xchg les lret inc cmp loopne cmp mov rol dec and mov loope inc jae addr16 es test test movsl pushf or sbb sub aam or dec test jb (bad) xor add and aaa rorl xor nop (bad) cs sarb inc je push dec jp push movsb sbb push das ret lods adc shr dec call ljmp mov cmp dec decb or inc inc psrlq add cmpsb or or push xor stos add cmp mov dec arpl adc cmp shll and and cmp hlt mov cltd xchg fwait push loop cmp cmp imul pop lods push push shr dec jb push xor roll sub (bad) xorl add rcl xchg push call mov je test scas push sahf sbb cmp mov (bad) mov fisubr loopne xchg dec xor cltd rcrl adc push inc mov mov push jl jecxz push ja sar xchg jns push add inc push cmp aam pop lret push lods xor jb xchg lods sbb adc dec pop lea xor test push xchg pop iret jo xor es cltd mov fdivl int (bad) mov jecxz out (bad) mov outsb push cmp sub jo push loop outsl xor xchg pop adc or fldt mov dec les xchg jl sbb mov adc and cmpl enter cmc popf pop test pop jmp pop mov adc fcomps rol test in jp or daa cmp or iret pop int icebp lea mov xchg rorl push movb cli inc call aad daa mov push jle mov jno aas adcb icebp int3 add ret and cwtl pop iret sarl mov mov xchg adc and cmp push jmp add add in sbb jp repz pop cmp jo adc push xor cmp cmp out add pop sub lahf pop and adc xchg push outsb sbb popf sbb or and mov sbb cld stos out sbb xor xchg and enter fistp mov mov mov addr16 out movsl xchg push xchg cmp js invd mov gs ret xchg enter xchg jl xor int3 pop mov xor cmp rcrl xchg mov ret push in inc mov dec sub ds add add ss (bad) sub repnz pop jbe mov mov pusha and (bad) sbb mov (bad) packuswb xchg jne js jns inc out xlat pop ret (bad) arpl xor aas enter popf fisubl and test leave in adc into adc jle or pop lds jle and dec mov sub je xor mov pop mov xor test mov leave push addr16 fs mov mov mov mov movb enter sub lret push mov loope pop daa mov out xchg fwait iret test nop cmp cld add push add pop orl mov pop sbb adc and test cmp pusha cld mov in or pop push push cs stos test outsl inc pop push cmc xchg fiaddl add je,pn or movb sub test outsb inc mov push inc jge ljmp push pop jnp aas dec jo jne pop sbb ss je cld adc (bad) test dec leave adc pop lock push decl or fldl2e inc sub and (bad) jae ret dec dec outsl lock movsb test adc mov adc (bad) insl or insb jmp push xor sbb dec sub cmp icebp inc test push fidiv push xchg stos mov aam gs xchg dec repnz gs cwtl cmc rcrb dec dec dec mov or roll scas out cmp jg xor nop adcl pusha mov cmp xchg sti negb les jae push orl xchg pusha (bad) or push rcrb dec lea jmp pusha ret dec enter jo mov push jp dec roll in push xchg cs in mov (bad) push pop inc gs stos sub inc in pop lods cwtl imul dec push mov push outsb xchg ret imul or in and jp sub push mov mov shll sti add jnp and cmp cli push fwait lods mov xor jb fistp sbb bound inc daa adc xlat gs enter (bad) pusha (bad) mov push flds mov dec insb movsl pop xchg fs cmp hlt imul stos xor push aad lcall dec inc push push push push push push push push inc pop pop pop pop pop pop pop pop inc pusha popa bound gs push insl outsb outsl inc jo jb je jbe inc js jp jl jle inc addb xchg mov popl xchg xchg xchg xchg xchg xchg xchg add jmp sahf lahf mov movsl cmpsb inc cmpsl test stos stos lods lods scas inc scas mov mov mov mov mov mov mov ret mov jge xchg jg jle jbe mov xchg push popl enter pop imul stos outsl mov cmp xor dec xchg mov cltd movsb inc mov ret mov cmpsb dec in mov test mov iret arpl dec xchg pop (bad) xchg xchg lods push arpl aaa mov xchg nop stos test mov inc xchg jns dec dec pop test arpl stc out stos mov stos sbb jns je mov xor sbb mov imul jno sub movsl add xor mov scas pusha jno xchg mov addr16 addr16 jne mov mov xchg mov test cmp int3 pop in fdivs ljmp lret cld nop and push push mov lods push out sub cmp stos sarl and pop pusha lea mov jae imul pop movsl mov mov mov mov adc das scas test call jecxz movb addr16 test mov xlat xlat or jmp imul xor insb int3 pop xchg pop jmp xchg fdivrs inc (bad) dec pushaw xchg nop movsb lods aas or xchg leave scas adc stos dec jns push xchg mov jb dec xor je jae je dec aas addr16 add adc clc scas mov pop enter stos fsub stos movsb xchg cmpsl (bad) arpl jnp je,pt inc ljmp jge or mov js and mov lods lcall insl mov inc imul or ja cmp lcall test dec inc and mov je mov ret das mov fs mov jnp roll pop nop loope dec addr16 mov mov andl js xchg sti push mov (bad) imul (bad) mov ds sub xchg jge outsb or jmp cmp xor mov jno imul stc stos cltd (bad) jns lahf int3 outsl jnp and mov test test hlt mov mov or cmpsl testb adc cltd sbb outsb or cmp dec mov jg mov mov xchg xchg scas in cmp mov jne lahf xchg shrl arpl mov call mov mov push test cmpsl inc idivb iret inc dec arpl (bad) pop push iret xchg mov (bad) sbb jnp mov dec lahf xorl dec xlat mov stos scas inc outsl scas popf pop xchg dec dec gs mov fldenv rorb ror rcl xor or mov arpl imul push cmp (bad) call xchg inc dec aaa movsl jg test mov inc xlat inc enter inc add out mov inc or push push jl xor add insb inc inc cmp push sub push inc ret (bad) (bad) enter lret int3 int iret rcl rolb aam (bad) xlat fcomp fiaddl (bad) (bad) loopne loop jecxz in out jmp in out out lock repnz repz cmc div clc stc cli inc sti cld std (bad) incl add inc add or or push movups adc adc push pop sbb sbb sbb push pop and and and es sub sub sub cs xor xor xor ss cmp cmp cmp ds inc inc inc fcomps xchg ds popf cmp mov inc cwtl outsb ret cwtl lods xchg in js insb ret lcall jl jmp outsl arpl sti inc cmpsl pop jb inc sbb push test addr16 adc (bad) fisttp mov mov xchg xchg jns dec popf xchg push insl pop movb mov lret push mov addl mov popa mov decl test inc fwait push xchg popl mov jg mov (bad) bound stos mov dec iret xchg stos imul movsl xchg mov xchg mov xchg xchg mov arpl jae imul and lcall jmp dec cwtl mov dec xchg movsl lods xor (bad) jge test enter cmc popa inc aaa jne mov mov (bad) mov add movsb stos aas test mov mov xchg fmul imull sahf decb push xchg mov das mov mov test mov bound test push mov xor jmp mov mov mov sub ds stos mov enter mull or fidivl mov or movsl ret out mov cmpsl test cmp inc clc mov aam lods xchg and cli stos std (bad) mov mov ljmp lods cmp sbb mov mov mov sahf mov jno rcrl fs cmpsl mov cmc jp mov stos fs inc mov mov mov pusha mov cmpsb fs xchg int (bad) mov mov mov sbb adc mov sbb xchg (bad) push xchg test call cmpsl mov imul add mov rolb cwtl pop dec mov mov popa ret lret add pop mov jmp jecxz inc cmpsl and mov int3 movsl jge dec push test js mov rorl orl or outsb gs mov pop mov rcll outsl mov stos dec aam jg int3 push jo insl pop stos test dec dec inc dec cmp pop insl pop lods dec dec mov shlb mov (bad) iret adc mov and pop mov pop addl jns push mov outsl lea pop mov outsl cmpsl cld addr16 pop and jg mov push mov pop sbb inc or int3 out push jecxz xlat mov aam gs aad test pop fisttp stos addr16 (bad) scas jl cmovl test fwait int3 xchg push xchg addr16 mov xchg int3 outsl push imul arpl pop gs mov addr16 mov inc mov aas ljmp mov aam gs xchg pop int3 sbb adc or xchg out int3 out (bad) mov mov gs inc add lahf xchg lret cmp and pcmpgtw xchg xlat int3 (bad) push stos mov cmp push adc orl out adc mov mov pop imul sbb dec mov sbb push mov jne inc dec push js and xor jp lcall xor stos jo rcll mov inc inc mov jg and dec cmp jnp dec ret jno mov cld push inc add lds (bad) or ret xchg cmpsb lret mov lcall lret mov imul cli mov adc test and cmp lcall (bad) mov mov lret (bad) shlb jg push (bad) cs jnp test mov scas (bad) pop xor jg xchg push insl sbb xchg cwtl xchg mov stc out popf ss popf cmpsl (bad) hlt pop dec andb sub mov jnp jecxz mov daa (bad) out pop fildl cmp xchg push add sbb pop adc test jae lock or mov jne add aad pop rep push inc cmp sbb and mov inc xorl cltd push and xor inc les lahf loopne jp pop mov cmp rolb fs jmp into ret (bad) adc mov inc (bad) dec lods lds inc pop inc jge (bad) push je mov jl ret pop inc mov adc rol mov sub aam cmp scas lret movsb outsb dec sub jno dec inc jmp dec or movsb loopne mov sub rcrl add pusha popf and adc inc das adc inc xor push leave movsb pop xchg push and andl mov dec cmp add pop scas push inc xchg mov dec xchg xchg cmpb cwtl xchg xor lcall dec dec cmp inc xchg mov dec shll jae push dec xor clc xchg out add and hlt adc popf mov jb mov xchg add mov mov mov add jb sarl mov mov outsb stos pushf cwtl test rcrb mov nop jb mov jecxz lahf pop insl into sbb mov dec or arpl out cmc dec lods push in pop xor fs push mov mov arpl test (bad) sbb lret pop jge push aas jno push mulb jno arpl lahf add decb pop pop dec cwtl add xchg jmp inc lret mov ret inc cmp fwait xor dec xchg mov sub add xchg imull fildl sbb cmp addr16 inc int and xchg popa lock cmp gs mov mov mov (bad) bound ret push lret inc in add sub cmp inc test and mov rcll stc pop pushf vpaddsb fcmovnb add adc inc ret sub jg dec jne add sbb std inc mov das push mov inc (bad) xchg loope movsl incl or jg dec out pushf scas mov cmp aam sbb cmc pusha inc scas mov push jl fstl xchg xchg mov mov imul mov pusha test jge ja jae xchg inc stos fwait pop dec pushf arpl outsl lret imul xor (bad) dec inc xchg inc repz sbbl inc ret pushf dec arpl dec ret dec push (bad) adc into popa inc inc pop std pop les fwait jnp adc popf fldl add add inc jp leave jae xchg xlat inc adc (bad) lock sahf arpl cmp mov mov clc push imul dec xor ret xchg or (bad) and sub lcall push xchg in aaa and mov insb or or nop orl inc lahf fcomps and adc inc push aas xor lds ss (bad) stos idivb movsb pop cmp fs push inc or dec or sti xchg aaa add (bad) push mov jecxz xchg repz add lds hlt insb test popf pop iret pop or scas jb lahf pop mov scas addr16 dec inc mov mov xor xchg testl lcall mov inc xchg pushf in (bad) push xchg jle repnz iret jmp scas xchg mov hlt outsb jb fucomp imul push cmpsl inc popl unpcklps pop roll out fistp xchg xchg ja dec inc arpl push dec cmc jne dec ja or popl movsl xchg cmc (bad) fist daa dec adcl arpl cmc mov push aaa jnp and or scas (bad) lahf int3 pop mov cmpsl lahf lahf fs outsb addr16 or cmpsl orl rcl sub mov or ret and sub rcl mull mov xor outsl and dec gs xchg iret addr16 mov repnz mov mov (bad) jg (bad) lret cmpsl aam xor cmpsl (bad) aam xor inc int3 pop push sub clc mov xchg in add insb push clc ja testl insl sub cmpsl fwait test cmpsl push ret cmp xchg rorl jne jg pop aad cmp int push test je cmp arpl dec lcall cvtpi2pd adc arpl push test dec popa lret imul dec push andl scas push mov mov sti jnp insb pushl xor jo fs and (bad) ret aas data16 add lret adc hlt lcall mov shl dec lods subl mov scas adc fsubs add add xchg mov repnz cmc mov dec test mov fisubr stos test adc and dec mov mov lret sbb outsl mov mov inc movsl jnp (bad) mov out insb mov inc fisubr lods fucomi pop popa inc jg adc jg cmp ret adc sub inc popa pop clc loope cmpsb pop and mov and push adc push out gs imul dec and sub dec xchg cmp push lock outsl test mov int fucomp int3 sti push xor ja dec xor mov mov dec cmc mov aam xor pop int3 addr16 xor fwait xchg stc addr16 gs push gs jae test mov xchg aas gs cmc inc arpl lea push out (bad) mov arpl (bad) dec sbb stc xchg pop push mov or test inc mov and adc lock xchg pop test lret xchg mov hlt jne jno addb and mov cmp xchg insl inc xchg mov add into testl aaa sub add push push inc push add andl int3 ss pop loope inc lea mov push or add (bad) mov mov push js (bad) inc mov cltd inc enter outsl call gs push cmp (bad) shlb push test jae imul jbe jl aam pusha lods (bad) jmp mov icebp dec jp std test inc dec in cld aas push mov cs inc sbb push mov push ret inc and cmpb and ljmp or xor test inc stc push (bad) pop mov push aad adc and imul sbbl les inc mov andl push xor xchg mov (bad) xor push pusha iret stos out cmp jne dec or pushf push add and (bad) jl je or inc inc ficomp push cmpsl jae movsl dec xor adc notb sub pop inc cs fiaddl dec in es or add in jne int add inc mov inc jo sbb jecxz dec int3 mov xor inc insl hlt or outsl add rorb push lret cs lods rorb mov push (bad) dec out sbb cltd inc xchg mov and and mov cmp sub cmpsb xchg mov out scas out mov pop push push (bad) mov cmpsb inc cmc lret out aam movb or pusha notl std push mov test lock cmp mov repnz mov add jne mov aaa fdivr ljmp mov add ret cmp inc dec imul stc sub outsb mov inc push and shlb insl imul rorl pop dec mov jl sarl jns fwait or mov dec mov dec bound inc shrl dec mov lea clc idiv xor test or inc leave cli (bad) mov jmp and sub test mov fimull add inc push (bad) pop mov mov adc movsl pop or add jmp add stos mov sub nop je adc xchg clc insl scas adc inc arpl mov jae lcall adc xchg jbe pop pop adc or inc inc jp aad pop (bad) jecxz inc cltd mov cmpsb xlat dec add adc les arpl dec xor and enter jbe fimull push adcl ret pop mov cli pop js roll inc icebp jnp inc inc call jl sbb dec test jge popa gs mov jns xchg cmpl sbb ljmp or (bad) ja jg addl popf in mov sub xchg xor lret jmp inc add adc or push pop test cwtl cmp jle imul mov bound inc sub adc xlat inc cmp push xor int3 ds mov imul xchg dec icebp outsb sbb sbb push daa or dec push jae inc fbld mov dec hlt std push inc nop inc in pushf sbb call repnz pop fneni(8087 jae mov pop pop das sbb addb loopne mov jle cmovae and repnz push gs imul jge mov and fucomi adc icebp xor pop inc cwtl mov mov movsb mov inc push enter in lahf out dec insb ret mov inc pop stc subl inc dec call fildl jmp and mov inc pop adc repnz movsb pop push and int3 cmp push jb (bad) icebp mov jo jnp aaa inc push (bad) test push loope jmp fwait sbb inc xchg movsb jle xchg mov pop inc repnz inc jno mov dec mov imul int ljmp jge mov sbb idivl mov push jg stos lock mov inc rcrl mov pop mov imul aad or dec int xchg ret pusha repnz or lea dec cmpsl movsl (bad) add repz mov sub and faddl (bad) sbb sbb int inc and or jl push ret push bound inc sub add inc or inc sub adc (bad) iret icebp adc int mov inc pop (bad) ds dec scas inc jbe mov gs sbb repz inc mov cmp or enter mov inc xor xlat lret js inc xchg insb aad jle fs mov xchg or cld inc inc dec xor in cmc sub inc aas sub (bad) std inc repz add inc sbb pop inc mov add scas mov cmp sbb daa sahf inc inc inc pop dec sti jl cmpsb pop (bad) (bad) add mov adc cs cmc sbb add (bad) icebp or fistp cmp adc push inc in sbb push loop inc jnp stc (bad) es and icebp adc adc in (bad) negb bound imul add cmp mov mov pop test xor mov cwtl dec popf test fwait icebp cltd mov fstpt inc stos cmp fs sbb inc cmc fidivrl inc popa and add cmp sbb cmp lods cmp inc xor test xlat call in mov mov inc mov mov sub cwtl iret aad lret lret dec rcrb mov testl cmp adc lret pop test mov aam das fwait ret out pop (bad) je ret (bad) lock leave inc xor xor mov mov xorl inc aad and scas and pusha mov jmp xor in cltd outsb xor scas (bad) xor repz je test shll inc in jae aas adc shll inc mov scas cld cmpsb add push sub inc xchg add flds leave ret mov popf inc dec sbb iret inc cmp outsb aam enter aad sbb jnp inc inc fs fcoms sub rorl inc lahf pop inc sbb push stc sarl cmp in jmp movsb xor sahf leave mov inc pop shr loop loopne jno mov ljmp sbbl dec pop add sub sbb pop adc push add inc (bad) or sbbl inc ljmp adc roll repz jmp rorb jbe sti aad rorl cmp (bad) and mov push or in add daa inc (bad) inc shlb jmp jmp jno loop sti adc out testb adc dec lods jge movb push imulb mov ror push (bad) daa iret cmp mov jg dec ret sub pop bound aas or fimul les xor jae sahf inc orb pop cli dec out cltd pop adc or ret movsb mov inc mov push push lods dec dec stc (bad) mov inc pop or inc loop sbb mov xchg xchg dec out arpl lahf pop adc inc push xchg add mov outsb inc daa mov pop mov dec cmc gs pushf loop inc (bad) nop hlt lods pop stc cmp adc add shrb fiadd xchg jecxz mov xchg and imul sub imul sbb hlt inc insb sahf mov lods jp dec sti sub jb mov into sarb (bad) insl and daa repz lods or inc and xlat test sub inc pop inc (bad) cmp push pop add imul ss inc aas cmp imul xchg xchg or daa dec cmpsb inc sub and pop xorl mov cmp inc out dec in cmp cwtl lock inc push int3 into dec out ret xchg mov jp sub sti js jmp fcmovne mov fs or jnp cmp inc adc mov push in inc mull inc dec xor lea add inc adcb mov inc xor scas mov and sbb jbe add jae push or out in mov subl add (bad) cmp add mov dec jo push pusha daa and adc dec add mov inc clc inc aam (bad) xor ds mov xor cwtl call data16 sub push xchg inc xor add inc sbb mov add fcmovb adc jb push call sbb insl adc inc pop stos push sub sub int3 jbe and movsl repnz dec pop push ret jae out xor add jle in into (bad) out mov (bad) fwait mov mov (bad) xor xchg icebp gs add push mov sub mov fs ss cmp rorb popa adc ret (bad) mov clc inc mov or cmp out (bad) stc mov push inc bound nop iret or push fwait sub inc les adc and pop and (bad) pop lahf dec out mov dec ja inc adc xorb dec sarb fwait aas iret dec cs pop arpl iret call and lea pop sub jb push ret inc lods mov and test daa aaa data16 push inc into xchg jno mov jecxz ret jmp adc inc or out push push movsb (bad) add dec dec jne icebp pop repz mov push push aad inc jo or mov das test fnstsw dec icebp sbb fwait cmpsb mov mov add dec jecxz push mov jmp cmpsb pop scas outsb aad leave lcall inc stos nop sbb inc mov out call adc fldenv into ds mov pusha cltd fsubrp andl adc fs icebp mov stos push inc std add repnz add (bad) push mov mov mov mov sbb inc adc pop adc adc js fcoms xchg sbb add cwtl addr16 sbb jno mov inc dec je inc pop lds xchg and in (bad) (bad) and dec andl jmp add mov (bad) adc orl jae mov daa fistp sub sub inc shl out xchg dec pop dec sbb imulb push sbb and je mov mov pop dec inc aam and and inc push mov push push push addr16 (bad) pop jae dec repz sbbl test das inc jmp aam inc or mov dec gs xchg int3 dec push dec addr16 mov jl (bad) pop dec lret jg dec insb push fwait xlat push push or inc adc xlat js or ja (bad) pop xchg jmp insb pushf mov mov arpl xchg icebp out xchg dec jae ret not les lds (bad) mov fmull loope push in shl (bad) mov rcrl arpl sbb addr16 dec (bad) ja inc jecxz addr16 jae dec lret push pop inc push inc mov dec mov xchg pop daa fsts push add mov aam gs xchg pop push aas fadds addr16 mov fbld xchg arpl xlat inc xchg (bad) dec gs gs addr16 mov add inc into (bad) xchg xlat xlat sub pop pushf jo xchg ret mov mov pop or iret push dec shrb (bad) jb shll push jae into loop cmp add hlt pop outsl add inc sbb dec pop dec xchg bswap or add repz (bad) int3 lret push mov aam gs xchg lahf addr16 mov xchg imul arpl jb gs arpl in xor and pop adc inc aam push push out iret push dec push in sub inc xchg ret cmp mov sub dec stos inc pop add push push adc pop mov push sub ret mov (bad) push enter rol xchg xchg or and daa dec vcmppd loope fsubl arpl jle popf movsl add addr16 mov aam insl push sub mov ja jge (bad) mov addr16 mov aam nop outsl scas in sub out dec inc xchg aas es mov xchg clc cmpsl xchg fcomp inc pop addr16 mov lods adc push arpl mov mov push xor inc mov scas pop inc pop dec arpl es xchg cmp cltd fwait out xchg addr16 xor xlat sbb nop cmc sub sbbl sbb stos mov xchg js call popa pop lret push xor mov mov aaa pop pop mov jb mov adc inc std sub int3 xor adc out pop dec fisttpl adc mov inc mov inc sbb lahf xor aad xchg cwtl mov ret add dec pop roll or adc mov mov push or icebp fcoms mov xchg outsb pop jg aaa xor loope sbb push dec mov mul aas stos ret nop loop std cmpsb dec inc aad adc jbe mov ret sub out cwtl sbb dec add aad sbb sbbb jmp xor add pop jp and mov fiadd push aaa inc dec push ret bound mov (bad) int and push jnp pusha jno shl pop inc jmp negl scas inc inc dec sbb mov ret jb jle sahf les adc cld or inc lahf mov stos jno cltd jo lods xor adc add insl xchg test rolb into negb xchg sub pop cmp fldcw mov sbb inc xor dec lods bnd in cmp loope pop int es pop pusha fscale mov xchg push stos ss lahf inc cs (bad) out (bad) movl xorl arpl inc push nop mov inc jge xchg mov (bad) iret pop sub cli movsl dec es mov jbe dec lahf mov adc loopne and mov push pop and inc push or ret enter inc push xchg pop mov jmp pushl roll out lgs inc loopne or inc daa (bad) aas xor ja pusha mov adc push dec dec es arpl xor push sub xor popa jge lret popf pop fstps add and mov mov int js mov in xlat push adc xchg xchg and push pmuludq and push push push mov add xchg jge sahf inc mov cli sbb mov dec jo data16 ljmp (bad) mov shll mov gs imul xchg rolb and inc ljmp out mov inc push push scas xchg mov xor push (bad) xchg imul out out neg lea daa add mov and mov and loope cwtl lods fist push pop inc jae dec xchg (bad) jge and or in add out push mov mov xchg pop or mov (bad) aaa and pop and cmc fidivl stc mov cmp in mov inc adc pop inc test addr16 mov mov mov inc cwtl movsb lret sub sbb inc sbbb inc cltd adc mov andl clc or mov (bad) dec sub pop insb inc mov xor xchg pop add inc sbb pop cmp push mov pmulhuw mov sub hlt insl inc scas or jmp or xchg leave sub xchg mov cmp mov fidivl inc in cmp dec sub cld dec sbb add mov mov aas cli dec add inc adc cmp xchg mov inc inc loopne xor testb mov pop outsl push inc fisub mov fucomi stc dec sub add or (bad) daa push sarb iret mov sahf fistpll and ret mov cmc add mov cmp (bad) xlat mov inc inc push lret (bad) cmc ss adc push loop mov and inc adc mov enter jecxz jo mov (bad) popa mov fucom xor pop pushf push insl pop mov dec les pop cmc (bad) mov jmp xor sbb sbb icebp inc dec mov lret mov mov (bad) mov insl push ret enter dec inc pop add jae outsl call push pop insb pop enter mov es cmp fcom lea aaa cmp js jle lcall icebp dec testb lods jae cmc rcrb mov inc or dec inc add popa roll cli outsb cli repz addl inc fldpi inc jbe adc cltd bound and dec ljmp jnp lods sbb rorb (bad) jb fwait sahf mov (bad) into movsb out inc ss pop test push sarb ds popf out xchg dec cmp mov inc sbb stos (bad) sysexit dec roll dec in movsb push dec fistpl inc pop or jl inc popf sub jp sub loop adc jnp or addb cmpsl sbb stos (bad) sti dec inc xor addl inc test divb xlat dec and xchg inc iret xchg (bad) jbe,pt test mov shrb sbb pop lods and aaa or mov xchg out cmp xlat or popa addl pop lret inc popf mov mov (bad) in in xor or push xchg sbb stos pop imulb xor dec cltd add add jl lret fstps push (bad) inc and jae (bad) and (bad) mov xchg jg and sub inc push das xchg iret cmc push rcrb mov push movl pusha mov inc ficom lret xchg addr16 iret inc jg push sbb adc hlt inc and xor pop mov andl mov aad ret fstps xchg jg dec bound sub cmp lea incb loopne subl mov mov imul shll jbe into arpl ja mov push jo adc test (bad) or push out jle scas loope pop ret sbb ja mov pop sub dec in arpl xor jae fsubrp icebp imul lock mov pop pop in fldenv lock mov push push dec ss inc and pop (bad) sbb mov inc testl add ficoml jecxz inc aas xor cmp or test push lret or inc push and jnp xchg outsl fiadd push imul xchg adc mov test cmc jae sub popf push flds mov ret xor pusha in push mov mov fidivrl mov fwait pop pop inc out cs pop cmpsb loope xchg push arpl aaa out xor hlt out dec push adc dec ja inc dec mov push and jae inc dec mov inc mov dec inc xchg mov inc lea push add addr16 xchg xor (bad) xchg cmpsl cli mov push movsl ss ds adc mov stc sub sbb inc jo xchg aad pop sub push leave jnp mov arpl ss das lock inc fimull mov out xor movq mov outsl jl inc mov add ss fmull cltd imul ljmp xchg push jae lcall test mov out xchg xor push (bad) js orw xor xchg outsl mov fdivrs (bad) jnp add push add std jle sbb mov fldcw pop movsb cmp dec (bad) xchg ljmp add repz outsl addl (bad) sub mov repz popa xchg cmp aad inc pop sbb fild mov push cld mov aad enter scas mov fsubrl and cmp pop in or psllq cmpsl sti test xlat push in cmp scas fldl pop xor (bad) sub dec and lds test xchg xchg cmp pusha in (bad) out adc popa roll push int cmp (bad) dec adc test inc cmp xchg mov dec sub add shll fdivrs sub aad andb roll out and or int jmp dec cli mov inc cmp mov stos cltd repnz pop pop or dec xchg mov inc cwtl jg cltd gs jo dec andl inc cwtl lods mov cmp out jb jmp js decl add test inc jp and pop imul and push inc cmpsb ds jg (bad) or aaa aas inc xchg lock cmp fs imul inc out or and lods mov sbb dec in dec imul xor xchg mov push inc and adc xchg mov fildll mov lds cs lret int dec jl jle inc add jge bound js pop or scas xchg test cs repnz inc jo dec pop bound ror inc pop (bad) xor pusha push cwtl notb das add inc xchg popa sbb in inc xchg dec cmp dec fldl nop dec les movsb in xchg push ret (bad) mov lret adc jecxz arpl repz dec bound outsl push pop mov dec sub sahf cltd cmp mov pop pop jecxz std movl rclb fwait inc sub loop xchg xchg int js (bad) cwtl scas ret out jmp xchg mov mov fyl2xp1 inc or std push aas inc push hlt dec jno notb cmp inc fildl enter cmp pop push jp cmpsb outsl lcall xchg push mov subl in push ljmp inc aas mov rorl jae das (bad) mov xchg and ds sub test cmpsb jae push mov jmp cmc cmpb cmp clc cmp dec sbb jns popf fimull cmpsl cmp sub (bad) addr16 inc sbb pop mov inc push arpl clc sbb jecxz andl (bad) xchg (bad) in inc and jge cmp test inc out imul jnp (bad) jmp mov mov and jge fnstcw inc into inc sub inc stos sbb sahf rol add inc jmp pop dec fiadd aad andl inc mov gs mov into inc and push push and enter bound pusha les inc mov inc sbb cli rcll push push into sub adc (bad) cmpsb setbe adc ds ss sar pop sub lock sbb sbb cmp push inc and inc int3 sbb movhps repnz ja dec inc (bad) xchg std test or jle stos dec dec mov test cld jmp inc xlat in (bad) fmuls inc push mov sub inc in xor push jb mov inc lahf mov cs dec mov in push mov mov into xor fnop cmc ret inc loop repz and cmpsl in push add repnz sub pop add jne imulb xchg scas mov ret sub imul fdivs or lds mov int pop sub inc mov scas out dec push mov int3 lds mov (bad) pop dec add inc or es or in dec xchg jb lret shlb inc push shr sarl mov cmp push mov out adc dec mov xlat jns add dec fstl mov out loopne inc push es sbb lret testb jae jb sbbl inc cli ljmp inc sub and push in adc orl pop xor inc pop adc jo jae sbb pop imul gs sahf lahf mov inc scas bnd fdivrl subl push push mov inc aas repnz nop loope mov push fwait push cld dec mov add adc rclb (bad) stos loopne sub xchg cwtl mov pop inc mov lahf gs push icebp push pop int3 movnti dec insl cmp cltd inc (bad) lock mov or add sti add adc sub sbb sub je mov sbb repnz imul sub arpl xor lds or xchg push inc scas mov fdivs fildl mov xor cltd mov cmp ret mov mov dec (bad) add aad dec xchg ja mov loope mov fldcw sbb cmpsb (bad) and rol (bad) inc and hlt inc loopne push scas insl (bad) imul jo out pop pop mov mov aam mov (bad) repz inc insb sbb sub lcall inc scas testb sbb popf xor inc je arpl inc cmpsb std loope inc push cmp cmp pusha popa mov jge test movsl pop loop inc pop test xor add pop inc xlat pop or rorl pop negl pusha and out mov cmpsb push stc sub movsb sbbl scas fs mov mov lods sub adc stos sti or cmp popl (bad) mov mov (bad) jae xlat xchg and movsb xchg inc add sub mov gs mov inc jp insl sbb outsb mov mov pop out pop push inc popa pop inc lea pop arpl inc jge imul mov cmp jns mov dec mov inc rol and or imul lods push and pop int3 cltd inc push (bad) aam push inc pop jb jp adc lcall int3 mov jne adc pop popa orl push insb cltd push in dec out dec jbe loopne test cli loop dec arpl mov push adc inc adc ret dec and fsubrp inc loop rcl int3 inc push loopne push pop les incl push pop popa movsb mov and dec sbb xchg shlb inc movsl repz add cmp and xor sbb adc jno push lods sarl popa shll (bad) mov ljmp jne or and pusha movsl inc mov jl cmp popf inc jg inc ret mov push insb inc jns jge sub sar xchg sbb jae jmp inc or scas lock out mov popf testl out sbb inc loope xchg or stc adc add sub pusha jns sbb outsb lds (bad) and fldl inc mov push xor adc stos sbb pop outsl pop call lea mov inc xchg (bad) test push rcll out dec int3 mov aaa cs jl inc add out inc push stc lcall call mov fs repz test push dec cmc js dec jnp mov xchg notl push bound clc inc or mov lea xchg fidivrl push ds addr16 mov xchg adc idiv mov inc (bad) cmpsb lahf and dec add or arpl cmpb add inc inc push addr16 jnp lahf ret pop xchg mov inc mov jl jns rcl mov stc or pop imul adc and cmp jge insb int3 sbb inc ret jbe cltd addr16 cmpsl mov mov dec (bad) jns push call push xchg (bad) cltd lods or and push lods mov loopne lahf ljmp pop addl cmp subl movsl lahf std (bad) cmp dec (bad) pop sbb cmp xor test loope jno xor je fwait out int3 push aas jge (bad) jae ret sub shlb add xor nop aas je pop ret jne (bad) cmp test clc xchg xor inc test jecxz xchg inc push fisttp int3 fisttpll sti sub pop push das addr16 ds mov cmpsb pop out pop aaa test inc andb jp fdiv sti push enter mov fiadd ja mov lea inc mov push xor sbb (bad) pop ffree jl dec jmp leave call sbb lock sbb daa cmp inc pusha cmp push out sarl mov (bad) mov inc mov dec and dec (bad) dec mov adc (bad) out pusha iret clc in ret nop push les adc dec adc push inc jne cmp lock inc cld jmp and sub pop aas add mov rolb jo cmp repz arpl sub push or inc mov pop pop dec pop outsb inc mov das xlat jno mov or xor rorl mov add in scas pop (bad) push inc repz pop xor inc mov mov dec mov std inc pop mov out and push mov sbb aaa in push repz mov pusha mov sbb movb cmp push imul (bad) loope ret enter cld push jecxz,pn sarb xor sub pop leave cs or test lods sbb sub add icebp jge inc enter add jo jae addb lcall jbe sub sub stos sbb sbb and xor movl push sbb js fldl2e arpl inc movsb stos fmulp dec std call test dec pop into mov (bad) push adc pop and rcrl mov aaa mov xchg cmc dec push jg mov popf push ds sbb mov jmp pop inc push mov in sbb mov inc add dec and or push inc (bad) xchg icebp dec mov iret adc inc clc xlat add xchg pop inc movsb add xor mov or sub push cmp cmpsl fstpl xchg push incb loope imul inc jb fdivrl xchg push rolb repz aam stc xlat pop xchg movzwl pushf cli jmp inc cltd nop hlt dec pop movsb mov jecxz adc data16 xor add mov mov xor push (bad) mov dec jne cmc out ss cltd sub dec das inc mov imul push push and or cmp scas pop jae repz rcll ja sbb inc aam arpl jno push and pop mov jp mov jae sbb in cwtl ret xor mov fwait lods js pushf mov dec cmp xlat mov and (bad) mov inc cmp mov xor jno cwtl stc sbb xor mov sub jp shrb stos xor leave push sbb popa out loop lahf jnp jae pusha jno subl push xchg push jg mov push jns jp add ljmp test mov xor orl repnz notb (bad) outsl mov jmp adc adc xor cmp insl pusha aas xchg jno mov pop inc mov pop inc test adc pusha out mov popa inc das cmp insb cmp push fwait or lret inc sti ljmp mov mov inc push hlt adc sbb xchg lret adc inc push out push push jns addb or inc mov mov xor addr16 nop lcall addl sub xchg dec push daa dec loopne xchg fmuls inc rclb inc lock insb inc push cmc mov loop enter mov arpl js cmp jmp dec inc (bad) sahf rep inc push pop xor imul inc inc jge and xor sub pusha fs jne jno repz or mov sub test xchg mov cmp shl jbe dec inc xchg mov inc inc pop das dec xor jb xchg inc xchg sarb mov push mov pusha mov inc (bad) jmp out inc sub fidiv xor inc cli sarl mov cmc or cld push dec push push scas mov ja into jbe sbbl mov (bad) pop nop mov sbb xor mov mov jnp cmpsl sti aas push mov dec jbe pop arpl jl lods imul inc dec xchg jae enter sbb pusha sub mov inc xchg pop inc push push aam push add inc mov sbb repnz jmp pop jno jge pop mov movsb add inc daa cwtl insl jle push push pushf inc (bad) (bad) sar xchg adc fcmovnbe mov (bad) cltd int3 fstl mov adc bound pop icebp lret cmc inc (bad) fldt pop push sub dec add and arpl and (bad) lahf inc (bad) cmp cmp inc pop xor jg jbe sbb and iret add pop stos adc pop in out adc and mov cmp test jl test push cs sarl cmp inc push mov cmpb push aam mov enter shlb mov mov jmp arpl and mov sar push push rorl cs inc push jge inc test dec pop outsl and and push inc xchg mov test sti push jecxz movsl stos pop cli loopne ret pop js xlat dec out imul out inc sub stos das xchg out mov sub mov inc and and pop lock sub out xor xchg inc inc aam lret andl test add movsb mov inc daa jmp sub cmpsl mov mov scas cmc (bad) or adc add mov (bad) jb mov iret orl push repz pop mov inc mov xchg fdivl repnz sbb push mov or sub cmp mov cld dec pop addr16 das push jmp ljmp jg or rorl mov lret mov repz push push pop imul inc and inc adc cmp sahf call inc popf ja xchg test push mov mov inc ficoml xor inc adc jge les aad adcl jg push xchg andb xchg pop xchg dec lahf hlt iret push mov jecxz stc in std xor mov movsl dec push inc test jle cmpl mov xor push cmp jns arpl jb inc push jl mov sbb mov jg loope lea or lcall fisttp inc popf enter loop mov and lea movsl jle push sub fdivl ljmp test xor js xor push cmpsl in add icebp ret iret mov or mov push push dec adc mov out rcrb les xlat push inc aam int movb jle inc cmp push mov sahf scas ret nop mov xor xchg mov aas test and lds mov jl adc loope movsb mov (bad) mov sbb mov fwait mov fs stc out push scas jnp rolb dec inc bound or jg pop in xchg daa fildl int sbb (bad) out adc mov mov addr16 sbb add mov (bad) aad ljmp jle inc cmp xor push mov inc rcrl sub push lea jle in pop and inc pop dec mov inc daa fisub mov cmc jae pop outsb dec aaa sub in pop es mov bound mov loop inc inc cmp lods clc jg mov mov int shll (bad) sti sub insb inc inc xorl mov (bad) jnp fild mov inc jl mov popf ret and push jnp jle jecxz sbb mov loope shll inc (bad) insb mov test sub mov out push jecxz xchg inc push rclb not or mov xchg xchg lods (bad) mov pushf lods loope loopne inc push inc push addl inc cmpsb sahf out adcb and jae sbb xchg fmuls push inc shl push and aad addr16 inc lods aaa xor fisub adcb sub add inc jnp inc mov pop sub mov xor enter pop xlat imul (bad) loopne insl inc inc pop inc lcall push (bad) xor fistl cli jmp jp insb (bad) ss ficom inc es sub stos in fisttpll pop push inc (bad) mov (bad) mov test cmp mov loope inc add mov (bad) in jnp sub daa lods out iret mov adc push xchg addr16 cmp sub sti add fdivp (bad) sti mov fldcw inc push jg mov addl cmp and push lahf loopne scas ss int les push jnp adc inc or shrb mov in dec push (bad) push int out dec push sbb or daa cmp jae xchg cmpsl cld pop jecxz pop lea out (bad) jb sub mov inc test pop or pop insb inc jp sahf fistp jns inc add test inc (bad) or pop int in inc rorl push shll test mov jno aas sbb mov pop outsb cmpsb mov cmc push movsb pushf enter adc jns shrb mov das mov cli hlt pop (bad) out cmp xlat xchg and shlb push mov cmpsl nop xchg shrl aas ret push jae popf out add data16 sub lcall inc ret and and xor mov inc add adc subb xchg mov mov ret test imul push inc movsb mov jle dec rcr (bad) clc push xchg and xorl bound inc add inc jmp ja aam in mov test dec out inc test jecxz js stc les jno test pop mov mov fisubl jae cli outsb inc sahf jmp lahf add inc mov in sub imul jno jge je (bad) add js or inc out icebp loope test inc (bad) push std cwtl adc lahf push pop or inc aam rcrl sbb push mov leave pop push hlt mov fdivl add jae xchg outsl ffree iret inc mov jmp pop mov js jb pop mov inc pusha cmpsb repz adc stc jg (bad) mov pusha into (bad) inc push dec ss xor mov arpl popf and mov jns lods pushf mov bound dec xchg pop rcr inc lcall rclb dec fucomip lock fstpl dec jno mov xor pop ret push mov xor insl negl xchg xorl jno pop mov jp adc or xor xchg pop mov dec inc mov mov js add pop shrd inc inc sahf lret jp mov lret push xchg mov loopne int and jb cmpsb mov fwait ret fs jbe sub mov rcr out fwait cld jae aad test test cmc jo or xchg ljmp or add push (bad) mov inc xchg add insl data16 dec scas addr16 or pop gs pushf out shrb aaa xchg ret rcl pop mov ret lea jmp or inc inc add movb mov xchg dec inc hlt lret mov imul ljmp (bad) movsb push sub icebp xor dec dec lret inc cmp pop (bad) adc lahf inc icebp adc es jmp inc xlat ds shl out sti inc add sub (bad) scas xor (bad) jne rcrb or pop cld dec dec ss mov iret les dec shrb fcompl pop ds or mov inc (bad) imul mov or xor imul mov inc xchg test inc (bad) shrb ds div popf sbb mov jnp xchg ds add or movsl push jg (bad) out mov lret add jmp test lahf jge sub sub fcompl inc out cli mov out rcl fild loop mov xor push pop leave sbb fbld sarl mov das pop insl lahf inc inc inc jle mov pop jg,pt inc sahf dec lock add repz lods mov xchg adc movsl sti cmp sub sbb movsb in fucomi gs xor add int stos cmpl addl adc out mov and mov inc and pop add push add jnp arpl sbb jae jl js and ret test test (bad) mov xchg dec pop movsl mov lea sub xchg out xor fs pusha pushf xchg hlt add add mov inc incb out aam xlat or cmpsl or adc test xchg inc pop lret sbb cmpsl xchg movsl inc loop es test or dec sbb dec sub and pop jecxz test xchg dec out adc cmc ss inc mov sub push rcrl (bad) sub jnp lds fyl2xp1 popa in pop dec cltd inc mov dec cmp push (bad) mov insb dec lret jle loopne (bad) xchg ret fmuls ss push ret lahf mov icebp pop rcrb fiadd pop mov repz arpl or js dec stos pop inc imul dec aam pop sbb loope inc cld sub mov arpl jo add inc ret (bad) imul mov sbbl dec mov inc pushf adc mov dec cmc sub std xor aas inc (bad) xlat in adc xor inc inc sub xor and popf imul and push add daa fchs mov addr16 push test (bad) mov hlt in fistp insl mov push inc test arpl push (bad) repz mov (bad) pop jg stos fldl2e inc subl jns das inc stos cmp lods fwait inc test adc push mov mov dec add or cmc xchg ret psubq lock push cmp or cmp push jb inc mov aas lds inc fcom out or ret sub out inc push adc jle inc js fmuls sbb (bad) mov (bad) out sub cwtl inc insb fsubrl xor xchg mov jge (bad) pop daa push mov add imul (bad) dec fs fs cmp inc sti fwait inc idivl cmp inc push sbb sbb dec lret hlt imul dec push sahf add push jmp jg push rep int3 mov ret mov add test adc add sti mov add and and lods inc and outsl mov mov add nop hlt xor imul out fnstsw mov out jge add adcl sub fisubrl imul push das ret add sub pop imul movsb push push push xor adc and mov js je int3 jbe dec pusha push add stos loop js insb (bad) out dec xor dec rcrb cmovae cmp push sbb push add dec push mov jne mov loope (bad) inc out xor and je inc cmp call and mov adc add lret inc xor out sub xchg dec sub jae outsl inc cli dec push lds dec pop addr16 ja inc inc and cld mov jne aad cmpsb and lret in push mov jne aas out jle aaa inc sbb (bad) mov dec std cmp bnd xor xchg (bad) push ret cwtl jmp and mov xorl xor aas inc push xchg fs jp and cmp (bad) lea push and loopne outsl jge mov xorb ret test jno,pn inc and sbb inc insl aaa cmpsb lds dec pop scas inc dec xlat inc js mov lret adc data16 push (bad) in dec ret (bad) leave xchg adc sarl jecxz cmpsl jge clc icebp or mov sub jmp cli imul xchg shl hlt xor xor pop dec in lods add mov (bad) imul adc aas add push inc repz mov push iret jne inc adc mov inc addr16 xchg daa out and (bad) cmp jle mov dec in cld dec inc scas out movsl xchg add ss xor jae push repz jge icebp xchg fmulp inc pop push sub adc push push push loop mov dec jbe sub push pusha out fucomp ret push fsub in and or testl xor in out add ret jns mov sub test adc sbb push xchg inc push addr16 out mov xchg cvtps2pi call cmp aad outsl repnz dec cld add lds xchg (bad) iret inc jge leave mov in out je inc add cwtl int xor cmp ds lcall leave pop imulb aas jecxz imul mov mov daa movhps fiadd sbb inc fnstsw cmpsl inc aaa mov inc aaa mov nopl rolb pop insb in outsb jg xor (bad) leave mov mov aaa sahf jo jne sub pop lahf scas and pop pop adc jp mov dec fs xchg inc in push push hlt dec repz sbb or dec and xor mov jl ficom cmc in dec dec push mov loopne xor pop mov gs lahf inc jno inc pop mov inc les push pop subl jmp push test (bad) mov stc dec pop cmp std pop or sbb inc inc and xchg out dec mov push and sbb mov cmpsl pop dec ljmp dec xchg rcl adc aas adc push in cmp jecxz fldl push outsl outsb clc dec mov cmp addr16 test mov add inc ja fsubrs aas (bad) loope es subl mov lcall add mov dec lret icebp dec push push in dec add ret fdiv test jno insb jge mov sub push mov mov lods xchg outsl inc rcll shll inc pop xchg mov mov mov xor push cmpsb ret push dec jb test adc sbb dec add pop or out daa clc dec jle jg loope fistpl inc out xchg push add xor rorl clc push xchg imul loope imul mov outsl test rcll dec lahf pop ljmp fmull mov lock pop pop mov sbb xor push rorl jp cltd push int3 repnz mov repz add inc adc sbb pop mov clc fstpt pop (bad) sbb xor ja mov xchg stos ret je sub inc push rclb mov push fiaddl adc mov rcrb lea in pusha xchg ret loope das jo lcall adc mov rclb fimul cltd pop es inc jo enter sub inc jb cmp pop cmpsb jge inc lea xlat dec mov sub adc popa add xchg inc mov in cmp adc fstpt xchg push or dec jge clc sub mov push cwtl inc sbb sahf inc mov inc cmpsl pop adc nop or dec mov faddl jle fcoms adc call dec lcall (bad) adc inc lret loope scas xor xchg movsb (bad) (bad) and ret cld or adc js mov lret int3 push rorb imul fcmovb ret push mov cmp inc ds lcall ret imul lock sub in pop push add pop test sbb dec xchg out (bad) cmp sti pop pop dec mov add dec xor adc add sbb fiadd lahf fxch jmp jb dec sti or pusha inc pop popa mov cmp inc xchg mov inc sub cld inc adc sub mov push inc jnp push mov fwait scas xchg out push jo rcll ds (bad) fisttp sarb (bad) rcrb jmp movsb es and push adc jo mov jl je or push xor nop loope les daa ret mov pop jne or mov push xor popa jecxz dec and dec pop pop orl addr16 dec sub and jno aam dec add push daa sbb lea xor lods add and or inc mov and mov das imul inc fwait lods pop or xchg or ds sahf sub popf push inc daa cmc inc sbb jbe sbb xor sbb mov stos js rclb cli push dec pop xor popa arpl mov mov push push lock dec xchg (bad) dec jge or dec dec cmc push gs jmp push mov xchg aaa into inc jp jg sbb jle xchg ret and iret push dec mov scas mov sub cmp cmp mov xlat sahf sbb ret mov xchg cli imul inc xchg aam (bad) or inc mov in ret or inc xchg outsl je daa std mov push pop in jb inc adc das push (bad) push lea lret mov inc lcall in dec mov and jle push ret std arpl dec push rcll dec pop sub sarl mov scas cmpsl jle inc add jns inc jl aaa int3 js mov dec inc xchg outsl aad into push push adc mov inc push mov lret aaa mov add (bad) add in js mov cmp (bad) imul cmp imul cs mov jns adc aam sbb or pushf in sahf aas aaa mov cmp jge inc dec stc das xor pop fs movsb mov add pop inc pop shll adc dec aam sub and leave push or push lahf inc es push pop jne movsl aad inc lds inc adc loop inc dec fsubr push pop mov push inc addb scas jbe outsl xchg mov add push inc bound fmuls daa test ret add dec and int3 and ret and mov daa jne cli lds ret popa mov in push pop nop push (bad) scas inc push mov sub into fistp push sbb (bad) aad cmp cwtl int3 frstor and pop repnz jb xor jge sub add dec loope push jmp es mov sti adc lds xor jb push inc xor sbb jl mov inc aam mov lcall test add int3 cltd stos xchg (bad) jle aad fldl2e and scas test pop add jae daa mov jmp mov xor cwtl xor mov add inc pushf cmp inc mov jno hlt fwait cmp jl ret push es daa inc inc cmp dec sub aam mov loope mov outsb fnsave out mov inc mov icebp add inc xchg int3 push mov in push xchg pushf call inc jne mov bound out arpl inc lods (bad) or mov loop out sbb add jecxz adc rorl pop ss mov pop (bad) aaa cmove dec pop inc push lahf test popf mov mov (bad) ds mov popa dec add aad pop adc lahf psubb xchg inc mov les (bad) cmp in rcll outsl in test push rolb repnz push inc push pushf leave cmp jnp rep inc pop cmpsb lret fiaddl popf daa out inc gs (bad) fsubrs jg in mov add pusha dec rorl ret push ss jg,pt inc fs dec pop jo mov add fucomi dec jns lods add (bad) scas mov mov cmp push xor xchg adc idiv dec popa insl out jmp push xchg imulb mov ljmp insb cmp xchg pop push dec mov test mov outsb fndisi(8087 mov ljmp mov roll decb and xchg mov movsb push pop (bad) inc dec adc movb or inc stos shl push jecxz cmp jmp inc or push xchg push cmpsl and sbb cmp pop adc add fadds loop sbb sbb les movsb inc fcompl arpl xor stos push add dec add int3 push lock push inc jo (bad) cmpsl mov divb xchg add xlat pusha mov or push mov mov shlb aam pop sbb and cmpsb mov and dec fwait pusha or inc inc sub mov in mov mov mov cmp ljmp int3 fistp loope test iret jne in xchg jnp pushf pop add pop ret scas push fxam cmp loopne xchg shll (bad) sbb inc dec aas inc xchg in in dec out push mov push jle loope inc xor test dec inc jnp jns rcr pop push in (bad) stc inc jecxz lret scas (bad) xchg inc movsl mov iret dec pushf or mov nop mov in inc (bad) not rol imul cld pop push lds mov inc aaa outsl jne stc lock cmp test data16 inc mov sti mov inc jo mov imul test mov push ret lock jmp and and inc mov in push bound inc rcll xchg jo jnp lret and iret push inc sbb or add out insl inc cwtl enter cmp addr16 insb sbb sbb jmp jl sub fild aam cmp pop cwtl inc shl andl mov addr16 inc xor jae xor xchg gs lret lret and adc inc push adc jb cmp jmp inc mov xor inc popf add push pop inc fwait push lahf aad stos loope (bad) lret inc sub cwtl int push xor cmp dec ljmp icebp (bad) pop imul bound (bad) pop sahf inc mov pop mov inc shll xlat xchg pop inc pop adc xor out btc pop mov arpl (bad) mov mov imul xlat cmp sub mov and inc xor pop or cmp js,pn aad call sti popf ret in pop stos outsl sbb mov inc inc imulb test imul insb inc out push daa hlt push sub js fdivrl shll out call hlt push popa outsl lods xchg test jb test mov ljmp xchg (bad) test dec xor popa stc dec dec hlt fdivrl mov xchg movsb sbb adc mov push imul icebp (bad) dec mov andl mov popa sbb out and xchg outsb xchg mov mov xchg test dec pusha push outsl ret inc mov and jae mov mov sahf push rorb imul inc jne mov push leave jl insl or mov mov aam inc ret (bad) dec mov outsl sub sub rorb jle imul mov test lret xchg ret stc add lret inc fsts mov mov jge dec sbb cmpsb mov or pop inc ds add repnz adc jp les ds xor jb mov add inc fldt (bad) jmp xor aam in es pop adc (bad) cmp add sub or addl mov movl add xlat movsl push jae inc and mov adc cmp mov add pop out xor inc sbb js pop int lret add icebp jno or loope,pn mov inc mov sarb fdivl into cmpl mov lcall pop sahf ret test out xchg lds xor cmp jbe mov mov add sub mov fucomip push adc cltd (bad) lock pusha dec sbb jae imul aaa andl mov pop inc addb xchg xor (bad) popa movsb aam mov insb jge add rcll shl enter or sti daa dec xchg stos loopne cmp rep jo pop inc lret dec xor (bad) popa movsb hlt lock xchg dec cli cmp jg push stos push cmp jb bound mov out push cs leave pop scas aas movsl mov inc or and jecxz test (bad) outsl ret (bad) mov dec jecxz dec pop int (bad) fsubrs push xor adc (bad) in ret inc dec mov out rcrb push push outsb and mov aas adc inc xor xchg aam and adc and or push je roll xor inc pop loopne mov xchg mulps push cmp inc mov (bad) sub fs sbb pop popa das ds daa inc popf repnz adc lret pop mov push xchg arpl inc jns fistpll inc mov mov cli or xlat jb cmp push cmp pop mov js xlat mov sbb cmpsl icebp inc sbb or pop (bad) xchg push cld push push mov pushf inc lret pop lcall out push mov inc dec (bad) push xor in dec lcall lea inc daa mov jae jo jno scas xchg mov test inc cmp pop mov fsubrl sub mov call (bad) jnp out xchg outsl (bad) in sbbb inc popa mov inc or push inc inc dec push pop popa adc ss cmp popl add xchg scas (bad) jb orb add xchg and rolb push popa out fistpl ljmp xchg in inc (bad) push (bad) hlt or inc in pop out pop xchg nop inc mov mov fcmovne sbb shl and decl xchg jnp ret (bad) xor (bad) inc stc mov add test inc dec fnstsw jne push mov xlat inc (bad) notl cld (bad) mov call fs arpl dec xchg mov ret jns rclb addb pop imul fs lret push out cmp bound adc dec sbb jge push (bad) stos fsts inc add lea int bound and daa xchg xor jmp orl add inc and hlt pop jge scas ret cmp sbb and adc xor push mov mov add fxch (bad) mov xor jno adc inc popf fimul or or jae xchg dec jns shr xor inc push mov mov push mov dec cmpsb aas nop mov xchg pop mov lret out (bad) inc dec push das test test dec inc arpl xor xor dec mov stc (bad) not repnz cmp and sbb mov outsb jo inc pop sub push fimul lods adc mov ds dec or (bad) mov jbe pushf (bad) push xchg add leave sbb cltd sarb inc xlat cwtl ficompl lret iret into jecxz push icebp inc push jecxz int3 add ljmp adc mov lods jne xchg (bad) mov inc std adc idivb mov add inc popa jb aaa gs lea out sbb mov aaa jle aas in push add adc inc cmp in lret cmpsb jmp outsb addl sbb and inc test push out das in add std pop dec sbb imul push inc fcomps jmp push aaa xor mov inc add fwait leave fisubrl cli and jo cmc ret (bad) xor cmp xchg and pop mov xor dec and sub sbb push xor xchg or add cmp xchg inc jle add jb mov xchg inc bound mov inc imul jb sbbl out fs pop das out mov adc jns mov mov push inc jo pop in adc arpl mov xor fisttp inc mov inc mov out inc mov push or into outsl fmul cmp scas inc pop ret in popf pop xor and push cmpsl inc mov and and jle mov add lea xor ret xor cmpsb pop jo aad pop sub cmp cmp cwtl push fnsave lds or ret arpl fnstsw inc or sbb cwtl test cmp inc or sbb push and lahf (bad) and lds mov mov (bad) aaa and mov dec mov xchg out or mov in outsl (bad) sub xchg movl add repz imul loop mov ficomp jg cmpsl adc push inc lods js aas test into inc daa out adc in repz dec popf scas xor xchg jmp arpl jne mov inc jl xlat mov sarb ljmp jne mov int3 or sub ss xor pop out push mov out aaa add test ljmp pop (bad) dec cli insl cmpsb pop fistpl cwtl repz testl cmpsl int3 push inc dec (bad) ret inc aam es push jb,pt cld aaa pop inc in pop xchg (bad) inc jb cltd call inc mov sub cmc lea push imul and scas lret imul and pop push xchg or sbb mov into mov cli arpl inc test ljmp inc pusha jle adc add xchg jmp mov inc push mov jbe sar test mov gs pop (bad) aas dec std call inc mov push inc (bad) lock jae sbb inc or popf xchg jo jg stos push rol repz out loop les inc ficomp pop xor ja xchg rorb and xchg dec inc mov mov repnz jecxz mov testb mov fmuls cli add mov enter cmp dec repnz mov add (bad) jae cld sti mov dec addr16 mov insb shlb dec add jo leave cmp dec aam inc push fcomps mov dec int fmul mov test xchg cltd jmp xorb adc cmp xor sub aaa pop push jae imul pop add mov ja ret imul inc lods rcrb xor xchg enter lahf push call push inc gs add lds addr16 adc shlb lahf icebp (bad) pop xor push jp xlat inc cld sbb push xchg mov shll push inc fstpl imul and jae,pn aas mov pop adc mov inc mov mov outsb inc xchg push test stc bound aas das dec inc int3 sbb mov cmp pusha dec pop imul jecxz mov sbb leave inc pop daa ffree test dec rclb pop push mov loope cmp jb or cs out mov bound push sahf xchg dec pop ret ret test in or sahf enter call mov into (bad) stc pop inc cmp jp imul imul fsubr inc call mov bound sarb fmuls or or cmp es outsl cmpsb push inc xchg lods mov add or sub push mov (bad) sahf outsl test jg out mov inc pop pushf inc ret std mov popa movups xor ret inc loopne sub xor aad js xchg lods lahf jl mov imul popa push sub mov cs negb mov inc outsb subl stos in movsb inc mov pusha test inc mov inc cmc test jno sub mov movb push aad lret xor mov inc hlt inc sarb into xchg sub dec or fs lods inc sbb cli cmp cltd insl (bad) pop or arpl add out out xor testl push mov cmc loope mov dec loop xor repz es sub mov jnp mov clc (bad) pop push inc enter lea (bad) push sbb sub leave jge call push andl mov dec inc pushf sub adc sbb or xor push inc cmp or cmpsl std inc ret (bad) mov sahf pop imul ss decl jmp lock or xor add mov cwtl in repnz test imul mov dec dec sbb cmp lds int3 and inc mov cmp ds pop mov pusha push lods push sbb fsubrs inc dec jg push dec pop ja outsb sbb mov cmp es inc scas data16 add stos in inc mov jae ret xor iret jne inc stc adc fiaddl push pop ja out mov cltd loope pop inc pop push jae fsts and inc or out xlat inc sub inc mov inc in divl loop jns inc dec (bad) mov mov notl xor pop loope (bad) loopne inc add push pop xchg (bad) xor inc addr16 add mov sub push int3 add movsb aas xchg mov test sub dec push (bad) lock incl sbb fsubr inc ljmp mov mov leave xor repz xchg xlat fcos arpl adc add push imul inc loopne cmc ljmp mov push xchg test or pop fmull push outsb mov mov inc push lods sbb pop dec lcall mov movsb and inc rorl sub cltd scas aad (bad) ss jge out push xchg aam jmp and adc pop inc (bad) (bad) mov bound and inc inc lcall mov push mov test jnp and sbb sub sbb push outsb inc inc shr mov sub fldl cmp pop lods add dec nop push pop (bad) in push pushf clc inc bound push inc dec mov cmp mov pop cwtl dec inc sub xchg stos dec jge inc insb addr16 pusha jnp fucomi jg dec inc jb mov sbb inc rcrb iret push or or and inc cltd inc enter jle out add orb xchg mov add add jne push outsb jg pop lret loope addr16 inc mov dec fwait das push insb inc neg mov call jle adc inc insl andl dec mov (bad) xchg pushf inc push dec in jns (bad) aas inc inc cmp xor inc add ds jmp inc (bad) push cmc inc pop out push cmp iret xor or cmp jecxz xchg imul fidivrl lret mov test lods inc out dec pusha dec inc add rorb mov repnz cld jmp sub push inc adc mov es lahf xchg loopne cmpsl inc mov push mov (bad) aaa fildl fs dec flds fiadd (bad) int movsl je arpl inc cmc or lret cmp or or mov in out push inc iret dec pop xchg adc push dec cmp aaa xor movsl (bad) repnz lods clc inc out aas scas ss andnps mov mov inc push xchg cmp dec jb cmpsl lahf add add js pop (bad) xor lds jl divb jp popf lret rcl adc xchg jecxz pushf jb dec cmp inc test xchg psrad push lock je push sbb jecxz pop aad in mov jae popa lret outsb inc add xchg jmp test jle outsl rorl cmp dec lahf mov (bad) dec push push xchg and sbb push dec repz inc arpl mov fcoml xor fiadd jne sub cmpsb push ljmp jmp fwait lcall repz mov scas jg incb jle pop rclb and pop sahf add loopne push in mov cmpsl iret fisttpl xor ljmp inc (bad) xlat insl loop push outsl gs mov cmp insl dec add pop push lock out inc popf push movsb popf in mov mov (bad) ljmp adc clc dec cmpsl icebp inc mov lret add ret xor push add in xchg inc loope push fucomip jmp out pop shll cmp outsl mov inc inc pop test lea les xchg (bad) ja scas push ret inc sub dec lea inc mov inc out mov ret outsl jns add sbb sbb lods pop add push xchg out pop outsl enter mov and xlat inc in loop jno xor xchg fstpl mov es xor scas out mov inc daa xor int bound push mov jmp (bad) out fmull inc sub cmc xchg sahf mov sub shlb add pop in ret ja out out inc jns xchg out xorl fcoms cmpsb incl in inc fwait leave sbb (bad) repnz jbe ret lock or xlat push out inc ficoml icebp mov fild xchg and sub test sub inc xchg stos cli cmp aad mov inc cmp xchg lods inc mov jecxz fldl2e mov push mov hlt mov jp arpl push inc fist rcrb push in int3 inc test add inc inc inc orl mov lcall sbb stc test add inc pop popf fidivr arpl gs insl scas cmpl cwtl pop xchg xor and in or and lahf sahf push xor pop inc in (bad) cmp or adc mov mov sbb inc popa out mov fbstp ljmp addr16 sar dec (bad) jecxz dec das add inc mov inc pop dec jl jne inc jb add pop mov das mov popa or inc andl and and inc mov sub rcrl mov push into inc subl fiadd adc pop jb jae rol fsubs roll inc inc aam adc test mov cmp adc pusha ret inc rolb imul out inc jbe xchg lods sub leave cmp push stos mov sbb mov and loop js out lea icebp adc fldenv andb imul out test addl push repz xchg aam bound or popf jp cmp stos sbb inc push inc popa jae mov mov addr16 mov dec mov popa in xchg sbbl scas daa inc shlb repz outsb cmp push dec (bad) or testb nop xchg cmpsb ljmp jns (bad) xor cmp xchg and sub inc mov enter scas add iret cmp pushf and inc sbb out dec ret add fild lock aaa mov lea sub movb inc test out mov push pop cmp ds add inc es outsl sbb icebp inc fwait imul mov clc jle xchg aas or sahf data16 lcall inc mov ljmp arpl dec andb add mov xchg xor fistp inc (bad) xchg sbb fbld movl jecxz test jo xchg jnp and pop out dec repz cld popa pop push mov inc mov mov inc lcall sbb mov xor jle sti iret push xchg push imul stos xor dec mov pop dec lods and pop jp mov pop add jge aad mov aaa push and stc inc push nop dec cwtl inc mov imul sti mov cmp nop push sub int3 adc inc add cld pop jle push insb inc int3 loopne stos inc inc cmp imul xor std pusha inc add dec xchg je sti sub adc pop or pusha add scas fwait lock inc daa pop pop dec pop cmp push mov fistpl ret lods fdivrs in and push dec mov jge cmc lds js xchg fimull scas jne ljmp inc dec repnz sahf mov outsb xchg mov lahf xor jg inc mov inc mov and in leave pop jbe stos (bad) (bad) dec pop push inc (bad) out inc adc sub inc test pop xor shrb inc notb add sub pop jo (bad) jmp inc es scas (bad) shlb xor pushf (bad) sub xchg sub orb and xor inc test push in inc scas adc dec mov les (bad) daa fs inc mov jnp (bad) leave push dec add push pop ljmp das lcall imul mov add (bad) sbb incb jge stos push mov cli mov push imulb mov jns mov xchg fistpll pop or int adc jbe,pn xchg cmpsl fcomps jno stc xchg pop mov (bad) mov push inc movsl jg int3 mov outsl icebp loope cmp test daa dec sbb inc xlat pop cmpsb out sbb jl out outsl cmc push jb sbb stos add loop mov push movsb popa pop movsl dec sbb roll dec mov mov pop push cmp pop dec in pop cmp jmp sbb add xchg in sub mov jl inc cmovae outsb dec jp int inc adc fcomi shll dec imul in mov dec cmp push sub (bad) scas pop loopne dec negl add inc in popa les xchg movsl push dec iret (bad) (bad) int dec inc cmp popa ret adc sub jmp mov inc (bad) test and sbb std adc inc add mov lods sbb pushf ljmp rorb (bad) dec (bad) jmp dec cwtl mov stos ret movsl lahf hlt (bad) or mov repnz push lcall negl xchg inc sbbl cld in cmp test mov mov mov add push or mov push inc or mov pop or cmp shrb push cmp adc jb jmp cmp add sbb (bad) sub dec adc sti push lret cltd popf dec das ret cmp mov popa bound lds cmc inc nop int3 add out pop test hlt pop lidtl jb cwtl into sti push jle push sbb lea inc mulb add daa add or sahf jmp inc fnstsw push out iret es dec fsub (bad) push cmpsl (bad) push and ss call cmp out add cmc xor or loop mov iret (bad) inc sub dec mov out ss mov ret sbb mov or jmp mov loop inc lcall hlt or dec mov xor shrl daa or mov das cmp and jbe sub mov pop aas loope fwait mov jb addl flds loope pop mov xchg fmuls cmp xor push rclb xor lods pop xor lock xor push ret adc fcoml add cmc mov and sbb inc mov rorl inc inc mov sub fistpl inc or in pop lret in popa lret pop push sar ljmp jo mov dec (bad) mov mov loopne mov pop inc mov push pop sub or aas mov ret clc mov add std call sub jl gs mov icebp ss dec dec out (bad) je std enter add push and rcll aam pop imul jg inc addr16 fwait rcl lret dec sub inc push sbb clc andl inc ja lret jbe or pop ret popl (bad) or jnp inc inc rol test mov inc inc sub clc dec and inc outsl addr16 int3 lds loope cmpsl adcl and and ror test sub fild nop test pop (bad) or lret dec rcl call mov popf std fstpl inc push sbb mov bound popf sti je xchg xchg or mov push xchg add sub fildll ljmp adc pop xchg pop jl mov (bad) dec push leave jo ret fsubrs stos xchg xchg dec jb dec mov lds jns ss out leave mov fcompl fwait lret push mov or jg sbbl mov add cltd inc push add jae lds leave es imul inc push sub lret lcall movsb dec push sub mov xor push stc je rorl mov in sub aam fwait mov mov sub or sbb mov dec xor mov dec xchg and (bad) loopne adc inc inc fbld test out jg ja ret fiadd ds std shlb jb pop imul pop mov xorl inc dec adc cli sub outsl cmp je push aad mov xchg sti mov fldpi adc xor ds inc pop fmuls mov hlt jne ret xor insb lret sbb je rclb adc xchg mov dec push inc mov xchg sti leave mov js dec mov inc pop insb mov add ja push push test dec cwtl inc adcl push inc mov jp les addl cmp addl mov inc adc sub jb repnz push xchg or inc pop ret fidivl inc int3 inc add inc sar ljmp inc lahf mov mov and adc outsl aaa jg in enter jno mov ret loope fdivs lret es cmc jp lds adc inc cmp xchg push jbe movsb inc sbb jnp mov stos add das aam sub incb cmp inc or dec cmpsl leave loopne in (bad) pop xchg mov fidivrl stos mov rcr icebp inc (bad) repnz testb dec mov std cmp add push add sti loope mov test mov add mov imul dec in stos sbb popa add adc xor nop jecxz push ds addr16 sub inc mov dec dec hlt test inc rolb in jle flds out mov push xor stc inc dec mov call iret jne mov push sbb inc or add mov mov lds clc push dec jno popf mov or mov jecxz cmp inc divl jmp les and fildl mov or add mov (bad) jne inc xlat into out sbb je mov lret mov xchg shrl in repz aas cmpsb (bad) or lahf cmp add sbb xchg and inc mov add inc jb mov repz and adcl out push or push ret inc jl pop mov push fsubs push sbb aaa (bad) sti dec jge add push lret orl imulb xchg mov inc push (bad) mov inc ja lret add push dec aas mov outsl and test fsubrl add test add mov or jb dec and xchg pop sub push das and jg inc aam xchg push mov xchg aam insb jno pop scas ret push xor sbb push push inc add push hlt pop dec xor cmp inc sub or (bad) or mov and fwait lods stos ret cld xchg mov imul aaa xchg inc xchg iret ds inc (bad) dec inc pop add fcomps jne inc mov fcoml fnstenv pop inc cmpsl push (bad) fwait add ss in inc xor test or testb les inc push jnp (bad) mov and pop sbb imul or in fsubs fnstenv ds and mov sbb mov pusha popa add insl fsubr icebp add xchg mov inc jg idivl insb mov cmc jo mov ss gs (bad) sti sbb sti jno dec inc mov sub inc cmp lods inc pop xor inc inc (bad) in pop outsb dec mov inc iret and adc jecxz sbb aaa dec mov arpl inc test jecxz cli mov scas inc mov fistpll ret mov dec out adc int3 bound insb add popf pop inc dec mov stc sbb xlat xchg arpl jne lods inc cwtl movsb mov roll (bad) mov inc shrl push aad xchg fisubr sub mov push int push dec cwtl push dec and cmpl inc mov popf fidivl std dec fisttpll (bad) daa cmp inc push jae or loope (bad) inc (bad) cmc xchg pop sahf into (bad) inc out pop cmp xchg ffreep adc push push adc xchg sbb incb into jns outsb dec sbb or jns (bad) xor jecxz fs sbb and add movsb mov mov cltd or cld pop dec lea sbb fdivs into scas inc inc mov cmp clc inc fcmovnu pop mov sub test sbb push mov loopne jecxz adc add popaw test lcall in inc cwtl fild mov and lret xchg jb add xor aas movsl jno pop rolb mov add jne jp mov mov sub fidivl jmp jge cmpsl sarb sub cmp outsb iret add inc jo cs mov sbb inc mov lds jge test ret mov xor and inc dec xor and out sbb cli jbe lea std scas ret inc push repz inc sub mov dec js add imul int or mov inc mov jne fs dec repz pop pusha les outsb jecxz rorl divb std pushf sub or dec int3 ret popa sub xor xorl mov mov lock insl mov cmp (bad) jnp mov daa sahf rolb pop int3 pushf push and add and fbstp mov ljmp add js repz hlt jg lret jno arpl in (bad) int pop push or ds inc push insl mov arpl ds add dec jb repz icebp pop fwait scas push sarb pop fcmovne lahf (bad) and mov xchg inc mov jae xor sti js int3 jp jmp mulb and lret addr16 ret cmpsl sub dec ret (bad) imul push es cmp (bad) sbb lods pop xor arpl xchg aad push push mov xchg sbb inc jo sub or xchg sub ret lds jae lret ja xor inc xchg jb fs stos inc pop insl cmpsb rol (bad) jb into push inc sbb lds lcall dec cmc lock mov stc out push dec (bad) mov pop inc ret mov add cmp daa sub push lds arpl bound stos roll imul inc stc mov xor ljmp inc jae outsl loopne mov push jbe sbb (bad) mov mov inc mov lock cmp imul fwait sbb ret nop sbb mov aas mov setne insb add (bad) fcomip in aad push xchg cmpsl test int cli inc sbb in adc aas pop mov adc (bad) icebp inc jecxz mov fldl2e inc cwtl sub neg push mov clc and leave cmp outsl add loop or inc jg movsb mov mov repz cmp and xor ljmp fisttp outsb (bad) je jmp (bad) adc repz repz lock stos addl add addl mov adc stos gs std test sub mov mov jnp sbb (bad) addr16 enter push sub xor test into cwtl add int3 jge xor jecxz sub mov push rcrl popf outsl adc faddl adc imul dec sub mov xchg push lock dec pop pop xchg js lods xchg imul outsl je jae push xor cmp rcrl adc out and iret rol ds notl jmp sbb fbld loopne jno movsb and xor inc pop shll inc jo or cmp dec lods mov xchg inc fnop subb aad mov pushf pop xor inc data16 insb stc (bad) ds inc movsl ret inc mov inc jmp push (bad) push and fisubrl hlt aad push dec push inc mov mov mov xchg dec scas dec mov mov adc enter add jle cmp jp mov in clc pop inc mov inc aas pop mov scas ret add fistl and or mov fs inc inc jg addr16 xchg and inc jle mov xlat scas mov rcl cmp scas add sbb sub inc cwtl mov into imulb add adc pop sub insb dec cmpsb sub lods inc in fiadd lret mov (bad) sbb out mov and movsl add adc adc dec mov std mov inc js mov inc data16 mov lods add popf daa push cmc loopne jno test mov sub inc pop mov and xlat or mov sbb stos mov sahf dec aad iret cmc into inc adc mov pop add std imul and lock icebp jae cmp addr16 xchg dec in and jne mov xor imul dec lds jb ret xchg mov push mov sbb fmull pop jae popf shl shrb inc jbe adcb and xor sbb jle mov lahf fs dec bound stos das inc dec mov clc mov add jno popa mov movsl adc jecxz add mov jo pop inc mov adc push or push xchg and mov jecxz lods inc enter int mov shr (bad) jle inc mov dec pop xor sub orps fbld mov dec shrb sbbl dec sahf scas rep insb imul pop fimull fs push inc ss push das test loop inc test xor and mov cmp cli sub mov inc xor sbb jns leave dec or push mov inc mov (bad) xchg inc (bad) hlt js (bad) mov xor jl mov int3 (bad) into in dec sbb sub pop pop add sbb mov testl lcall inc cwtl sub adc sub xchg xchg lret into push dec mov inc inc lods int3 jg (bad) rorb dec (bad) or push out inc test xchg or imul mov clc outsb push mov loopne ret pushf sbb ljmp xchg dec sub pop addr16 cmp or xor adc pop fwait pop jge bound jne sbb (bad) mov test add inc outsb xchg xchg and sub dec adc arpl pop sbb outsl fldcw fidiv jo jb push push enter and and xlat cli and dec adc je imul push and fucom inc jae mov aam cld push sub sub call or cmp xchg xor sbb adc ret pop daa aam add sbb dec sbb inc lock roll jns fdiv jb inc xor and or sub dec cmc push orl dec push data16 push imul jmp push mov hlt mov js add pop add inc mov sti rol jl into (bad) mov fadds ror jno jnp aaa jmp subps sbb and repz fs mov out xchg loop lock mov push mov insl imul mov jo insb jg or add mov mov iret xor adc sbb aas sub xor jae mov mov dec scas or jle ret mov imul pushf (bad) dec (bad) xchg adc incl sbb pop push out popf fdivp inc push out call add cmp mov loopne mov sbb pop jne fistl shr adc je dec cwtl ret in fmul and pop adc mov jae cmpsl mov fildll loopne je sbb lock jge daa inc mov dec mov (bad) (bad) call add cmc jb adc cmp movsl jecxz cs outsl ficom push push jnp fwait jecxz scas mov (bad) repz or out xchg mov rcrl roll lret and mov push dec mov test inc leave or fsts call inc stc imul xchg add mov jle sti sbb sbb inc fistl ds push sbb mov inc inc dec push jg sub sar adc repnz addr16 jmp call mov inc into inc and mov cmp mov in ds out imulb inc sahf xchg icebp lret push rclb es or ficompl out or xor cmp insl (bad) inc and arpl jo adc sbb jno push xchg std xchg out aad inc dec jmp scas adc jle adc dec ds lret pop xchg xlat (bad) cmp js aam out inc and or insl sar outsl loope push inc xor in (bad) in inc mov idivl sub cmp add shrb mov addl mov cli stc xchg inc cmp iret je insb xchg inc mov (bad) mov mov into cltd pop sbb fnop in popa test in pop mov imul inc shr xchg arpl aaa test int xor outsb inc (bad) or xchg sti jg dec in and adc fwait jecxz,pn pop dec cmp xlat mov pusha mov mov repnz cwtl fistpll imulb push jle es je adc ljmp add scas push aad (bad) pop pop std test xor rcll mov inc xor lahf or mov mov mov xor and push addr16 int3 xchg push add inc rclb inc cmp dec data16 sub pop aaa mov cmp sub rorb pop push push adc xor in mov jb push addr16 into loopne lret xchg sub jecxz mov push mov (bad) mov lea rorb (bad) imul cmc dec pop cmpsw sub inc inc dec mov mov std out dec or jae repz in test loope dec sub call repz hlt cmp mov jle adcb inc jecxz push and and jmp cmp jge and and idivb inc and (bad) dec cmp shrl xor mov xor push inc nop fildll and data16 xchg xor notl mov inc jmp xchg ljmp jmp sti rorl push inc pop push mov hlt mov jge push ret sbb outsb xchg dec mov mov loope in pop pop inc mov das mov mov inc mov sub xor cmp insb xchg cmpsl inc or push and cmp jge aad in in sbb loopne push ret xchg inc inc addr16 daa pusha inc gs and mov addl xchg jo fistp std clc dec xor cmpsb mov in and popa push and inc jo jno jle push and (bad) jmp sub push imul lods xchg inc hlt mov xchg fcomi out inc (bad) ss fucomi es incb mov mov aas jmp push sbb mov push mov inc push mov add inc mov sbb fsubr sti dec leave jl arpl mov jp outsb es cmp fildl rcll and or xchg adc lcall movl xchg stc repnz push lods jle xor cmc pop and inc pusha sbb stos push gs test mov inc scas push cmp or inc (bad) movsb mov cmp cmp sbb dec ja jno lods ret (bad) mov jne shl pop jo aad rcll je (bad) mov and pop mov enter sbb sbb xor inc sarl xor dec pop add loopne push (bad) addr16 cmpsl faddl (bad) mov xchg cld jge faddp or sub inc repz mov adc daa or sub leave push inc hlt negb sub ja and adc jle xor in push (bad) fldl add das mov inc dec aam mov add push inc xor out lahf push (bad) adc mov xor mov lret mov nop rol lods xlat sbb pop inc stos decl mov repz cmp (bad) icebp (bad) std sbb push pop imul arpl pusha lods (bad) iret orl or nop aam add imul sbb js xchg jo (bad) pusha adc test popf pop in mov pop aas and rcl out ss insb inc jge pop mov xchg popa inc mov cmpsl std or (bad) mov and fsubs inc and sub add mov cli dec cmp popa mov sbb test mov lods fildll xor push push pop xchg aas pop xchg in xorb add ja pusha mov test lret xchg popf inc ss lock je (bad) out (bad) cld in sbbl xlat pop fcomps dec push mov rcl in inc js xchg jno les jg cmp ljmp pop cmp pop sub sbb mov sarb (bad) cmpsb (bad) (bad) test jg dec pcmpeqw lods repz cmp popa mov pop inc sub imul (bad) jae mov (bad) xor fxam inc adc xor ss push add insb cltd mov out push pop repz pop movsl inc pop pop cmpsb adc inc leave lods ret add roll es mov jl icebp (bad) popf (bad) daa shlb add lds inc (bad) ljmp fs dec fs sub push je,pn test repz xor dec insl enter dec xlat inc nop cmp jecxz inc mov les inc lods clc fadd ds sub inc push imul cmp test and in sbb pop outsb mov inc enter mov je fdivrl sbb inc out push insb pop cltd cmp dec in jne inc repnz push jge leave inc xor pop cmp xor lds in addl (bad) push scas pushf push or push (bad) fild sbb push popa andl cld sub pop cmp add in je xchg cld inc aad dec out mov mov or cmpsb icebp aam pop out jge add lret aaa insl xchg fwait imul fsts test sbb out aaa out mov xchg mov inc pop ljmp mov mov inc mov xchg shlb push push aad ja dec imul (bad) xor or mov fldz push negl dec lcall inc cltd mov dec jmp adc mov mov add pop inc sub test push inc sahf inc jns adc cwtl or xor xchg imul or dec rorl ret mov (bad) in (bad) pop cmove loop pop outsb ret or jg pop adc inc mov sub pop int3 sbb andl cwtl andb jae cmpsb xchg add shl mov push xor mov mov adc sbb mov jne (bad) aad sub je mov (bad) jb hlt inc push rcll pop add or add jle mov mov mov hlt jo data16 insl pop notl lahf ret (bad) lock int3 dec cmp into les ja aad xor sub pop incl inc ret inc cmp in (bad) dec js stos lret mov outsb push xor pop out roll jp,pt add adc push add lods mov fldcw clc faddl push lods xor (bad) in lock inc add and cmp inc push enter stc dec jno (bad) (bad) fxch dec dec jae in pop incl jge out sub int popa rcll popf mov jne xchg dec mov jle xchg cltd insb or in dec ret xlat sub in inc out rorb pop xor dec add ret pop (bad) loope inc sub sub mov scas (bad) mov lret jg mov test outsl fildll scas mov or jo push aam cmp mov sbb int3 sub push sub inc inc mov fucomip stos dec cmc jl jnp enter test push sub push mov test dec lret rcrl enter stos imul inc pop sub push fcmovnbe ret mov stc inc and mov jo test dec sub testb pop rolb sub add in sti xchg imul int or jecxz mov dec loope adcl dec inc je dec orb insl add leave pop mov push test lcall stos addr16 stos aaa ret pop call xor inc mov outsb pusha decl jb mov daa mov inc (bad) and andl xchg fsubrs jmp int3 outsl loop sub pop add xchg mov out inc sbb outsb ja insl mov mov cmpsl decb pop jno add nop out and dec cmp stc inc hlt xlat (bad) loop das dec scas push in mov cmp icebp aas movsl inc pop scas test push movsl bound inc lea dec adc (bad) mov pushf test dec sub subl xor ret cwtl shl jnp clc sbb push pop lahf push gs loop ret ljmp sbb cmp inc or int3 lea rcl push movsb ljmp jnp mov int3 int inc xchg (bad) dec mov push cs repnz cmp adc lahf lcall inc mov and fsts inc xor cmp jae adc inc insb mov in fs stos fcoml fildl push insl add add dec jo or xchg dec lahf pusha std dec repz arpl arpl add push ffreep les jne jle enter mov test or xchg roll fbstp mov inc pop lahf incl push jp je fwait orb and pushf lods jmp jno ss sbb pusha rcrb push inc sub lcall xchg sub inc sub jge pop (bad) mov cwtl in and sbb fcoms ret inc das jbe and inc mov adc hlt push fwait mov lods sub mov or inc adc nop push cli addl and test popa push lea xchg and mov xchg loopne fmull jns or dec inc (bad) pop mov das inc cmp ss sub lea dec imul mov shrl (bad) push sbb arpl ffree cmp test roll jle add mov pop insl sub imul call dec mov ljmp enter aas data16 mov add pop pop inc or cld mov cmp inc inc ret pop andl scas stos out pop pop es lahf ret aaa fiaddl cmp inc dec mov mov inc add xchg mov dec pop inc dec pop sahf mov out add dec stos mov inc test sub sbb out push mov pop jle mov clc int inc xchg mov xor push add sbb inc jbe xchg jae repnz cmp lods sub lods lahf inc push jmp jge inc adc stc xor hlt inc roll push jns aaa inc add mov sbb xor call push sti test inc push mov xlat setne loope hlt icebp pop adc mov (bad) inc fisub add dec adcl xchg sbb rsqrtps inc and or push test negl mov movl ss dec int3 (bad) rcll mov inc pop imul cld jb mov lea fwait arpl add dec dec dec shll gs sub fildll roll dec mov (bad) and xchg ljmp and push ret aaa cmp pop pop jbe dec lods pop jecxz lcall std or mov ret rcl in push and push negb add xor pop in sarb pop dec jns mov in aas inc ficomp pop jno mov push inc loopne add push push add (bad) mull xor aam pushf mov in cwtl jecxz push mov xchg lods add incl xchg inc loope hlt rol movsl mov clc mov (bad) ret jb pop and mov test test mov mov daa mov sahf or popf dec sub inc cmp cmpsb and jg fwait push dec addl dec push inc inc stos push call mov xor sbb cmp jp mov fs test movsl lcall cltd xor mov or sub sub adc cs lret add xor cmp leave fcompl inc out push cltd das mov leave aas inc cmp es inc out lcall in call loopne aam psllq mov sahf sbb shrl insb xchg and sbb jl popf test push inc jb sbb clc add das adc pop aas in sti xor cld (bad) ss cmp aas add mov inc mov jl pusha add add xor clc fildl dec (bad) (bad) fnstsw ret repnz inc xchg fcomps xchg (bad) xchg cmc or (bad) fisttp dec push daa mov jl repz dec mov in js push into sub scas inc pop xchg fndisi(8087 bound xor push push sti xor test inc mov addr16 fsubrl jge mov adc stc jae mov push cmp mov push (bad) lock lahf and inc stos mov out aad icebp ret std or sub cmpsl loop mov mov add jne icebp inc push cmp leave adc push dec aam add cwtl inc and sbb insb inc cld mov loopne cmpsl cmp sub mov and jp mov gs hlt ret inc test jg rolb jno sbb stc pop test in mov and call inc out xlat lods movsb or dec int push push cmp inc call popa inc mov mov adc mov ret out dec cmp aaa mov inc in mulb push mov push hlt gs mov lock loop push sbb pop out int3 push shrl mov cs cmp xor dec frstor sbbb cmp dec cwtl nop arpl jge push loope add aad pop mov in (bad) xor mov jo daa out dec shrl mov scas movsl nop inc mov inc inc repz jmp outsl rcl cmovp or mov mov adc inc imul sbb add inc and dec or add or jo push sbb and pop fstl in clc cmp es xor test insl div leave inc js int push cmpsl rclb xchg inc addr16 cs loopne into mov mov gs dec cmpsl xor jg adc stos or lds ret and dec cmp outsl stos push pusha dec rcrb into pop aad clc repnz ja pop lret pop pop data16 and ja (bad) jge dec rol stos pop mov mov add je mov pop push test mov das mov inc dec std cli lret mov inc jns lds sti test sbb test out sar pop dec dec mov push inc or dec jns adc inc clc mov mov into in test cmp xor rclb fmul orl jae (bad) iret sub add cmp push xchg dec push mov les incb icebp push fsubr in mov fs or inc pop dec dec cmp mov mov inc (bad) hlt xor (bad) push push push jo add sbb xor cli int3 cmp mov jl mov jmp adc pop push pop outsb inc sbb mov addl push push inc sub dec pop add jo pusha mov mov jecxz ljmp mov movsb popa (bad) divb cs mov xor and mov pushf inc and mov adc test sub out push push pop rorb adc mov sbb bound cmp mov mov imul push lods adc push xchg in xchg lea sarl add lods ret push jg test xchg push fidivr sub repnz loopne leave mov sahf out lds xor sahf (bad) iret pop repnz xchg ret jecxz jnp pop push xchg les xor and (bad) (bad) dec lds mov dec and test ds pushf js je push sub push pop inc popf std lahf cmp mov sub mov mov or mov into lret shll jnp inc cmp inc (bad) sub imul sub dec and imul jbe ds push (bad) xor imul (bad) mov mov (bad) hlt sti mov scas aad cmp imulb jb (bad) dec test sub clc or outsl dec dec or push sarb adc int lahf (bad) sbb inc lock inc clc mov lahf jg dec push int3 sbb jl leave (bad) inc dec inc and sti mov add cltd stos add cmp pop lcall rcrb mov in sub jae push test imul push (bad) jne dec int mov dec cmp clc mov inc lods mov enter mov inc and sbb jl xlat jae clc mov aam loop loope (bad) mov mov inc push rcll rcrb pop mov ret xlat aas push inc loope test sti lods pop clc and mov jmp arpl bound jns xchg in inc fs inc cli dec and adcl push jge cmp out jnp daa fldl outsb scas nop aad cmpsb add xor sbb inc les (bad) inc aad adc jb,pt pop jle push dec cmp lcall adc inc out add mov push sahf or sub inc mov jle (bad) fiaddl push sub movsl ror mov adc rorl pushf or lahf sub jnp inc daa (bad) frstor inc ljmp arpl jp push push rol shl clc iret mov cs fsub andb inc or scas cmovno sbb xchg xchg into jno adc add (bad) sub dec pop leave pushf push dec add xor es loopne cmp inc scas in shlb dec pop imul movsl pop jo scas xchg mov push insl add aaa in popf jle sub sbb cmp sar sbb xchg cs pop sbb add daa sti inc jp lea adc pop test mov and stc movsb inc or cli xchg cmp adc rclb sub xchg and loop cli ljmp ss mov sar jg pop inc jbe xor xor xchg adc mov adc xchg mov icebp aam mov mov jmp jge push out adc fild jle js popf xor dec add push ret jbe mov lods jae or arpl sarl rcrl and xor test dec cmp jb rclb pop add mov cld rolb notb dec xor push lret sar sub xor or in je mov (bad) mov scas (bad) stos test std jmp sbb sahf addl sub or adc fldcw xor imul cmp mov inc inc or inc jne xchg movsl adc or fild popf cltd xchg pop sub pushf lods jns dec mov inc mov sahf inc push rcll jmp je dec jbe xchg imul fidivl mov push inc adc repz mov loope push inc xchg jae push ss cmp or andl sub inc fnop sarl js rol add add outsb jecxz xor int3 and inc cs repz jg in ret jns imul sub andl adc adc addb add test testb sbb inc push push pop sub cli repz inc add xor pop leave sbb jns imul dec jmp dec push dec push das push out imul popa pop cmpsb inc mov into dec mov push sbb mov adc mov sub mov push xchg inc fisubl pop sub cmp push ret pop sbb push jb mov fnop inc fmuls and xor addr16 aam in bnd jbe inc add movsl aas and cmp or out sbb mov ret mov fwait je mov pusha or mov xor and lds inc and insl test mov call je sbb in aam aaa or mov into or outsb ret mov hlt inc dec inc std imull lods push push add sahf lret adc ret in cmp xor and (bad) add add imul pop imul mov push pop dec lods jge lea dec jb push (bad) jbe inc add gs jnp inc inc or push outsb xchg inc mov lahf sbb lret cmp and sub add jae push imul outsb out pusha jecxz pop loope add add and sbb (bad) lock pop xchg jge stos ret xchg mov imul pop mov mov cmp je dec inc aas jo ret into lock cli dec add mov jbe dec jae inc inc push lea test push iret (bad) dec push jmp ret dec pop rolb push mov cmc shrb xchg pop daa cmp xor (bad) jb cmpsb mov sub aaa dec leave adc es loope push pop sub insl pop loopne sbb push inc mov into repz das mov fldln2 xchg sub xchg pop inc mov mov add loope inc outsl push (bad) inc in pop cmp adc jno (bad) loopne movsl and aam lds xchg jno or or mov and andl fs jns test lods jg pop test (bad) cmpsb sub inc cmp test xor les mov xchg push dec stos flds loope mov call adc inc adc adc imul into xchg fsubrs (bad) fcmovnu mov out aaa xchg and jp mov lock lea movsb push test lret testl inc insb xchg test mov dec mov ret jbe add ret test stos lods adc sbb decb (bad) push xchg ret arpl push jne das imul jmp out and dec cld mov adc inc fisubrl nop pop inc push jno int3 movsb sbb or sti inc lea add orb push xchg gs enter hlt pop push fbld sti sahf cmpsl popa in inc fbstp out mov insl cmp stos popf mov push xchg inc jns gs inc push unpckhps push aas sbb push mov sti es pop cmpsb xor movsl inc imul sahf inc ret rorl xchg lahf jns push dec jmpw lret or inc lods mov pop sahf inc pop mov (bad) cmp and mov adc adc andl das xchg sbb fwait lahf add mov and inc xchg fucomp xchg inc xor jae jb scas mov fsubrl ret rorl repnz and stos test clc aas call inc jle imul insb inc out (bad) sarb xchg ds cmpsl pop mov jecxz push mov push fdivrl movsb (bad) scas cmp movsb mov mov movl add (bad) xchg push sbb je pop push call test fiaddl mov cltd (bad) or push stos add sbb mov xchg call jp jne jb sub aaa inc sub in dec add inc loop test hlt int3 inc clc xchg pusha rcl adc lds out test lods repz lcall pop pop sti pop xor clc addl mov push pop add cmp cmp push dec inc lock stos loopne out (bad) sbb push xchg adc adc mov cltd imul add pop and icebp arpl fwait mov jecxz cltd rcrl lds adc mov cmp xor sbb cmc jne dec cs ja and (bad) lret imul outsl enter insl fcomps shll aad mov fwait sti sahf (bad) jl jecxz stos pop push inc int (bad) dec push jecxz dec xor cwtl dec aad push sub sbb fwait push sarb cmp xor clc fs add push jae imul dec sbb and in cli int3 xchg cwtl mov imul movsl sbb cmp xchg xchg inc jl stos icebp addb sub test movsl repnz xor jo je enter inc loopne adc and push loope inc dec mov in inc mov inc sysexit test inc loop call push das imul out dec aaa xchg mov aaa hlt mov add dec adc stos jp mov scas pushf setbe jno test add push fisub add mov in (bad) dec ret mov push adc pop mov iret in fsubrs pop xor aaa or loop add pop push or in inc daa jl pop adc inc xchg in inc fisttpl pop addl ds clc or dec lcall mov xchg cmpsl popf push aad inc mov arpl inc inc add and push data16 jecxz repnz cltd sti test mov sub lret mov and gs (bad) repnz (bad) add mov (bad) jle push add cmp pop and inc cmp pushf leave repz incb sub pop and insl arpl addr16 dec ljmp jns pusha dec stc lret (bad) mov adc fnstcw mov pushf (bad) fildll int3 xchg jb inc mov bound in dec addl aad and or cmp inc lcall jae addr16 push fcomip inc cmp pop push out mov inc cmc sbb inc mov fsubl pop cmpsb cmp mov das push cmp ja call and adc in inc inc mov adc pop (bad) dec cli or mov testb sbb jmp adc pop and inc imul int3 fistl mov adc lret xchg or sub (bad) (bad) push test jg pop push mov xchg mov mov ja fildll pushf push mov inc popa jg and pop in push xchg subb loope inc cmpsb movsl or lcall dec int3 js or mov jg jno sbb add hlt aad jecxz es sub pop mov pop mov adc sub test fs sub imul out jo xlat fbstp out dec sub rorl dec (bad) fsubrl adc mov pop aaa jno outsl dec leave mov (bad) cmp mov jns pop cmp fmull fstl ja adc lds push inc test in dec fwait push dec xor dec aad push push lods or inc inc shll mov inc lret roll xor mov adc inc mov xor bound ret pop stos sbb jle sub cwtl push fwait sub push rcrl std sub jecxz mov add add inc mov push dec shlb andps xchg sub clc movb test inc in int3 les inc pop out sub jns insb outsb jb test rorl ret (bad) xchg ret fdivrs les inc sub add adc add dec push outsl push mov jne pop push add or popa dec imul adc adc inc sti or out repnz pop push (bad) incb mov arpl mov mov xor inc jl jo jnp dec pop pop xchg jge int3 rorb ret dec in clc or inc push pop mov mov add out ret shlb stos rcrl mov jb or push mov cwtl inc xchg outsl mov jge xchg push std pop xchg rolb movsl inc adc loop jno dec pop inc jbe mov cmc (bad) pop add adc icebp clc and clc cmp pop stos mov push cmpsl ret icebp loop fisttpl pushf jmp cmp aas sbb push je dec and adc scas pop add das mov sahf add addl fdiv xchg shl ret sar ljmp scas mov cmp mov add inc divb xlat inc cmp sub push inc aas (bad) test in pusha shl pop test out inc mov adcl aad (bad) mov insl popa mov push in fisttpl fldl2e jno ret dec popf out sbb rorl mov aaa loop mov or inc call mov in inc sahf mov xchg fisttpll sbb inc xor mov pop out lock xor ljmp jae and pusha jne mov lcall mov add out mov mov pop dec cmp sbb xor in (bad) and mov (bad) or jno hlt mov into xchg mov arpl repnz and loope (bad) xor cwtl dec mov pop inc push dec cmp pop add clc dec lods mov sub mov leave xchg lcall or sub sub adc iret scas mov inc pop push cld leave add aaa js pop or insb fsubrs and inc ss rorl xchg push adc in fldenv or sub add jo dec loopne in test sahf cmp push stos or (bad) mov dec push dec fmull jo fmul mov popa adc mov xor out fild sub inc (bad) or xor imul push fwait pop mov jmp fmuls inc inc pop stos je std outsl jne out test lret ret test scas (bad) mov mov clc mov mov adc add jecxz xchg jecxz outsl xchg inc neg sbb jbe repnz mov in dec inc mov or gs jle (bad) pop imul cmp inc sbb cmpl inc xchg shr sti fsubp xchg cmp test outsb sbb xor inc sub jo mov mov or sub mov inc fucomp icebp aam mov repnz mov pop xor lret fwait add mov std sub in sbb dec adc push dec xchg aad hlt and popl pop imul inc in or inc sub nop and sub hlt sbb and mov mov (bad) inc ja pushl inc dec and cld call jg dec push jbe and adc sbb inc pmullw popf daa jnp repnz mov jl push movsl aas push xchg adc lcall scas jbe dec mov push lret dec jg subl mov inc xchg loop ljmp icebp mov into push sbb inc pop mov inc mov and test dec inc and lret xor in cmp imul jmp xchg xor mov cli cmp jno xor jns jmp movsl inc out mov dec push add sub dec mov pop les daa out test dec imulb sub inc orl pop sub aas mov inc fiadd push and dec loopne xor add loopne and push (bad) repz ret mov xor ret (bad) mov jle or inc inc (bad) std xor lahf sub or mov cmp arpl lahf sbb push sbb push mov inc (bad) orl mov sbb addr16 lret dec xchg ljmp pop int3 xchg adc call in sti fadd add addl lcall lahf add inc mov adc and inc fcomp lcall in inc push sub out pop jecxz ja fist stc pop int3 add jns add cmc ffree arpl add sbb jae adc in inc inc cmp mov ja repz fbld sbb adcl xchg fistp and mov repnz gs idivb inc mov sub fcoml daa das sbb fidivr or mov test loope leave or inc xor ds movsl add lock rclb inc bound cmp sarl mov and in fmull sbb outsl jne inc mov arpl das push inc cmp push fistp jmp ljmp enter popa jmp jecxz mov jecxz push adc jle cmp add mov sti sti mov out add and out mov (bad) loope and jae pop pop int inc jl cmp cmp aaa in jo ds cli or outsb mul mov push mov inc dec shrl lahf mov dec mov push mov icebp aad bound popa ret adc push (bad) mov mov inc loop insb adc xor adc iret xchg enter orl sbb and inc or (bad) xor addr16 shrb jne iret sub jecxz push inc mov jo add rcr test dec dec jp lods inc stos jno sar aaa fiadd xchg ret push test sub inc testb mov je pusha imul ds mov adc loope clc dec mov dec cmp icebp cmp andl popl inc pcmpgtb mov movsb int3 pop mov inc or dec ss cmc xchg push and movsl inc sub mov inc movsb dec enter inc pop insl insb pop addl fcoms jmp es jo push add xor inc push ret mov je mov cli cld test add adc inc xchg jns xor ret mov sub inc dec push adc mov mov icebp ret or sub orb xor aas loop mov aas cmp inc xor mov mov inc dec cmp insl ret sub cmpsb popf mov sti inc fcmove and mov sarl jbe pop inc test dec mov push aas cmp inc pushf lcall inc stos push shrb add mov leave iret idivb jmp sbb xchg xlat lea std (bad) sub inc mov adc cli inc sub mov arpl das push push cmp lret pop sbb (bad) fidiv std inc popf mov mov jmp loopne scas outsl pop lea sbb pusha inc or lret xor adc nop adc sub mov mov adc roll adc imul sub xchg rcrl mov mov (bad) or dec jbe xor inc jo mov dec lods jg inc cmpsb and sbb xchg inc xchg out cmc pop pusha jle mov or adc arpl dec lds push popf add sbb andl (bad) popl inc push jno mov cvtps2pd and or dec rcll ds jecxz outsl (bad) push inc mov cmp nop mov adc ffreep out pusha sbb mov add jo mov sub ret pop xlat int and inc (bad) sti int3 sbb adcl add mov mov add sbb shrb int sbb inc or jl mov (bad) das inc and pop dec push pop jg mov sbb aam and popa pop (bad) jbe je jno jbe inc lea sbb pop cmpl mov loop loopne add and mov insl (bad) xor adcl dec fwait (bad) es iret lods add jmp mov sub jns mov andl loopne sub out pop xchg mov jno fistp aad inc push mov adc xor push pop inc xchg les popa cmc std mov mov mov mov jp lods jns jo jg sti xchg xor bound popl adc hlt adc (bad) aam pop mov inc jnp mov sahf dec mov push stos scas bound sbb xchg and and mov jg xchg rcr sub lds (bad) jnp inc cmpl ret sbb mov add push rolb jp ret sub jg mov pop outsl dec fmull or pop je inc sub mov jnp pop inc fmull inc sub mov inc mov cmp in lock jg pop dec inc stc xor xchg cwtl cmp loop in add repnz jp xor ret mov and out sbb loope add movb xchg mov xchg sub addl xchg inc xchg inc sub outsl push pop lcall adc cmp add sub mov iret (bad) adc subl cmp cli es cmp xchg stos cmc imul jbe push or xchg stos in stos test lret add shr xchg lret andl sahf (bad) push xchg rcrl ret add outsb mov cmc or fmuls add dec sub dec dec movntps cmp sbb push xorl loopne (bad) lock iret frstor int3 stos xor cs inc inc add les sbb adc rcll sbb inc mov push add gs and mov sub repz scas lcall and (bad) out mov push inc sub loopne sbb call daa push aad add dec or pop sbb adc mov mov nop sbb pop mov aad lcall notl jle ss cwtl inc mov outsb mov popf push xchg mov jecxz cwtl jmp dec mov leave and inc ja icebp mov inc (bad) fild mov cmc out add sub (bad) pusha push arpl pop mov push cmpl jge clc dec inc popa scas xchg je adc mov add sub mov repnz lds add push or incl movsl inc lahf jl push inc mov adc aaa arpl mov shl insl cmp fs ja das fnstenv loop js movsb stc pop inc sub cmp ficomp aad inc mov rolb cmp jo jno pop fnstenv fisttpl mov jne inc xchg in aaa jne cmpl push push aaa pop jno jp pop flds push adc xchg mov jl pop insb and adc aaa push int lcall je xchg call sahf xor mov pop inc hlt jae adc mov cmpsl imull jl mov popa cmp dec cwtl pop sarl cmp jne inc add aad mov add and xor loop mov lea and mov inc push ss jp and xor push (bad) push loope in sub in inc mov je out push mov xchg xchg mov loope cli adc scas xchg jmp pusha add aad jne cmp aaa xor inc cmp dec lea add jae (bad) inc fwait jg fist out test xchg pcmpeqw mov inc sbbb sahf popa aas adc repz mov and mov sbb xor pop int3 and les shr jmp pop pusha dec cli repnz vpinsrw and inc inc add pop mov mov int3 inc or lea sbb add adc add insb push andl icebp and lret push inc sbb popa mov dec clc xchg jno push jg ret je pop xor scas push divl jbe inc pmullw int add loopne leave jg inc les cmp jno or mov push adc xchg nop mov iret push mov add adc mov pop add push mov inc sbb or pusha inc and dec in adc mov dec sub arpl sub dec dec sub xchg mov push repz (bad) mov jnp inc pushf (bad) dec js dec bound and sub jo xchg inc outsl sbb arpl inc ja add scas les mov xchg sub dec loop inc add add stos lahf mov testl aad pop cmpsl aam (bad) push mov test mov xchg push xchg mov dec inc rcl inc push roll and rol repnz out pusha xchg inc mov into xor lds stos dec cmp gs add lds rorl push add lret ret pop loopne pop sub imul xor jo fbld push fildll or inc stos push pop repz jnp inc enter adc (bad) sub push xor mov push lods sbb jge add xor adc test (bad) mov sbb pop jb or popa adc xor dec sub pop adc push test inc imul lahf dec outsb cmp sub dec arpl lock sbb jns lock or fwait lods repz divl xchg sbb and fldt cs movsl xor add int3 push fldt cmc jmp stos xchg sub push mov xchg (bad) pop das imul test negb push int3 insb aaa mov xchg testb push inc mov inc insl inc pop pusha sub (bad) in imul cmp test push xchg jnp insb fsubp mov jp jo mov sti push sub jbe out movsb jp sub mov movl fsubs jne jg frstor sti push sub loope ljmp jg fcmovne stc stc dec push loop and test pop mov lahf and fs pop inc cmp inc xchg inc ja lcall add inc les sub shll shr adc movsl push sub mov stos imul pop leave sub cmpsb das push push stc jl dec adc xchg push sub xchg idivb je fild imul (bad) rep lret sbb jle add fs shll dec daa mov push mov roll inc mov clc es mov pop mov jmp jle das jno sbb inc sbb test push mov pop lea or mov xchg xor push xor imul adc in push inc xchg jmp aam sbbl outsb (bad) mov fsubrs fiadd shl stc sbb mov xor pop (bad) in inc push out xchg in inc mov movb cmp xlat mov mov pop adc cmp incb jne mov insl test mov insb and add xchg loop push and popf fildl inc and out inc lahf (bad) into xlat (bad) jb cmc rcrl outsl loope sti fldl push and xor inc inc push insb mov imul sti pop inc push push arpl cmp inc aad mov cmp shl inc stos lret push imul or xor lcall aaa inc (bad) xor mov inc aaa sub popl inc or pop push (bad) icebp xchg adc inc inc jae je sub xor lea es fsts test ret mov or pop data16 jge jmp fwait and sub shrl cmpsl loop xor cmpl xchg cltd mov push (bad) push iret jnp adc xchg mov sbbl mov and sar add mov adc mov mov push sbb test inc call ror mov sub hlt and cmp push mov xchg aas pop inc pop sub mov push enter pop add mov sub cld add loop sub xchg (bad) cltd add mov mov and hlt lea jmp clc dec push test pop mov call lret aas inc pop fisttpl jb jecxz clc add xor and test call ficomp dec xchg or mov clc ret xor fmull adc dec mov jbe dec push xlat or cmp mov shlb daa push sub mov jnp out or jnp cwtl negb mov icebp mov jnp decb fldl cmp mov bound mov and shll (bad) pushf cmpl mov xlat pop jecxz or push dec idivl jb sub ds add mov cltd inc xchg lret dec dec aam jmp push bound add leave sub outsb call push sahf xchg das pushf xchg ret sbb incb inc stos jle stc ja data16 ss cs dec aas cmpsb mov jecxz pop sub movl or ss jns aas dec mov mov inc add xor insl inc sub pop mov ret adc push cwtl insl jo add out inc adc in dec mov ret inc fwait int incl pop gs sti or jmp aaa adc inc in xor add dec push mov ret rcl jmp sahf test call (bad) pusha jno adc push rcr push cmp and std dec ds push call movsb inc cmp mov inc cmp jne jl out arpl lock in jp rcrl popa nop enter adc stc adc sub aas dec repnz dec outsl pop push mov mov into inc push rcll jb add inc (bad) jo dec lret cmp out lcall xchg xchg mov cmp fild cmpsl and test fistp (bad) in push leave sub push arpl push or pop ficompl inc dec sbb cmpsb cld add ret or fwait lods add jg rcl sub sub out ret inc jbe int ja inc jb stos jae js xor hlt rolb daa les mov inc mov pop repnz imul stc stos dec mov in daa inc (bad) jg push inc insl (bad) dec sbb push dec inc (bad) pop sub cmc fbld in mov mov push sbb inc out cmp mov push cmp pop aad lds cwtl mov callw adc daa cmp dec sub push aaa in mov je pop and enter inc inc fs push mov out test repnz arpl testb fistpll mov sbb cmpsb loope lods es xor xor jb sbbb fwait js cmp fsubl rolb adc xor push in insb mov dec in mov mov push dec in mov and cmpsb sahf out mov ja dec xor xor mov xor lea push lock dec push pop dec push push ja xchg pop inc adc aad repz in adc dec xlat cli jb lret pop addl outsl sbb lods push or sbb cmc arpl adc dec shll mov mov (bad) sbb xchg mov (bad) jecxz aas dec repz mov fiadd xchg adc test (bad) int3 cwtl fdivrs add or dec dec cmp add cmp and stos cmp push push pop sub pop lods xor les scas out iret or int3 push insl or fisubl sbb inc stos fmull rorl push repz pop enter int3 out (bad) or push test or inc or sbb inc fistpll cmp sub lods mov xchg into add cmpsl mov jno in and fist pop add sub dec xchg mov jg jl mov or subl push imul cmp movsb cmp lcall (bad) jecxz mov icebp dec push push outsb xchg enter call outsl cmp enter bound sub insl lds xlat cmp or xchg add flds cltd jmp cmpsb jle and adc fcoms lods pop imul aaa sbb (bad) outsl mov mov push cltd inc or mov fsubrp jge pop ljmp inc adc xor mov stos loopne xchg dec jmp sub xor dec cmp inc cmpsb or or insl in inc das adc ja arpl pop ret (bad) mov int3 inc (bad) repnz mov notl in sub (bad) dec or and incb dec call inc aam xchg add and (bad) out dec inc popf push mov mov mov or mov dec roll stos adc push jne,pn sbb ret sbb loopne xchg xor adc cmp sub jnp cmp inc cld jmp mov aas dec jmp or mov repz xchg xor roll stos or lods out pop xchg dec mov shl imul mov outsb cmpsb mov incl inc push lods cwtl fwait je inc inc dec add inc pop xchg fldl sbb and dec cmp jns mov mov jno adc cs inc (bad) mov jb sbb (bad) jecxz stc faddl cmp mov in jmp movsb in fisttpll data16 pop xor roll pop sub inc nop mov pusha pop aad loopne push xor scas inc inc fwait test aaa repnz inc mov (bad) jb inc xchg lods nop push stos mov insb push arpl fldl sbb lods fs inc mov (bad) (bad) xchg push repz dec insb imul mov roll mov sbb adc sub pop pop imul aas pop dec popa jae dec add mov outsl jbe xchg andl dec loope mov sub cmp push fucomp push mov mov inc sub adc inc clc mov and add leave insl sbb sbbl dec aaa imul pop ja and pop cmc add pop enter inc push cltd mov cli mov ja jl stos jns shrl mov mov inc mov or mov or dec sahf pop and aaa mov xchg mov add adc ja inc mov dec daa push add das jg xchg cmp jge shrl sbb fnstenv insb out mov outsl mov mov fcmovbe cmpsb jae (bad) jo sub mov sbb push hlt sbb pop arpl pop shl inc mov mov and arpl mov ds stos in daa icebp cmpsb add cltd or bound fist (bad) sbb inc repz sub (bad) loopne repz xchg push lds mov cmp outsb adc int3 xor push xchg push sub xlat xor fcmovne rorl pushf jae movsb pushf cmp pop subl sub xchg int3 jno jae mov sub add dec out fwait jb or sub movsl adc lcall xchg push xor xchg js ficoml dec push cwtl mov push dec cmp (bad) aaa imul dec xor add mov (bad) ret rcll lea xor (bad) push add mov jbe into adc mov dec push test (bad) (bad) or xchg fstps pop pop fbld and fmull xchg (bad) lds sub pop les xor cwtl sub out inc mov mov or outsb test out dec fiaddl fistp js xlat xchg imulb pop aad inc nop imul add repnz ss mov je dec sbb leave or fbstp subl inc mov lret cmpsb xor push jbe mov movsb mov xor (bad) lds sbb cmp adc push pop in fninit js pop enter roll xchg test push xlat cli add jge jge ljmp inc fisubrl push or int3 inc lock loop stos dec mov aad fbstp bound and movsb pop mov add call mov imul mov test lea jmp or pop nop inc mov movsl mov sub popl pop push cmp addl in orl test inc int3 push ret jno push and dec mov mov mov jmp fadds out dec ret aaa icebp cmpsl xchg ret rcrl inc sbb add out cltd pop fbld fcmovnbe int3 cmp je data16 loop fcomi clc dec outsl aas fdivrs scas ja fisttp inc lcall insl add add pusha lock or push fs inc rolb cmp (bad) pusha inc sub outsb lea inc int3 mov pop pusha jg arpl adc add mov inc add lret outsl xor leave pop mov adc aaa and mov inc stc pop add sbb xchg xchg (bad) (bad) inc cmpsl mov mov daa cld mov adc (bad) and lahf inc push dec pop fcoms xlat inc in sbb (bad) sub out push sahf pop mov pushf ret and adc arpl jge xchg jo mov or arpl pusha pop or mov cmpsl mov pop cmpsb in stos inc cmp add inc int pusha add mov mov movsl pop sub mov sub (bad) sub inc lahf mov inc loop (bad) mov mov out (bad) out (bad) inc cmpl mov cmp jecxz mov pslld fs fcomip cmp sub jle jecxz cmp inc je mov jl push cmp popa jb inc imul jbe xor pop repnz sarb add (bad) aas inc loopne rcll xchg cld jmp inc imul sbb (bad) ret imul pop decb mov mov (bad) add inc das push (bad) add mov mov push ret adc test cmp push (bad) fdivrs in sub mov int3 ret and sbb lcall and pop cmp push mov inc pop mov pop in xor (bad) ja mov cmp fidivl and (bad) push je inc xchg adc dec jbe call in stos inc bound push mov dec mov add cmp cmp mov insl cmp or int ret jnp mov int3 or inc push fldenv cmp adc rclb mov push push xchg pop pop stc insb (bad) sub mov jl daa out inc (bad) pop jns mov adc sub mov pop xor (bad) std ds inc ret add push shll outsb mull sti inc je and dec inc sbb inc loop push (bad) pop mov inc stos insl push stos sbb mov outsl xchg (bad) (bad) ret (bad) inc out lods cmovae data16 call mov inc sbbl pushf enter jl stos dec cs inc cmpsl popa fs testl jns hlt pop inc dec pop les add inc dec loopne je pop xor aaa (bad) jo arpl and jp in inc iret xor jb rcl mov test aas cmpb (bad) int mov fidivrl push jmp inc jmp sub inc mov aam sbb mov (bad) std inc (bad) mov dec pop mov sub (bad) into cwtl xor xchg cli xchg xchg jnp loop and or pop lahf enter mov aas jns incl inc push jmp adc idivl (bad) adc inc jno xor mov leave (bad) mov mov add rcll add mov sub pop popf add jns inc movsb xchg movsl ret popa adc enter mov lea or sub (bad) jmp mov inc iret movsl loopne add mov in (bad) clc inc adc jg mov sbb iret xchg insb mov sbb ret in dec cmc scas inc lock inc js inc jg cwtl fwait cmpsl mov pop sbb pop inc or movsb adcb pop ret std mov scas sbb push and inc addl sahf or sub inc mov notb xlat dec out icebp repz rolb (bad) and lret sbb (bad) push enter les dec fisttpll daa (bad) bound jge cmp icebp arpl fldenv and lods leave add stos icebp push xor xor add xchg xchg sub sbb and dec cmp inc or in es dec mov jb test lcall test inc add and inc xchg in jb std xchg mov inc in ret jle fcmovb mov or add sbb inc and das jb sti rorl sbb js mov inc push into push hlt outsl mov scas mov xchg incl pop dec int3 fwait or inc inc repz clc js jb inc fimull cmpsl aam xchg inc jg add pop or jb (bad) ljmp repz fsub inc subl mov aaa pop sub xlat mov and jp hlt out dec (bad) xor (bad) or dec into iret mov pop mov xchg adcl scas sarl dec inc inc lcall (bad) mov fs push xchg inc enter (bad) xchg cmp dec pop mov pop (bad) out inc adc adc sbb inc sbb inc inc lret cmp into dec and mov in (bad) outsl push inc enter adc push dec add (bad) jmp push pop addr16 inc pop cli sub mov inc in mov ds inc adc and test sub add xchg inc ds lods inc insl loop xchg test push inc in mov push push out or stos cld data16 scas inc lcall xchg sbb shl es jns inc lcall outsb lcall dec subl mov inc scas add outsb inc cld jo push xchg pushf addr16 inc aas out cmp push xchg xchg cli enter test dec push sbb (bad) cmp jl (bad) (bad) fcoms ret fidivrl (bad) nop pop inc push and imul fmuls lcall out mov aaa mov push dec js cmc pop dec sub inc inc cmp sti xor movsb mov push jbe (bad) and sbb out push adc cmp stc inc sub xor push inc fs push pop or cltd xor mov mov lods jmp inc pop std mov add loope repnz xchg xchg mov dec ja into jg adc jno addl jbe frstor js aas dec push aas cmp fnstenv push jo add sbb sub xor pop xchg or rcll adc lcall divl cmp cmp imul mov jnp jno (bad) (bad) shlb xor push inc mov inc fimul std out popf xor ds into movsb inc bound jge enter icebp xchg bound jae sub shrl aam out aad mov insl push push lret ja mov sbb stos inc outsl jne (bad) inc xchg imul dec push rcrb pop ret out or cmp inc add push mov sub fildl jae test insb push (bad) adc in push xchg add int mov inc push sub adcl inc pop mov ret dec popa inc pushf push sbbl loop ss nopl hlt jo jns mov inc and inc mov rcll orb clc fwait lcall or push ret adc dec clc dec push addr16 ret jae scas push push inc adc (bad) addb push dec push adc dec sbb sbb dec das xor mov sbb inc cmc dec movsl lret dec mov inc push xor mov cmp sub out jbe aas add sub jb les lods mov pusha fldcw aam mov mov hlt lcall cmpsb ficomp ret outsl sar inc mov push mov or jb orb (bad) xor inc mov loope mov jo rol jge mov sar xchg adc push xor es outsl cmp xor pop fsubrs pop xchg adc repz xor dec sub mov pop imul (bad) sbb and mov stos pop lods out (bad) cmc sti (bad) arpl push sub xchg inc push call add inc cmp fs inc mov outsl pop inc pop das mov rolb sahf data16 push dec out sti inc mov and mov (bad) xlat or sbb inc decl xchg xor push add sub addr16 mov xchg daa mov lock pop mov ret aad cmp cmp add (bad) or inc xchg and inc sbb dec pop xchg je push inc adc jmp jl push inc div mov mov outsl cmp fs int3 add sub inc inc inc or dec test and inc mov xchg (bad) mov and lahf mov dec or mov fs add nop pop mov imul loopne iret fincstp sub add rol jmp ror (bad) push pop jl push mov xor stos decl add daa dec sbb xorl int3 push mov pop ja xchg and xlat fisttpl lds insb (bad) popa sub xor and mov dec push jno mov xor scas or mov pushl lret unpckhps fcoml (bad) inc (bad) mov loopne push jbe lea in repz test sub popf inc mov hlt xchg xlat cmp push lret imul popf jge ljmp dec bnd and sbb push mov sub mov push inc jmp lds dec and sub insl cmpl lret ret cmpsb sub mov imul mov test fimul mov iret xor andl rolb mov test mov sub cmp ljmp sarl mov repnz (bad) das inc ret stos out add or mov xor das in and rolb in fimull or lcall mov movsb lahf cld sbb test jg fs insl (bad) inc lock cld (bad) adc push nop icebp xchg out jp call adc jmp sahf into add into fimull sub fimull arpl fadd out pushf and sub sbb jne xchg scas jno gs xchg inc sub fcomip subl out aad cmp jb clc ret xor push imul lea repnz clc pop add int3 push fwait inc clc push fndisi(8087 jbe arpl sub movsb mov sub adc jl xchg das shlb jecxz adc int ret dec shrl mov cs insl inc mov cmpsb sbbl popf xchg test mov shl or (bad) jecxz inc xchg add or (bad) jmp fsubrp mov scas test inc jmp fistl flds lret mov ds stos or sub jl mov sub dec js dec outsb dec mov xchg fcom stos (bad) rcl mov icebp sahf add je push fdivs add pop add or xchg aam int3 and jge dec lret or push scas sub dec push inc add inc add push and push sti sbb imul pop cmpsl pop xor sarb out incl outsb (bad) jno and cmc inc pop and xor jb sub or cmp inc jl nop aad adc int3 cs push and push dec cmovae push cmpsb push addr16 xchg roll inc pusha iret sub lods dec xor insb sub inc inc inc test cmp push fsubrs pop pop scas iret repnz mov (bad) dec scas fwait jne,pt into inc sbb cs xlat mov dec inc jg ret jge mov adc enter sbb fwait lock xor xchg aam add pop jnp into inc jg lods jns jb inc dec enter push xchg pusha cmp inc cmp dec push imul cmp jecxz dec repz (bad) jnp and ret lret lret mov in xchg xor outsl ss es sti or mov fsub xor cltd dec adc mov lret inc and sbb in inc icebp jecxz add mov bound jb imul in mov inc mov sbb add (bad) cmc xor cmp mov sbb lds add rcll rorb fcmovbe jae mov or popa xor mov fdivs inc jl sub imul dec loopne ljmp inc xor mov cli inc sub cmp dec or xchg push int (bad) mov jecxz in fcomps or sti add inc mov scas pop cmpsl add jno inc pop outsl inc cmc shlb mov xchg mov scas inc and js xlat dec inc or cmc outsl push addr16 test inc pop cmp mov xor jecxz in inc daa enter cmp popa xchg push dec bound mov and mov xlat popf or movsb in dec inc call xchg inc test ret aam push dec xor out sbb stc sbb mov scas sahf jb pop mov icebp inc dec mov sub xchg repnz loope inc adc adc inc and stos adc vmaxpd adc push pop loope push xlat dec or fmul fldenv push and xorl xchg jmp mov fwait test mov mov cmp ret mov mov adc and lds jg xchg fistpl ds mov mov cmp push pop or mov sbb inc fs addb sub pushf aas pop mov (bad) xor inc xor stos fisttp test push cli cmp nop push push xchg sub push dec popf das in dec push gs pop sub mov mov dec jg,pt lock sub inc jecxz xor mov inc sahf lret jp bound inc mov cvtps2pd test (bad) imul adc inc andl and daa mov dec inc cwtl sub (bad) repz lea pop mov test sub loop sub dec les push data16 dec in or inc mov jl mov sub inc fstpl lods xlat fdivrs ret sar es aaa pop int3 cmp jmp adc inc sub sahf inc fdiv sbb cmp dec pop lods mov dec mov je or pop (bad) rolb mov inc fildll jmp cltd inc stc jb loopne sub adc mov ret mov pop mov or dec (bad) push push lret jns add (bad) call jp mov fs sub lods or push dec sub imul rcll xchg pop lret pushf pop cltd push test aad mov xor pop popf mov cmpsb mov cmp sub das inc and addr16 jns push lock push dec jmp ds cmp int (bad) sarl or xchg dec into inc mov addr16 aas dec shll leave lret outsl repz push mov dec push dec stos lods push add mov mov xchg outsl xchg cmp dec sub ljmp daa sub fbld dec or in (bad) std adc shlb lds push fs xchg pop or mov outsl fild dec pop jg enter je (bad) jne out mov and (bad) repnz jae pop inc aad dec dec enter inc cmp ret dec push lock jno sbb movsl mov mov lock ret mov fiadd cmc push sahf sti aad scas lcall dec in sub fwait push dec lret mov cmp cmpsb lea and sub sti mov xor fwait mov ret xlat mov add jo std aaa push mov sub push ja mov push mov ffreep pop sbb into ret fidivrl cli aaa xor dec stos ret gs add lret mov cwtl pusha rcr mov int3 ds jae jo fildll xchg jmp push add fistp mov sbb adc roll and bound lret pop decl push pusha xchg fnsave mov test ret (bad) fsubl divl fsts jae jb mov scas xor (bad) inc (bad) mov xor fcoms ja popa sub lds shrl mov inc push pop (bad) xor cmp push ror in jl and or xchg insb cwtl mov xchg jp sbb fsubr and mov das cwtl sbb jecxz mov in in ret jmp aam daa xor lea inc icebp add rolb xchg int dec push sti test stos mov inc push xchg xchg mov inc cmp xor mov test xchg clc lods nop mov idivb imul scas (bad) or add aad inc dec fild sub sbb dec popf pop aas roll in inc xchg (bad) (bad) sbb mov iret xchg cmpsb inc pop mov or sub jl xor jae imul or mov xor pop push mov push add mov or mov mov and sbb inc fnsave js push sub lret inc add add loopne icebp and inc or inc hlt xor jmp ret push mov inc rolb xchg repnz jbe xchg shl jo fs mov sub dec (bad) (bad) and mov out testb inc lcall das inc ss jae js inc cmpl inc mov fistpl je arpl adc add enter insl aas clc push sbb pop scas sbb cwtl (bad) and push sub lods nop pop imul cld (bad) xor and sub mov dec cltd cmp jg lcall sub inc fsubrl addr16 das jge in pop pusha test mov dec imul (bad) lea push push loopne repz in or clc inc mov aaa cltd xorl pop cmp mov jmp roll rclb xor jl mov lahf lods mov decb inc pop outsl dec sub inc int3 popf dec mov pusha inc inc and sub clc lret xchg adc inc cmp add xor pop push inc push outsl jge push sbb or inc lock cmp xlat or out sahf push ret mov jae lret cmp (bad) pop nop jge popa insb pop inc mov jbe cmova push push into or xor shl pop and mov xor sbb fmull inc jg pop inc outsl add je xor popa cmp mov dec sbb outsl xor jo subl jnp cltd cmp stos jp movsb pop pop sub xor rcrb in add hlt xorl pop or jg cmp pop ret sub lods or cmp por sub jae,pn cwtl xor sahf add imul repz cmpl sbb push (bad) inc push cmp mov ret pushf xlat dec imul inc xchg sub sbb jmp xor ficoml or mov push inc mov lcall (bad) sub mov scas sub in xchg fcmove pop push out or cltd mov cmp and fwait (bad) ret rorb or xlat mov shrl cltd js outsl cmp shlb add fbld ret (bad) dec dec dec sarb mov dec hlt inc push iret xor leave mov mov insl pop or lea into dec stc dec jp scas and gs lahf insb or aam jg or or aaa jns pusha lea fildll shlb cmc stos shrl sbbb imul in stos leave cmp adc cmp lahf push bound scas cltd shrl cmp jno stc ret xor out fiaddl ss adc add inc mov es sbbl mov cmp (bad) and mov out jbe pop test pop incl add dec repnz jnp outsb inc cmp add divb in arpl inc cmp mov or fsubrl inc inc loope sbb cwtl pusha inc insb inc stos (bad) incl out pop inc imul mov dec push aaa push aam inc dec add sti jne incl add mov add sti cmp xchg test scas inc lods mov sbb xchg rcll inc mov or inc adc jno xor shl hlt bound and inc orl out out mov push mov jne inc arpl icebp lock fild inc add add dec jle popf (bad) into push inc xor (bad) jb mov jle jbe cmp or aad (bad) out sbb imul das inc inc fldt insb aad stos fisttp hlt (bad) sub dec inc add ret scas insb inc xor test fwait lfs (bad) out inc and insl inc jbe loope int3 mov mov mov (bad) mov dec push rclb ret std dec insl fcmovnb outsb mov push aaa push gs dec mov sub adc and pop pop xchg inc aas xchg jo sub addr16 inc stos mov popa sub xchg push popa outsb subl mov insb cmp std or push xchg pop les mov pop jl jno int mov stos xchg mov gs repz jno cltd pop icebp sbb outsb ret fwait xor cmpsl mov dec mov inc jge in std test xchg ljmp mov inc scas aam rclb icebp push clc sarl aas inc or xchg xchg adc jns sahf pop aam push dec int3 or push mov popa cld dec ret mov sbb mov or cli stos in dec in inc sarl roll addr16 lds fisttpll mov inc cltd and inc ret (bad) repz (bad) imul mov outsl scas inc push cmp mov ljmp adc popf stos ss imul pop (bad) int3 shll and dec dec mov dec (bad) hlt and mov cmpsl lds mov inc dec subb inc mov repz xchg push jae stos lcall notl mov mov lahf cmp push or pop and mov (bad) mov xchg xchg (bad) imul add data16 mov inc jle push ja (bad) inc jmp or lcall arpl cmc xchg pop cltd stos jmp push sub cli pop lcall addr16 ja adc inc ds jl cli sbb sbb xchg mov sbb insb cmp pusha xor out ja test movsb ss or outsl lret xor jbe sarl out add inc pop jne pop lcall dec push dec stc or sub ret out adc mov jmp repz inc (bad) mov mov (bad) or and sbb add mov mov arpl inc lret inc cmpsl aad rcll dec dec insb rclb enter fadds popa adc adc jb dec inc jnp xchg test (bad) adc and ljmp iret inc sbb jae mov mov mov lea push push cmp and inc pop or jmp mov ljmp xor nop inc xchg pop push sub cld out cmp inc xchg or add mov cs sti lods fisttpl inc lock push scas push cmc xchg push test psadbw inc cmp sub sbb jo pop (bad) cmp xchg loope fistpll dec cmp jnp int3 scas loop inc dec jae ret les push inc cltd add cmp inc pop ror addr16 ljmp aad xchg dec into int3 shr (bad) dec sub lock ret jo push mov cmc and jp sbb pop aad mov (bad) scas fdivrl inc inc into ficom push cmpsl stc fimull imul bound into mov jbe sbb sub cmp inc dec and js dec idiv mov shll jg ljmp mov arpl push and inc mov test xchg pop les bound rol mov (bad) arpl pop mov dec into pop aad jno stos loope sub mov sbb aaa xchg incb sbb pop cmp out rclb mov lods or dec int push das ret test pop pop mov inc xchg unpcklps addr16 add in adc inc (bad) adc push xlat call (bad) fsts cmp dec ss outsl jbe sbb or int3 cltd inc insb cmp mov shl testl data16 bound or xor sub pop sub xchg jp xor inc insl ja jl decl cmc and dec out inc inc cwtl jp mov repnz fimull cmp mov pop add aad add inc call rcr mov mov or cmp aas es arpl cmp nop push sub push xor xor inc data16 popf add ss lcall mov lcall adcl lods mov lds hlt inc mov dec mov jns sar inc jmp or ja sbb and roll dec or arpl jae fstl leave dec dec pusha sub and fs dec (bad) movsb inc add jecxz stos add xorb enter sbb cmc sub push mov or pusha jo dec sar pop out inc arpl (bad) mov pop pop pop (bad) cmp into mov stos lret cmp out push stc popa inc mov cmpsb enter in (bad) jbe xchg sbb inc lock push ja jbe shl xchg add adc lock roll mov pop movsb push push sub testl inc inc js rorl sarb iret fimul dec dec xchg jecxz cltd push pop mov sbb and or fidiv js xchg addl xchg addb arpl out fcoms mov out dec rcr jae inc add adc lods mov jecxz mov loop (bad) or outsl aam jnp les dec subl cmp push dec aam sub push push cmp add mov in sti add lahf das ret outsb outsl xchg popa arpl jo rolb jecxz mov cmc (bad) jbe ret jle cltd movsb inc rorb ds pop push jnp sbb pop and aam mov std jp push jb aas sub jecxz in add ret push mov (bad) inc out pop movsb and leave jnp roll dec adc sub lds ss add inc inc mov cwtl lret lcall inc (bad) jmp (bad) mov cmp cmp and sub xor inc insb ret sbb inc or cmp fdivs lock mov gs dec jnp mul mov sbb mov sbb adc add mov jns inc pop (bad) das (bad) xchg ljmp mov sub add movb mov sub mov ret sti cmpsl jg,pt push adc ret imul xchg aam push xor xchg inc jae loope test outsl addr16 data16 int lcall inc jns pushf js in (bad) fcom lea cli inc cwtl sub insl aaa dec mov fisubrl fcmovne push dec imul mov clc sbb jb das fwait lds sbb xchg inc jecxz jle and or xchg stos mov cmp mov outsl inc jge xchg sub add xchg aam in push addr16 int3 jo inc mov out bnd add hlt test (bad) inc jbe jp and dec add into push inc pop mov stc pop repnz adc fcmovne pop (bad) addr16 push loopne repnz js jno dec mov adc insl xchg out sub in movsb dec mov mov mov dec and mov dec adc adc es inc mov das push jbe xor adc cmpl pop cmp mov mov mov add mov pop enter shrl mov das mov ja pop inc xchg cs insb pop push sub or push dec fcompl popa mov les daa mov insb xchg inc xchg (bad) movhlps mov aam test gs test add les dec das add inc xchg pop (bad) imul cs fwait test addb (bad) out (bad) jae cmc xor push dec ret enter sub inc ret sbb xor inc adc and das sub and mov push mov dec jns dec mov cmpl out dec xor int repz or adc je addl out inc dec clc sub mov xchg nop mov inc mov jae mov lcall or cs xor xchg xchg repnz addr16 mov inc int in inc and popa pop jg notl pop xor jb sbb mov pop push lea hlt xchg das adc xchg cli dec cmp rcll sub cmp and les cwtl pop or mov movsl mov inc aam repz push jb jno jns mov lret pop addr16 int push sahf push andnps lahf imul adc outsb inc in mov ret gs pusha jno jecxz sub xchg idivl inc mov cmp (bad) mov popf pushf add inc (bad) or aas addl add xchg and pop mov insl jb enter mov test push and sbb cmp sahf scas mov in icebp sub shrb mov sub inc xchg jae xchg test inc jb xchg adc pop roll enter arpl lcall ret aaa int jl (bad) out int3 add add cs fstpl pushf in mov pop rcl hlt insl and mov test push outsl mov sbb inc (bad) sub mov push ss adc mov add pop inc mov inc mov scas pop aaa pop sbb xor aas ret adc cmp mov rcr insl cmp mov testb cmp lock cmp add ja cmp dec xor cmpsb jg or lock insb js mov xor aas cmp jg in scas pop popa inc incl pop inc rcrb inc cld mov cwtl mov mov and pop cmp (bad) (bad) cmp sarl stos pop cwtl into add scas rclb in add xchg xchg mov inc mov (bad) ficoml xor into aad loopne in add repz push leave inc xchg mov xchg xor mov iret or mov mov rol int3 and sti ret dec cmp inc fisubr jge inc stc cmc les mov cmp les stos xchg add leave pushf dec lods xor xor lret sbb xchg sbb jae clc sub mov lcall dec bound mov cltd insl les add lods dec or imul (bad) rcr and dec inc addb cmpsb sbb inc imul mov jb push es mov outsl pop (bad) popa jae xchg sarb fwait jecxz inc push das xor sbb cs add (bad) pusha inc mov outsl cmp dec and jnp loopne dec jl mov or pop out out cmp pop lds lahf scas cltd inc push iret popf test cltd rcrl inc pop or push adc dec fs add dec adc mov mov bound push inc mov fistpll sub subl adc dec cmp mov dec push into in into imul andb movsb (bad) (bad) pop mov push rep es jp into int3 xchg and xor outsb or pushf push sub in popf repz sub sarb loop inc or xchg mov sub dec sub stc mov add int jp jecxz pop cmp clc sbb gs pop sub and (bad) xor stc lahf jae inc jecxz pushf sub and sub jo mov in sub mov mov stos add lret pop (bad) fstpt pop sub pop sub or jp inc and into xor jnp cwtl dec sbb imul rolb (bad) notl pop pop call aas addl and into fidiv out aam icebp adc imul fistp jl dec push sbb add push inc dec add stc mov xchg sarl inc xchg scas cmpsl mov add inc inc push sub and sti xchg pop cmp inc sub js push sbb sub jo pop imul ret fildl div dec dec cmp cltd bnd outsb inc inc jno pop mov (bad) sahf es inc push scas push (bad) mov jle (bad) inc ds outsl ss outsb pop shl (bad) ljmp in jns sti adc lea lods mov cmp mov push push incb es inc dec pusha dec cwtl test mov les (bad) dec nop (bad) fdivrl push cmp jp mov test sahf or sbb mov mov repnz xchg sbbl fnstenv das cmp mov inc scas shll repz outsl add stos inc icebp sbb sbb sub push push inc cmp fs jo mov incl mov inc test sbb sub xchg repz xchg iret ljmp test sub fadds test adc roll mov adc cli xchg inc pop stos dec mov mov sub fbld daa in inc xchg sub (bad) sub aas adc nop sti inc xchg add dec hlt adc pop dec cld lahf mov js fmull and hlt push mov cltd mov inc mov and inc daa cmp inc jb inc arpl mov dec test pop and inc leave push mov push dec lock nop pop in mov inc inc mov aad jmp jle clc jae cwtl push lods int3 clc push or ret jp lret pop fmuls mov jnp ret fildll orb and xchg rorl adc jo push xchg adc push test inc mov or sbb sub (bad) mov inc inc adc repnz mov aaa (bad) add in inc inc inc enter mov or or in icebp mov jns add adc adc inc (bad) jb sbb mov push xor sbb push mov mov xchg pop fiadd pop adc mov inc sarl dec pushf mov in aaa arpl cmp cli inc pop daa std push loopne clc jl fcmovu lods lret test xor inc mov inc test call (bad) jae fcmove imul sub inc fistpll or mov lea push popa and (bad) fsubrl dec inc pop sub xor repz inc vandnps test xchg mov aad or inc cwtl fcoms xchg sbb lahf xor dec pop movsl inc (bad) mov repz inc mov inc std out add push imul xor stos ljmp and push inc pop lcall dec nop movsb pop add out jne std adc and push bound sti dec pop pop cli sti stc dec push sbb (bad) lcall dec ret cmp dec jno and stos inc movsl mov pusha mov repnz cmp in pop sbb lcall inc jl mov mov push adc push mov inc mov xchg mov insb push push movsb mov les jbe pushf out push inc sbb movsb inc (bad) stos gs inc jae roll orl cmp pop pusha in push int dec mov scas mov das mov call adc cmp in in fnsave subl push adc inc inc cmpsl mov or ret inc sub pop les mov dec add add fcoms xor sub inc push fcoml je and mov jmp repz fcomp cmp lods sarb mov inc pop imul adc in push cmc dec stos pop inc pushf test addr16 (bad) ss add arpl inc xchg jmp mov jmp out pop inc jno sbb add xchg ljmp push hlt push xchg or bound push dec xchg clc mov add xor sub sti out push xchg inc das test xor and add les inc imul aaa adc adc test addl out les fwait test inc xchg sbb pop inc rolb mov fsubrs mov enter sub mov inc stos or lds ds in jl cs mov std push stos (bad) jb mov arpl xor fnsave mov push inc mov sahf movsl jp xchg pop pop roll inc jbe push push dec stc add sti aam js cli pop mov jmp insb mov fwait test (bad) dec inc or add (bad) repz xchg xchg stc les push aaa or mov sti flds ret xor pop test inc test insb in inc lcall popf inc cmpsl sub or jne jo add xchg adc inc mov iret shr lahf (bad) daa mov ret push jecxz sub mov mov (bad) dec xchg imul mov jp ret jge and fiaddl incl mov fisub aam fldl xor cmc jo mov int push sbb mov popa mov cs aam arpl inc (bad) test add inc cmpsw push lcall mov data16 imul jge inc xchg cltd int3 fisttpll fwait pop jae inc and jg inc addr16 pop ret sub ds sbb inc push cmpsl popf and xor cmp xor ja push ret lea inc sub jae insb mov cmp pushf test xlat ret jo mov fdivl adc aas jne lea ret jp push in inc pop fldl sub call mov and fiaddl mov pop out inc sub dec std scas and cwtl ret lcall enter dec inc and lsl mov ds dec sub mov stc into sbb (bad) mov lea sbb adc sub mov add mov push and xor lret enter dec xor cmpsl pop out add xchg out out xchg fsubrl mov dec inc (bad) add test cmp mov ss outsl mov (bad) add sahf (bad) pop cmp pop pop mov aad pop sbb sub mov sbb push push fs add or cld das mov push pop mov fsubrl push inc rcl cmc xchg add inc push pop mov mov lea popa jb das fwait or sub aaa jl dec mov test daa outsb fstps jl pop addl sub inc inc mov fistp in sbbl inc iret loopne inc fwait push jnp in inc movsb rclb fisttp ret dec lock xchg insb push stos into adc movsb nop adcl push inc roll inc xchg pmullw or add (bad) dec lods roll xchg jnp leave jnp dec std sub jb mov mov inc and add cmpsl pop mov sti mov and ss mov cmpsl xchg inc test mov out push push out adc outsb adcl inc add dec adc loopne pop dec xchg pop (bad) pop test std mov (bad) in outsl js add push lret (bad) and adc scas icebp inc addr16 testb roll mov rorl outsl xchg sbb addl or pop fwait sub or cli call loopne push cmp inc sbb or loopne std js sub cmp inc xchg cmp test (bad) (bad) dec cmpsb ljmp pop inc fisttpll adcl inc out lock clc (bad) cmp inc sub aas inc pop outsl pop dec mov f2xm1 xchg dec jge sahf cmpsb jle gs add repnz jcxz push sbb stc dec sbb xlat test pop dec pop push fild fwait jg adc ds dec lcall sbb call jo inc push leave adc dec pop sub imul (bad) and cmp leave rcl jns lret ficoml test xor jmp dec cmp rolb cmp cmp sub dec repz imul cmp lcall mov and add int3 and fwait inc pop push into rclb inc pop clc jno imul push sub sarl xchg pop jbe xchg sahf push call int3 mov into decb or stc or cmc sub addb sub dec or mov mov rorb inc pop jne xor (bad) mov xor and jne inc mov inc pop mov xchg mov int cmpsl jl ljmp dec out fistp insb addl jno std and test int3 adc dec sti sahf xchg mov or or sbb inc pop repnz xor dec enter xchg mov sub mov pop dec xchg and adc sub push ret out lea mov test int3 jle nop sbb cmp add pop lock dec fs stos mov add adc mov mov add dec xchg movsl fildl inc lock jge pop out test icebp mov xchg ds shlb into pop aad das mov dec push adc addb xor sub dec sub ret dec fild dec push dec cmp dec dec enter inc push and movsl adc add inc imul rorb mov fsub xor jbe mov mov sahf les push fwait adc inc add xchg pop les mov sub rcrb mov inc push mov sub pop daa jbe cmp lret popa movl pop cmp call sub mov adc or daa dec cmpsb clc lds out lock inc mov pop and in adc movd dec out out mov mov stos shrl mov and push xchg aaa mov jbe sub mulb inc ds jge and add xchg pop inc (bad) decb push mov lahf lahf movsb pushf inc sub mov movsl arpl adc out jmp push lods push popa or cmp adc arpl out call mov mov lock ja add ficomp push aaa sub or inc pop push xlat xor pusha inc in sub mov inc cwtl int3 (bad) sar lock jle or mov inc enter xchg mov jge dec push movsb repz out repz push in call cli punpckhdq jle loop mov sub pop cmp sti repnz push cs cmpsb sbb lods and ds dec xchg inc stos adc adc adc loopne mov rcrb mov pop xor inc xchg sub dec std in ljmp (bad) jb loopne mov push push mov test (bad) xor jp aad ja ftst inc xchg sub stc sbb xor inc hlt xor mov inc sub xor sub inc js fbld push cmpsl mov dec mov push std sub cmp bnd inc ds dec cmpb push dec lods fcoml js ja sub (bad) gs fcompl lsl sub aam mov adc mov das add in mov outsb pop pop pop and push inc cmpsl fildll inc push fxch int ret and les in pop cltd dec into xlat call (bad) cmc lret icebp aaa mov mov jo push ficom (bad) jb mov cmp sub add or lods mov call lea inc sub data16 mov inc fmull pop (bad) test mov dec andl push ja lahf push xchg stos inc repz sti mov sub lahf push push inc (bad) fucom test mov adc (bad) aad movsb inc xchg in popa pop js inc mov jmp mov cli data16 subl packsswb mov repnz cmc jb sub and jo jbe mov or arpl xchg rep push hlt movb out xor add clc inc pusha popa pushf or loope mov loopne ret dec out sbb cmp (bad) jle pop add xchg push inc and int3 pushf cs in ljmp mov rorl sub inc out xchg scas add mov cwtl mov (bad) fsubr xlat lcall lods in xor and inc (bad) mov ja sub roll stc cli sahf cmc fsubp jecxz (bad) jg data16 jae ret inc popa fistl imul jb cmpsb mov inc aas push and mov xchg dec inc cmpsl arpl leave push das sub mov push inc inc inc addl inc cwtl adc dec pop inc repnz mov push inc iret mov test inc jno (bad) add (bad) inc repnz mov in call mov push jb inc adc xor stc inc push dec imul ja or cmc (bad) arpl mov in aaa fidivr inc jl sbb add pop fdivrs add pushf mov mov adc pop test (bad) rorl inc iret es pusha out sub sbb push mov inc mov ds push movsb add inc enter xor fisubl cs inc pop sub dec sbb rcr es popf jge popa adc add fcomps out inc jbe push xchg int3 cltd mov stos push inc and and gs add add fiaddl shl xchg movsl mov fildl inc xchg dec scas ss pop mov inc dec rclb cltd sbb fbstp jnp adcl into push stc out ret mov (bad) pop lahf addr16 adc or cmp xchg hlt pop ret ss fisub dec hlt lea into pop adc aaa fidivr das dec sbb sub in push add inc jno mov ss or dec mov dec xchg jl inc ljmp dec subl rol add xchg and inc lea in les xor (bad) mov pop cld dec push (bad) lock bound ret cmp shlb xchg or jge xor and xchg nop inc mov add push jb inc mov loop xchg stc add sbb inc test push pushf loop aad mov inc push movsl push cli sbb jecxz fisubrl ss xchg mov xchg mov xor cmp xlat or scas mov jbe cmp dec push outsl inc rcl outsb scas movsb and inc sbb jns sti lock push push adc test jle fidivl push push jl loopne fmuls adc test push hlt dec and mov aas test mov cli xchg imul inc outsb jmp fwait je daa lret leave cmp jecxz push pop fidiv int ret adc and inc cmp jle cltd es aam insl int sbb pop out ss xor dec fldl2e push into push push mov sbb pop dec xchg pop add (bad) fstps cmpsl out pop inc cmp push sahf pop xor fldl mov int lahf lds xor jmp inc jno xchg jge xlat sub (bad) xor sub pop cmp add xchg bound movsl jae negb aaa cmp inc ret bound in cmc inc stc insl xlat push aam dec sub ret mov enter sub repz jle icebp dec sub add idiv imul adc aam or xorl inc mov icebp mov adc aas ljmp fisubr cmp or (bad) sub sbb jge mov xchg push xor (bad) imul cmp mov jmp sub js pop jno jg xchg dec mov clc or outsb push and push aaa cmp out mov cld enter lret push icebp orl xchg aas rcll (bad) mov dec loop adc std mov lret in testl jecxz enter inc sub into negb dec inc mov pop xor pop jmp imul xor sub cmp imul sbb jge jge mov lcall mov dec mov inc orb push jecxz (bad) hlt add inc pop fwait or dec fsubs cmp iret lcall leave loope inc xchg in aas stos pop or inc out (bad) mov inc dec pop sbb cmp ror out je test call jno mov mov dec jb je out movmskps or fs xor fldt addl jbe int3 mov popf dec xor push push jns push inc mov lds popa fisttpll insb inc mov cmpsb aas dec xor add push mov cli inc jb mov cmp jmp lahf pmullw mov jl rcr or mov ss fnstenv lahf xchg lea hlt dec push push cmovae or test call ret movsl push int3 pop imul mov cmpsb cmp xchg ret ss mov inc repnz inc mov push dec xlat sub iret sbb fisttpll inc bound mov inc push add pop inc loop popf movl add mov lea (bad) cmc adcl repz repz cli ret icebp mov xchg inc ret loopne and pushf and push cmc ds push xlat pop add dec inc push xor mov mov sbb lods and js negb mov inc push pop insl and add lock cmp cmp xor jo dec jecxz mov or jno xchg shlb dec (bad) pop inc leave pop cmp addl push xor mov adc sbb push jae mov mov pop or mov cmpsb mov repz outsb xor imul ss mov fwait (bad) dec mov mov stos imul xor cmp inc in mov call in stos fiaddl repnz push inc fisttp (bad) (bad) lret xchg lea mov iret pop sub push int xor stos inc mov (bad) sbb lock in aam sub jnp inc dec jge clc sub jb sti mov or mov stc mov jmp xchg lcall lret call lds pop repz xor (bad) xor int3 ret sub xor les cltd repz add mov repz push jno sbb inc mov aas xor push arpl fisubl adc sahf pop sub adc mov add sahf and ret cmpsl xchg imul rcr and insl add rolb fwait xchg mov push push push (bad) mov dec or push inc int3 out outsb cmc cmc add sub pop leave imul out pop arpl das add mov fldt insb fist add addl sub out xlat pop sahf scas dec pop jmp jne lods adc daa outsl push push scas sub (bad) aaa insb and mov ret xchg push and dec insb pop enter rcll sub jnp int3 insl mov shrl and adc movsl mov xor mov lods cmp mov stos sbb bound call or cmp movd rcl fldcw imul shrb shrb mov pop xchg inc fistpll in sub mov pushf pop inc sub sub xchg xchg pop inc xor addr16 push insb xchg xchg mov ss jb xorl xchg push in int add and cmpsl dec test fsub dec mov lods push push and loopne push fincstp jo fs into aad and (bad) insb test aad sbb add insl jnp loop mov mov (bad) int mov (bad) (bad) jecxz or out and aad mov mov int3 fisttpll pop decl dec sbb (bad) sub aaa call fist ds mov dec repz ret inc pop push lahf cmp xor jne jbe xor mov sbb pusha or xchg pop jbe inc jp loop ficompl push aas mov ja mov lods jmp sbb mov inc (bad) rolb test std je jb xchg xchg mov inc push or inc inc or jbe and mov (bad) lret sub or jg jns das xchg or pushw rcll sbb pop add xchg ret ljmp dec inc xchg push mov inc pop sbb or adc add sbb or add fstpl inc add push dec sbb dec cmc push out push sbb js push mov lds add mov adc mov sbb inc adc (bad) dec mov aam push mov inc rolb (bad) (bad) icebp xor push lahf in mov jecxz pop scas inc pop mov jmp inc repnz fs add in movups dec dec fisttpl sbb xor fwait lock test sbb bound lea jecxz out add bound call mov inc in jmp ss scas or out rcr popa sub stos ucomiss js cmp cmc push jmp lds and (bad) and arpl and mov adc out mov cmp xchg push cmp cmp dec out imul rorl imul into arpl sub push clc adc pop sub dec xchg dec inc pusha push lret lahf iret push sub scas movsb or lcall xor dec bound fwait bound sub fisttpl xor mov jle xchg push nop jecxz stos mov insb xlat mov mov ja sub mov xchg push xchg inc push xchg icebp inc ss loop adc gs jecxz test addl jb mov cli jge pop inc movsl jg and dec inc cmpsb adc (bad) test jne mov push xor dec mov sub mov addr16 or xchg ljmp pop call inc push rolb add clc into mov negl jle or int3 dec xlat andb mov into fcoml adc aad in ret inc jecxz cmp in sub jne inc lods aaa cmp inc mov xor lret arpl fild adc pop push cmp dec (bad) hlt fwait mov mov xchg and daa pop cli lods push movl rcrl mov out push fnsave mov mov outsb insl xor stos push mov pop inc push push fist das xor mov push enter out in movsb sbb inc push out mov jnp movl cmp jmp int3 sub or push scas push xlat (bad) push jno xlat pop ret inc pop jle cmp add jecxz sub sahf stos lret loopne movsl cltd pop inc inc dec mov xor stos dec mulb fs into pop mov pop sub scas rcrl mov ret out cmp pop lds xchg sbb rol cltd jae sub mov cli cmp es ja sti mov insl add cltd (bad) loopne mov hlt test jo pop sub aas jle rol jg cmp jne mov sti cmpsb scas inc push xchg xchg jo pop ret pop cld je xchg add lods dec sub lods les push dec pop xchg rorb mul push mov or cltd cmp mov lahf enter sbb aam dec ds std (bad) lret (bad) (bad) and inc xlat stc push pop leave pop clc jecxz popa ljmp xchg repz fisttpl add stos ljmp fnsave (bad) add inc xor insl sbb sub xchg ffree outsb clc xchg pop mov or mov push push inc xchg jecxz aam pop test loop sub xor fcoml fildll adc icebp inc jo inc dec xor dec (bad) adc mov aas xor jp cmc arpl mov xchg or shrb call leave jle popa repz call pushf aas nop mov or adc cld mov mov adc sub sarb xchg (bad) or iret mov out stos pop pop pushf add rcrl cmp fcmovnu push nop add sbb dec push outsb fisubl cwtl es sbb jb mov add (bad) ret add xor jl sahf jno pop subl sub inc sub clc sbb inc push aam push jb inc mov pop in movsl sbb fsubrl xorl mov dec movsl jb lret pop in inc imul and dec push adc inc in sti (bad) adc jb fiadd mov inc scas pusha xchg push loop or (bad) xor jno ja inc fildl jns xchg inc jmp jle lret cld push sub pop or pop sbb xor pop fsubr in hlt mov in roll and jl cld jne inc hlt mov mov je push adcb sbb sbb add cltd dec push cmc incl dec adc sub mov add pushf and dec (bad) popf daa jnp xor inc xchg jmp cmpl dec fprem insl or add pop loopne inc (bad) pushf mov lods jnp iret ret xchg lret mov rcrl stc stos inc mov and inc add bnd mov dec mov push adc mov add adc flds cld adc cli imul jle jbe into negl lds and fcomps insb pop test inc sahf pop cmp ds xchg mov inc (bad) mov cwtl (bad) push mov test mov jbe mov iret cmpsl mov scas jb ret xor ja push jne xor push cmpsb mov pop pop xchg sarb xor adcl stos jge loop xchg inc jne movsb out out push jge mov add xchg push cmp adc dec dec or repz roll inc sub inc arpl cmpsb adc test xchg repnz jg inc jo xchg pop push out inc and add push xchg and lods mov jl in pop nop lahf xor data16 repz inc insb ds test imul aad popf or cwtl inc add sahf fbstp repnz mov in roll out js stos (bad) ss xor rclb addr16 inc mov mov cmp movsb sbb add out mov shr add mov jecxz ret mov int3 dec cld cmp or push inc inc (bad) ss or cli popf inc pop sbb (bad) mov stos loope addl mov push add mov cmp call out inc data16 repz sub clc das outsb lock (bad) or sub loope dec cmp test mov pop sub inc xchg sub out xchg jmp sub mov in pop inc sub cmpsl cs and stos push test add mov mov mov mov push mov add popf dec mov imul fidivl cmp out hlt sbbb cltd and stc dec jnp mov or push jl sbb sub dec mov inc sub jecxz or sbb inc adc mov and in ljmp xchg lret adc cmpsl clc dec fsubrs pop lret cmp es mov mov dec dec add scas adc lcall mov mov scas hlt in xchg push lods xor push xlat dec cli (bad) sub bound mov into aad adc xchg addl mov sbb jb push dec adc out in lret cld jno lods xor imul ret dec xor pushf push and fmull add hlt outsb jae mov imul inc inc pop aam cmc psrlq mov xchg scas call cltd inc cmp xor push fisubr and repnz test lods xor stos sbb lret inc dec xchg ljmp movsl ds xor out pop (bad) xchg pop (bad) jne lcall xor mov adc outsl dec test mov inc (bad) xor inc (bad) aad push dec and jle cmp jge fwait insb shrb inc mov ret loop push out sub outsl push jnp test aam mov out xor jg or lods mov stos xchg dec in cmp loope sub cmp pop bound je clc xor into sbb mov movsb mov inc mov (bad) iret and ret mov inc sub fisubr cmpb push xor inc dec mov dec in push xor sub andl xor add cmpsl pop dec sub arpl les rcrb mov xlat sbb ret and mov addr16 push or and add aaa xchg dec lahf adc pushl rolb les movsl and mov mov jae add fildl sbb add mov add xchg jmp mov jecxz mov popl sbb stos aam imul or movsl test (bad) jp lds imul cmp aam mov das cwtl or or roll (bad) adc fild out mov sbb (bad) icebp cli and cli insl inc aaa decl cmpsb jae sbb xchg ret mov push (bad) jne inc lsl cmp (bad) cs ret push (bad) adc pop or imul mov dec fmul add ret push imul push movsl add fild dec stc sbb add dec lret pop or int3 rcl and mov out mov test xor (bad) xor cmp and pop push pop roll mov repz xchg mov cmp dec stos lahf xchg ret jae jge ret mov push jae push popf rclb jno pop (bad) int mov jle test mov add xchg into cltd arpl push lock add mov aaa dec inc inc inc dec push push jl dec pop imul lret ja imul dec push enter mov sub jg pop dec into jg out xchg dec inc cmp pop cmc test mov jl ss lret dec leave arpl fldt pop fptan inc inc (bad) sub sbb sbb dec (bad) or cs push pop xchg push in icebp in or data16 sahf sbb push fildll call dec nop movl test xor push (bad) fwait sub cmp sbb adc fcmovnbe dec pop cltd sub or mov mov push jnp pop dec add push push rorl outsl push mov bound jbe cld or sbb pop mov ret jno stos int3 jle sarl pusha insw add jo inc and mov sarl les shrl push jmp or sti xor mov and lahf sarb loope xor lods imul call xor push dec dec adcb add lret push lcall or mov jo mov dec cmp lcall ret subl xchg xchg nop push cltd out (bad) (bad) out iret (bad) xchg fmulp push xor push aam cltd jl adc sbb push int3 test dec std sub lahf push arpl int cmp xchg rcrl jmp or sub jnp dec mov (bad) out fld push (bad) sbb push orb cmpsb inc xor cwtl sub popa mov rol scas mov mov lcall aad adc lock ret sbb mov mov scas push imul lea stos adc dec sub in inc and lea rol sub mov xor cmp pushf mov call iret add xchg add xor lds insb cwtl mov outsl in sbb in inc faddl push fisub sub inc ja repnz test cmp rcr jo aad rorl mov leave ret nop mov pop sub xor dec push (bad) pushf push inc add sub cmp mov inc xorl cmp orb icebp int3 out jae test push jae fisttp sbb fistp mov push cmc pusha pop inc xor repnz and cs repz pop inc stos push ffree mov lret add mov pop int inc push cmp popa les mov dec push push dec fstpt fwait jmp jl push mov xor ret clc stos imul mov pop pop pop cmp mov data16 mov push sub das (bad) mov add repnz lea imul cmpb dec pop dec add out xor add and incl jp mov inc mov dec movsl add iret pop mov add outsl inc jbe (bad) mov push scas sar xor jns call test lock dec pop out jecxz inc inc lret faddl sub adc fdivrs loopne ss gs jo imul dec or mov jne adc inc push dec hlt jp outsb sbb inc sbb pop inc outsl inc aam push adc std ds pop popf inc cltd js sahf pusha adc pop pop add pop inc inc sub jmp cltd inc or test push (bad) push arpl xchg inc lods mov ds inc (bad) and mov pop (bad) or jae in push rorb stos jp push push mov add xor negl imul leave cmp pusha popa and movsl ret sbb mov jl stos pop jecxz xor outsb inc cmc out inc inc sub mov pop jl push rcr out or scas push fdivrs popf jge mov rorb inc cwtl mov sarb xchg sarl ljmp jg mov pop mov test mov in sahf out sub sbbl or imul xchg sub sbb (bad) inc xor aad add vcmpss adc jp (bad) mov push into int aaa xchg lret add push jne adc rorb scas lods push xchg mov and sub ljmp pop call lods or push mov xlat push arpl mov push repz lea arpl rorb add mov sbb add xchg aas imul aad pop dec add outsb das add or out loop cmp push mov xor jle outsl lret mov test inc lret sahf shrl add sub push jmp les call movsl (bad) dec and and inc es sub scas sub daa add or dec push int3 sti add mov pop inc fmull sub dec sbb mov dec stos cmp push inc add xchg cmp icebp adc push inc fs pop mov pop dec jp push jb xchg sbb (bad) jg xor xchg leave cmp xor push dec xor dec push mov insl mov cmpsl xchg pop xchg adc test lock jo adc xchg repnz shlb popa leave notb pop cltd fucomi mov inc inc sti adc push lock aas push mov mov dec inc mov and or test xor or cs in in (bad) xor inc inc ret stos mov iret inc mov xchg je inc cmp jge add add xchg repz dec in mov pushf out adc adc and sbb inc mov inc call jl or ja add sbb and or sub fsubr cmp push push adc pop test (bad) iret inc xchg fcoms pop add imul test loope and pop and add movsb aam push cmc dec (bad) inc and pop fdivrs addl cmp subps je test sbb xchg test (bad) shrl dec jmp dec cmp mov dec push mov mov sub pop cmp jo imul xlat (bad) xchg xor and jp inc inc jae sub clc and mov push dec sub sub adc mov xchg (bad) idivl xor mov inc mov mov xchg imul mov es rol fsubs addr16 dec testl incl hlt inc or mov into add push push outsb sub or jge xchg cmp add mov lcall aad nop jne ds dec jne xchg inc outsb and jbe push into fild (bad) repz cmpsb xorl cmpb rol mov popf (bad) out shl arpl push inc add scas xchg jl rorl pop mov (bad) test jecxz lods (bad) and sub vsubsd jnp mov sbb inc rcl adc mov mov push dec dec lcall shrl mov push inc cmpsb fisubrl lcall rol mov int3 mov inc aad adc pop cmp addr16 sti fldl sbb xor shrb sub lret sub bound inc in insl andl pop out xchg mov adcb es or (bad) (bad) jg ror add xor fildll and and lret stc inc xchg in (bad) pusha (bad) cmc dec xchg inc mov add pop inc icebp pushl ret pop into inc cmp mov mov repz lods push xor cmp imul mov inc mov les sbb xor repz pop dec arpl inc gs lahf popa mov aad outsl xchg add sbb and rorb inc ss inc add add sarl jnp sub iret rolb out cmp sti dec push push data16 dec fadds and sub (bad) in js aaa dec push xchg and sub pushf fisttpll repnz push push push mov push adc or push push incl push int3 or jl and inc xchg dec dec adc inc and mov jecxz in aaa dec inc repz stos jle shrl adc and mov mov sbb inc mov sahf jg imul push sub sbb inc dec push test xchg cmpsb or inc sbb pop inc and xchg arpl insl sti xchg inc nop (bad) or mov lock ret adc inc push xchg xor inc inc lods push cmpsl mov shlb das xchg xor pop (bad) sbb mov pusha ja mov dec mov push iret add cmpsb jnp mov jb lret inc jl fwait mov aad mov fsubs lea inc and dec mov mov addl mov jnp daa (bad) stc xor inc jg inc dec mov jb push or cs frstor ss adc (bad) in xlat sub loopne insl mov or ss loop xlat dec stos sbb inc lret pop ja inc test sahf lret inc cmpsl insb push fstpl pushf inc sub (bad) mov mov push mov jecxz (bad) out xchg xor fwait mov add ja lcall inc lret gs arpl inc pop or jb inc repnz pop and popf shlb mov inc add imul pop popa mov mov jecxz outsl mov dec (bad) adc into jecxz movsb pop inc std push xchg lds orb mov and fisttpl inc inc jg outsl jne jecxz add stos inc flds dec sti or sub cmp repz ret add pop pop sti out dec cmc (bad) inc popf sti sub push dec (bad) adc movsb repnz arpl cmp js add imul push add incl and roll mov sbb inc ja xchg fiadd add inc xor in xlat xchg jmp pusha mov out dec stc or imul sbb inc pushf dec pop sarb xor into leave bound jl inc gs insl addr16 adc sbb cmp leave mov dec enter ret loopne lock aaa inc mov add repnz sub popf sbb fidiv pop or mov cwtl (bad) ss jb mov pop add and gs subb mov and mov mov inc fisttpl or scas xor aas aaa inc sub mov mov push cmp adc jnp cld (bad) movsl push xor ljmp je inc adc in lahf push rol stos das int3 mov sub fwait sub inc jg (bad) jne popa jmp icebp inc aad daa jge cmpsb leave jae jl cmp push jb jp dec fiadd jg mov es out jp sub xchg aad xlat mov inc stos mov mov push mov roll cs mov xchg stos push and mov adc mov (bad) (bad) arpl movsl sub mov mov mov jg push push pop in insb ret inc lea lea sub leave adc stos push (bad) outsl and dec arpl ret adc std cmp ffreep mov mov mov je ret ret dec xchg jbe call test scas add fist xorb iret lods les imul adcl sti sub xchg scas cmc js xor setno imull sub adc dec aaa mov push loop ret pop loopne test fdivs mov dec popf cld mov lret mov inc push jno lods cmp push mov ficomp mov (bad) xchg or lret (bad) insb je inc insb repnz ret sub pop loope pop ja adcl or fs test test mov add pop lods sub hlt sahf xchg inc (bad) test dec xchg sub mov inc sbb mov inc (bad) popa movsb lods clc pop xlat lods ja or xor jmp inc sti dec xor xor adc inc mov dec cmpsl mov or sub inc pop pop cs movsb xchg inc scas add rcr mov mov lret xchg cmpsl and flds cmc loopne inc insb shrb enter ret mov fistpl dec ret or dec popa test ljmp jl push mov inc fwait imul fcomps or stos dec pop (bad) jp add pusha inc rclb or jne inc mov push xchg fwait in adc por test add pop insl sbb (bad) cs ja xor mov and mov pop sti cli fdivrl sub movl sbb je test lds int mov adc pop jns inc fnstenv dec daa bound leave in add sbb dec in rorb push (bad) jae xor cli dec ffreep sub rolb pop inc add iret jb sbb out inc int xor popa out jge push nop dec lcall push inc xor jmp jl sahf mov xchg mov cmp pop jo add ds or jne cwtl adc inc mov xor inc movsb mov flds test shlb and push pop push into lds fcompl jo jne sbb and cs inc push (bad) xor iret jecxz mov mov mov mov cmp clc jae sub dec adc dec xor jb inc jle push call idivl push add jns or loop out outsl jno xchg (bad) data16 into jb movsb addl movl adc idivl mov pushf lods addr16 inc mov out imul (bad) push repz rclb ret xor (bad) push jg and jmp dec jle dec fwait adc jb cli lahf cmpsb push or push mov out inc aad jp fdivrs jno jne inc ror pop add rolb (bad) nop inc jecxz adc jne aas add test mov and inc push sub xor lcall mov pop pop andl scas push cmp mov popf or push inc jae add int adc aas (bad) jl (bad) xchg xor xchg xchg fiadd dec push shll loop fwait adc push pushl clc or xchg inc mov cmp fnstcw lret sub mov movsb in std xlat add out repnz xchg mov jg jecxz adc test loopne sbb (bad) push test cli jecxz ret loop dec inc daa out fidivl xlat cltd mov xchg dec sti dec mov jge and aad lods mov out (bad) leave test mov xor mov mov and jmp dec dec repz and adc (bad) or inc jge imul fidivl jmp addb cmp and inc lret fwait push xor inc lcall cmp xchg push add and cmp cmp jnp icebp dec push ja jg inc mov sbb mov mov (bad) aas mov icebp adcb xchg mov adc or mov aas jle shl ljmp xchg or (bad) daa int push inc lret in test adc mov pop inc cmpsb into inc mov xchg push out loopne or sbbl pop pop dec in ret push test fistpl inc or xchg (bad) xor xor hlt xor scas fdivl xor sbb or mov inc decb sub or insl testl inc sub sti and dec and ret jecxz lret outsb fild lcall and jle dec jnp lds and xchg cmp pop mov mov mov shll shl (bad) daa cmp jns add pop add mov inc xchg addr16 inc insb push lret jecxz in inc (bad) xor and ds mov (bad) (bad) jnp and cmc dec fildl adc push inc adc movsl cmp inc or sub pop fnstenv push popa sbb pop inc inc mov adc addr16 inc (bad) inc inc push imul (bad) sbb cmp xor sbb cmp dec dec scas ret bound push jecxz jae incl mov add out aaa js xchg mov mov sbb sbb dec ljmp push mov (bad) and out inc insb jge xor mov fwait pusha or mov sti jmp punpcklwd incl sbb inc xor ret mov inc xchg lock xchg or repz sub jne cmp sbb les mov flds test mov fldl imul push hlt push dec pop fstpl adc xor cmp push lods pop ja or mov (bad) mov and adc jg xlat ffreep (bad) movsl idivb cld push (bad) out imul inc inc lahf loopne add outsl ret popa popf inc (bad) cltd mov repz mov mov sahf scas fisttpl mov mov arpl and xor dec push jge pop ret dec add lahf leave inc xor push dec mov shrb or loopne inc inc fadds pop in xor or orl fmull in add pop xor in inc pusha movsb pop enter xlat inc add jg (bad) fwait inc pop mov adc mov add push xor inc mov mov sub icebp jl xchg (bad) aaa cwtl jge dec inc (bad) mov and in inc fwait or das sar cli inc ss cmp dec sub adc sbb pop outsl pop pop bound push cld or ret sub xor lods cmp and nop mov sbb pop je mov gs addr16 imul subl jl mov ds repz inc rolb (bad) je and push cwtl sub and adc inc rcrl cmp sub (bad) xlat dec mov inc loopne sbb adc and rorb jmp movsl pop (bad) data16 loope (bad) aam int3 sbb inc std sub inc loop dec rep add inc sbb shll sahf fnstsw push ffreep mov aas inc dec adc jl fistpll and (bad) (bad) push xor rolb aad enter inc mov and cmp jnp outsb mov ja insl mov sub inc and jns mov mov ret dec sub fmull and inc jl cmp jle sti sbb popf fwait sbb mov mov pop cltd mov sbb sbb movsb addl dec or je insl repz xchg fbld adc xchg jmp add and or sbb call adc and cmp push mov jne loopne xor int mov cs pushf adc test jb cmp imul push (bad) mov lcall sarl pop push fbstp rorb icebp addr16 mov roll enter (bad) pushf pop test adc ja inc cltd add rol out cmp dec cmp fcmovnb inc mov pusha les add add lret arpl push outsb push push jb lret add push and arpl pop popf fild inc sbb iret adc or in jg outsb inc insl inc fwait ret push jb xchg sahf cmp and mov cli xor rcr mov dec js sub cltd out outsl sbb bound clc xor lahf add rcll cmp jg pushf lret cli sub sub xchg in pop adc mov gs lahf mov les (bad) or sbb mov mov inc imul loopne inc dec push push cmp (bad) push inc sbb push xlat enter scas dec jge fiadd test out icebp mov pop push (bad) and ja xor mov inc pop pop cmp adc into sub ljmp inc fisub jne inc mov lret stos (bad) jnp dec inc stc dec mov cmp les lds pop mov sub lock add popa pop cmp mov sub cmpsb xor jo add imull mov bnd dec pop pusha dec xorl pop idivl mov xor (bad) fsts mov ret push sub xor xchg lea mov stos inc leave mov fbld cld insb test sub mov stos into mov repz pop inc add rol or sub sub int3 dec push cmp cwtl into fstpl mov loope call xchg cmp dec out sub jbe das adc je xor fwait push sub les cld sub (bad) popl jb mov loopne in andl inc or aaa mov cmp fadd jp scas pop xchg sub loop mov cli mov scas xor jnp inc shrl mov sub lea inc push (bad) push movsb push push outsl rolb insb das xchg inc leave or nop mov imul inc jae mov inc pusha inc fmuls add pop dec loop (bad) repnz fnstcw mov sub mov xor xorw (bad) js dec jmp push test orl mov (bad) mov loope push (bad) pop lock pop jb aas push inc inc iret aam leave rcll sti (bad) fidivrl sub pop scas dec dec bound adc pop dec jmp adc mov fadds popf sub or shr pop push test stos or int arpl jmp xchg lret repz arpl dec xchg sub pop dec xor adc std stos out cltd sub jo scas stos inc xchg dec sub outsb aad nop in pop sbb jp sub popa (bad) repnz sti ret jo addr16 movsb inc mov adc mov mov inc in sub and gs inc add nop jbe imul push pop int pop in mov jg subl arpl ret ljmp push test cmc push sbb mov add test mov xchg mov inc pop sub jae inc (bad) inc xchg cmp jl scas add (bad) jle out fist jbe adc mov inc inc scas push dec cmp push cmp jg cmp inc (bad) cld inc imul enter data16 push inc fdivs pop push inc dec out fildl int scas add decb jl pop inc and movsb rcrb (bad) aad (bad) sbb aaa pusha jge fwait out push inc adc xchg bt mov sbb pop and jge mov mov or inc or lahf push cltd inc mov add pop push push gs jge leave arpl dec jno rcll and out jge add (bad) aad push jecxz ljmp sti loope cmp mov pop ret fisttpl or mov movsb in lcall pop mov ret jo or jecxz rol xor mov mov loop inc sbbb fcoms imul pop cmpsl cltd inc hlt cli insb outsl (bad) push fdivrs sub inc ret loop adc mov cmp in loope movsb and inc dec js or (bad) sbb sub mov ret dec mov scas inc stos sbb fmul or std inc (bad) fadds pop addr16 dec in int3 add ret dec pop push inc xchg je push ss jmp roll ja mov divb mov je out call dec sub aas (bad) pop outsl or sub mov inc in mov pop call (bad) dec aam in push lret xor scas int3 ss mov inc stc insl cmp (bad) add cmp mov inc call or adc ret mov lods ret xor out ss lea pop hlt nop rclb jg ret mov inc sahf ja jle popw dec and lret cmpsl push outsl mov jae sbb into int3 call test insl out mov ret adc push out cltd out mov les test loop push loope pop sub xor cmp jecxz or int3 xchg dec sub jno sub mov push mov rcrl push ja cld (bad) jno std imul cmp jno and rcl jge mov adc sti or test aad jl add (bad) std push add push fxch popl cs jle jecxz imul or jb jae mov in inc (bad) sub pop rolb xor movsl (bad) cmp dec add ds ds xchg inc aas hlt push movsl push jne push inc sub cmpsl mov fld push mov adc sbb stos mov ret sbb imul loopne xchg stc dec daa dec sahf repnz (bad) dec cwtl rclb jp sbb adc pusha test lret faddl pop dec pop test lcall adc dec mov aad int3 int3 ret push repz sbb (bad) push cmp mov push mov cmp inc setne mov push jae (bad) out int3 fldl sbb (bad) or jge pusha adc adc cmc and fnstenv mov cmp lcall dec movsl out nop je add pop inc aam clc jno or adc inc mov add inc in jae push lods andl pop mov movsl insb imul cs xchg test and out mov outsb ss pop push jns inc testb das inc pop outsb jne mov (bad) out inc fnstcw scas xchg mov cmp xchg popf pop jg enter movsb cmp pop mov jmp adc or inc cmp xchg mov jne fistl int and pop dec pop xchg dec call cmp and icebp clc fwait stc xchg mov outsl (bad) pop in popa xchg fs fsubrs popa jb (bad) xor mov aas xchg lahf mov pop ror fiadd jns mov mov pop sub cwtl jo inc inc inc lret inc arpl dec push ffreep pop cmp movsl fiadd jnp lahf cmpsb call addb into push movsb pusha jno push push sti xor addr16 test insb jno and outsl jmp lods out cmc inc dec lods sbb fldt mull and clc inc or inc xchg leave jmp jae rclb pop add je ret movsl (bad) iret cmp jl das aad mov and (bad) push mov jno inc inc cltd insb jle loope add add mov inc inc jb in sbb ror adc into or fldenv cltd inc xor xor cmc repz jne push xchg hlt sub lret inc ret rclb cmp arpl jb or test and jecxz and imul push outsl pop inc testl inc cmp movsb adc pusha xor mov inc mov int3 inc and pop jecxz push das in xchg aaa iret dec inc in xor jl into xor pop add push pop int3 test jno add icebp sbb movsb sti mov leave pop add std addr16 jl ret adcb mov add jle sbb dec pop pop mov sub jae add xchg int3 cwtl repnz inc or push pop loope pop push ljmp dec mov inc lea xchg stos sbb imul push and pop fadds inc push mov fst or inc inc push loopne lds addl aam sub dec jne mov pop fisttpl inc popf arpl stc xchg jae inc repnz cwtl fdiv out ret es dec test ja push js into xor mov mov pushf pop ffreep sahf loop ja movsb inc out orl dec jle data16 popa enter bnd jmp inc rorl scas ret mov push mov ret nop mov sbb loope inc jge push sub push add xchg shlb stos enter jae cmp bound xor pop inc into or inc xchg xchg mov lahf or inc mov push push inc inc sub dec ja cld inc jmp lods jns inc mov mov sub pop outsb pop loopne (bad) and xor xchg xor sub jmp inc rcll xchg enter sub dec or and in xor xchg sub add ss adc xchg stc cld xor ret push aam inc xor push push repnz mov mov sahf cmp push clc cmp ret and push or movsl popf adcl inc pop insl xor rcl mov jge pop mov xchg popa mov loop roll cmpxchg8b gs mov xchg sub push sarl dec lret lahf dec push out les les repz rcrb mov jae mov inc cmpsl add lret leave orl (bad) les add add mov push pop pop jmp inc push in xor aas jmp mov int3 loopne test pop push add jle stos inc jle adc imul (bad) jge xor icebp incb mov mov scas (bad) or pop adc inc mov cltd xlat or cmp pop push push sub sub xchg jb add push inc (bad) out mov ret pop pop mov add xchg or xchg inc popa arpl adc and jg xchg in inc scas roll jmp imul inc repnz sbb dec lea rcll jmp lea push inc dec add inc mov je movsb add inc fild jmp jge inc data16 jg add xchg shrl ja ds jae inc mov iret adc pop jmp dec pop mov fist adc lcall inc mov xor jbe imul das pop lea repz inc dec sbb mov push out test inc out and js cmp lods mov arpl adc jno lods lds in cmpsb or outsb jg lea shl jb sbb push cmp xor jo aad loopne and lret sbbb and addr16 lods inc loope scas dec mov pop movsb push add insb out pop xchg ret xchg shll mov (bad) ror cmp lret in shlb std push cmc inc popl pop adc mov je inc imul addl cmp xchg in inc pop pop fwait test dec stos mov inc leave cmp push sbb pop sub pop sbb dec loopne inc imul and jp push outsb push inc add jecxz bound mov push mov cmp mov enter faddp leave xor icebp adc push or das fbstp cld inc bound pusha inc inc cwtl dec dec pop xchg cmpsl push inc fmul adc enter xor popf enter push fndisi(8087 jle sbb in adc movsl mov (bad) or pop mov inc popf ret dec jbe mov fsubr xor idivb mov cmp sahf pop mov repz add dec inc pop lret or mov mov (bad) repz push pop and add jmp push mov (bad) aaa ret and xchg rcll out stos in inc cmpsl call int inc mov push xor lcall pop pop ret jnp add rolb enter inc ret fisttpl or xor inc das mov loopne mov mov inc mov mov scas mov jmp sub movsb inc dec in xor fsubs mov lahf data16 js mov dec dec mov cs sbb mov mov inc (bad) xlat (bad) outsb xchg bnd repz pop pop cmp sbb sub movsb outsb pop test arpl sub inc push int3 (bad) stos lret sub data16 pop test mov lcall pop ret loopne mov or imul inc xchg movsl jmp fmuls push or xchg mov pop or push loopne inc jae jg lahf and imul idiv icebp loop cltd lret jne test or clc pop out lret mov mov pop scas pop lret jns jg inc imul test push adc mov ds pop loope jg mov gs jmp aam outsl sti arpl fcomi lea bound fcoms and fiadd pop mov out push and xchg lcall (bad) fsubs mov inc cmp push mov movl stos push aam jecxz xchg xchg lods enter adc mov inc push pop push int3 dec fdiv jns adc mov mov jo aad test lahf (bad) pop les rolb fiaddl jae insb push cwtl lods ljmp inc mov jae lcall fninit push pop cmp bnd push or cmp cs insl dec add test mov cltd lcall in dec dec sub mov push mov sub add adc int3 inc aaa inc ret ja xor sti inc cli and clc mov loope rolb ret scas shrl stos sub mov cmp cmpsl fwait cmpsb sbb cmc les inc aad jae xchg jnp jo mov mov sub sub xchg into and ds hlt sub (bad) les jno jg ljmp xor inc sti jae jl push mov dec (bad) imul movnti rolb (bad) or jmp (bad) jae into xchg xchg mov aas mov mov pop push (bad) push daa test pusha fsubs sbb mov pop jns into xor push hlt xor inc mov mov mov dec sbb adc stc in inc add lret pop in xchg inc scas (bad) std and and aam inc push push inc out ficomp push adc mov int3 sbb add adc decl dec in clc or dec scas mov int3 inc (bad) push orl inc mov insl (bad) inc xchg mulb mov inc mov mov pop repnz adc pop xchg sahf xchg lods fimul arpl mov pop lds push (bad) in into lahf and pop inc inc popf scas push mul sbb aam andl roll and test mov cmpsl sti fidivl sbb nop in ss dec push push inc lahf xchg adc iret add xchg outsb inc test push or pop xchg bound xchg xor push mov push shlb pop jae pop test std daa cmp or lcall jno xor inc pop and ss jb dec inc jns add adc jge out add aaa insb dec sti shrb cmpb outsb mov mov ret mov icebp pop sbb dec cmp out mov cmpsl lock mov cmc addl shl jg jle cs rcrl cld or (bad) out inc das ds ss jne pushf leave out outsb add pop scas arpl popf cwtl lret jp xchg pop mov loopne lret cltd sti test dec arpl add cmp sbb push pushf push and add push js jbe daa leave adc mov (bad) fadd inc inc mov in fs scas add enter and or pop repz insb popa inc incb notl in (bad) out inc arpl xchg pop outsb lret jns inc xchg rorl inc (bad) mov or sub inc push mov fcompl sti sub sbb ja (bad) sarl inc pop and dec dec popa arpl pop ja and ret xor xlat fistpl fcmovnb push cmp mov push (bad) mov sti scas (bad) lock (bad) sbb mov loop stc gs xor push divl lret cmc cmpsl inc jno pop sbb cli fwait xlat mov je leave adc inc xor fldcw imul (bad) xor dec adc lret cwtl das dec adc andl popf (bad) and pop sub (bad) sub jo cmp mov (bad) xchg cmc pop lods add sbb mov push loopne bound dec jg inc cmp mov stos fbstp dec sahf aam mov icebp stc (bad) divl movsl jo bound sti jle cmc not rsm dec add add iret inc hlt sbb sbb lods cmc sub jecxz aas cmc push in inc insl push lret mov ljmp clc mov sub add and xchg inc imul and sbb pop sub mov add or out cltd cmp leave jne loope negl inc xchg add inc iret mov cmp lret outsl sar popf adc dec into ficomp sbb push fstpl mov test add mov push lret inc push sti dec pop xchg fcompl sti sub movsl icebp (bad) into mov lds dec sti xchg insl ror push (bad) sub ja and lods xlat loop add inc or mov adc sub imul lret sub xor jne daa jae and mov pop mov call mov scas leave sub push scas sbb cmp jmp lds lret imulb stos add adc fcoms lea and (bad) lret xor add dec div inc push pushf or (bad) ljmp ljmp mov adc fmul mov xchg cmp int3 inc adc mov add rorl bound cvtdq2ps mov ljmp push test aas out add jmp in xchg pop push inc adc inc pop push cltd xchg cmp xor push jnp test xor add fxch jae int xchg xchg movsb fsubrl (bad) xor inc push call add and mov out dec inc sti or lock xchg and pop push and mov imul je fldt mov jae loop inc jle xor inc in hlt popa sub repz inc push sahf xor inc mov dec lea sarb mov or xorb pushf popa daa xchg and ret lret sbb inc (bad) jne jp pop lea inc and adc ret insl cmp loop add and xor inc jne jo sbb jno repz repnz xor test jne push xor lcall inc xchg popa fmul fisubl lock (bad) mov (bad) jbe (bad) xchg mov xchg inc dec js adc inc lret incl dec jno cmpl push xchg xlat scas mulb sub movb dec dec inc mov xor mov add scas xor out push ror lea mov inc cmpsl call mov xchg repnz pop mov and dec sbb mov call cwtl lods inc mov repz push cltd pop inc sub jns inc jl rcl gs inc fstl cmp dec inc push xor inc mov dec pop imul add out lahf add mov push (bad) out add and loope mov xchg test sub sub mov flds std jecxz cmpsb cmp insl mov push add push (bad) mov (bad) (bad) mov mov leave shrl adc es mov xchg andl ds mov jnp mov imul dec sbb mov cmp sub sbb pusha (bad) pop inc xchg mov or les das jg fistl sahf stos and sub loope shrl ret jecxz sub out lds mov dec xor aam sub into adc int3 in mov inc daa jno push ret sub outsb hlt jns sub pop mov icebp and or dec repz fs stos out nop mov mov std push mov call or xor fadds add sarb jo inc pop sbb flds cmp cmp rcrl ret and hlt pushf pop mov sbb ds sub mov stos sahf xor add ret xchg imull jae pop movsl std fcomi xchg daa push pop mov sub xor xchg add notb jg xor (bad) lahf lahf pop popf out lea adc push sbb pop sub mov stos pusha pop aaa jg xchg mov xchg fiaddl mov imul cmp aad mov arpl jbe adc mov xlat fistpll outsl (bad) mov insl cmp js inc fistpl or ljmp add outsl inc push inc test stos aas jmp dec mov popa imul push sub jecxz sarb lock sbb xchg mov xchg inc stos stc fwait or pusha add adc pop dec xchg jecxz push scas push add push xorl cmp pop xchg dec subb sub inc in xchg fcoms or push inc outsb jecxz push inc int3 cmp adc push push jae daa push (bad) xlat mov mov push scas add jb cmp dec mov out dec cli fs imul dec lea pushf test insb std popf loope dec arpl shll gs imul push cs inc jns pop das inc inc xchg jnp insl cmpb and cmpsl arpl push dec ljmp lahf ja pop fdiv (bad) aad int3 stc cmp inc outsb leave dec out xor inc enter stos xchg scas sub dec aas sub mov int3 lcall push mov popa push inc push add ret mov pop inc sub (bad) into xor mov xlat in jmp push fwait or jo and enter xor push out mov pop and mov int3 pusha mulb mov adc push inc inc mov push hlt aam stos jbe push dec mov push add lds fnop sbb imul ja jbe dec mov cmp daa push and out inc sete ljmp imul sub or fstpl sbb push dec daa jmp stc lods jb dec fsubl inc mov jae imul loop inc jae or andl pop mov pop jecxz pop add inc fnop fiaddl mov mov add rorl loope sarl xchg jmp lret je icebp inc test and stc mov jae hlt add outsl rolb imul fstl adc jecxz aas mov push inc and adc sti int3 inc movsb pop sub inc and popf jmp sarb inc stos in jge or outsb cs ret inc sub push add and mov repz jo mov pusha ret inc xchg sbb and inc and addb pop rolb adc out dec sahf inc in lock and clc xchg mov xor sbb insb jmp mov xor dec ja dec dec mov adc ret xchg jle fcmovnu repnz fsubrl mov jnp inc arpl pop adcl sahf push (bad) adc cmp ret lods sub aad fdivrl insb addr16 scas push pop sub in lock jge stos inc loope add fldl push jb sbb adc addps loopne xor in test sub xchg jecxz jle (bad) xor cmp fiadd arpl in adc int3 inc lcall cwtl mov into push (bad) imul cli xchg inc jno cltd dec sub scas mov ljmp jecxz arpl es inc push popf sub dec cld (bad) jecxz mov pop or inc cmpl xor mov jmp inc loopne es stc lret addl sub in insl push int pop lods cmp cs pop (bad) fcomp inc sub xchg xor ss addl push insb push aam lds jno sbb xlat mov push pop mov out inc pusha scas (bad) loop mov (bad) repz and mov and (bad) inc or jnp jne sbb roll (bad) pop stos mov mov addr16 xchg lds call adc pusha push outsb hlt das hlt popa repz iret and add mov cmpsb mov bound mov sbb inc sbbb (bad) mov or lret leave sti cmp mov dec loopne les jb add repnz mov or dec arpl push mov sub sti inc inc cmp push and fdivs pop push inc sub inc dec movsb pop clc xchg mov adc mov xchg (bad) jb lds cli jecxz fisub cld inc dec sub lds or jnp dec xchg notb (bad) pop (bad) in aaa dec sub cmp lods sub xor lret push jge push and sub outsl jbe loopne movsl mov inc mov rsm jnp ret ret icebp ret dec adc ss bound ja inc in fiadd std and test and cmp push adc xchg dec je lods js mov inc adc dec inc fs insl movsb fnsave inc xor push popa jnp inc or je push mov push idiv inc shlb pop inc jno push hlt js std adc sti ds dec push inc movsb mov add jecxz inc add sub pop fstpl mov cmp jo adc pop aad into out push roll repz subl inc add jno inc push xchg sub mov mov mov les lret jnp jecxz inc or sub adc mov out lcall lret call gs int3 outsl mov dec mov cmp mov mov jle icebp lret and sub jmp popf mov loop or rol push mov dec cmp cld pop xchg rorl and sahf (bad) jp xchg pop (bad) imul dec push dec incl (bad) icebp mov push mull add mov jmp and sbb fwait jbe xchg dec sub push xchg loop inc sbb aas sbb bound neg (bad) push lock les popa push jg in jb mov pop rcrl mov sti pop push cmp lock cmpsl push imul dec (bad) mov and lret cli adc push insl mov mov jl fcomp inc jp loop push scas or insl sbb int3 ss iret fwait outsl lea inc clc (bad) in lcall cmp ret orb icebp test lret addl fcomp out sub jae jbe cmp dec rcrb jne popf or mov push mov push add mov mov cltd fbld pop add dec lcall lods bound xchg (bad) fstps ds lods xchg xchg cs pusha daa dec add mov rcl xchg and jne imul (bad) xor (bad) add ret hlt push dec inc in inc in (bad) or mov insl outsl ja dec testl xchg arpl mov dec sub popf dec push mov dec imul inc xor dec push sub lahf dec inc push clc mov gs shrl mov inc je and scas shrl pop dec repz inc mov mov aad sub inc outsb data16 and (bad) dec mov outsb (bad) add push or sub popf xchg mov das (bad) push sbb push push aas add push inc in push cmc sub loope lahf sbb leave fimull inc sbb addr16 jb ret pop pop out ret fs mov inc scas cmc les mov repz pop fisub cltd or add xor mov addr16 inc pop dec in cli nop leave movl je adc in xor (bad) aam dec xchg mov cwtl xchg inc dec nop xor xor or push inc mov cld std add adc mov addl jle fldcw mov outsl jmp sbb add fstps addl xor jp and fmuls inc mov adc mov sbb popa and xchg add xor pop dec sahf data16 (bad) jno je movsb push inc mov push lock sar inc xchg cwtl insl fbld jle icebp (bad) aaa js flds sub cwtl loopne fst pop adc ret ret imul mov repz jnp and sti ljmp (bad) aaa sub add inc sub sarl inc sbb or test inc inc jnp sbb jecxz ret push sub popf shlb imul and push nop pushl adc push jg sti lret aad ljmp inc je stos mov xorl in xlat inc jno cld nop dec hlt add cmp dec push push cmp xor dec pop insl push jle inc push mov mov sub mov hlt (bad) loop jecxz repnz lock call pop mov sub inc jg out xchg add dec pop mov inc test jae (bad) call popa imul jo dec lcall addr16 ljmp cli dec daa jmp inc sub int3 mov inc jp fs mov in enter push outsl add sbb jne iret dec adc jno mov repz fiaddl lret test rcrb add mov testb pop imul xor pop xor xchg cmp fwait lods mov imul add cmp repnz testl stos sub dec mov inc sub pop scas inc xor cmpsl or adc jno push dec jecxz lods mov jmp and inc inc dec cmp (bad) repz les push push cmp pop int3 les lret pop lods add cmpsb sahf sub std sbb sub fisubr jge ret es dec jmp dec ds scas imul and jl adc push out test dec sub push push pop popf push (bad) xor xor loop cmp dec jae (bad) out push pop faddl xchg dec mov pushf push add inc jno js (bad) repz sub lods jno rcrl mov pop mov cmpsb inc xor lcall add sti and ljmp mov out leave pop mov dec repz adc inc mov sbb xor ret scas cs pushf leave push sub fisubl inc cmp and cs mov xchg mov inc inc mov out decb xor sbb pop jl fldenv in jbe jg clc pop movsl mov ret inc jle jo xchg inc sbb daa (bad) inc push fs je jb pinsrw adc push inc jg ret (bad) mov xlat insl iret jbe xchg mov outsl mov sbb inc fistl sbb es mov lock sbb (bad) push push xchg (bad) inc inc jnp clc cmp loopne popa and jl or sub ss pop dec lcall mov outsl scas mov lahf pop das mov xchg mov pop stos inc sti ds pop fs and mov test insb pop repz xchg cmpsl and (bad) add clc xor lds pop dec cltd adc mov xor cmp rol lds sbb inc ret (bad) jge stc sbb pop andl inc add fnstcw pusha movsl add scas ja rclb test inc push push cmp jg push add (bad) or xlat (bad) daa mov and mov cmp ljmp push inc inc test fcmovb movsl aad sbb call mov inc sarb fadds les dec cli jnp std inc daa dec sbb insl incl cld pop sbb or pop xchg inc sbb rorl sub inc inc xchg lret sti mov inc sub ljmp jg sub or loope dec dec inc mov dec xchg sub pop mov dec ficom rcr xchg jne ja sub ret sub xor xor jge push leave add shlb mov ds pop out loop in lds adc testl add fisubr ret scas loopne inc dec push push (bad) inc stos pusha clc jns fwait shlb in dec mov dec push xchg repnz xchg inc shrl mov mov gs call dec pop mov mov ficoml xchg xchg repz imul inc add cmp fwait or nop into popa cmp ret push pop cmp jnp mov inc inc sub in rcrl or sar inc es push fild mov (bad) das out pop mov inc adc lahf (bad) scas xchg xor popa adc std inc adc hlt frstor pop fidivrl shll push xor insl sar xor cltd stos dec test call mov and cld in dec mov fisub dec std pusha addb test add leave test mov mov inc shrl inc outsl jle stos popa and xor ljmp fcoml inc daa mov and insl jle or and mov pop push pushf inc mov scas xchg mov mov add cmp inc imul daa or cmpsb out clc inc pushf pop jp push or add push xchg (bad) fsubl out inc xor inc subb mov sbb xchg pop (bad) cmc sahf std popf dec jge lds cwtl jg adc push sub stc or inc and movsl repz push push sub xchg test and add pop ljmp and xchg iret mov flds ss sub mov and push or mov (bad) stos inc push fmuls inc rcr addl jbe jnp (bad) icebp (bad) adc stos clc out or imul repz mov and test scas sbb out cld inc jmp out xchg cmp enter inc dec jmp inc adc mov and fldl imul dec aad add icebp std ret mov pushf call adc mov sbb inc ret iret mov sarb sub and mov inc push mov cs (bad) aaa xchg jg fiadd mov jne pop in mov aaa or sub stos lcall mov add pop out clc mov fildl mov jmp inc dec inc shl and mov sub insl hlt add sub mov pop pop pop push dec lods dec pop leave jge je out push iret addr16 push mov inc mov sbb popf repz mov push jg fwait imul push sbbl repnz lock push push ds mov add cmp scas mov xchg inc nop lcall and or lds jp cmp aas inc cmpsb (bad) int3 and jg sahf inc pop pop push inc add mov (bad) mov int3 lret inc lock inc jecxz pop xor mov cmpsb fs (bad) aad (bad) ds add pop xchg dec xchg xor ds in sti xchg jb mov ret pop dec sbb inc in fist mov stc icebp dec xor xchg sahf cmp into inc or push add inc mov insb pop ret enter or jnp mov adc pop cmpsl xchg pop mov sbb add popf icebp pop inc fsubrp std pop and popa push test pop inc push dec xchg add into sub orl add insb xchg inc aaa sbb inc imul enter aas push out mov dec clc outsb aaa je inc push jno arpl xchg popa js mov inc xor xor mov adcb push inc mov jnp jae xor sarl (bad) lock cmp xor jb scas outsl pop aas daa inc test imul add test inc mov or push movb subb subl xchg in inc lock int inc cltd int3 or loopne icebp into push sahf cmpsb dec sbbl or jbe mov ret data16 jb cmp inc xor (bad) (bad) push jl,pn push inc add mov iret dec fsubl sahf push inc decl pop sub mov popf cmpsb xor repz ljmp xchg fmuls add mov add (bad) inc inc lea sub sub jne push ror dec mov popf adc insl leave mov jb repz mov cmpsl mov push add inc sti cmpsb xchg std leave jecxz dec xor cmpsl pusha sub mov sbb jb outsb adc mov (bad) std cmovg fs fbstp repz fsts jge and pop and pop cltd (bad) push decb lahf fist icebp mov inc mov xor sbb inc sbb out and das sbb inc iret xchg repnz icebp push xor jl xchg sub out inc aaa and sti lret dec arpl or repz fisub inc jb das not cs push push sti popa add cmpsb and sbb fcmove insl ja jp imul addr16 repz out mov jmp fdiv inc aaa dec cmpsl adc push out pop inc jne add cmp jno outsl sbb test adc and scas inc dec popa ret sbbl pop or fimull mov test mov mov lds sbb inc adc xor enter pop pop and bound mov mov out push daa inc mov push sbb sub add fs sahf aad xchg repz sub add outsl adc (bad) out inc inc inc push cmpsb out and xor dec outsl outsb mov int3 inc inc jmp sti inc push jbe cmp lret repz shll xchg pop add popa sub sbb inc and xchg cmp lods cmp or stos inc inc out or sub rclb push mov (bad) in cltd and inc inc lret inc push int inc fcoms adc add push sahf loopne test add mov pop sbb pop lret lcall vshufpd andl push scas mov adc push inc aas or imul pop fimull mov jge push mov inc xchg mov and add dec stos add stos mov inc lret fwait loopne jg xchg mov inc scas or decb cmp xchg jne (bad) dec repz outsl fmulp add mov inc repnz pop sbb or orl pop inc fidivr jmp xchg scas fldt fisttpll mov popa lds aad mov into daa daa fwait push roll add push lcall pop lods cmp inc sub push repz daa aas and mov push sbb jne cmp adc cld inc imul fs and pop sbb add cwtl xor dec inc pop fwait adc bound jge dec xor and insl mov dec mov and push adc fistpll xlat push ds xchg fcom dec test out and xchg out xchg inc psrlq fiadd ret push pop lcall mov pusha icebp sbb in ret icebp inc mov lds cs sub xor inc adc xor cmp dec inc in mov (bad) fdivs jl in push dec cltd or inc inc dec out push push pop dec fsubrs pop stc sbb cmc insb cmp xchg mov jne test lahf fs sahf mov add cld or mov lcall cmp ffreep push mov (bad) (bad) icebp flds jnp jle adc hlt jmp sahf data16 and push push jge call or pop imul es out add adc es movsl mov test inc into arpl add adcl fstp and in mov ds ret aad call dec push cmp xor mov pop add jge inc inc aad cmp or and stos out mov sub into (bad) inc push arpl mov repz pop cmpsl inc faddl mov mov sbb inc in xlat jp mov fcompl and inc push cmc pushf dec xchg push sbb mov jl inc inc jg aas push into (bad) push xchg in clc or push adc inc jmp fst and or dec or dec divl pop std push loopne mov out inc xchg jmp adc cmc dec stos fucomi inc popa (bad) sahf mov inc push in cltd fisub out inc lret incl xchg or push xchg mov push dec cwtl and xchg addr16 fucomp adc ret mov xchg sti cmp inc mov mov xor in insl sbb xchg je pop inc ljmp les orl lret rcl mov repz push xchg out add int3 jnp ret cmpsb das pop inc out inc and and mov jnp adc push and je xchg or stos addl in push movsl aas push hlt nop mov or xchg sbb ja (bad) data16 out xchg or into inc ss push mov cmp cs sahf inc imulb gs ret fiaddl jmp dec nop pop enter mov mov das cli push cmp add cmp popf adc sbb jle loope movsl push repz stos ja or jb mov stos pop pusha inc fs jne jle imul into xchg pop xchg xchg stos cli jmp mov int3 inc jecxz sub mov std ljmp orl jp pop pop xchg dec (bad) (bad) out jmp xchg lcall sub add fsubs mov cmp stos dec das cli jne movsl lcall xor cwtl (bad) fildll push shlb dec dec (bad) cwtl sub xchg mov mov cmp fbstp (bad) jb push (bad) mov push les inc into fimul nop cmp je fwait push lret jl pop inc lock mov cmp mov jmp andl pop stos out lret fstpl mov adc out dec fwait pop jl cmp shrb inc (bad) stos inc push shrl cmp dec sub mov sbb dec pusha fwait inc cmp pop add dec roll int mov int3 dec ds aas cmp sbb jne pop push cmp rcrl jecxz jp jg test into cmp jge and mov pop sti jl loopne mov andl mov (bad) shrl out int (bad) ja cs lds add push aad js out icebp push jp pop lahf aaa aam arpl stos es cmp (bad) mov mov sub lock sub dec sti stc or lea scas xchg push fcmovnb les jmp dec pop icebp jmp jmp les (bad) int shrb jno lods cmc inc (bad) in adc push pop cltd cmp mov dec lds sbb cs aad pop jns insb push pop cmp bound push mov (bad) inc ret sub xchg cltd test rcl push aas lea aad xchg mov push mov lret jno pop outsb nop into (bad) xchg dec stos or pop insl js mov faddp into out mov push lcall mov sahf scas jns pop out xchg push lret inc (bad) or rorb pop xchg test (bad) in mov lods mov push icebp lds dec fnsave inc add rcll jnp dec adc into call shrl in out dec mov and (bad) xor mov mov adc xor add push push cmp scas mov data16 dec and inc dec mov jb jmp out and cli push pop int3 jg mov or inc dec adc mov adc ja or xchg or push pushf sub (bad) jmp cmovae in lock dec imul sbbl rcr sub aas sub jl xchg inc jle repz jb xchg (bad) insl shr idivb dec jns nop xchg pop xchg sbb jae outsl cmpl mov sub std stos inc mov les inc pop mov xor imul dec rcll in xchg pusha push les lret mov mov call pop cmc daa (bad) icebp and fwait dec rcll xor jmp ret jmp bound push fwait test inc das sub cmp shlb in clc (bad) jae push add movb mov push add loopne pop imul sti push push xchg inc or loopne mov jmp int3 lcall xchg jecxz sub inc nop lea scas inc jns mov mov sub dec icebp dec cmpl popa pop dec pop sub arpl inc lcall add add js push or jl adc inc lods leave push dec mov inc push add sub push (bad) xlat mov sbb xor inc or aaa xchg dec mov ja xor mov jnp or and mov pop call stc xchg jmp push and addr16 popa outsl mov into enter and pop sbb sub pop jecxz arpl in lds mov mov test loop aam dec iret push mov sbb pop push outsl sbb xchg ret jmp mov pop add arpl cmp mov push bound or lds mov mov sub cmp mov sub xor dec mov (bad) (bad) and lods daa cwtl stos (bad) jno add and mov out jo das mov dec xchg incl aam bound rcrl sub aas lock push jmp frstor ret mov push pop and add subl aaa test hlt (bad) cli ret pop or xor dec out inc push cmp int mov pop hlt pushf dec iret jo sbbl inc sbb int fstp mov inc mov pop mov imul (bad) (bad) clc add adc fdivl cmpsl rorl outsb push cwtl mov pop lret ds inc ret pop dec sub xchg and frstor cmp in into clts inc rcll pusha cltd repz pop xchg cmp pop xlat call cmpsb enter inc ds test push dec dec arpl sub test push inc outsb lret idivl loope sbb repz inc dec fisubl (bad) fucomi jo inc ja lahf adc pusha adc scas dec jl (bad) sub jno sbb push lret inc loope inc dec jl push lcall inc push add scas hlt insl ljmp push xorb aas cmp dec jno mov inc cmpsb or std (bad) das inc inc mov cmp jnp pop add inc xor bound jbe xor jle (bad) push push cs inc sbb jge cmp lret sti or bound add (bad) out cmpsb and inc cmp mov daa mov mov lret lahf mov lcall std ret dec add jo imul popf das xchg aaa call not hlt xchg adc idivl dec pusha or stc insb cmpsb or dec imull jbe add sti sub add xlat cmc shr mov test jo mov add sub imul cli (bad) mov inc jecxz jns and inc push xchg call and aam ja insl fimull sub adc xchg das inc inc nop push xchg (bad) or inc mov jmp ss ja mov adcl stos cmc mov andb xlat fs das out add nop clc (bad) repz bnd mov xchg call inc lcall pop inc xlat xchg lds add add inc sub pushf push stc lea loopne sbb mov cmp mov jno jo je (bad) and iret dec inc sbb lret push dec pop jno inc mov movsb cmpl mov sti sbb sbb imul (bad) jne leave mov fidivrl shl pop cmpsl sti mov das xchg jno in push repz stos push lret pushf ss les dec test pop add add or das inc pop xlat push xchg call push push cltd sub mov pop adc pop dec (bad) das xchg mov cld int3 or popl xchg xchg stos mov jp mov fiadd or push sub sbb (bad) push cld in lods mov cmp push mov sbb cmp sub pop xchg mov insb and jb cmpsl test ja pop pop (bad) mov dec push ljmp lock fs dec int3 insl lret cmpsb add dec cmp ret (bad) fcmovne sbb aas inc inc xchg pop jnp shl lea sbb arpl add inc mov in je call pop sub das inc (bad) cmp shll (bad) and adc mov lock movsl cmc adc jg inc mov xor sub (bad) in push cld sbb lods ret cmp arpl (bad) mov and out pop loopne xlat xchg mov push mov clc or into mov fwait xor inc decl cld enter inc rorb mov ja adc dec addr16 jecxz cmp test cmp (bad) fadd outsl inc clc imul add pop push and xchg leave loop iret rclb push xor mov int xor sbb sub dec pushf rolb in pop int3 fucomp outsb push dec stos arpl sub add add mov rcrl cmc mov mov daa (bad) pop and add sub mov lock mov jae mov sub sub sub push or mov cmp inc inc inc xor test add push addl xlat pop repnz dec in cmp add popf inc and mov dec xor lret mov shll mov xor es nop xor or sbb xor inc mov cmp es popa mov cmp fisttpll sbb mov divb roll inc hlt add sub push xor clc into ret out pop das pop mov lret fcmovu lret sbb pop and inc dec xlat les cmp negb sbb sub out jecxz (bad) pop movsl sub bound ljmp outsb lret rclb rcr jne sub std clc ljmp faddl mov push xchg inc lods jo cmpsl repz pop cmp shll lcall mov das sub jnp addl or (bad) and leave add push ja stos gs add loopne fildl sbb add sti andb jmp ja int dec ljmp fidivrl ja adc mov loop mov cwtl add push dec sub dec (bad) sub into pop fbstp popl push pop and cmp pop add push sub jl inc loope stos dec xor or mov iret decb add push inc xlat xor rcl or jecxz pop push out or dec repz inc dec dec lret mov stos jg fistl icebp sub popf mov xchg into pop add sbb xchg icebp push xorl push xchg movsb popf shrb dec (bad) fcomps das sbb dec lds inc cltd jle call ja dec dec outsb call xor add push adc les clc popf xchg xchg stc daa shrb jg outsl arpl or xchg inc push jge ss (bad) mov push pusha xor or inc dec stos mov push mov je les aad xchg imul ljmp jge rcl mov inc out ret fstl test fidivrl pop outsl mov imul jp jae dec sbb jg and lahf xor loop inc incl (bad) insl inc rolb push jp dec pop das xchg xlat mov pop bound push inc ret mov cmp mov stos cmp pop push inc mov xchg movsl je outsl fidiv js sub inc mov movsl dec cmp xchg push jbe aad hlt pop (bad) (bad) or push xchg ljmp inc mov xor mov jecxz mov faddl jg pop shrb push sub xchg push push sub and inc fs sbb cs or inc ljmp push xor dec xlat mov pop pushf bound push pop mov mov faddl adc push das lret pop jmp cmp gs enter mov test pusha loope lock rcll cltd sti outsl inc mov gs inc mov sbb xor sub jmp rolb repz inc test dec movsl dec pusha jno mov push sbb mov loop (bad) or and pop sub fbld jbe push aad xchg ds (bad) repnz movsl movsb add outsb pop in inc (bad) in or push js sub push mov mov loop test jg sarl das sub (bad) scas add out xchg cmpsb pop dec int3 loop add inc mov mov fcmovnu xchg out decl outsl ret jge dec je push shlb push hlt pushf arpl push (bad) ds loopne inc jns xchg scas add jno inc std repnz aas int3 mov push mov pop ljmp stc add cmp inc and int enter dec aaa dec movhps push movsl mov mov in in (bad) inc pop mov sahf inc xchg (bad) cmpsb mov rcl jbe imul sub sbb inc test in mov sub jnp dec push jp sahf cmp int3 clc or cs or or sub mov addr16 insb add scas inc fldcw lea cmp insl mov arpl add bound jno inc inc icebp xor sbb pop lock (bad) std enter jmp and dec pop jns mov sar aas jecxz outsb xchg cmpsl jle in repz cwtl mov mov and imul in mov sub stos mov jnp ja jbe (bad) loopne sub mov hlt lock xor (bad) call push stc lea imul andl cs popa cmp aaa xor pop cmp push fldt icebp inc cmp inc mov rcll add sbb fstpt aas xchg mov ljmp sub and hlt dec outsb push daa unpckhps dec push jo movsb sub popa out cmpsl (bad) jb ret mov jne faddl ljmp dec lds sbb mov jecxz push and add subw add add xchg add inc fs stos lea sbb inc mov sbb pop rcll cs rcll fcmovb nop inc mov and inc mov inc and jmp sbbl jle insl test fadds (bad) movsb sbb dec cmpsb cs push add sbb lods out push fwait sti dec sub popa add in inc shl pushf xchg addb (bad) add sbb scas out insb xchg and push mov inc lds add fdivrp (bad) sbb mov (bad) jae mov fadds jo sbb cmpsb aas call aas sbb add shrl mov call mov mov sarl lahf sbb mov inc stos cld pushf test mov pop movsb push out dec and mov lds test mov add pop or sbb clc int3 xchg xchg cmc xlat inc inc cmp negl jns ljmp sub into aad inc dec mov loop dec add pop push jg mov into std js xor cli repz or cmp sbb or aaa iret jbe pop nop cmp inc lcall pop mov sti sbb loope inc fdivrs mov loopne inc outsl inc cmc fimull fs out (bad) push adc mov add xchg inc test popf mov push jne lock ret mov pop or sbb push sahf xor ret (bad) ret and inc rcr jmp mov (bad) clc sub inc out in sub jl gs outsl xor in jp cvtps2pi inc stos cmp and out scas xor jecxz inc fild mov lahf xor std ret mov xchg aam cld cs outsb jl push add aas or (bad) sub mov mov fwait es aad mov pop cld adc dec (bad) mov into push js cmp leave test inc inc jb (bad) jmp sbb mov loope xchg push popf pop sbb jmp inc inc ds hlt clc insl sar es cmpsl (bad) xor dec jno fimul xor dec aas and fs or enter je lret lock xor jge adc sub sti outsb gs jb (bad) fldl xor jl xlat loope mov sbb jo sub or sbb sub enter daa dec adcb xchg pop scas leave mov inc xchg dec ja insl xor outsb dec or mov aaa lret sbb push sub aaa mov dec push adc adc inc ret stos mov rep insl pop lcall fucomp ret or lods mov repz xor xchg pop and jecxz fidivl add push push jp push mov mov mov les insb push pop imul imul jecxz sbb mov insl inc js cmpsl lret and sbb (bad) xchg or dec pop fiadd test mov ficoml dec int jo lds inc xor jnp cmp (bad) daa mov mov sti pop stc lahf lcall sbb out dec fild add fstl push xchg sub jge add pop fimull bound insb add sahf ds sti mov mov mov cmp ret shll xor (bad) bound mov jns cmp pop xchg pop inc push lret xchg or sbb sbb stos xchg inc aas cmp xchg pop dec xchg inc outsl sti imul rcrl cld jne lods mov xchg mov or sub push outsl or jecxz pushf fcomip and mov add xchg mov dec dec mov mov ret imul ret stos movsb push mov add outsl and push push xor sub lods jne mov lds xor cmp or (bad) fucomi sahf inc cmpsb out mov imul push js inc setbe cltd adc daa mov push ret dec in dec dec fmull ret clc or or pop fisttpll dec inc add inc mov in adc imul jg dec mov inc and movsl lret fdivs xor mov lahf jle ret ljmp bound in add cmpsb sub cwtl int popa ret ret dec fucomi gs inc sub dec inc aad leave fwait rcll dec sbb mov cmp inc push xchg (bad) xor cmp subb leave (bad) rclb (bad) cmpsl insl call fstps rolb inc mov ljmp sahf pushf mov movsb cmpsb je push stos mov loope repz jno ds int int3 inc pop cmp shlb jmp mov inc push mov mov dec push push stos add (bad) and mov adcl sbb andl aad (bad) inc imul mov adc in mov mov push push movsl xchg repz cwtl sti dec stos incb out les sub (bad) inc cmc repz push ja xor inc dec and inc xchg jge fild int3 lret (bad) sub dec fimull jecxz pop cmp jo cmp xor add dec inc bound je inc fwait imul xor repz jl sbb push fidivl int in cli call pop inc or lds push adc and ja pop insb jge xorl inc mov or (bad) push (bad) jecxz mov lcall fiadd insb pop aad jb imul hlt scas mov cltd insl sar sbb or rcrb pop sbb xchg (bad) dec push (bad) loopew dec cmp or sub dec in dec push ret daa jbe scas dec aam repnz cld inc cmp ljmp lcall lock int jmp dec dec jl mov dec lods mov inc sbb and js mov adc aaa inc cmc mov pop in cmp xchg cli xchg in mov jae or inc cmpsb ss out rolb mov lret jmp stos negl push cmp jmp out push inc mov xlat jp push pop cld stos sbb cmp stos jo mov xchg lea jne jle scas jno testb lds sub inc popf daa adc jnp cmpsl aas lahf inc push (bad) jno cmp jl ss test add sub popa aas or leave dec dec fdivrs lret lahf testb jo jne lods inc ret adc and es xor testl sub add jle in int3 es lahf ret mov adc inc push lret (bad) daa mov ljmp icebp pop scas cs or push into inc jmp nopl rcll scas sti push sahf retw sub or add jge rol enter inc decb nop aad sub mov insl clc inc cmc mov pop and sti movsb ja push dec aam sbb push dec fcmovnu sub and (bad) cltd loopne sub mov xchg push bound sbb getsec dec cmp les pop sub inc incb and inc fmulp lock les std ret gs sub stos lahf mov inc jne pop mov shll fwait icebp inc outsl mov sbb push inc push cmp cwtl xchg aaa xor pop test popa and test xchg add xor push scas cs rcl cmpsb push pop fistl jmp xor std je sbb outsb cld ss roll mov aad sbb test pop je sbb bt ret aaa pop mov cmp scas mov push ret shrl pop and lret pop cmp push xchg int3 xchg inc cmc shl gs adc aas mov sub sarl or hlt dec sbbl orl outsb cmp pop nop xor mov jle jbe xorl or add sar adc into push sahf jns icebp xor pop mov gs outsl ret aas adc jns popf inc arpl pop and iret cmpsl xchg jb es cli cmpsl rolb std mov inc scas push cmpsl ds push repz xor add push inc cmp in sub outsl aam popa dec jl hlt (bad) lds inc lods adc loopne stc inc xchg dec pusha fxch pop mov fs push jo mov or mov push in ret insb lret repnz stos sbb out xchg xor aam jnp cmp fwait clc ds in or dec arpl imul addl mov inc inc add mov mov add and xchg xor adcl popf js xchg outsb or loopne mov es into imul push adc pop add inc sub leave adc in cli jo xor into fild push mov jecxz jge jo daa mov int3 inc lret out and (bad) pop (bad) adc div movsl cwtl xlat inc (bad) repnz add (bad) inc jp or rep sbb xchg incb and add ret mov cmp lahf pushf fwait inc sarb jo jns fsubs jle (bad) sbb cld push add lret stos inc xor lods hlt add fisubr xor inc aad dec and loopne cmp shl push daa jmp mov cltd fs inc gs scas fisubl aas mov test mov sahf les pop sub cmp xor xlat ret subl xor push fs mov in jge inc jecxz in sbb dec movsl push cmc adc add je aam and ret test mov sar push movsl mov decl jbe inc xchg cmc es ret dec cli mov sub pop gs sbb inc cld sbb (bad) xor sub inc mov dec pop sbb xchg sub out popf cmp addl pop jnp fbld icebp xor mov push jns lods pop mov cmp sub jo and imul movsl xchg popf das ljmp cmc shl es dec mov pop aas xchg push mov enter sti inc ja mov jo out mov sbb (bad) pop lods cmp jno add push and js fcoms in cmp popf mov add insb xor pminsw nop push sti adc mov fldcw dec or push test std mov pmuludq xchg mov rcr inc cmc jb mov or xor xchg and rcll mov in push sub push out inc fiaddl test xchg or je lds add pusha mov fcmovne xchg jle xchg (bad) jecxz ljmp insl (bad) ja sbb mov mov inc scas ficoml dec sbb leave dec stos push mov push sub sub mov popa mov or loope push fsubs enter dec or cli pusha iret nop setg adc inc stos xor or jle push lret jmp jg stos jle add int3 sub adc outsb in popa into clc mov push xor sub mov adc pushf jbe jle sub dec std out dec mov dec xchg mov xchg es (bad) sub xlat dec aam push ja (bad) mov aam sbb xchg inc rclb addr16 (bad) pop jno dec test inc in frstor out inc sub cs jmp sbb jo or cmpsb gs inc and pop and cmp inc int cwtl lods lock mov scas add mov inc fwait mov jb sahf scas xchg xor loopne inc (bad) add pop fcomp add test xchg sahf lea jmp add adc lret (bad) mov test aas mov inc mov dec mov mov push into inc (bad) incb test sub dec dec mov mov (bad) jo cmp (bad) push test push push mov and add or iret mov lret test std daa jnp mov leave or dec scas mov xchg jl adc or std and inc xor add stc idiv ret mov dec xor lahf inc mov mov pop push push xchg lock movsl and mov add and mov idivl scas add add xor mov inc mov sbb incb pop sti push nop adc arpl adc dec inc test mov fstpl adc paddq pop es leave ret int3 aaa push mov sbb add aas data16 pop fldl pop sbb or jmp and loop es xor cwtl add push cmp inc and ret aam sarl ret in pop aas mov pop fwait and out bound and flds adc arpl inc pop loopne push cmp pushf dec inc and and scas clc inc in inc scas aad adc pop sarb sbb mov adc sub repnz inc in xor xor ret in lret jp mov push or (bad) int3 xor xor ret clc pop adc inc push (bad) cmpsl pusha in sbb dec incl (bad) out orb adc movsl push jo xchg and adc or inc mov (bad) mov sbb les imul mov push sub dec call and cltd enter shl inc pop sbb xchg xor jns sub pusha jae xchg add mov push dec int adc clc sub lahf mov mov add inc dec inc xor stos cli push dec add dec dec sub int3 aam loopne sar imul cmpsl or inc mov inc sub incw add and imul iret xchg inc sbb mov xlat xchg sahf out sti repz mov out repz xor (bad) mov outsl cmpsb push push dec test adc arpl sub lcall out mov jno loopne add adc mov mov or lods enter mov and (bad) das das inc xchg dec subl daa rcrb sub mov cltd adc add inc rorl fldcw dec lret cmc add xor sub cltd rolb js jmp cmpsl daa (bad) ss popa sti inc ficompl or add jnp and in mov arpl xchg mov imul lea mov adc adc stos push dec mov cli aas inc test into xchg mov xchg dec sti inc arpl sbb cli xchg dec nop aam fcomip mov fwait cltd (bad) cmp adcl sbb cmp jmp pop loopne cmp jbe dec sub je push sbb and or xchg out aaa into (bad) inc sub scas push outsl popf loop inc add add movsl or inc cmpsb fistpl fiaddl mov mov test lods mov adc push dec sbb rolb mov push in jg sti rorl call test mov inc add adc xor popl or pop call and pusha icebp repz inc mov xor push inc push adc push adc std mov inc push lea test fisttpll dec mov xchg mov dec clc dec aad outsl mov dec ret out xlat sbb jne leave inc mov into xchg (bad) jmp rcrb add mov les ja push and pushf mov mov or xor movsl push lods mov enter adc xor jle leave push mov inc fs adc add jo insl xor ljmp inc lret cli dec mov add dec push push pop jge adc ret pop mov inc mov xchg or jnp xor addl cmp jae mov inc fwait stos test mov rorl pop mov inc lock pop mov push daa inc xchg adc fucomp stc cmpsb push sti (bad) push xchg inc cld imul lret mov sbb sub mov out aaa (bad) jl (bad) ret jecxz into fisttp lret inc shlb (bad) jae push add fimul dec sbb or popf fiadd jae add test dec cltd sub lcall pop pop sub aam and lcall cmp lahf mov inc je fsubl mov inc ss mov int3 icebp push sar and out jne (bad) and call imul jne jp xchg sti push popa adc xor loope mov stos mov add (bad) cmp fwait jmp cmp mov dec inc std daa mov dec push ror aad dec imul movsl pop pop dec add fwait and iret push dec out push jne arpl fwait mov push mov mov (bad) xor (bad) xor (bad) out inc leave or push arpl jns cmp jecxz push aas xchg inc dec push jb mov jl sarl in mov dec imul xlat int3 dec add decl cmpsl push aas dec adcl xor mov inc sub das add aad lods add dec dec (bad) leave dec pop loop sub mov pop int3 mov mov dec and arpl xor popf or jge mov ret xchg int3 adc add xor push or out pop inc out mov pushf xchg sti xchg out test lds mov rorb stos das int divl cmp jg imul int3 mov cld dec or ret arpl and or (bad) add mov mov xchg cs sahf xchg dec jnp dec mov (bad) stos repnz jb pop sub imul insl or imul sbb sbb or mov ja dec sub roll stos push sbb inc jae rorl sbb sub cmp adcl gs add jns das or cwtl nop cli and add pop jge insl sub xchg inc dec fdivs or movsl inc repz fwait (bad) xchg xor bound dec inc insl hlt xchg xchg add pop mov and es push aam pop test rorl fistpll adc or jle cmpsl pop ficoml push int dec fidiv ljmp pushf mov nop movsl imul out test xlat adc notb ds ljmp fistpll (bad) cmp stc and lds stos jge cmp xchg cmc sbb adc loope (bad) mov add in in loop sahf (bad) (bad) push mov das imul mov inc inc into fisubr dec xchg lods lods outsb or xchg aas add pop dec sub aam sbb stos cmp or (bad) or cld enter lock cmp das sub repnz xlat or aaa xor popa inc jmp sarb inc lods and enter arpl sbb pop lods jbe das push xchg inc mov sbb sahf insl fdivl testl pop inc mov inc cmp fmul push shl aas fwait lock hlt xor xchg and xchg cmp sbb jl lret dec lods aam or cli inc push or add stos (bad) sbb js mov cmp mov jle and mov (bad) test (bad) pop sub cmp mov cltd push outsl std jl and outsl (bad) popl cwtl (bad) (bad) xor sub jnp jg aam mov lret or jo dec add jne inc je push cli add xor sbb (bad) xor iret inc cmc push sub inc lock xchg dec inc lods pop pushf test dec imul dec mov add or aad bound inc cwtl mov push xchg inc adc push pop insl cmp dec aad adc movsl add pushf jns loope and les sbb ret mov adc lret ret cmpsl jmp xor test in inc xor or jg add inc jb or inc pusha mov test mov ret std ss mov out frstor xchg xor xlat lea jl stos xchg xor push inc mov sti loopne leave jne or aas dec pop sub pop fwait push loopne sub sub inc into aad loop push in and or xor dec insl adc sub mov test test test ret sub pop pop mov fdivrs sub jo inc sbb stos ljmp dec aam sbb cli (bad) adc arpl jb in out lcall push add and inc lock xchg repz pop xchg in fwait jae enter in xor mov cmp or cmp (bad) call cwtl adc mov icebp xor ss add xor sub aad popf idivl and test push mov sub out jne sbbl rcl rcl adcl mov sub dec into ret repnz clc jns pop dec and cmpsb int3 sbb repnz jne or inc cltd push inc mov xchg loopne loope test rcrb xor lock pop mov xchg incb sbb addr16 push pushw adc sub das inc jbe sbb popa insl inc addl mov mov icebp add test es inc push cmp loope into enter pushf imul xchg sahf mov push loope mov pusha lret xor mov gs sub inc pop inc movsb xlat subl loopne dec mov inc jo mov mov gs rol or jmp sbb faddl clc sub mov mov fimull lahf (bad) aaa inc std inc jbe sti cmp insb inc adc cmp dec or in sbb stc xor (bad) mov loope fwait inc push mov in cmc aaa pop adc sub negb jne xchg xchg insl sbb inc lods js int3 mov scas push stos dec pop mov lods mov inc cltd sub ret popa mov mov adc lahf bound add xlat inc out enter add shr adc mov (bad) pop jge jbe mov lcall (bad) ret ficompl dec sub bound fnsave xchg mov mov ja mov js aam mov mov cmpsb dec push jne lcall jbe and sbb xchg jb addl (bad) jp incb xor cmp dec or sbb mov cmp push repz mov adc add xchg push fsubrs lods nop xlat into insb cmp dec out and sbb lret in mov cmp popa sbb sbb cli ret mov inc or dec pop lods stc sub pop jp xchg insb adc xchg daa mov jmp adc int shll int jmp mov loopne test push loope fwait adc jnp ret std ret mov sbb (bad) push mov jb mov out or mov jg int3 (bad) push insl jb or jbe ret nop mov inc xor lock sub ud1 mov ds mov inc movsl and dec mov pop inc add cli dec pop fwait mov and repz xchg inc xchg inc xchg scas mov xor push aaa mov jge push xchg sar into movl outsl mov mov dec dec stc xchg (bad) dec cmpsb sar sub popf lea shrb and or dec sti jb mov sbb dec ret xchg sub inc mov xor jl movb arpl inc add cmp mov sbb mov movsl loopne sahf sbb sahf stos movsb add add lods vrcpps fcomps (bad) pop movsb xor push jecxz (bad) mov pop inc dec mov (bad) xchg (bad) push stos iret pop pop jmp dec adc or inc lods sub inc stos sbb out je out les daa fidivrl xchg lods or vpslld dec cmpsl dec fcompl cmp fcompp sbb pop pop icebp cmc ret lea test mov call xor and xor je xchg sti movsb mov sbb test adc stos mov icebp into add mov int3 (bad) mov inc insb mov pop stos fwait pop test arpl sub and inc push sub icebp fs xchg mov loop cltd jae sub pushf push sub jp mov fmull push push stos nop setle rcl jg fidivr xchg xchg into inc pusha sub inc imul insb pop and movb ret lret and jecxz and lahf adc (bad) bound inc aas out mov and addl std push lret and pop sub xor hlt xor cmp ret cmp ret cmpl daa add jae test sbb sbb iret mov and scas jno inc mov xor sbb sbb inc jbe add cltd stos cmp sub inc jg arpl mov dec mov and sar dec inc mov dec lcall imul pop dec rcr ret inc out adc cmpsb adc mov ljmp fisttpl pop xor scas push js jne xor daa stos mov icebp inc ja mov lods cmp pusha dec lret and mov lds sub into xor sbb dec inc sub scas mov jnp (bad) (bad) (bad) push cwtl std jecxz mov andl xor inc jecxz jge cli xlat and lret cmc iret (bad) xor fildl jmp (bad) incb xorb or or pop inc es mov cmc popa dec jmp popf pop pop xchg rclb imul pop in fisttpl stos xchg shll (bad) jnp adc cwtl cs sub aaa dec fiadd daa inc (bad) jno mov adc jl mov cld in inc sahf cmpsb push mov popa xor add das (bad) jle ret aam jg cmp inc add arpl mov mov push pushf repz inc fwait mov inc jbe sub xchg or mov sub pop inc ss cmp mov inc test cmp movsl mov aad and fsubrs jno pop imul adc inc mov push sbb sbb into inc jmp mov and jge mov push mov mov push inc push jge and js inc xor in testb xor rorb or mov scas or aaa movsb inc (bad) in xor xchg cmp mov test and pop imul insl sub pop jge push scas jbe incb jo cli push inc xchg jae jmp inc aam es xor xor mov mov daa jno mov inc movsb aas lds mov jecxz pop scas mov test pop outsl xchg lcall cmc adc xchg mov icebp int3 shr push cwtl and dec sub inc rcrl cmp sbb jne lods inc pop jns xor insl repnz cs nop shll pop sub jo inc cmp cli test pop inc lods sub push dec add lea ja mov or aaa pop and xchg repz push dec aad add scas cmpsl mov std hlt dec insb jns idivb (bad) dec dec add inc mov rcr sti mov push aad std mov jg flds jae into stc lahf ss push test pop ret sub in outsb xlat dec ficoml icebp adc insl add nop roll (bad) dec mov lea sub cs imul fmuls (bad) sbb xchg cmp cmpsl pop jno jp mov inc xchg xchg mul ret iret pop or and mov jmp hlt push jecxz stos mov aas clc rcrb jae mov divl popa ret jne dec mov inc or mov and cli outsl emms push jb in dec adc dec call stos mov cmp jle jb rcll sub add (bad) fnop inc or adc lahf add (bad) rcl incb xbegin cmp cmp push and adc mov xor sub mov inc hlt mov cli fildl fdivs adc movsl rclb push mov lcall add mov jns loopne leave jge pop sbb (bad) pushl cltd or adc mov cmp jnp cmp test pop inc or xchg fs mov mov lock sub mov xor setne jmp xor fmuls push or jecxz mov cs mov lods push push mov mov adc mov jl aam ret jb (bad) stc insb cwtl in mov mov insl jecxz int3 cmp stos enter push pop xchg sti leave or jecxz repz or flds inc jmp xchg inc xchg pop cld cmp (bad) add adc inc (bad) xlat inc sbb in push inc jmp in jle data16 loopne pop test pop fdivl pop mov xchg push sahf repnz add and mov pop push das adc push xchg cmp push data16 lods jb addr16 rcrl push daa push decb or fdivrl (bad) jo sti jb inc pop test mov pop xchg pop movsb std popa xor dec sbb ret mov jecxz and and dec (bad) jne adcl fcomps xor inc in cmpsb fmuls dec pop and andb lret xchg in arpl push inc ss sbb jno mov or sbb cmp fisttpll cltd dec pushl or imulb push scas aaa int mov inc sbb pop sub addr16 imul sbb pop push out xchg nop mov xchg out std popa movsb inc stc pop mov mov dec inc mov cmpsl rol push add shrl stc jp,pt dec fsub and adc cmpsl outsl adc inc pandn das jecxz mov shlb cmp mov mov pop inc xor rclb inc adc in lahf mov loopne ret add pushf or lret pop inc inc and cld repnz out jp mov fldcw scas add sbb cmp push les dec push bound pop jecxz sub jne xchg mov mov ret dec dec mov inc fsubs out popa sarl cmpsb xchg lods dec dec sahf sub outsl jl pop cmp add pop push cli xlat push into aad pop pop mov sti inc fisubr (bad) sub cmp inc mov shll xchg lcall nop cmp in aam inc sub dec daa leave mov push jecxz or push inc mov into aas int3 jecxz push ss icebp mov aaa loopne divl mov add push mov mov (bad) lahf push xchg or pop mov lods int scas mov mov and sub mov call fisttpl jb stc add imul mov in test sub xchg mov xlat jbe cmpsb dec enter sub mov ret push roll adc fcomps stos sbbl in mov addl sub repnz adc xor jns pusha or cwtl arpl dec sub roll mov or ljmp sub (bad) aas (bad) loope mov push inc push cmpsl fiadd inc push xor (bad) bswap sti shll inc aas or cmp fldl xor xor jl arpl dec and ret jns add out aad cs sahf jb aam rol mov inc negb jp scas jnp sub es push mov mov lcall adc inc xchg inc mov dec incl push ja test cmovae loope lea pop dec popf (bad) mov add inc es or sbb lcall mov xchg clc imul jae push inc arpl sub lcall in push ds int3 push rol inc push mov addr16 pop fistp mov inc sub xor shll or or mov add inc or lods mov int3 dec cli add add aad jae sbb daa cmpsb fcmovnb rorl push shrl shrb sarl inc push aas add sub loopne dec and push sub cmp outsl add dec arpl shll (bad) je push sub xchg insb repnz (bad) jo cmp and (bad) dec pop push jo jae jae (bad) jp xchg mov shl xor dec into ficomp dec ds ja inc add mov jp xchg mov jae dec inc sbb cs addl pop mov rcr and fildl cmp fwait lcall inc mov add insl dec (bad) jae and cmp sti ss fildl int cmc test movsb int xchg bnd arpl lcall sub cmp enter (bad) or out popf test fs hlt inc je scas iret lahf adcl clc cmp sub push sarl fmulp popa fadd lret iret je lret scas rcl mov mov inc mov mov pushf jl popf ss inc std pop sub jae sbb lea xlat add pop std (bad) cmpsl aaa orl repz arpl fidiv lcall mov pop push jbe cmp sbb iret and test pop popf dec inc (bad) lods loope pop cli movsb xchg sti sbb or push dec push sub xchg xchg dec mov pop mov mov sub stos orl cmp stos inc sub xor cwtl cltd mov sub inc xchg jecxz sub and fwait or test (bad) fiadd js dec scas and sbb dec jecxz stos dec jae out add jbe mov mov stos fsts test xlat inc push inc mov jne andl xor inc repz mov lret xchg (bad) xor push adc sbb aad fistpl iret dec cmp call sbb inc daa fisttpl xchg sub jecxz decb and insb aam and inc je push jp sbb mov inc pushf mov insl mov je push in mov xor inc repnz ljmp fidivl xchg inc push pop push pop xor xor clc jle pushf ffree gs into jae dec pop inc mov in and inc lods aas adcl rcrb aaa jg stos test cmpsb add insb in pop sub adc sub cmpsl push outsb arpl jbe push les out jno aad js pop mov inc inc jp sbb add (bad) mul push test cmp pop cmpsb ljmp mov dec fsubr popf daa pop test aam in aaa lret jb lods push xor mov sbb mov mov jne mov decb sbb inc ret jecxz sarl inc push cwtl iret inc xlat (bad) out mov ss jno xor jns js lea xchg mov add pusha loope mov and push (bad) xor outsl pop fucomp inc popf icebp repz mov cmp pop scas (bad) jecxz mulb mov cmovae outsl aad inc push mov (bad) aas call jecxz lods stc inc jg xchg test jae inc jp stos push or loope inc mov push xor cmpsb jle inc adc jnp push add scas pop cld ss outsl ja add loopne mov pushf movsl pop mov femms fwait push sub andl js test sub movsb sub jl push jge lds pop sbb decb inc add xchg mov fdivl in dec xchg pop hlt xor popf cmp insb pop mov push out dec lcall pop leave push cmpsb mov add cmovle adc ja (bad) mov pop inc pop inc lods scas aad inc ja dec (bad) ss sub inc pop mov mov in lods lret fcomip lahf sub into jo dec std mov or addl (bad) xor (bad) push aam dec sub xchg mov outsb hlt inc jno aad std cmpsl fsts inc gs enter jae dec lret xchg pop sub mov fnstsw out mov mov add dec xlat add cmp test xor mov movsl (bad) xchg and pop xchg push dec aad fist xadd dec adc dec dec data16 mov pop jns push dec add jb inc jae int3 xchg mov test sar mov sbb pop pop cmp dec cmpsl in gs cmp (bad) sub rol xor rcrb add mov push jae or shll inc ficoml repz mov xor ja dec pushf loopne pusha dec sub lods or das mov sbb mov add jge inc stos inc outsb into ret mov dec mov pop inc fwait inc and mov mov jg outsl xchg sub push sub orb sub pop popf mov aad lahf jb jb or sub (bad) fcoml dec pop (bad) mov inc aam stos sti sbb jmp out pop jmp xchg shr fidivrl inc in sahf xchg push jne inc loope and ficom cmp jno inc sbb mov add or decb jb inc rcpps and inc sub pop stos (bad) data16 mov orl inc mov lret outsb push push push xor inc cmc sub sub pop bound dec xor (bad) cmp stc ret ficompl jmp xchg add sahf es xor aaa dec add xchg int mov inc shlb cmc dec jbe push and lods pop adc pop lods cltd pop mov rcrl dec dec roll mov imul fs adc or jle cld cmc (bad) push pop sti pushf mov lahf jmp (bad) aad pop inc mov add jbe dec inc sarb cwtl in mov inc std adc inc sahf xchg test and pop mov push mov inc add leave fcmovb cwtl addl mov xchg sub sahf and and insl mov nop inc and cmc mov das and jo std pop mov inc into dec xor sbb lock adc push ret inc sub cmpsb lock out and dec (bad) mov inc push sbb jbe pop icebp rorb and mov push or outsb inc mov push sti dec lcall in mov ret jb mov inc dec and inc mov cmp pop fwait leave jl (bad) rorb test mov inc repz xor roll pop xor pop into pop shlb outsl fidivl lahf dec inc stc lret jge les inc cmp sbb inc inc mov gs inc jmp push push lcall arpl stos jecxz add jp sub es push rcrl cmpsb out call sbb jge mov mov inc and movb xchg loop mov (bad) in pop andb into inc push or (bad) loopne adc popa aad mov in xchg inc cmp ret cmp sbb daa inc test inc jbe push mov loopne xor push xor fisubrl fistpl loop inc jno imul mov insb inc push cmp fisubl and dec sbb mov mov test movsl mov dec xor dec push bound inc imul inc push out mov pusha xchg ja pop mov cmp jo dec je adc ljmp lock test aas xor sub cmp sti int3 inc test sahf add outsl xor arpl or fbld sbb jmp xor jmp xchg dec lods add sbbl push xor nop out push inc ja sbb push roll js and sbb loop adc jg push jl pop pop add inc dec leave cltd inc decl dec jns mov and cmp pop comiss dec stos dec pop aad pop movsb ljmp es cmp add lea add lret inc add sbb insl xor aam scas sub adc (bad) jb stos sar jge or std movsb in pop cltd ljmp sbb adc arpl adc bound into mov ret ss sub lods or dec insl inc lahf pop aad mov push adc dec ret stc in fs lcall push outsb or fsubs push movsb sub push mov loopne mov inc pusha ret add add lcall es or out dec loope sub fdiv xor cwtl outsl adc (bad) inc cwtl clc pop dec add pushl adc pop adc xor adc mov daa out dec stos roll xchg pop mov xchg push nop xchg mov cmpsb ljmp cmp stos inc and push push aas mov insl iret jle jnp enter nop mov ljmp das (bad) mov aas inc (bad) repnz daa mov jle data16 pop out (bad) mov xchg jb pop inc cs (bad) outsl xor inc cmc or mov pop (bad) out cli mov inc arpl popf pop push je inc xor cwtl xchg sbb fdivl mov loope hlt adc mov cmp mov pop add xor aaa fisttpl loopne es das mov add inc adc pop loopne xor enter and mov sub inc cwtl adc or add add add ljmp dec mov gs (bad) hlt cltd jae cltd dec push (bad) fisttpll sbb ret aaa pop dec cmp ret dec and pop push cmp mov adc inc cli fdivs and sub push outsb pop mov add sub shll lcall fnstenv jae fucomip lock push mov stos pop jb clc mov xchg xchg jg or xchg mov and xchg dec push les adc jno lods pop sbb pop push rol xchg push int3 arpl into mov add adcl mov mov add xchg repz out sahf sti (bad) loope adc pop or xchg adc fsubs and and into sub mov fistpll ret rclb adc or cmp add aaa incb fwait je rorl sub jnp push push mov loop notl fs aad cmp mov xchg pop ret jno icebp or xor aas dec inc sub cmp icebp or mov scas sub add sub test ja popf dec repz into cmp ret inc cmp push inc mov out pop inc jbe push ds cmp int inc xchg inc insl sub (bad) mov dec jnp addr16 int3 inc add ss xor into cltd mov inc loop ret sbb les fiadd ret inc movsl and rorb and in adc jg jp xor and inc lods fadds mov leave sbb (bad) pop addl xchg les or or pop sub push subl mov (bad) pop cwtl int (bad) (bad) fcmovbe lret fs inc stos test loope inc in adc ljmp dec (bad) mov and sub mov add add mov add or mov aaa pop push stc xchg xchg cmp cmpsl push daa add sub inc dec (bad) or dec dec (bad) lahf and dec sarb add (bad) (bad) aas or xor mov std add cmpsl (bad) mov xchg push cltd add xor inc enter mov sbb inc inc cmc les mov jecxz inc shrb cmp jne mov jns pop (bad) andl in dec xor repnz pop stos xor push mov push inc ds in hlt lock push roll or rorb push adc mov mov push inc inc fwait pop in add in jl xchg xor dec mov lret neg lea testl hlt dec stos add or and ret pop inc imul push pop mov ljmp adc setg or iret pop add rcll and (bad) xlat aad movsl mov insl push jecxz,pn or pop call das mov dec inc lahf loopne inc sub es inc aas add (bad) jg out loopne cmpsb pop int inc in dec ds pop fisubrl stc mov xor ret jl jnp loopne (bad) stc and dec mov sub (bad) cmp rclb cmp inc shll hlt (bad) mov pop push movsl lahf inc std inc sbb sub ret inc mov jbe inc push xchg out ljmp jl push (bad) xlat or pushf and jo in test push roll fs leave fisubl aas std inc enter rorl xor loope pop xor aaa jle inc and ret in jns dec pusha cmp and rolb mov inc repnz sarl pop mov aaa lcall cmpsl inc stc lret fsubr mov cmp sahf (bad) ret dec and (bad) out notb pop cmp push inc test pop dec aas mov jno xchg xor cmpl dec jp lock dec push and popf cmpsl js push scas mov imul fucomi cmp leave addr16 dec call arpl push iret (bad) stc cmp cmpsb lahf inc inc movsb clc and mov bound push dec mov shrb push icebp add mov cli rcrl jge (bad) mov jle pop cmp or mov movsb mov push jae ja insl dec mov jp add pusha xlat cmp add mov sub aad hlt jp ret aam inc mov xchg push repnz xchg and shl pop orl ret inc lea andl bsr push pop loopne pop mov dec (bad) dec leave pop popf ret ljmp fildll sub and test test push addr16 mov push dec sub adc flds mov ja movsl dec pop xchg loope ss sbb mov jmp bound (bad) je jmp (bad) jge and pop cmc lret inc push sub in lock lret dec je pop xchg jge pop (bad) repz loope cli or lods sbb stc adc dec jmp sbb pop or push inc stos frstor add dec add jmp ret adc or sub jns (bad) push mov enter or adc dec jmp out mov pop sub cmp sbb dec sti enter mov mov hlt push sbb mov pop adc imul aad mov jnp imul sti loope pop pop xchg (bad) sbb jae clc cld add push aas or adc pop inc add or jecxz jno inc cmpl mov lods jbe jo push lds mov push or iret cli pop push ja inc in or and fistp cmp adc ror cmp fildll pop ret xchg stos aaa popf jp fcomps add dec add and mov dec inc adc xchg jp out mov stc xor mov add dec push sub loopne jns cmc pop sahf sti pop jecxz outsb cwtl popf inc lock ret mov mov loope clc (bad) addr16 out sub xchg mov and imul insl ror inc and mov faddl sub (bad) sub cmpl add push jmp jnp dec add push mov xchg sub add in cwtl ret xchg sub xchg add jge pop dec cmp mov cmp inc stos mov pop sbb mov adc rclb std pop or ljmp addr16 xorl add (bad) imul repnz je jg dec inc mov inc push roll (bad) pop sub into dec xlat xor push push les das push dec fmull cmpsb mov ficompl rcr inc sti xchg push jae,pt inc cmc int3 jo adcl sub dec lcall pop sarl addr16 or inc cmp push or cmp cmp jg cmp (bad) lcall mov add inc popa jne add (bad) xor enter (bad) xor dec jg sub je enter loopne dec jbe xchg jb lahf pop xchg (bad) sub movsl ret jle shlb mov sub repnz repnz pop sub loop jmp fcoml add lret mov inc ljmp or test popf (bad) and xor dec stos leave lds dec mov pop aad cmpsb mov dec mov mov add xchg lods xor jo,pt mov repnz pop lds jg in movsl dec xchg cmpsl xor fstpt xor pop inc jge sbb pop sub inc clc pop test cmp sti sub push stc clc mov add add push mov xor rcl in or sbb loop les lods push push and pushf shll hlt cmp push mov cmc inc rclb dec mov fs roll inc xorl gs push dec pop adc xor mov mov inc ror pop jo sti push mov inc and mov aas lods pop push sbb sbb inc cmp inc or inc test aaa in ds add mov mov cmp test push imul inc (bad) mov icebp inc lea xlat dec mov inc push fldcw insl ja (bad) (bad) jae xchg mov test add addr16 xor xor clc int3 outsb xor mov lds jmp push insl add pop push loop inc popa fimull adc adc mov (bad) nop push daa pop xor fistpl mov test dec ljmp adc adcl mov inc test cltd repnz in inc js mov inc cmp jle xor sbb sbb xor in addl dec mov mov popf repnz incb sbb mov sahf cld inc rcl aas xor sbb stos fucomi inc pop addr16 fwait lods and inc call bound push mov mov jle mov inc or jo add push lcall lds cmc iret jns and jnp cmpb add in and jb jp aas adc inc ret in (bad) loop cmp movsb inc or gs or and xor inc loopne jns sub jl inc rclb sub jg xchg out cwtl inc aas push xor fiadd inc dec insl pop addl dec push cmc ss addr16 ja cmpsl outsb hlt popf sbb cmp test arpl add cltd xor adc mov pop movsb addl ljmp cltd xor movsl mov sbb outsl and xor mov movsl dec jb imul scas (bad) inc dec int3 pop andl mov data16 adc orl mov mov inc stos cmp push aas sub pop inc add xchg mov icebp inc pop or pop inc mov rclb inc inc mov arpl cmpsw clc insl push and imul pop push inc outsb xor dec sub push xor mov inc pop into shlb cmp inc lahf mov and imul (bad) jg daa ret and xor push and in mov cs and inc add mov xor xchg movsl dec lcall sbb xor dec int3 cwtl pop lods js repnz push mov addr16 pusha inc xchg xchg imull push pop outsl pop inc std or jbe and movsl fild sbb pop enter inc int shld fbstp in hlt push nop adc mov mov jecxz cmp jge rclb adc push test jo cwtl sub jge imul outsl adc outsl push jae jo xchg sti jmp out nop and and arpl push jmp mov mov and adc sbb xor add aaa ds inc iret loopne rolb cmp gs jg jne nop mov jmp xchg cmpsb and cli inc add mov or push lahf dec (bad) bound or ret outsl xchg lods ret std cs mov cmp je push test sarl sbb inc movl faddl mov push mov loopne divl pusha mov icebp sbb sub test lahf or sbb ror (bad) arpl loope ret push adc dec dec and and rolb and sbb xor ficompl add fwait ret xor fcmovnu popa loopne pop (bad) dec popf fbld loopne mov dec fadds fimul roll insl adc ja jl add push jge xchg addl jp dec sub jge push and push push into pop (bad) leave js cmp fbstp and cmp arpl (bad) mov divb xor xor mov jp cltd (bad) dec sub dec aad push faddl in lock sub jae cmpl sahf xchg inc out sub mov jns adc psllq shll pop stos pop jb xor gs adc jns addr16 pop xlat mov xchg std xchg cltd dec xchg and loope js sub (bad) out and dec pop and into stc paddusw xor pop outsl lea push out add dec (bad) (bad) pop inc (bad) ret movsl dec stos mov pop aaa cld inc (bad) not inc sub jp xor push jo std pushf insb or cltd push inc add and daa outsb xchg sub sub adc mov xchg mov mov inc clc inc xchg xor outsb fistp jg mov lcall or pop xchg std sub into aad sbb imul cs ds add fbstp cwtl ret cmp test das mov repz insb addr16 in xchg inc push mov lock sarb cmp dec cwtl dec out imul or cmp rolb inc jle dec push mov jl repz dec ret pushf (bad) stos repz dec mov leave inc pop cmpsl adc ret lret push imul mov ljmp pop mov scas cld movsl orb jns inc inc xor pop fisttpl dec mov fistp push stos aas jo loop pop dec stc insb inc dec ret je push jne dec loopne dec dec fdivr add aas orb cwtl sbb cmp inc repz add icebp je inc mov in fstps jle addl fiaddl (bad) dec mov bound push clc fwait and ds add gs inc lahf movsb pop pop or inc inc cmp inc dec push sbb test jle adcl inc lret lods push scas inc daa jge push mov jle ds inc or imul sbb sbb fiadd lret stc jle outsl mov inc sahf (bad) fdivrs xlat inc pop jg and pop fistpl inc (bad) push bound (bad) pop mov add in xchg sub addr16 arpl (bad) or jo loop mov inc sub mov xchg inc outsl adc movsb or and das sbb ret fwait mov inc jecxz (bad) dec dec movsb adcl imul xor ret mov je ret aaa pop mov push gs or mov movsl add dec xor dec inc dec xchg push push inc cld rclb inc jecxz fwait sub (bad) dec dec sbb mov mov out cmpsb fisttpl std repz and push push (bad) jecxz and into xchg (bad) imul and loope and push test out fisub xor test mov mov aad shlb outsb jo xlat dec mov orl sub inc xor mov fldl xchg mov ret cwtl sbb jno rorl push jecxz or mov mov mov inc loop aas repnz jle lcall mov xor ds inc push cmp jnp sub xor aas add inc adc test xchg push mov pop fisubl add addr16 andl adc test popa xchg inc lret inc stc mov repnz pop lds out sahf fsubr ds sbb icebp xchg adc add jmp inc mov test jae ds cmpsb aam dec sbb mov ljmp call jno sub dec push inc loope add test jmp cli inc dec pop push aaa or call stos scas fsubs fldenv pop leave or dec inc test das pusha stos mov xlat bound adc lahf push push rcr in xor arpl rol mov mov mov xchg jl mov andl outsl fwait xchg push sti push and lret push cmp inc mov xchg (bad) jne cld lcall adc jmp inc jecxz sub pop push mov arpl into int3 dec call fwait push shrl or mov leave add cwtl stos sbb xchg fdivp movsb jo mov es stos adc xchg add adc xor mov insl dec imul pop jae dec fild loopne push lret mov in pop pop sahf inc or mul cmp jno mov dec xor inc inc mov je push fdivrp xor push xor sub jb push xor cmp (bad) lods fmuls insb lea mov fdivrl ss mov xor imul inc fildll (bad) xchg pop std xchg pop fdivs pop pop add aad lret pop sub sbb jmp cmp div dec sub roll and jecxz leave out scas add (bad) ljmp into ret out dec mov loopne aam adc push or dec sub mov cmc xor aad sub int sub stc aas jb sub cmp inc pop sahf push mov enter fnsave pop sbb mov sub xchg dec xchg inc push cltd mov lret sub cli int3 push iret mov jns imul ret jbe jno push sti out push pop push xchg mov pushf adc xlat imul mov inc insl cmc iret pusha fstl mov lock repz dec pop push fs sub lods js jle clc repnz add sub fs jbe jae and and mov imul xchg popa dec (bad) add mov sub push inc fldl mov xchg inc inc push insb cltd inc and inc sbb or aas aaa inc jno arpl sbb rcll fstcw inc push pop jae gs dec ror pop lret inc je add sbb add mov scas add int mov push or xchg cmpsl sbb push xchg xchg inc xchg xchg aad jbe inc adc fwait int3 inc sub mov mov xor or sahf int das xlat fadds aam push pop mov stc inc xchg into (bad) xor add mov je cli fnsave push adc test inc mov inc movsl jbe scas lock sub inc inc cmp adc aam mov mull push iret inc push out ss imul add shrl fcmovne inc xor sub jae outsb xor jg push cld sbb in jbe (bad) iret andl movsb xchg pop ret sti sub bound sbb call ret and sarb inc push lret pop inc mov out lods aaa das mov add pop in bound push push sub rol cmp pop outsl sub fsubrl cmp inc xor xchg push mov dec add cmp pusha push lret cmp or fwait leave fidivl imul mov xchg jns and rolb out fbld mov movsb arpl lcall std push mov or and outsl into add lahf mov dec call ss into jg out dec outsl js and ret push push jp outsb je movb sbb adc inc (bad) test mov inc push cmc packsswb or cmp add dec inc inc sub test or inc adc xchg test (bad) lret loop inc mov sti or inc jne fmuls (bad) xchg scas mov inc sbb enter (bad) repz dec xor sub jnp push sbb jo test fbstp insb xor pusha shll ret fsubrs xchg in test jbe scas push (bad) xor xor sub pop mov jl pop mov and jns mov sti dec cld push scas dec add mov pop mov inc dec pop xchg fisubl sti inc repnz xchg pushf dec rorl push add xchg pusha repz sub addr16 insb in in pop addl inc mov mov mov orb testb inc ret cmp dec dec jnp pushf in stc or adc adc lret xchg enter (bad) jne xor inc rclb lods pop test lds xchg or lcall addr16 cmp inc inc push das push iret inc sbb fmull inc push and or add jg mov inc dec dec cmp sahf push add jno adc lret in pushf add out cmp adc movsl xorb fidivl inc adc in or cld dec sub (bad) lea dec mov mov mov inc sub mov cmpsl cmp test inc stos mov jg sbb adc lahf pop add jb jmp gs push repnz dec dec arpl mov les dec sub mov xor lcall ja push mov push push adcl push inc ret sti adc out pop lret sub add bound push mov cmp scas clc dec and repnz inc popf xor xor xlat sbb inc xchg scas xchg dec loopne add mov push mov inc cmpsl push mov inc cs pop sub mov or dec addb stos cltd stos sbb cmpl and dec xor dec cli or cld inc je mov imul add xor sub popf mov adc (bad) and ljmp mov mov outsl fcoms (bad) loopne inc mov add stos jle mov lods ret sbb roll scas and aad cmp pop test mov jb sub popf push push (bad) push add in jp insl dec int mov adc sub sub in (bad) xor aas jle notb cmp add clc or xlat push dec push xor (bad) in mov cmp adc pushf nop jl and stc cmp and iret fisttpl inc rcll aaa or mov jecxz push scas jnp inc fdivl mov shlb ljmp movsb popa je lock enter cs lahf daa loope mov or fildll push mov fwait lods orl inc sarl lock mov pop inc xchg xchg mov (bad) popa sub add xchg mov lahf pushf addb not fstpt pop jns imul es (bad) mov sarl bound or dec jo inc xchg iret jbe mov in sbb mov push jb repnz fildl (bad) into ffreep movsl dec and cmp add inc or and xor (bad) dec inc push lods mov push cmpsl push les dec xor (bad) cmp add mov test xlat sub cmovl popa push icebp inc orl xchg sub jne dec ss lret fsubrl pusha hlt dec je fwait cmp jo shll push inc daa sbb push nop pop mov mov sbb mov and jb inc arpl popf lret sti fs rcrb sub add (bad) push inc test xchg test mov fidiv inc fldcw fcmove sbb pusha inc and xor inc and sub sbb jl jg xchg fiaddl xchg into add mov sarl push or mov (bad) gs (bad) stos or jmp fiadd pop fildll cmc mov xlat inc addr16 push fscale negl clc and les sub lcall jae cli mov sarl sahf inc out inc ret push getsec cmp inc pop fdivs iret frstor jecxz sarb adc mov inc push mov push push mull pop pop inc fimull and movaps or sbb and enter cmc inc xor mov mov pop xchg cltd cmc clc inc or push xchg jmp cs js jae (bad) outsl inc ja inc jns lds xchg inc scas pop jmp enter push (bad) xor pushf inc mov jo out mov push push movl lock ja test jno pop cs es stos mov aaa jl xor (bad) repnz mov cmc pop inc sbb inc std push (bad) jmp mov sub mov loopne mov pop or add mov and or dec pop xor add mov pop popf lcall dec and pop xor dec iret pop pop push and xchg std pop xor inc xor sub (bad) fidivl mov ret sysexit movsb out aas dec dec orl pop out in or sub and flds add insb daa dec add cltd shl jns and lds inc xchg es sub (bad) loopne arpl imul jl adc cmp sbb mov ja or jecxz xchg add adc nop jle mov in mov jge shlb xor inc or ljmp test call insb jge lret cltd repnz jp call loopne cwtl pop (bad) ljmp and pop aas inc (bad) (bad) adc push cwtl jne test pop scas dec stc cmp jle mov repnz add iret movsb add mov mov pushf xchg push cmc xor popa cli cmp dec dec jmp adc (bad) je roll mov mov xchg jg,pn xchg les outsb xor lods daa mov out inc mov lods out cld and mov xchg sti xorb call cwtl or outsl stos inc jnp aas xchg test cmp dec jl push inc cmp jecxz hlt inc dec sub fxch or cmp sub (bad) xchg ljmp out movsb mov sbb mov add push ds push xchg mulb adc xlat xchg imul push inc add lahf or ret mov leave cld das xchg dec inc scas xchg (bad) push daa inc ljmpw clc in cmp popa mov push adc pop mov pop jb mov cmp sbb inc xor push enter add dec icebp mov insb fwait test in dec jecxz test inc add test push push rorl mov xchg pop sbb xchg stc cli stos fwait xchg stc inc mov fs jle imul cltd ficoml je mov insl repz shll push adc and popf outsb aad daa jecxz inc jp sbb add fiadd inc fcompl or inc xor je insb js mov (bad) das add addr16 (bad) sbb popf push ds fisubl jb aaa push cli gs jb sub push and jg inc lods cmp inc inc call loope inc mov imul pop jmp mov data16 repnz cmp call das mov lret int3 sbb xor inc xchg xor inc jb pop mov inc mov shl lock pop adc push andl xlat cs jb dec and dec sbb imull sbb das inc jmp jne insb inc lds mov fwait pop js inc aam arpl mov push xor xlat das roll sub bound fidiv pop ljmp inc hlt mov subl or sti mov pusha inc xchg fnstenv lods pop pusha loopne (bad) adc dec popf mov movb inc xchg jo ds fiadd inc pop cmp sub nop add jp out testb jno pop cmpsl std roll in loope rorl add jp sbb inc push push push data16 dec cmp pop inc inc jp sub bound fmulp mov fs jns inc pushf out or mov mov lahf loopne push add pop dec stos push ret dec adc movsb dec jmp arpl clc or fisttpl nop xchg mov xor pop aaa rolb pop push cwtl insb push lahf loop adc (bad) nop loope les jp sbb (bad) xor inc andl pop add ret dec mov push fcmovne imul aas inc insl pop xchg push push iret push cmc push fstl inc and and in xchg mov fistpl rorl out ss unpckhps lret stc jbe pop out and inc or (bad) xchg out (bad) mov push jbe xor cltd dec cmp mov jno jg lock push xchg (bad) out test (bad) outsl inc rol push sub lods lcall repz repz add loope jns jmp jb ret (bad) push inc xchg (bad) rcrl add sub fisub out repnz mov xchg (bad) ror test ds dec xchg lret rol cmc add (bad) std mov stc or arpl inc lods (bad) push mov les jo lds mov push add jno add xchg sahf jmp lcall arpl popf mov (bad) ds push (bad) loopne xlat dec push mov add dec inc dec stos mov (bad) (bad) xchg dec cmpsb dec sub ret dec and inc mov mov push jnp pusha enter icebp add (bad) daa jno sbb pop imul adc clc dec mov add cmp and enter ret incb test or mov push add rclb imul fldl2e push dec loopne or lcall cmp testb and push inc add sub xchg movsl inc repnz jbe mov inc out dec stos push test outsb sbb mov cmp sub push mov mov fldl scas cmp mov add sbb sahf (bad) xlat push lods add les mov mov push mov stc or lret mov inc pop push clc mov jne dec mov mov sti sub mov cmpsb xchg jno insl mov add mov out inc cld subb push xor in add xchg sti dec inc sbb cmp cmpsl les mov sbb or cmp aas in les (bad) cmc lds daa inc cmp testb or add loopne pusha ret sbb jecxz inc mov mov rolb scas adc jecxz hlt mov jecxz lods push inc sub pop fwait cmp mov lcall and pop jge pop jp push ljmp inc xchg frstor xor inc cmp inc (bad) out aad jae cld inc cmp (bad) mov push inc in in (bad) push outsl push lret cli aam cmp push cmpsb inc pop jo scas cs out push cmp fucomi dec inc jp or push cmp or es xor fsts xor sahf je xor inc jecxz (bad) mov fildl lcall pop sub clc inc jg mov xor sbb mov inc jge jno xor xor cli mov push pusha and (bad) mov pop inc movsb add ss xor pop adc inc mov mov cli xor push cmp jecxz mov inc push inc push rcrb mov inc fimull sbb sub mov jg cmpsb jmp dec rcrb repnz inc movsb cmp pop cmpsb mov adc dec mov xchg xchg rcll mov fwait pop sarl or ljmp outsl nop dec xlat inc sar and jge add mov push push inc aaa or ret lock xor add clc inc test mov out sub mov fist cmpsl add fldcw daa rolb aad mov das xchg add loopne and insb rclb addl lret add cmp mov adc adc xor inc push push dec add jo inc fisubrl out push pop rcll es xor mov sahf and pop inc insl inc repz push fldl jno daa movsb jo xchg jo shrl pushf push push jno push sub pop and loope imul push (bad) jb mov rcrl daa sahf scas int3 dec mov dec mov push push push dec repnz and ds push lea lahf rcr xor stos mov into jo gs mov add test and inc cld pop xor adc pop inc cld in sbbb jecxz xor inc ret ds and mov clc outsl xor pop add and lods jecxz push mov out sub and cmc imul pop xchg stc mov shl mov cmpsl jg,pt inc inc xchg aam orl xlat rorb dec pop dec xlat fdiv ret adc sbb sahf lret mov sub mov ljmp lds pop mov cmp mov xor setbe das inc fs mov inc repz scas sbb mov sbb push push fbstp mov adc jo inc icebp xchg repnz jmp xchg fisubrl sbb adc inc jae aam and mov inc out jge sbb inc (bad) dec sbb mov jecxz lcall mov cmpl inc in cwtl aaa dec inc and and aad mov jmp ds and mov fisttpl cmp loop lods loopne sbb inc enter insb jge dec ret loop scas inc gs (bad) jmp jae popf jo or pop push push inc pop cwtl popf mov testl fs inc fistp xchg fsubs dec push aas push aam jle mov in mov fcoms jbe inc jl call dec inc mov jmp mov inc lcall mov roll jbe out add sti jno adc out addr16 clc inc push (bad) pop cmp mov cwtl pusha fild xchg out ja mov sub add pop or sahf aam test test cmp xor pusha out mov subl inc stos mov add pop cs dec xor adc adc and (bad) into sub out fidiv cwtl decb (bad) int and xor bound add xor push pop jmp jbe adc jl pusha sub inc clc sub or insb orb jne je cmc inc dec (bad) pop scas shlb inc cli and in icebp sub jecxz loop sti dec pusha test add cmp loopne ror pop pop mov pop mov jnp gs dec cmp and inc jecxz repnz inc scas aad (bad) cmp mul inc cmp sub shl jbe addr16 (bad) in dec out pushf rolb icebp add add stos inc and mov adc rcl sub jno add repnz and pop out pop mov mov inc lods xchg testb jb movsl inc xchg lcall or and push jne fsubr push inc cmovnp daa bound xchg shrl mov mov fisubl mov push roll mov arpl insl inc push rorb pop icebp jns pusha iret les cs sti mov call mov pusha push pop xor iret mov jecxz in (bad) call dec (bad) lret inc mov lret in inc jno xchg clc (bad) inc dec repnz jb outsb push pop dec inc dec aaa push ret ljmp mov xor jne jle insl pop inc dec pop xor jge jmp mov xor add mov add das stc pop pop sub inc fdivrs decb cltd aaa cmp xor push adcl pop (bad) lock fistpl jne or aas in orl jno popf fcomip xor (bad) repnz push int3 dec sub mov jge inc or inc sub push mov inc insb add hlt les les xorl cmpsl xlat xchg mov sbb mov pop (bad) (bad) dec cmp dec push out sti sub jp sub jne dec pop xlat inc and test andl aam push cmp shl inc jns sub mov mov or scas mov enter dec arpl stos add jnp inc ficoml pop test arpl dec mov loop push movl pop xor xor mov lds cmp sub mov iret adc ljmp out les jle mov or pop lret rcl test (bad) aas jge pop adc ret inc jmp xchg adc (bad) xchg push jae pop dec push pop in sarl inc lds pop stos mov inc adcb add xchg sbb ret into aaa cmpsb mov ds sarb or (bad) std jg lods ret das cmc ljmp addr16 inc imul in imul ds inc cli (bad) cmp outsl (bad) dec dec (bad) daa mov and ret loope popf inc sar outsl jge jp dec push gs push dec test push nop stc inc adc pop adc dec mov xor cmp jne (bad) mov arpl xchg and push rorb outsl pop (bad) out pusha daa add test sbb and fdivl xchg gs mov xchg in inc fnstenv (bad) fiadd fisttpl cwtl (bad) fisub and lahf sbb stos cld sub jl xchg dec adc sub mov rcr jmp sub xchg in sbb pop jo imul xchg sbb cmp add fistpll push sbb mov mov sub outsb xor lret lret lcall jb cmp out jae mov inc into inc mov pop inc cltd lret add stos cmp jae stos dec out ret out into clc and repnz inc pop adcb (bad) pop cmp sub sar ret dec mov adc clc sub bound xor mov std inc jg jae cmp (bad) call sti (bad) fcoml mov int mov xor outsb out mov add sbb xchg sub popl imul (bad) xor and imul loop jp add sub push inc jmp inc inc add loop sub sahf insl test cmp cmp shll xor push lds push pop mov cs (bad) arpl loop insb dec inc outsb icebp in inc mov jg dec pop dec mov push jmp outsl inc (bad) jb xchg mov add lds or stos mov repz sub out add ja mov xchg insb out cmp mov rolb cmc inc lret pop pop sub push inc insb sbb push xor rcll (bad) lock ja test ja cmp dec xchg mulb dec jae icebp daa cmp jno into mov adcl push mov loope fiadd push idivl push ret push add pushf loopne mov shlb sarl popf xorl lods add icebp fiaddl movb push jl xor or lahf sbb mov jnp jne je push bound inc or jg inc jmp aaa adc or mov mov loop sahf inc stc int3 sub jmp out testb pop mov jae cmp dec out add inc addl (bad) int push andl and mov ret push lcall jle adc lret in out lock add sub push aam arpl push push je insl addr16 add pop xor sahf dec daa mov cld sub jge leave xchg or stos js and mov cmc subl nop mov push pop jno jae,pt xchg arpl jmp test cmc push call les jno (bad) xor subl out data16 js aad add mov imulb sarb and sub ret das sbb jae sub into lods add add scas cmp aaa adc mov cmp add stos mov push push mov sub jmp pop into stc ljmp jge rdpmc xor inc bound lret sbb pushf test fcoms add sub in push pop std or lea push inc xchg cmp cwtl popf ret pushf outsl mov fs xchg (bad) xchg cmp test sub test adc mov rol inc gs push ret inc push ljmp in dec movl push jb loop adc popa arpl push lahf repz pop inc movsb repnz (bad) shl inc mov xlat in cmp test inc cmc push out pop push sbb cs mov stos ficoml addr16 jnp iret adc ret lret mov or mulb addb mov cmovge pop inc lods stos add addr16 push ds ss outsl sub xchg push imul loop lcall cltd or mov lock test sti test mov jecxz sbb (bad) (bad) lret imul pop sub sub pushf jns lahf das fcoml cwtl cmpsl sub leave jg shrb pop shrb rorl outsb dec push icebp fistp jno (bad) lea mov xchg (bad) stc sub mov adc push xor std mov push push adc std cli mov inc or rcl std std cmpb lock sbb dec mov iret (bad) fcmovnb rcrb xchg mov setb cmp imul mov inc dec mov fcmove cmpsl orb scas aas mov imulb mov ret push push int fisubrl aad dec sub ret adc loopne and inc jp inc sub xor popa test sub jns cmpsb or leave push (bad) in mov movsb add cmpsl or or inc dec std mov push jae mov mov sbb xor jo scas sub addl shll imul sbb (bad) inc mov ret pop cmp dec fwait jg (bad) dec xchg (bad) sbbl mov pop xor in jge sbb data16 and or jne pop lds jmp jo out inc mov andl ss lods sbb xchg mov je (bad) orb inc lret adc add or pop mov pop inc out shrl push push fild stos mov push imul fmul fcoml inc mov push shl pop sbb inc loop mov pop ja,pn lret lret sub or cli dec mov and mov xchg jmp mov inc jg imul cld loopne inc sub roll and inc push movsl inc cmp mov repnz push adc lea test sahf in xlat stc in inc sarb sub inc xor dec cmp inc ljmp test lret fistp push les sub sub sbb inc push adc inc mov jae int3 or pushf mov jl bound push adc fldl int mov mov stos loopne icebp cmp xor inc cmc aas push inc jns mov push inc into xor out pop push insb inc scas jbe mov mov imulb int rcrb out inc mov jb loop jb movl adc and inc stos (bad) fidiv loopne add setne push mov inc in jecxz mov mov xchg jae inc or mov or cli pop fucomip jno push pop inc ss xor inc pusha repz je adc lret outsl inc (bad) mov ret pop daa repz mov (bad) call xor adc fisttpll inc and add inc or jle mov sbb sahf sar mov ds (bad) sahf es inc stos lcall and fs imul test daa push push add cmp into or add sub lret out lret adc push and jmp bound aaa sbbl or sarl shr dec subl std sbb movzwl movsb dec jno push (bad) inc popf pop sbb ss xchg loopne fidivrl cmc hlt jo lahf mov insb leave push les dec mov orl push add jb lahf ja pop cmc std out stc jae fist mov inc push sub aas in ret into fidivr mov xchg call dec mov loop stos jle push mov dec lret (bad) fild mov packsswb mov xchg mov or mov fucomip or into stc sbb out adc es cmc ret cmp (bad) add cmp clc jae movb shrl cmpsb sub mov jecxz jbe (bad) pusha push mov xchg adcl enter dec out jae push add dec mov jg arpl or and sbb leave mov adc pushf sub dec fcoml popf popa cwtl flds in sub bound int3 xor iret fs fwait mov and dec xor inc jge xchg fld push xchg sub das repnz aad cmpsb push and cli mov xchg loop cltd sub (bad) jb test icebp out (bad) ljmp ret stos push mov adc mov sub rcr inc cmpsl sub inc std push lcall lcall out xor xchg jb ret dec xorl pushf lret scas repz test fild adc test mov push pop adc int ret stos out aas es clc push rorl add call mov sbb in or rcl les mov xchg sub stos dec cmp (bad) push fnstsw ret sub fiaddl test xor sub test xor dec fist push imul cs dec shr sbb dec or out pop sub out mov sub mov mov and rcr mov cmpsl dec cli sarl adc pop dec std imul pop jae dec das (bad) mov (bad) adc push push and push sub psubb lret add inc sub pop test pop jns int3 hlt inc xchg add fcmovnb push mov sbb cmp (bad) cmc inc ss jle xor int3 or rcrl sub mov push sub cltd xor inc inc loopne jge les cmp push outsl lods dec or sbbl fiadd sub xor dec fstpl lret (bad) pop int lcall insl xchg mov pop fcomip loop inc mov ret roll dec xchg ljmp mov jp sub mov out test inc inc mov add dec into sbb mov add (bad) int stc lods sbb cmp jecxz clc xlat out les pop (bad) in xchg ljmp xor jno clc xchg sbb xchg cli cmc jne add mov or sub inc sti mov mov jns cmp arpl mov dec mov sub push push xchg test mov in mov dec jg and jno xchg add mov addl add ret shll ljmp cmpsb xchg lahf dec clc inc xchg aad repnz add dec jecxz sub repz mov cld sbb pop sub or mov mov xor mov lock jg and adc pop pop out dec mov test add and test outsb add nop sub mov add scas add pop or fistpl cmp ret mov push lret sub mov xchg xchg push fild clc push test push add mov push xor mov push dec stos popa push arpl sbb push push fdivs xchg xor aas and dec fcoms sbb cwtl sub pop clc mov dec xor in cmp dec cwtl arpl jecxz imul inc sub xchg cmp leave pop dec adc pop ja inc lods fstpt sbb (bad) in cmp mov inc enter pop xchg cltd add xchg flds sti jb dec inc push bound loope mov push pop adc xchg mov and xor sbb test frstor cs aas fadd dec or pop mov push add lret jno iret pop stos ljmp jae lock adc jae int3 lea inc fdivr in setge inc cmp cli sar pop and jns cmp dec add cwtl data16 mov in xchg inc add or ror mov cmp pop in icebp xchg sub ror inc dec mov call into or xchg data16 sti jmp popa push and mov (bad) pop data16 push fildl sub and and dec pop mov add es shlb jbe and and mov jp add cmp sahf cmp add cwtl mov inc pop pushf icebp inc add mov movsb shrb inc hlt pushf leave mov inc cmpsl mov xor mov xchg into and mov inc cmp push lods call mov mov jmp or outsl cmpsl mov outsb mov add loopne icebp push lods mov sbb pop sbb (bad) lea jb ret leave in mov inc test adc xchg jl mov and (bad) push push sub adc inc sub sub push ja lock jns xchg mov sub mov jg jb dec pop rcl and fdivrp mov cmp xchg xchg mov loope fs jmp vmovsd adc add adc in incb dec ja dec std inc (bad) ffreep repz ret ficomp out cmp test inc jmp jl inc pop pop and loop add test jbe push and frstor stc inc inc imul add movsl lahf push mov lock xor ja mov pop jb pcmpeqw push mov loopne iret push push int3 rorb (bad) fdivrs sub outsb enter stc xchg outsb xchg (bad) jnp mov xor mov mov inc stos lret and push inc call cltd jno jl and pop push jge repnz push and jl leave inc ficompl mov es jl loop jmp inc push out shrl xor test cmpsb fldt push dec pop mov jnp lahf fs dec imull sub inc jae xor data16 mov jp inc popf xchg nop dec cmp arpl sub adc out push aad fs in insl jmp add sub aad mov (bad) jnp mov aaa sub mov dec sub xchg sahf ja fidivr xchg pop mov inc je fnstenv inc cwtl dec les in inc sbb push inc mov mov (bad) insb or aam xchg scas lock pop scas jp inc mov inc xchg dec movsb adc push fisttpl sub cltd dec out test pop mov rclb jo in xchg pop dec adc insb ret into repz pop sub pushw scas xchg add xor sbb shlb adc push or adc inc adc gs dec stc dec sbb bound shrl pop sarl xchg lahf add sbb outsb mov jns fsubrl push push adc dec popf mov push out xchg sbb lret inc push mov mov cli inc adc lds add mov data16 addr16 jmp and cwtl sub inc mov sbb or sti or inc cltd rol dec aaa cs jge cmp inc ret (bad) das pop inc inc pushf xorb (bad) (bad) hlt inc or jnp xchg xor cmp outsl fwait push and out inc lea and dec dec mov mov insb jle je pmullw mov inc data16 sub icebp mov jl mov test das pop fdivrs (bad) jo mov inc stos fmull sub adc imul or adc test sub test (bad) lods and outsb xor xchg arpl enter jo pop sub mov rcr ja arpl stos shlb dec xchg cmp push outsl dec push repnz imul pop dec mov jle sub xor stos repz test ss in movsl pop push pop mov into leave sub aas shrl (bad) ficompl (bad) je push ret dec lret sbb or sub das (bad) stc add add jmp push insb inc es shr movsl or lahf lods loop and sbb call mov inc cld or dec shrl dec dec mov jl jne out enter pop pop pop push mov iret in mov cmp into dec cltd pop movsl sbb push leave add cmp cld mov enter xchg jle dec into ret jbe mov mov loop insl and aad add xchg lods cmp inc push leave mov test push test mov inc imul sub int pop and mov lock jp inc mov xchg (bad) push push jl pop cld (bad) sbb dec testl xor mov sbb call mov dec ja add enter mov dec push repnz adc inc stos sbb int mov into dec jp mov and push mov outsl sbb aad in mov cmp add (bad) aad adc push add stos mov int3 push in pop in cwtl mov push dec inc inc inc in jle hlt xchg inc add cld pop xor fimull adc xor xor mov sti lea xlat (bad) int3 cmpsl push push test pop subl mov sbb push pop dec mov lret jg cli adc and arpl adc cli nop fmuls in cwtl inc outsl stos sti mov ret lods push clc cmp pop inc mov xchg mov (bad) mov shl jns lahf push aam fxtract outsl cmp (bad) sahf adc (bad) sahf add dec loopne ret add dec xchg loop lea call insb dec xor out dec das or mov cmp ljmp xchg imul shrl lods aad push sbb mov sbb icebp or stos dec loope inc xchg xchg sub stc (bad) imulb outsl push jmp call pop and push mov imul stos mov sub pop popf mov rclb cmp dec push std adc adc xchg xchg sbb sbbl int lods inc push stos in xchg (bad) cwtl int cmp std inc ds pop js or stos jno fstl fiaddl rclb stc xor scas add ja xor pop rcrb es mov movnti cwtl addr16 (bad) cmp and push jecxz out psraw daa mov (bad) enter mov test ret in hlt jecxz or fdivrs fmuls (bad) ja inc icebp mov cwtl jge cmp fidivrl call int cmp pop or add jo pop or out pop movsb lds inc and dec je inc mov sub mov hlt add adc mov mov cmp and ret add push (bad) cli les rolb cmp pop lret fwait ds push (bad) cmp sub sahf into lock packssdw push cmp dec xchg faddl arpl dec ja push pop repnz dec pop inc aad dec cli jg adc mov cmp dec mov cmp (bad) (bad) popa adc mov cmp inc pop add int3 or pop jmp pop and sub push xor je lret ja xor pop stc not outsl cld cli inc sub paddq xchg xchg mov scas lcall add adc push add inc add cmpsl adc loop jecxz jecxz fisub jns jl rol sub mov loopne xchg addr16 push or out rcll jnp fs cmp jecxz arpl (bad) mov shll jl enter call cltd icebp imul scas push jae lret lods dec call xchg jb pop stos push cld or jb push mov dec outsb xchg fxch lret decl aaa inc dec add push mov das adc xchg mov inc int sbb pushw sub sahf xchg sub popf pop sbb mov icebp cmpsl ds push jb inc mov mov sub sti pop iret push scas inc xlat int3 pop movsb add aaa mov dec dec lea jmp fidiv cld inc pop inc jno in adc and je popl iret cld add subl mov inc fidiv lds sbb cmp sub add inc inc cmpsb (bad) mov or push lahf mov out dec pop adc lock gs pop inc insb test std fmuls pop in outsb xlat call inc push xor pusha lods stc aas add sbb inc clc dec push mov (bad) jne repz loopne jmp inc cmp and mov dec cmp cs icebp inc pop pop int aad add movsb or mov inc (bad) jmp dec dec cmpsb lret jp nop add aas addr16 mov or cld xor jg andl nop add jecxz adc xlat int dec mov inc outsl out add jg jb lock lret or addl or mov int sbb and push imul jle cld ret jae ret pop jns insb mov mov ss pop icebp sub (bad) (bad) cli push ds icebp add inc xor loope sahf or lret in cmp jp sbb pushf fs ret xchg mov sub (bad) movsl sbb inc pop sbb adc sti cmp pop cmp test jp lret fmull or sbb inc enter xchg xor inc scas out icebp xor mov inc insb mov cmpsb (bad) xor gs and mov fxtract lock cmp inc iret jbe ficom jg and ds mov shrl mov mov clc mov inc insl cmp mov fwait inc push xchg fmuls mov or negb xchg mov fwait sub hlt lahf in (bad) rcl inc js jle dec pusha test out fwait (bad) and or rolb and or mov outsl addb sbb dec loopne pop into sub add fwait xchg (bad) out orb xor dec mov into sub mov gs add push pop cs inc shrl ja push scas dec fcoms out (bad) ficomp and inc repz lahf loopne add mov inc lock push push adcb rol pusha mov inc popa (bad) xchg dec cmp or push in dec sub cmp addr16 xor out jbe sub inc xchg inc daa adc je (bad) and cmp cmp dec xor outsb lods or jge xchg dec mov imul mov dec pop mov and xchg mov or in (bad) bound jg out shll mov cltd inc lahf movsl mov pop sub lock imul inc sbb inc jne (bad) pop dec test les leave pop push or movb test jle jecxz gs xchg call inc clc or inc rcl test ds sarl xchg mov (bad) fcomps push pop inc pushf add or std daa cmp test (bad) cld inc and sahf fistpll xor jge xor xor or ret das movsl pusha inc jno into psadbw imul stos jo shlb push push add ret enter xchg icebp mov and push jae xchg mov mov dec or dec add inc testb mov jl call daa jnp repz pop or push scas xchg loope pop dec test pop mov mov dec lods jns xchg adc adc sbb xor pop jae movsl lcall out cmpsl adc gs repz inc jne jns jl ds mov inc pop and imull stc and enter arpl add pop test jp xor dec xchg sbb loope mov stos jp adc xchg jno push test lock push aaa jl xor inc rcl (bad) movsl jg fwait jnp insb ret mov xchg popf addr16 ljmp iret rorb repz pcmpgtd jne popa sub bound ret (bad) add ja mov push imul cmp cs sub (bad) addr16 pop pop imul xchg xor ds pop fidivl and push (bad) cmc jb push dec add icebp ret fisubrl clc popf andb imul add jmp and mov movsl fstpl sub cwtl adc adc daa scas stos fldt jnp ss sub push bound inc std test sbb mov jns stos xor adc jo int3 out sub lock and and lock in fimul cmpsl nop push into lret add (bad) jae xlat fistpl add jnp add stc pusha (bad) push in or inc add cmp sub arpl lds out sbb popa cmc sub out jmp mov dec and mov sarb out int3 cmp dec sub sbb mov cmp mov push xchg out je pop push jno push outsl shrb inc stc rcl cld ficomp inc pushf test cmp xor outsl cmc sbb jle push pop outsl push lahf insl mov sbb cli mov repz jle dec shrl test repz test add outsb inc lahf fbstp pop adc sub aas mov ret mov inc stos imul xchg lcall fistpll lods mov cmp dec les stc jae dec loop mov push dec mov pop out add add pop push xchg sub and lcall stos push scas popa xchg aas mov cmp dec add jecxz sahf xchg in ret jno dec inc stos dec xchg insl ljmp inc sub js icebp sub mov out mov (bad) ret mov push ja (bad) push add mov inc xor enter dec jl sar mov inc inc cmp cmp (bad) test mov les inc cmp xor sub push xor cmp sub lods mov sbb jle mov aaa jae inc (bad) jmp mov int3 pop inc out mov inc xchg outsl xchg jae cmpsl sub mov pmulhuw les inc push in jbe das xchg and cmp leave movsb inc mov cmp xor faddl inc clc lods jns ljmp add cmp dec dec pop xor inc inc mov gs movsl xor addr16 inc mov scas (bad) jb fstpl iret inc jge push bound xchg roll inc fcoml push inc jnp fisubr sbb sub push inc fisttp notl add sahf repnz push pusha dec inc cmp andb sbb inc dec cmpsl and jb out aas dec (bad) or pop cltd ret roll loop fadds negb or scas mov inc mov dec pop inc mov fwait add addr16 adc push (bad) cmpsl das ja add (bad) mov mov ret lret icebp es fimull sbb pop add stos inc pop imul fwait pop enter adc mov (bad) pop jo xchg lahf add add imulb pop inc inc mov call sti dec cli push (bad) sub push or lea repnz dec push xchg fldenv (bad) or jmp dec cmp shr mov inc out pop sbb insl cmp into js jecxz xchg mov ss clc pop inc mov adcl bound push add dec ret out std sarl inc pop xchg adc ret lret inc fldl2e movsb inc add inc imul or loope mov jbe adc push push sub xchg sub lods pop pop mov int3 (bad) inc xchg adc stos (bad) sahf clc fwait dec imul ljmp outsb jg lods addr16 leave adc add mov dec inc insl fisub jns lods arpl xchg rcrl lods ret mov mov push inc icebp add inc xchg cmp leave lret loopne cli dec jge pop xchg popa xchg cs popa cmpsb add xchg fs movsb out lods inc clc push aad inc add js adc ror sbb sub lret addr16 inc xchg xlat int inc pop mov sti push ret mov inc push mov inc jne pop jp aam nop or inc imul inc sbb inc incl fcomip push in aad and or aam push ret ja loopne add (bad) push push inc icebp jae fwait lock in mov pop sub jno push mov ss arpl les in dec rol and push add jnp ret adc pop test and sub pop (bad) pop aas push mov fnsave jno icebp rolb es shll lret sub mov mov cmpsb dec add cmc stc in loop xor push jns aas dec ret adc fs xor orb sbb outsl mov stos std popa test inc (bad) xchg dec movsl or adc xchg out mov cmp push push dec or sub xor fincstp outsb dec enter lahf shrb repz fnsave repz gs enter (bad) lea jb and mov mov xchg dec lds scas in (bad) lret push mov and push inc push out xor adc fild mov insl daa dec out data16 and dec push loop cmp fildl ss hlt jge sbb sub in push aas push inc jle fildl dec jo rclb sub iret or pop lret xorl insl arpl call andl insb inc sar fsub and enter insb mov fstl lahf add (bad) dec or and movsl cmc push rcrl jecxz loopne jbe mov push idivb (bad) enter mov jge inc (bad) mov cmp inc out lock push push out cli roll outsl mov popf (bad) in add inc pop ffreep sbb loopne inc rcrl push ss imul test xchg push and xchg ret mov ret inc xchg pusha ljmp or frstor inc and gs popf nop dec push loopne pop and add xchg cmc out les stos jge addr16 push xchg icebp inc imul fisttpl sub jmp mov mov mov dec ljmp lahf xchg cmp push repnz xchg and bound aam and inc popa jg xchg or mov (bad) xchg mov in mov mov sub xor xor jns inc push lods aam dec sub cmpsb popf addr16 rol rorb call or mov lahf cwtl pusha push cwtl jp out and inc dec jne inc in pusha out dec nop ror dec sbb pop and mov imul leave sub and lds add ja (bad) push mov into sub jb dec daa or inc aam loop xchg ret into lcall int3 pop out cmp xlat cltd or pop cld call xor insb xchg mov push cmp xor xchg loope cmpsl inc arpl dec mov fwait (bad) int3 outsb cmp xchg (bad) enter adc xor int jne fidivl pop pop and lcall jnp cmpsb (bad) fnstcw xchg (bad) push fcmove scas test sub jns test pop lods (bad) dec xchg shr loopne add dec scas jp push jnp loope stos sub cmp push push dec std shll dec and sti dec xchg xchg ss jnp fildl jle adc (bad) adc inc (bad) (bad) cmp xchg cmp leave inc xchg dec mov jle cmp inc lock mov or xor lcall (bad) push leave jg fnstsw cli sbb fistpl mov xor shll add sti and pop pop push adc int3 scas ja xor xchg lret stc mov add sub flds cmp int xchg xor and mov popl cld loopne sar jo pop sub push outsb push mov test out inc (bad) (bad) jb dec inc sbb in inc cmpsl sarb dec pushf dec fstpl das inc (bad) popf inc scas daa add lret cltd aam lcall loope jo test mov sahf inc fist adc push insl aaa sub loop bound rcrl (bad) xlat insl scas inc xor inc subl sbb lds mov xchg push mov inc push hlt dec (bad) lret jo jp sbb ret adc imul push inc fcomip dec loop subl pop es popa cmpsl or cltd mov add jb inc jnp popf and outsb into cmp dec or outsl sarl inc jnp movsl mov das dec push divl inc fldcw cmp repz jnp test add sarb xchg rcll in mov jae (bad) mov push int pop dec pop in inc push mov inc aam dec adc les jl inc rolb add push xchg lods das xchg jge dec ret mov push cmpsl loopne movsl mov dec inc (bad) mov mov int3 std jmp lcall inc test test add inc inc sar and adc scas inc inc jns aam xchg sbb daa sub insb insl lock repnz roll mov pop cltd scas insl xlat ds adc or cmp les adc inc jp push and gs cmp fs int jecxz jae cmp inc xchg movsl or inc insl xchg dec jmp dec add mov (bad) pop int or xchg shrl lods dec xchg repnz and sub xor fdivl inc inc rorl adc or fsubrs in or cwtl dec int3 jmp xor push cmp jl jge popa (bad) std xchg adc test mov pop (bad) in (bad) inc xchg into lea sbb mov mov aas and clc cmp (bad) dec lret ficompl dec and popa xchg dec mov mov dec ljmp movsl dec mov push inc daa cmp inc mov aas dec mov ret nop iret push lods inc push xor add rcrb inc mov mov inc rorb mov inc add sahf outsb add xchg ret clc push lret fisttp hlt mov xor lahf lods sbb ret jecxz pop adc sub add mov jmp cmp into fisubr bound mov outsl dec stos inc lods stos (bad) push mov lcall lods das xor ja out dec data16 jg jbe xchg xor rcl adc inc fdivs ljmp scas imul inc push daa mov dec popf inc add push testl mov int3 jns rorl adc bound insb sti ja inc call (bad) xor hlt or fiaddl mov mov xchg add sbb cmp push inc icebp adc mov clc in jb jnp out inc fisttpl jns subl sub or lret repz movsb pusha out pop sub jle cmp movsl dec xchg jae sbb outsl bound iret inc (bad) dec lea jle popa movsb clc andnps push mov push les add mov xchg sti and push mov cmpsb mov mov mov fs lods push sbb mov mov dec pop mov sbb stc cmp stos jae add roll xchg xor jp rcrb or ret jg fisub cmp inc jbe int3 loope pusha movsb in fimull cmp repnz push and cmpsl mov jecxz cmpsb pop jno push push aaa lds sub dec dec subl mov arpl sub mov pop push jo inc mov popa pop pop addr16 dec inc and xchg jmp cmc xor pop lret pop dec cmp js xor jle and pop popa repz es pop in mov pop inc imul mov pop pushf fisubr out cmp in mov adc fwait add push das adc inc push mov inc jno push mov stos pop jmp sub int movsl rolb push movntps imul ret add pushf cli cwtl es xor xlat mov jecxz jmp inc cmpsl sahf scas jp and xchg xor cs inc jg pop call inc and and lods sbbl xlat pop cmp pop ret cmp cmpsb inc jns pop lock push inc aas mov or divl ficompl push and icebp add jno,pt push mov dec xorl inc mov mov jp test and ljmp ret sbb pop movsl mov arpl xchg pusha fs jecxz test std aaa fldt sbb push inc fs xchg cmovge jmp jle jno xor dec mov xlat call adc inc xchg popa cmp cmp ficom xchg jns scas lock sub pop test cld xchg out cwtl adc inc and int3 js je pop inc insl jnp push dec test jle stos ljmp push and lret addr16 jb leave insl popa enter movsl (bad) fstpl xor inc lret arpl jecxz (bad) roll push xor aaa std inc or adc and push loope or push pop data16 push push cmp out pop inc (bad) into adc dec jge jbe outsb add ljmp in sub aam dec not ja ret jne adc xchg cmpsb iret imul jb int3 into inc sbb addb mov push lods jne leave jo inc sbb (bad) sbb jo sbb aam mov jo push loop pop test out mov ret mov outsb sbb push inc push fs lods imul out mov fsubrl inc pop mov imul dec iret pop test inc sbb jle jg cld add ret inc test (bad) pop inc fdivs add icebp (bad) mov mov sub sbb shll in test push (bad) roll jnp je jle inc (bad) pop mov inc push sbb pop bound push inc aam add pop lods adc lahf cmc inc lret and adc mov cmp hlt inc ds repz scas mul fistpll mov cmc sub dec pop or jp imul inc cmp xor adcl add jmp sbb xchg push mov jo push xchg les aaa add scas xor and inc xchg daa adc push fwait aaa fcomps jle jo in mov out push aam sub dec mov pop xchg adc push aas xchg stc in mov push dec in adc and icebp xchg push and xor inc nop lcall mov inc fbstp in xor xchg (bad) in mov test add (bad) jb jns sub (bad) mov aam inc enter mov mov sub push subl pushf inc inc lods mov pop dec popa insl test push (bad) repnz inc mov push pop xor out sub cwtl or roll in or push mov push jg jo push es and dec adc or cs xchg rclb inc push test fild add xchg mov movsb addr16 sub cld dec and inc fmuls lea out call ss arpl movb adc xchg mov dec pop out jb leave ret inc ss psllw add push or mov bound jg les pusha or fidiv adc aam ret popf and jb jge lea bound jae lret in adc loop and xchg addb push movsl xchg xor sbb fisubl outsb xlat in add not popl les jle rcrb sti add (bad) repz xlat hlt jo push out xchg (bad) (bad) pusha inc and mulb jmp dec xchg (bad) mov lock inc pop les xor dec sahf pop call sbb add pop push jg adc fchs push mov xchg or outsb inc sarl fbstp inc lods pop inc lcall mov arpl dec mov mov inc test iret mov xchg push nop inc pushf popa pop test adc sbb jecxz cmpsb fldt pop mov out sub adc jo (bad) cmp push roll mov or mov mov (bad) (bad) fadd nop lds push rcll inc add mov inc dec cmpsb lahf fs pop (bad) mov push mov sti mov lcall xchg cmp jg out mov xor in or mov sub sub mov and cltd movsl xchg enter sub icebp inc ret or rcl xchg dec xor inc jmp outsl cmpb push inc sub xchg mov jecxz push ret dec inc mov push and add je cmp sub sbb cltd loopne fild test jae movb jo push es add (bad) or in lahf mov out sub jp pop scas inc adc ds in sbb add jns cmpb xlat xor xor mov loope and jg dec xor std das pop jmp ficoml mov sub cmp adc adc xchg cwtl cs out add push mov inc sahf fisttp inc mov inc add gs add test adcl js mov bound pop test addr16 and pusha out inc sub insb idivb xchg rcrb inc imul mov rorl jbe rol and cld mov or adc mov rolb (bad) jecxz xor int sub push dec mov dec pop inc inc outsb aaa pushf push inc repnz mov in ljmp lea js std push pop pop inc out test cwtl fnstenv push dec mov lahf adc push xchg jg fadds jns xor inc sbb ds mov inc dec add push adc mov fwait negb cli sub iret mov jp xchg cmc and dec cltd stos (bad) cld scas les andb cmp cmp sub in cwtl clc mov jne xchg in inc pop mov xchg cld xchg test inc outsl shrl and pusha bound mov dec sub add push dec in mov movsb aam dec mov sub xchg lea data16 bound cld inc adc (bad) cli add les cmp push pop outsb mov fisubr inc cmp out lret push enter add les fcomps fiadd pop (bad) xchg pop cld imul dec sub pop inc aaa pop adc cs mov jnp ficoml addl dec paddw sbb sub adc stos mov sub ss popf lods push test jb cmpsb jno (bad) and sahf inc das out add jo pusha mov mov xchg push inc movsb xchg jl sub mov gs jae mov xchg xchg cmp inc stos push out lods add xor xchg mov cwtl cs xor cmp xchg bnd xchg test jecxz fistpll sahf popf mov jge jmp jnp xor xchg dec dec lret and push loope push sub mov loop inc test data16 jns sub mov mov adc (bad) jnp arpl (bad) jecxz mov xor push pop into das arpl jge push cmpsl insb inc xchg push aas sbb imul out ljmp jl imul (bad) lds aad xchg pop mov mov lcall sti ret mov add add xchg into pusha stos push jo xlat fldcw and pop cmp into or add enter add jg dec sub stos dec fist jnp fldt shlb inc and bound loopne jae sahf (bad) addr16 rcll lods out dec pop lcall xor mov lods xchg pop push sbb push sub xchg push mov dec mov fldcw bound inc std loopne pop insl mov mov inc les dec mov (bad) xor xor dec movsl mov mov jmp push adc push lock inc or test rcll mov fadds ror xlat out sub inc mov in xchg inc dec inc sub das int fldl2e inc push cld js aaa push dec xor pusha aam ds cmp in inc inc jge cli or xor inc push movsb add sub xchg cwtl lods and cmp fldl int3 fpatan dec pop adc jae stc fbld mov inc dec inc test mov lahf gs inc add lcall inc fidivl lods pop test arpl mov movsl mov test aas adc roll sub xchg mov inc pop adc or stos inc lcall mov pop push loope (bad) mov sbb jmp popa xchg push inc sti ljmp inc push int3 and mov sub imul fist add dec rcll fwait jecxz sub add jecxz les mov mov sub mov inc sbb out aad pop and repz das pop dec lahf mov and dec div js das das movb sub or gs fwait cmpsl cld push mov (bad) lahf loope add and sbb inc stos daa lock and rorb out sbb stc and clc mov pop push add repz mov sub sub icebp out jo ret or (bad) dec sub mov dec dec andl or or adc cmp inc dec rclb insb or movsb fsts sub into jne mov inc push out cmpsb (bad) outsb divb xchg jge movb dec lcall dec jnp into push push arpl inc add imull (bad) sbb push pop insb test mov add inc pop sub imul and push fs push sub mov and inc mov pop mov xchg push insl mov out mov jmp mov and sbb jecxz add and add push inc movsl pop mov lods inc xor sub push insb fadd std and in pop jae (bad) mov lcall enter inc dec jge and movsb push or pushf stos inc repnz push jle iret mov sub xchg or shrb and and sti mov out hlt sbb inc xchg jge mov icebp inc lods xchg les cs loop rep pop jo and pop xchg inc jge sbb adc cwtl add pushf mov nop cmpsb xchg xchg out jmp pop dec adc movsl xchg add xchg in decl cwtl xor xchg outsl fnsave pop xor dec fwait cmpsb inc stos pop stos je sub popa pop xchg xor int3 lahf ret xlat (bad) test inc lds int3 cwtl cmc sbb sbb push push mov cmp (bad) insb push pop mov sub inc pop pop mov (bad) aam xchg test xchg aad mov nop icebp shrb mov mov lcall ret dec out orb mov enter lods js cmp (bad) scas call outsl mov sbb jmp iret jp test (bad) jecxz xchg fbstp out cmp sub aaa sub std add in xchg in fcomi scas or xchg and int3 mov sub popf push (bad) shlb mov rclb dec mov cmpsl insl repnz stos push loopne fdivr xchg fildl ds rcll mov addr16 out (bad) adc nop (bad) insb xchg sbb fisubl sahf aam jl jmp mov fisubl daa adc sti push clc xor aad ds movsb dec daa inc lds push mov dec mov dec mov in or cli add scas ja mov mov inc in arpl stos movsb add ds and mov jns jl jae outsb fdivl and popa loopne stos imul jno loopne jne inc sti mov popa push pop shrb push mov (bad) stc pop stos repnz add jnp movsb add push arpl pop sub xor mov pop or aaa push scas xchg fiaddl mov pop mov mov lret jns movsl hlt cmp sbb mov or aad je ljmp xor mov lods stos mul mov push sub shl (bad) inc inc or cmpsb arpl and push xor ja sub sub push jecxz or loope ljmp sub flds stos jge enter aad into dec sub sub icebp ds add outsl inc insl lcall int3 pop rcr mov pop insl mov icebp mov bound jg sbbl pop popa xor inc leave or lea jns (bad) lock inc sub (bad) sub jb sbb addr16 xchg mov fild pop mov lds (bad) aaa jb loope fild mov mov mov and dec call js add sbb repnz jge pop push sub cmpsb mov mov aad outsl dec insl add in aas in lea xchg fs cmp dec or cwtl aas (bad) push mov ret stos mov push je aaa dec cli jmp mov fidivrl into pushf cmp inc loopne mov push xchg pop mov xlat in out push mov inc mov lret xor or cwtl lods dec int3 jl xchg jge in in pop repnz or jle daa daa imul (bad) cmc int3 add ljmp sbb mov jne in adc xchg sub cmpsb dec push lret js lret lret fisttpl dec movsl sub push gs addr16 mov lret outsl fiaddl mov ret pop inc mov cmc xchg xchg sarb push (bad) pop or test pop (bad) mov inc aad xor es dec cltd out rclb repz or les test jne je or jmp cmc mov sub lcall (bad) sub mov popf test rcl mov sub push lahf jns mov mov mov ss fstpl call repnz out aam add dec inc push addr16 push dec xor jle pop adc test adcl out inc sti stos jmp dec les fidivrl outsb repz std push cli xor mov lods xchg ja test inc push aad in inc fldl lea pop lret outsb inc shlb and mov movsb fs inc inc lcall dec pop sahf cmpsb dec mov scas imul iret jp test mov cltd int cmpsb xchg inc (bad) mov cmc mov adcl lea xor int ret jne popf dec (bad) insb int3 js xor inc mov xchg add jnp imul jle insb xor mov xor mov aas es in inc xchg xlat shlb jb testl mov arpl lods dec fiaddl cmp jge (bad) jle (bad) mov adc cmp cmp pop popa push and das jge cltd push lahf push das dec std imul jecxz in fstpt and xchg dec mov mov mov out daa dec cmp push stc jbe orl lret mov jmp xor fildl (bad) in int nop ret es mov push into fbld int3 cwtl (bad) fildl inc sub out xchg xor adc mov rclb push aad adc xchg rorb dec dec in bound sbb test inc push push gs push dec das or lahf ret imul cld push leave xchg inc dec mov out adc xor dec jb cld imul inc xor xchg xchg inc mov inc mov inc push (bad) xchg mov xor mov inc xor arpl loope xchg inc jmp add mov or (bad) sbb mov js push stos cmp inc adc subb sbb fdivl cmp and inc mov movsl or frstor fsubrl xchg cmp and jo stos and inc pop xor das out sub in add xchg insl fisttp jl lret pop cmp arpl pop stos xchg mov mov lcall daa adc sub aad jae ret mov das movsl into pusha lahf mov inc cmp and outsl das adc dec dec sti cwtl sub inc mov push ret sti jmp or xchg outsl lcall dec sti loop inc push fsubrs (bad) mov cmc pop push dec sub add or ds (bad) xor jmp iret in pop pop fcmove movsb insl push fcoms dec leave push xchg pop rorl imul dec in pop mov aam xor xchg sub push mov and rorl loope dec push add dec inc cmp add adc push das inc int or xor outsb inc fldt mov enter lret adc mov mov adc sub or add call push out (bad) imull addl shrb xchg in xchg mov and loope call inc sbb xchg cmp test push lcall xchg fild xchg sub sub cs jg jb adc cmp jp mov call arpl inc popf adc add or push popa lret std loopne mov mov fiadd mov addr16 inc ss (bad) int sbb pop jo inc mov sub dec mov jecxz dec popa mov pop fsts jecxz push mov jb outsl or clc add inc repz mov aas rcll pop insb ret inc movsb stc in mov test and pop pop ficomp imul mov push sti mov mov pop test cltd sbb mov push xchg pop test mov sar shlb lret (bad) pop jne or adc fwait cmp movsb mov pop pop jl jp xchg in adc out in imul mov mov xor cmp jmp inc lock and inc outsb push sub jmp lods mov out lret (bad) mov sub dec lret push ret cmp popa into aad adc fcmovb or test dec popa pushf cmc ja push pop test cmp dec dec jae lock ror popf mov mov icebp xchg adc stos pop (bad) mov (bad) sub sub (bad) push (bad) fidiv or ret mov push inc and lret ret lret test cmp fcoml outsl call dec orl out push test lods dec stos add dec push sub shll mov and xchg ret test mov sub jo add das test push mov cmp add jnp sub imul sub push add mov outsl (bad) mov fsubr rclb or movsl nop jg push push sub push adc popf test push clc gs dec push mov call stos sbb ja std sbb jno mov add fistp sbb jge sti sahf ret js rclb cwtl push mov mov fildll lret jecxz sub test scas or push (bad) cltd sub push cmp lret cmp jnp add out xor mov fstpt sub sub leave stc xchg int sbb add in ljmp inc xchg lock sub enter add dec sbb mov leave pop inc or cmp xor inc inc loope fiaddl jle inc sbb imul lock mov mov int inc xor inc lds push adc jb mov xchg movsl lods inc retw jb test inc lahf xchg cmc rcll pop cwtl or pop mov xor lds repnz test inc jp mov xor xchg mov jge dec imull inc (bad) int3 aam ja jle inc aad adc fwait lods rorl mov and aad jmp add or bound lcall dec das cmp adc cmp pop fdivrs mov mov ret sarb sub xor imul add cwtl sub inc push loopne js int3 scas mov and ja,pn dec pop sub and mov out pop xchg stos lcall fstl cs xor out push dec mov out dec cld fsubr push negb es lahf mov mov mov and sub xchg fwait dec dec inc pusha mov iret fnsetpm(287 test insl xchg (bad) xlat rolb (bad) inc int3 mov rolb shll adc dec sti or (bad) aam push aad dec inc adc add jae inc inc pop std and and jb push (bad) int3 int3 push mov mov int dec les insb sti mov inc pushf dec push push xchg scas xor rorb pop ret jae (bad) scas lret andl inc scas dec adc movsl jb push enter pop mov lock push inc mov jns push inc sti mov cwtl and jnp punpckldq mov xchg jae les xchg es mov xchg hlt (bad) mov decl lret mov pop sub sbb mov inc mov jecxz pop sbb sub lret push pop adc or push lret (bad) xchg xchg in or popa fcomps in aas xor xor mov add adc xchg cmp mov sti jecxz test cmp ret std sub mov mov int3 cmp arpl mov sub xor push insb push push out jno movsl stc and (bad) mov mov aad clc push scas rcrb xchg daa (bad) fdivs dec adc sbb push jns,pt sbb dec and sub (bad) enter (bad) mov xor sub (bad) pop jae cmpb and in and repz mov movsb out pop mov jb sub jp inc jecxz out dec and aam inc xchg call add adc jle mov repnz in lock mov (bad) inc xchg out call mov xchg dec xor stos enter jmp sti and fmull pushw jb stos shlb add (bad) out (bad) inc addl sbb sub push pop mov imul inc into ss stc stos push test sbb test fadd mov cmp mov fiadd jbe aam sbb sub jb (bad) dec inc inc mov lods or dec mov adc cmp inc add dec mov mov jle outsb ret jecxz arpl insl mov (bad) movl add inc and mov scas out sbb sub dec sub es mov outsl sbb add dec sub xor lock xchg and ret ret or rorl and loopne dec add aam test mov in sbb dec and test into int3 das push push push inc mov fcom ret adc mov les in inc dec pop sub lahf fwait in into ret xchg das (bad) push lret xchg int3 dec jb ja aad lret pop fcoml sub shll dec mov and (bad) data16 add xor (bad) imul lods sbb jl test rolb cmp out mov (bad) je rcll inc push lret or inc sbb imul into xchg xchg dec popa cmpsb push xor fimull outsb rcl inc out jge jae call or jbe xor insl and aaa je inc (bad) jns cmp minps and ja push mov je out inc jmp cmp ss ret inc pusha sub fwait xor push cmp int3 mov and pop jnp xchg outsb push sbb or ret cmp mov inc ja ljmp imul inc sbb add xchg fnstcw sbb inc xchg push fs loopne pop push bound inc ficomp jg sbb mov aaa bound mov arpl imul je and sub inc jno enter mov nop (bad) jg pop dec rcll sahf das pop mov test bound aad dec inc jae out xchg sub mov int3 push mov inc jmp inc add push in xor clc int3 fnsave insb jbe imul rcll push jge loop fs jno lret idiv lea pushf ret daa mov inc sub push out jle jle fsub into pop inc mov dec (bad) hlt dec jne imul ds pushf rclb inc into jl push or insl inc ja push jecxz inc add inc sbb dec hlt inc xor (bad) cld imul xchg and rcrl dec sub cmp jns jnp mov push xchg jp nop mov aam sub inc out mov test sub mov fwait insb out mov (bad) movsb out arpl push lret fimul mov inc push xchg push pop pop outsb cmpsb mov dec mov ficompl nop dec add scas add adc dec inc and lods cwtl fxtract sub push xchg lcall add ljmp adc lods sti dec cmp jae adc push dec pop mov xchg mov inc jl addl inc mov dec or add inc sti push pop push sub iret inc jb aaa and stos imul les out orl inc lods sub aaa dec dec sti xchg dec cmp pop int3 cltd pop int ficomp popl sub jecxz pop jae in xor dec push mov lret in leave mov fistpl in or les xchg inc adc cmc and repnz scas add inc add imul lret inc pop xor cmp aam mov (bad) fucomi push adc cmp jns ror (bad) js xchg cmpsl lahf fildl jno pop xor dec xlat push add and aaa arpl mov push adcl xchg gs push shrl inc inc ret pop fsubrs dec jp ret mov inc into mov pop dec loopne sub pop jo jnp rcll in inc sbb cmc outsl addb arpl mov push jbe aad hlt push mov cmp cmp imul clc cmp cmp ds sub xlat mov popf and sahf push repnz mov (bad) ret andl nop (bad) dec jle and cmp dec lret jecxz out mov sbb fwait and mov addb pop inc and xchg xchg xchg dec mov sbb rcrl insl (bad) es mov inc (bad) dec nop cli jle out jnp fsts mov pop push sub leave popa adcl or inc push shl adc into jg cmpsb ret mov arpl xchg pop jecxz rclb or (bad) sti orl xchg cltd adc movsl add jp ret mov test xchg std inc xor push and aas subb sti lahf jb cld cmp loop pop dec add aad push in (bad) or outsl das repz push mov pslld movsl pop mov pop mov or mov inc jne ss sbb mov roll pop (bad) mov fdivp aas fwait dec cwtl imul add mov scas dec out aam addl pop into fistp inc loopne add sbb mov roll xchg dec xchg (bad) mov xchg cmc jge popf fmul daa (bad) push mov sti pop and sbb and in sub xor mov inc dec xchg movsl adc pop inc pop (bad) mov cs hlt push cmc sub xor call stos scas xchg and les imul jb je push xor push sub mov inc (bad) mov mov stc and loop push adc xchg sub daa insl dec (bad) sub lds sbb cmp push test int3 xchg mov pop push adc push inc add mov mov adc lret inc mov xorl mov and push jmp jae jno mov fmuls add add lahf mov fcomip push sub jbe cmp sub mov sbb int3 push add mov test (bad) push sbb outsb xchg inc push fisttp ror movsb in push sti add jmp fistl clc std int3 (bad) clc xlat jne (bad) stos xchg cmp jecxz sub cmpb (bad) stos sbb lcall enter movsb (bad) call mov mov pop aaa jnp lret outsb test or or add daa xor sti inc ljmp adc (bad) xchg inc dec mov pop mov push dec outsl xchg ds jge lret xchg inc ror sbb in and rclb sti dec int3 lahf and mov ret sub or xchg cltd sarl and in xchg pop iret clc lahf pop add test fsubl fwait insb push outsl sub pusha addl push pop jl xchg ficompl xor fstps repnz push lds inc stos fisttp out stos (bad) lods xchg daa adc push mov gs fsubrp (bad) jnp xchg xchg lock cmpsl outsl sub add ret cmc rcll push xchg mov sub daa xchg mov mov mov xchg popa dec int3 cwtl lods pop lcall adc loopne xor fnstcw icebp push sub das inc xchg out jg stos sbb dec push sub and or test mov fwait jno aam imul shrl mov dec fs and push jecxz push xor pop jo xor dec lock sub push scas pop add adc imul adc dec and das testb sbb cld pop es test inc (bad) arpl mov inc xchg cli imul out test mov inc in xchg jle ds les (bad) mov cmc push shlb out inc jae fsubs (bad) lea jae lods mov pop xchg xchg cmp js ret xchg cmc xor xor jne push jno in add test inc out mov out and dec cmpl inc nop pop or adc addb xor and dec sbb mov jo inc (bad) mov add fdivr std add aaa dec push inc ret rcrl sbb jne dec lcall dec fdivl inc push push inc inc repz pop arpl fnstcw ja or inc inc and add adc or mov scas xchg xchg mov movsb inc sub faddl xchg mov out movsl inc ret push cmp dec adc dec sbb cli dec repz xor pop jmp inc rol (bad) (bad) mov mov (bad) clc in sub xor int xor addl adc stos imul cmp inc inc inc push xchg adc dec xchg inc popf cli stos aaa inc into lods fisttp inc mov xchg xchg (bad) mov dec adc sti test cmp mov cmp out or inc ficomp hlt test andl cmp mov fcoms cmp jge xor adc ret pushl mov adc subl add testl mov mov es test repnz lret or push jmp sbb cmp lds push lods and cwtl adc mov xlat xor insl mov in push stos pusha and outsl enter inc mov jb movsl imulb sbb push sub pop orl stos lcall mov (bad) xchg mov dec in mov lret aas jns jb pop in inc xchg clc fisub cmp add (bad) mov fs mov cmpsb call mov lahf pop xchg pop xor aad inc pusha pop test les cmp add aam xor fcoms or sub lret pop subl outsb scas jno jmp xor inc push add xor mov scas fwait add add aad mov ss test add lea cmp sti inc cmpsb movsl lods dec imul mov int3 sbb xorl cli movsl fucomip push (bad) repz dec mov repz aad and in add adc lods cmp (bad) test lret jp dec mov out lock sub dec into aas cmp cs or mov add jnp lcall dec or cmp inc xchg out and or xchg inc pushf enter cmp cmp adc sub inc fstpl stos inc imul add push hlt inc add imul addl jnp mov jne pop adc inc das sbb sub jo and mov mov pop sbb xorl in or ret xor mov lea popf xchg inc lahf or movsl (bad) inc (bad) dec sub mov (bad) pop fdivrs jecxz stos idivl sahf lahf outsl clc aad rcll sub inc jnp lgs jmp xchg push test dec mov stos test and inc pop shl sub xor out and or dec shlb jae pop stos xor pop sbb dec ret jbe add xchg dec dec aas lret pop adc jo push test ret dec repnz cli mov mov (bad) and orl adc pop push scas cmp lds aas lock mov mov xchg cmp mov cmp sub hlt sub lahf jecxz mov jl or int3 rol mov xchg and mov gs xor sub pop dec mov fsts sahf jmp into lock fistl pop adc mov int3 (bad) lcall scas cmp dec lret xchg repz sub dec jae aas jno jne jo push mov xor mov call mov cmpsl mov xor das jno and pop fadds inc push push cld xorl push test inc fld jnp lcall imul jnp ret dec lahf jg dec sub and jecxz mov mov add fcmovnbe sub push ret pop add or (bad) fdivrl movsl sbb lret jle lcall jns cmp inc sarl dec mov in nop fistpll mov loopne inc stos jo ret loopne push dec add addl dec test dec lcall imul mov (bad) fldcw out jg add xchg sbb inc sub loopnew mov sti mov push mov clc (bad) pusha (bad) dec sbb mov das loope inc jmp cmpsl sarl and pop leave das scas cmp (bad) mov add add push int3 sub mov dec fdiv cmp xchg pop test in push outsb sti packuswb mov imul popa loopne ds and mov inc sub sbb add or pop add outsb out mov pop (bad) cmp jg (bad) push in leave push mov out inc jge sub mov loopne adc push dec and push sub jle or sbbb sub clc sar jnp mov sub loop jle jg ret jne mov cmp xor xor dec push daa pop enter inc mov in mov inc out mov daa mov gs jecxz xchg lret pop pop test inc icebp repz sbb cltd arpl cmc cmp push std pusha aad push mov sbb out jmp inc outsl push xchg movsl xor xor inc lret add ficoml sub add push jnp and jnp inc cmc (bad) cld enter dec inc xor in jl inc dec mov in icebp inc outsb jecxz push inc cwtl xchg out ja sub push mov inc and xor icebp aam pop lods inc mov ds into mov and pushf out shl push fdivrs inc xchg and std mov (bad) cwtl push sub mov pop dec repnz out insl jns jo inc fcomi add dec add jne mov push sub mov or mov jno mov pusha inc mov xor into sbbl test add mov jg imul fldenv mov loopne int js xchg fdivr xor adc xor mov push sub mov fstps int3 dec mov sbb ret add clc scas roll inc xchg fwait sti dec jnp inc fldt sbb fs cwtl ret repnz gs inc rclb in test cld lods cmp inc (bad) mov inc insb cmp push adc inc mov sub mov and fild adc (bad) in pop push sbb or mov aas and mov cs cltd dec pop lds pop je cld mov xchg test leave sub add jge cmp jmp out idivl adc fcomps and (bad) mov pop mov cli mov dec pop dec pop js divl inc inc push into in sub mov hlt jae sbb xchg sub push jecxz daa fs sahf push ret addb dec xchg test shll ret in inc (bad) push jb cmp sbb loopne je mov iret adc jo int stos inc adc push lock jecxz or mov int lds xchg dec lret fidivrl xchg cmp inc (bad) pop pop imul inc sub jle mov outsb (bad) sbb pop ljmp mov scas (bad) adc mov popf dec pop mov inc mov jno xchg xor fdivrl ds addr16 outsb movsb out mov lds xchg push xchg neg push je add jl clc inc repnz sbb fs insb xchg jecxz inc dec pop jno mov xor (bad) push insb mov pop mov in inc dec fsubr and push repnz mov add cmp inc xor sub out lcall dec add xor into inc (bad) dec pop arpl mov cld xor push hlt and jge xchg inc and arpl lcall in mov cltd mov xchg dec jl imul clc sbb and out std push push add mov arpl pop push nop (bad) jno inc inc int3 cmp adcb xor push cmp add xorl mov and jg xchg cld add pop sahf pop mov (bad) fdivp aaa push ret mov stos sarl popf cmp and outsl ss push jnp push lds je fisub pop xor sbbl daa cli inc imul push imul pop or fsubrs mov dec das sbb inc nop mov mov adc lea push inc ret sub out mov dec sub inc push roll add scas stc or inc aaa mov and ffreep inc mov jg cmp fwait mov inc pop or jecxz fcmove aam dec push inc iret cltd inc repnz addb push out adc mov pop dec divb roll push arpl add sbb pop insl xor add push scas out faddp inc scas (bad) test add ror and add jp mov push inc mov lock sub aaa arpl sbb popf test mov fiadd add inc imul xchg inc push pop jns adc jg (bad) xor inc les push pop add and pop insb rcrl inc pop and mov aam pushf sbb push or cli aas lret sub pop jno jecxz std int movl xor inc jle cmp outsl fisttpl cld leave (bad) dec pushf aaa (bad) stc gs cmp dec int lds jl nop jb xchg jmp out inc adc ja scas jmp adc xchg bound clc xchg inc jg push in test scas and inc rcrb arpl cmp inc ret and mov (bad) das (bad) mov cmp add jb inc sahf or dec inc xor aas mov xor mov test adc cmp inc dec aaa mov or shl enter mov and inc aam jle (bad) sbb jns je add mov pop shrb sbb sbb repnz fs pop push das cmp add pop (bad) cmc inc ret xor mov jp movsl out sbb inc jle and xor inc lock mov inc inc cwtl scas push jne mov or (bad) (bad) into mov in cs ja notb add dec arpl imul loop inc movsb and inc xchg or sub add mov iret dec add cmp push leave mov pop jne loop cmp rcl inc sub jl mov nop xor and inc mov mov ljmp add jmp xchg es sbb mov adc push mov aad in imul push jno inc dec mov js inc repnz je test push and jle sbb bound notb inc xchg cli loope pop repnz (bad) test or xchg outsl fist iret loopne into cmp cmc (bad) loopne adc pop cltd or adc inc aaa adc imul fmul sti pop loopne push mov addr16 sbb cmpsb imul clc push (bad) cmp sub xchg call mov mov xor cmp push shl sbb sub movsl adc xchg push or lods repz pop mov cmp xchg sahf inc mov repz cwtl inc in push push sbb cmp push in popf pop popf adc cli pop test inc jns ss cmp jle lea sbb icebp je sahf xorl lcall pop xchg test add mov ljmp inc rcll add add pop sahf lea sbb jmp imul (bad) pop or in movsb push stos sub sbb mov (bad) or loop test ret fwait jmp in repnz push cmpl mov or xchg xchg out lock sub jle sbb cmp hlt xlat adc cmp xchg gs push xchg sub (bad) pop xchg add sti mov imul orb add dec mov xchg (bad) jae in mov sub xchg jmp shll push mov push sub jo out int fs push ret cmp mov inc xlat stc (bad) arpl imulb mov out mov shr fdivr enter cld dec pop in mov out (bad) inc xor insb xchg dec add mov enter sbb lds or pop insl jle loopne cld mov cmp push and addr16 leave inc and jge mov jecxz inc mov adc jae sbb sahf fild fcomps push cmp pop mov xchg lahf in or mov mov pop loope std inc lods fwait mov mov dec push out push ret adc mov or pusha push push iret cwtl or inc aad mov dec inc jno pop or inc outsl inc std cmpsl cld dec pop leave sub inc jno dec ds mov out cmpsb aaa mov or mov addb mov xchg dec pop fwait jno loopne add and add add adc pusha fcmovnu scas enter xlat add mov cmp add mov mov sub xchg push ret cmp jnp sbb cli inc fxch mov sub and and test lods mov ret cwtl sub hlt mov pop jg dec inc mov scas (bad) lock inc (bad) dec jle imul sub push inc movsb mov andl fstpl into xchg lods stc ret push daa xor incl dec std (bad) je jno dec bound sub add mov xchg inc push and dec push push fisttp add mov inc dec sub test xchg inc rclb adc nop mov gs inc inc arpl sub mov bnd lret jne xor lcall loopne mov adc inc pop pop loop imul dec dec fs and mov and pop inc enter in and inc sbb cmpl jl jmp inc std xchg push cmc ret mov pop dec mov sub push pop inc inc add jb js mov inc jp push jne scas jecxz out imul andl stos pop mov adc push inc mov adc outsl adc pop out aaa andl mov ss inc gs and inc xchg add jns inc shl inc mov fwait lds pop test ficomp inc fcoml sub inc pop jl daa jnp dec inc inc cmp and shrb xchg ja out xchg mov inc inc mov cld xchg in xlat inc idivl mov add mov push (bad) cmp and xor xchg jmp adc in sbb loopne popa inc mov daa stos fist pop out inc xchg test push inc fcmovnbe dec mov ds and test call fwait lods roll nop push adc mov or xor jbe lock push inc mov (bad) (bad) sahf lcall dec sbb nop dec les mov les movsl cmp imul mov dec pushf mov inc mov dec test sub inc push jb or xchg xchg lret mov fildl sub ret mov jb xchg mov loope jge je xcrypt-cbc cmpsl xchg push out rcr movsl cmp ret into pusha inc push inc xor test push inc inc inc push xlat mov fstps inc dec cmc jo inc loope std (bad) jmp xchg adc rcll popf or popa and adc mov mov mov (bad) jle inc mov imul sbbl dec xlat je loope test mov push inc and out outsb (bad) pop fistpll xchg sbb jne jae inc ljmp adc popl mov imul shl sub mov loopne push mov sub cmc inc mov adc movb imul std (bad) adc inc rcrl cmp insb push sarl mov or clc leave subl inc sbb popf and xor ljmp xor push xor in insb cmp sbb imul mov (bad) xor leave es pop dec xor imul add in mov push push or sbb inc ret mov inc jle fdivs mov xor push mov call push out pop out push dec pop test dec (bad) fcoml or xor jbe inc jb add loope int3 jg sahf fisubl (bad) arpl or (bad) movsb add sbb inc imulb adcl ficompl lock mov inc int3 jl,pn (bad) and xor pushf dec pop inc imull fisttpll mov fldenv cltd inc mov xchg inc push nop adc cmp jb jno aaa scas push pusha jecxz (bad) outsl push cli jnp (bad) out xchg jne ret sbb jno or lods mov pop sbb inc (bad) loope sahf data16 mov mov (bad) jmp inc clc popf mov xor xchg and pop and mov repz inc popf push pushf lcall pop ficomp in aaa js inc jne xor inc mov lahf xor addr16 sbb inc clc dec pop push aas addb shlb jns ficoml inc mov mov (bad) movd sahf out insb cmp jno sbb inc lar fcoms scas outsl cmp jge shl inc xchg mov jo (bad) dec mov je dec arpl or xchg enter lret pop pop aaa loope inc pop daa leave sti (bad) or mov les jno mov lret push cmp mov (bad) inc decb popl inc push dec mov pusha cmpsb cmpl mov sbb and stc push (bad) jb pop xchg outsb inc and pushf dec xchg inc inc das xchg jb add fldl2e addr16 sarb lods (bad) nop std test inc mov add fisub mov add cmp fnstcw xlat insl fwait rorl sub jl pop or pushf scas inc fst adc out cmc das (bad) rorb or mov mov or inc mov lcall inc das mov jecxz add cmp fwait (bad) ja stc (bad) dec pop dec xlat cs mov jnp mov mov mov sub add in cmp js mov xlat shlb cld mov arpl out add jle mov jmp ret in inc xor cli mov xchg and xchg sub cmp cmpsl sarl sbb add lods stos push int sarl or movsb pushf addr16 sbb mov out sub xor ds scas pop scas gs inc addb pop cmc in inc into cld imul fbld imul dec pop sub xchg in add mov pop in and sbb add mov jae inc inc inc and add cmp enter (bad) xor mov jae (bad) sbb hlt fs enter cmp jb xchg mov adc inc inc cmp stos fimull andl ds stos test frstpm(287 inc push ja negl ljmp insl mov push xor scas mov adc loopne scas cltd icebp (bad) movsb cmpsl pop jp es xchg les adc imul imul in push jg dec mov loopne mov hlt jmp cltd ret scas aam sub xorl fdivrs inc es cmpsb imul add mov mov scas cltd push add mov (bad) mov xchg movsb ret leave xchg add popf push hlt inc scas outsl or into pop add add push xchg inc inc jle jbe mov popf (bad) or push js push mov pop cmp sbb das mov test and jae test adc in jbe (bad) mov inc sbb inc jo (bad) out dec and mov mov and dec inc pop aad or test xor (bad) add lcall inc std ja (bad) sub enter jns xchg push jmp imul jo cmp bndstx ja popa imul or inc ljmp jae xchg fcomps ret lea jg inc sbb sub sbb pop dec mov add inc jecxz cwtl mov dec popa lahf cmp or ljmp in shrl or lcall inc lock mov push jns dec test loopne pop dec pop sub jnp inc shlb sbb inc jle inc jno in imul mov pop dec pop adc mov mov and xchg and adc inc mov loopne xor mov movsl jmp inc lock xchg arpl push sbb lcall jle inc push repnz jmp inc insl pop mov shlb mov dec popa cld and sbb pop popf rorb addr16 pop ret ret mov mov push sub inc add push and xbegin xchg sbb addl jg xchg mov rorb notb lock mov data16 xchg out imul cmp aaa lahf in ds inc inc ret insl and int and inc push leave fimul out ja mov lahf int sbb outsl cltd fisubl jne insl rol xlat lret mov sub in das js jb negb push fnstenv jge mov push push pop adc scas pop arpl add sub into lock cmp sub insb int or ficom xchg jo aas movsl subl sub push sub cwtl dec loope stos sub xlat inc dec js scas inc fs lcall dec sub (bad) mov sub sbb aas fwait mov sbb jae ja cli xlat dec mov mov test je ljmp lret push mov dec aad loop mov leave in adc ret inc inc push addr16 inc lea rclb out lcall in add adc inc clc adc daa sub cltd jbe inc push cwtl mov xor mov lea pop sub push xchg and out push jl sbb sahf pop aam inc inc and mov cmp add adc out mov xchg jbe xchg imul pop es xchg push jb sub push nop bound fmuls lahf rorb imul adc add iret xlat inc into (bad) sbb pop push fstpt dec (bad) ror call push repz fwait inc and cmp loop ds pop sbb sub and xchg into mov adc xor inc inc (bad) fstps jmp xor sbb addr16 fidivr ret enter cs add inc sub sbb shrl outsb addl mov xor cmpsl sbb icebp mov lea mov call inc jg ja mov mov movsl jl push mov add inc mov xlat mov out and mov or lods inc cwtl repz dec insl push lods and xor (bad) or addl cmp addr16 andl outsb ret shl fldl push xchg test inc pop cmpsb stos sti shrb lea lahf mov sbb aaa cmp cmpsl and mov inc hlt jo rcl dec jne xchg lock inc xchg in xor push add data16 xchg and inc movsb and (bad) cmpsb mov (bad) dec scas out js xchg ret push outsb mov inc inc lahf imul stc cli sbb or inc pop (bad) xlat lods xor jg push jge dec movsl in rorl or pop outsl (bad) (bad) dec fiadd inc add aam sub inc icebp lcall inc int3 test dec push mov push push dec mov mov mov mov push sbb andnps cs addr16 sub leave or and xor inc and decb pop inc addl xor jnp dec sarb ret sub inc bound inc insl dec imulb ret mov jbe and roll cmpsl and mov outsb lods mov stos inc sbb movsb mov bound pusha mov adcl jmp sbb stos lods out loop scas add adc inc inc xor add xor lcall jb mov cmc push add in dec sbb xchg mov and loopne lods mov cmp das xor out inc or inc and lret std mov jo mov pop cmp adc das (bad) xchg (bad) out push jge bound mov inc hlt mov xchg lret add std dec or inc addl push pop fs sub lcall out pop dec mov sub mov in pop out and sbb out insl sub pop out xchg and clc add iret xchg test std gs mov idivl inc xor push into out (bad) sub dec sbb xchg dec std add and push ret popf (bad) std add adc xchg mov mov int inc fnstcw or je addr16 rcrl in add push add mov outsl insl mov push inc jg fmul xlat add insb mov repz jo fdivrs add stc dec imul iret jecxz inc push cs inc mov sub clc inc or (bad) ss dec movb ret test repz popa inc lahf push inc nop inc add cmp push ret jge (bad) mov xor inc xchg aas loopne pop mov subb inc les cltd insb lods aas mov inc pop imul inc jmp sti or inc ret or lods pop xor neg inc sahf cmpsl ret stos mov es lds xchg inc adc jle testb mov inc dec cmp jnp mov clc push insb orb xor repz bound ret push loope sbb mov stos mov adc in sbb pop cwtl jl fs cmp fisttpll sbb mov cwtl mov jmp bound rcll scas xchg mov nop sbb ret (bad) jno dec out rclb sub inc shrl mov sub rclb mov jl mov mov add nop cmc dec (bad) repnz pop or xchg mov sbb pop into pop pop mov lcall int call (bad) jne fldl pushf lret mov std je mov scas fldt mov inc xor dec fild rorl lock les ja mov (bad) dec arpl push xchg push sub shrb (bad) lock mov mov jnp mov adc ss (bad) aas adc or and adc dec adc lea dec push or pop sbb mov or sahf js fwait push push cli in xchg mov pop repz popl sub cmp and aaa inc ds fwait pop movb inc in jne jnp xor lret int3 xchg ret lock inc (bad) int3 and sbb mov or es jge push test inc lods pop cmp into ret das fnstsw shrl dec cmp mov (bad) pop out pop mov add inc (bad) sub mov (bad) stos inc cmp push (bad) into daa mov les sarb ret sbb in cmc pop flds jae sub test dec dec dec (bad) icebp push xlat add push aaa adc into mov jge lea movsb aaa pop pop mov mov push ja ljmp inc fnclex int3 xor test sub pop (bad) std lcall das add adc xchg in in push es xor xchg xchg aad mov repz (bad) into gs push push rolb jb xor adc inc das mov movsl jg (bad) incb popf cmpsl sahf xchg mov in popa (bad) xor mov nop pop xchg test xchg stos insb pop ficompl out sub and mov mov adc (bad) or inc xchg scas and popf fldt fdivrs jnp insl cwtl (bad) inc and mov pusha sbb jns in inc stc cmp jg sbb ja push (bad) sbb mov lea or sbb mov cmc das aad mov popa clc mov inc mov jb pushf inc mov imul adc je loope (bad) xchg pop repnz lahf push cli andl lret out or inc (bad) idiv call add ds jle enter stos jp aas cmpsb out mov test jns jecxz popf jmp jo (bad) in fsincos cld inc inc call inc pop lods add mov inc inc (bad) mov cwtl and or jae test inc jns push inc push mov inc xor mov adc add sar call into xchg test ds (bad) arpl shll sti sbb inc and (bad) scas scas dec std ljmp or icebp stos xor cmp mov pop sbb roll mov xchg add or test mov jge inc mov das add lret cli inc cltd stos cmp inc dec (bad) sub push sub mov and mov ja push dec add mov rol xchg cld push push sarb int3 out and pop sbb fisttpl call and mov and push push sub xor push cmpsl (bad) popf lret cmp dec fistp es mov sub mov dec push sbb sahf mov mov stc ljmp mov fwait call sarb mov ror lret scas xchg sub imul ja fwait sbb jp lcall imul ret (bad) pop call (bad) lods jmp and cli mov or lahf mov push inc cmp enter bound xor daa lret dec and (bad) in (bad) rorb rol and xchg push inc lods jae sahf dec bound jl incb inc repz lea mov sub stos pcmpeqd cmp int3 xor call lea imul and mov dec pop push (bad) into fiadd sbb inc std cmp inc lods sbb lds stc inc jecxz xchg xor popa out inc pop mov into xor repnz repnz das aad jbe jecxz sbb xchg rcr cmp mov jg lahf (bad) jecxz dec jo or addl cmp xor push mov push addl pop ret fcompl mov sub outsl aad jae cli cmp imul adc cmp xor push xchg mov clc jecxz sbb fsubrs (bad) sahf out jbe scas sub inc jno call imul jne aam test dec lods cmp mov adc jae popa in mov or push xchg lods xchg movsl inc jge pop sti stc add insb mov mov xor stos out mov jns pusha mov mov mov mov shrl pop cmp or sub in jp inc jg shll add xchg mov addr16 or mov add pop cmp stos popf mov jno jmp jecxz cmp mov mov rcl pop xchg mov inc out cmp test adcl lods inc fsubrp movsb ret mov rolb fdivrl xchg jae inc fadds (bad) push mov push inc sbb cmp dec pop addr16 dec mov sbb mov dec push xor mov out mov fisttpl into pop push mov cmp out lcall inc push sub stos loopne fnsave jg ret pushw lods fldt jge bound push insl (bad) hlt add cwtl add insb dec jge sbb mov push loopne adc fldl mov ret xorb (bad) aas xchg xchg stos ffreep mov inc push (bad) xlat fcomp pop addr16 push mov inc data16 out lret scas fmull inc mov in lock outsb mov and mov mov inc cmp cmc pop fwait ret sub dec adc test or ret or aad hlt aad inc add ljmp ret test xlat into clc mov jecxz or incl and pop add inc push cmpsl call aam sub adc cmp jb pop xchg out pop sub lods inc jecxz sub loope and xchg pop adc repnz fwait sub into mov sbb dec adc cmp or inc test dec ds xchg mov pusha mov jl jb insb stos jg int and xchg mov pop sub dec xchg sti in dec inc ja rcrb mov fadds sub out pop add adc mov mov dec jge out pop out mov cld popf mov xchg iret add mov fisubl stos mov mov aad loope dec ret and ljmp push out mov dec ljmp inc lahf dec out pop mov (bad) inc mov jle stos lret xor pop jecxz aad insb xchg cltd xor pop pop mov int adc and xchg leave repnz pop test pop call imul cmp scas outsl mov jge pusha shll ret push xor sub flds js (bad) leave out imul mov add xlat jae fs mov add sti add inc push stos push push (bad) lret mov mov sub xchg add inc (bad) int3 push mov push bound add jbe sub push bound mov adc sub push adcl imul and lock inc sar add mov xor aam xchg sub sub pop in push clc mov dec iret in push sub mov das out pop or lcall or call sub sub pop sub out sbbl dec call scas scas mov push aaa add dec jecxz sub mov xchg cmp js ds or and jb loop ljmp xchg ds jge dec mov push stos movsl mov inc jno daa xor daa leave inc sbb xor sbb into pop cmp shl push xlat or or imul popf sbb jmp jb fstpl jmp or dec addr16 (bad) inc stos into (bad) rcl addr16 mov xchg mov cmp jecxz stos adc (bad) shrl xchg xor xor pop sub or int lods jecxz inc mov fildll mov test push out cmp pop imul push pop cmp jae cwtl fcomps mov fs and xchg jns aad jg (bad) add dec clc inc or xor inc push and lds fwait dec pop std mov xor aam scas sarb fwait cmp add adc decb repz cmp ret fnstenv add xor lea ret xor jl and clc push cmp (bad) jecxz loop dec add mov mov xor or es mov mov into inc bound push pop outsl inc enter cli xchg arpl imul mov nop sti or (bad) dec idivb push cwtl cld or lahf mov mov in ret (bad) inc cmpsl sbb movsb daa inc cmpsb leave add aad and push pop or std add mov cld or (bad) mov mov test icebp dec sub xchg inc ret jle pusha test inc mov mov cld mov das (bad) mov xlat jmp inc (bad) loope dec cwtl test mov clc mov mov adc mov inc add out mov inc je cmp outsb aas pop add sbb pop sub push cli daa fiadd xchg rcll jp popf push ficompl scas inc ds lret enter out lahf movsb (bad) ret les bound sahf mov cmpsl push xor movl (bad) addr16 xor mov adc ss jle cmp xchg mov dec lea add add popl sbb movb jns je jmp repnz pop jmp addl cmp fs out addl add outsb xor fldl dec imul fiaddl scas sub sub inc or lcall frstor and xchg lret leavew fldt nop sbb inc adc les inc sub (bad) je mov inc inc (bad) dec cmp mov cmp mov stos inc pop xchg (bad) fadd ljmp push mov mov jp aaa or xor pop lods test and pop out icebp push adcl mov pop lcall (bad) pop inc xor xor xchg dec mov ret aad add mov mov mov mov test std inc pop push jnp lock out and xchg mov lret inc testl roll jge xor out ret mov pop or testl inc pop jne inc (bad) xchg nop stc dec mov xchg and mov mov int3 mov iret loopne stos aad inc sub or cmp jl inc (bad) dec test clc mov lods jno cli push insl jae lds (bad) pop sahf test mov push sbb add (bad) pusha cld jne fistpll push pop daa push pop (bad) xor mov cmpsb ljmp sub fsubrs imul mov xchg in dec popf add inc testl jge jg adc dec lods popl inc in cmp jae movsb xchg inc cld jmp or jmp fadds nop or and sbb arpl mov lock dec push mov cmp loop das push movl test fwait int aad adc push fnstsw int lods inc dec (bad) push dec arpl xchg xlat rolb call jae (bad) fisubr int test cmp cmp inc or push fdivp and dec ret sub mov xorl loopne addr16 mov add test mov inc cwtl jno loopne js in push inc add jb push fwait in push fldt dec fbld mov and jb in sub mov jecxz pusha into push ret push or push pop adc (bad) xor cltd dec cmp lock or mov lds sbb (bad) les dec dec jl inc xchg aaa dec cmpsl call dec dec mov inc imul outsl push aad and xor cmp adc repnz sarl das imul mov inc mov popa (bad) fmuls insl xchg cmp push in ret pop imul sub add mov inc pop mov mov sub inc push jge push call pop or and mov pusha pop add ret pop not icebp fistp and insb fstps xchg test cli fistpl inc test pop cmpsl mov sub xchg pop or test inc aad cltd jle daa pop xchg inc aas cmpsl inc (bad) mov mov fldl push sub sbb xchg (bad) int3 and adc inc push addr16 nop inc mov imul pop test xchg jp sub cmp mov ret movsl add sub mov inc push lret cmpsl or (bad) orl push pop movsl xchg (bad) aas add push cmp enter mov inc add mov jbe xchg xor out mov imul push cmp push mov pop jne in int mov insl dec xchg fildll test jle jmp pop xchg inc stos add xor cmpsb int (bad) jecxz out lock dec (bad) imul xor ds stos cli add cld adc or in bound lret mov xor mulb add cmp push cmpsl mov imul sub inc imul and jecxz lahf add jle fwait stos stc outsl dec (bad) or inc inc pop jae inc fistpll dec addr16 sbb mov sbb sbb pop aas lods inc jg inc mov ljmp bound movsl xlat cmp aaa repz inc adc mov test dec inc xlat push into scas xchg scas sub outsb add pop jmp in fdivs mov bound outsl inc mov add jne dec dec (bad) repz test inc stos and push ds or lds mov je cmc jae roll dec pusha bound adc mov xor jno addr16 pop xor notl scas jae add aam jno inc inc mov dec pop mov jne push pop sbb and (bad) aas andb out or pop cmp ret (bad) dec push (bad) das imul insl and vprotd and test lret xor inc adc repz xor pop movsl cli xor sub (bad) hlt imul fadd (bad) std decb pop inc pop inc inc xor inc outsb push stos xor dec mov inc add mov xor ja test into push inc mov std pop push std test cs rorb (bad) lahf ret adc ret mov xchg cmpsl jmp aam inc xlat arpl or add jo add out sarb cmp js mov mov inc xorl outsl inc pusha and dec cmpsl pop lahf jle xchg cmp mov and cmovle ficom mov dec lret movsb mov lcall mov fisubrl add add push jle inc xor in lock adc and xchg int dec or add mov pop out lret into sub movsl xor push jb add arpl arpl pusha stos mov or int3 mov xchg jne xor jecxz pop sbb and (bad) or sub or inc (bad) adc push jp in in xor in dec jmp repnz xor cmpsl enter test dec cwtl fisttpl and fsubrs inc flds adc add sub enter push inc outsb push fistp mov imul inc jg and (bad) faddl sbb pop add pushf mov xor inc sbb xchg arpl xchg cs rcrb pop jo inc insb lods out pop fmuls jno lock dec jns enter push outsb jg inc aaa in xchg push mov fsubl and mov sbb mov inc jp xchg mov out inc cmp cmove add test mov insl push inc mov lods or inc gs (bad) jmp push and inc mov pop sbb (bad) sti leave or inc insl mov mov pop pushf push shrb inc outsb push fs pop mov test sarl dec mov imul push sbb fiaddl movsb out cwtl inc jns loopne fidivl push movsb inc cli imul push push jge aaa push inc mov lea mov inc cmp adc inc out pop sarb mov dec mov mov movsl mov xor fstpl or test sbb push outsl mov cld inc cmc (bad) mov clc mov inc lea mov sti pop jo inc sar imul daa lret push shll call iret add sarb stos push sahf push jecxz jae push loopne sbb bound jae dec jbe lds jmp lret and sub pop jne pop mov xchg loopne leave inc xchg nop cmp cmp cmp dec in cmp lds fidivrl push mov lods add mov iret cmp mov (bad) int3 inc sub jno lods xor sub movsb fstpt in imul jle and sub movsb in jl jge mov mov cwtl xor inc xor ds xor (bad) int3 cmp das adc rorl sub call fwait sti in mov push and inc sub cmp push shll add dec cmp mov js ss mov mov lea inc dec push or int inc repz movsb ja sub push mov mov es cmp out or and imul shrl dec jno xor push lea add stos add enter in mov inc shlb daa inc fnsave adc push cltd and repz xor inc add jno lret mov mov loop dec inc outsb shr inc mov or adc adc mov loopne sbb jecxz dec scas pop cmp je mov mov mov popa mov push sub ret mov scas aaa dec inc sahf fild mov pop int or push call rorb sbb sub pusha mov lahf enter adc push inc imul das test dec push flds je mov andl add ljmp test cmp mov icebp xor adc lret lcall adc aad inc dec popa adc jmp inc lret jecxz insl xlat sub dec or gs dec cwtl out mov cltd xor and repz movsb popa ss into (bad) mov and scas mov inc outsb les mov lea mov test insl pop dec and dec pushf lods repz pop adc popa out dec int mov pop cmp xchg fadds push (bad) jo lds les dec mov mov xor xchg (bad) aaa addr16 mov ret sub mov or in add sub or test dec dec sbb inc (bad) cmpsb mov outsl loop incl dec xchg lea push mov outsl (bad) jl push and xchg mov das xchg vmwrite addb dec xor xchg push test add dec popa aaa xlat dec fs (bad) loop and pop push ja inc mov rcl mov ljmp out repnz cmp fwait popf xchg pop repnz dec push addr16 mov scas jge loope adc test cmpsl popf les std lods inc js outsb mov cmp add inc push pop jo andl bound inc outsb mov imulb scas jl cmp pop es adc rol pop inc dec xor push and fwait inc test movsl lret push stos xchg mov lahf or mov jecxz mov pushf dec and xorl pop stos lea stos inc (bad) ficoml inc ret out push pop movsb popf js or xchg dec sub xor ljmp mov ret lds or movsl sbb cld push push jle add rcr or std ret xchg push ret in mov adc cmp outsb mov and sub xor shrb mov insl out repnz inc stos cwtl dec nop add stos push flds push (bad) (bad) dec fsave cmp fdivs in mov sti imul js sub jnp xchg add xchg dec sbb dec or cltd jae arpl sub mov jbe int3 pinsrw sub out cmpl insb cli mov pop inc pcmpgtd cmpsl arpl das loope aaa call jae int3 cmp sbb push add pop rcrl pop shrl mov push sarb xchg (bad) adcl fucomip into aaa jbe rclb push cli fs aad pop dec in movsl jge (bad) lea mov call (bad) jp adc xor dec add sahf stos pop (bad) adc in push mov pop or scas inc pushl pop imulb cmp std rorl mov add dec outsl ss adc cmp aas incb leave inc and lcall jmp inc mov mov in jbe cmc rorl mov jb das lods das sub dec inc pop aas ds enter inc mov ret jb in or aas vcmppd and cli or jecxz push jl xchg inc (bad) out shll mov inc scas out jno inc mov scas push add lahf mov andl mov push jge inc inc les outsl cwtl inc in rorb push xchg aas dec inc (bad) mov popf or loop in and pop jo push jg inc (bad) jb test lret mov dec pop mov dec popa jb roll cmpsb pop push inc aas je ja jbe xchg inc movsb mov inc add hlt mov lcall xchg mov dec and ret lods cwtl push das into pop pop mov les dec pushf push and push rorb fwait aam mov sbb jns aad xor into dec sub (bad) xlat mov aaa and clc and sub push rolb or add daa decb dec jo xor mov mov inc pop xchg ret mov outsb sbb cmp add jmp xchg out je and adc jge push push in loope pxor xchg add adcb sub xchg and stc mov cmpsb push fdivrl push push pop inc jl clc in ret cmp mov pop xchg dec add and push cmpsb lahf stos aas je mov and cmp incb cwtl sub jno,pn stos ss scas (bad) icebp xor mov jecxz cld bound pop xor xorl push push xchg test sub rolb addr16 aas sahf mov std cmp icebp jae nop sahf xchg sub (bad) jnp inc push arpl mov inc inc test imul mov cmp cwtl inc push test pop adc push cmp jno pop aas inc out dec mov dec inc mov xor rorb pop mov xchg inc call shll out cmc dec ret popa inc (bad) insl inc inc mov or lock fbld std (bad) sbb inc mov in push popa mov inc sub or jbe pop jae and inc je (bad) push push dec mov push cwtl jg sbb call add dec int3 js stos pop flds jle sbb aad push and fcomps xor mov scas ret std cs (bad) daa mov fimull sbb sbb rcl (bad) mov sbb lahf stc scas inc rcr out inc adc mov pop xchg outsb adcl inc fucomp push (bad) std je,pt push xchg iret pop jp pushf ja inc adc arpl movsb and nop in incl cmp mov pop xor fnsave push dec mov lahf cmpsb jg fadd popf adc loop ret cmp scas inc or nop xchg dec lcall inc mov punpckhdq mov fildll fwait mov inc (bad) xor sbb add rorl dec mov mov cltd sub roll xchg mov out (bad) or mov push inc fidiv add lcall dec sub jp stos pop test in (bad) jo mov dec sub and fmuls out test and jo gs clc lret jle clc dec sub sarb out je mov (bad) js in mov mov pop repnz aad int3 or inc mov jo addr16 dec mov dec jno inc push ret ret out inc scas pop dec into ret dec mov jl inc mov (bad) add push push inc pop jae push jecxz push cli sbb insb pop (bad) mov lahf mov incl shl xor inc (bad) jne insl in inc mov popf push cltd out dec in push mov push sub jmp movl dec or ret add sub push sahf inc fldt cld pop addl cmp aad jb data16 cmp leave arpl push aaa aaa jecxz adc lahf bound out mov and aad mov frstor sbb jecxz adc fildl lret pop push sti test adc stos insl jbe add cmp sbb dec and call pop rol add (bad) fisttpl shl cmp or test inc fsts cltd sub daa inc lock aad inc xor inc ficom xor inc push dec mov add icebp jno lret sub testl mov inc xchg (bad) mov dec push mov dec test rcrl lods mov jno jne fild and idivl jmp dec mov lcall xor inc aas mov sub jb inc add sti sbb cs lret (bad) out and pusha pop iret fldl daa or cmpsb dec dec mov cld ret xor movsb add jno jae je (bad) jp (bad) cmp push adc inc loope data16 sarl mov dec dec pop lret mov arpl mov jnp sub xor out mov mov pop jo sbb mov sbb pop incb jecxz and aad and arpl ja (bad) adc mov and fwait push inc fisttpll adc add inc arpl outsb movsl xchg adc addr16 cmp test repnz xor gs outsl mov jmp jmp inc sub stos stc inc or push jp aaa roll add cwtl and inc push mov stos mov inc lret cmc inc cltd js inc fsubrl mov inc repz pushf test pop ja push cmp setbe mov jge inc inc adc push insl jle inc pop lds cs iret cmpsl inc sbb mov jae mov mov fwait lahf cmp cmpsb and (bad) lock les adc dec mov pop test sbb inc xor cmp xor jno sti xchg fwait jbe fisubrl in pop repnz inc rorl push stc or xor dec test outsb and ja int3 push and fs mov dec mov cli mov mov jge addl pop sub pop jmp or pop cltd add and movsl inc mov or js and jae inc movsb les bound push cmp jge lret sub daa inc dec dec jl mov rolb jp fcompl xor dec add arpl xchg ljmp cs push sub paddsw pop inc sbb pop sarb dec in mov std dec stos mov orb roll sub repz inc cmp jmp (bad) sti jg je push xchg jno inc mov (bad) aam mov into pmaxsw inc sub hlt adc shr iret or inc rcl cmp daa bswap adc xchg repnz iret loopne or mov push inc icebp push cmpsl adc ljmp scas xor fwait xchg mov ret or pop adc sbb (bad) cmc je in pop mov adc andl jno jns int and mul dec sahf jnp adc sub mov pop jo movsb add jne inc mov push sub inc lret sbb pop push jae aas in inc in fiadd push jmp scas jne dec iret mov pop out jae xchg call cmp inc fs pop inc cmp test sahf mov das jg icebp enter (bad) fildll adc dec pop cltd ret or pop sarl into sub stos icebp dec mov (bad) movsb in cmpsb scas mov ret stos arpl adc dec cmpsl out mov int3 rsm inc iret in jl adcl aad roll out adc inc xor lahf add dec inc enter inc mov mov sbb stos lahf inc jns ret stos mov mov and call int3 xlat outsl les inc insb shlb dec pop fisttpl and cli inc inc mov movsb xchg xchg jnp push ffreep (bad) fadds rorl arpl inc aas fimul into outsb es cmp fs mov iret push loopne sbb or popf add mov in fs xchg adc lods jge inc (bad) into stc lods or and and and jo inc pop test cmp push cltd repnz dec rclb ret jmp jecxz inc cwtl out push imul addr16 mov outsb or jb add jae (bad) inc sbb (bad) cs cmp daa fadds sub adcl ss cmp ret sub and aas mov pop out es mov jge test movb inc into lret dec (bad) xchg or (bad) and lock cmp inc push scas push xchg mov repnz mov mov test inc ljmp fiaddl sub incb jno xchg or repnz arpl jo dec xchg dec mov lea insl outsl inc nop jns push out adc mov das dec outsl xor arpl ds int3 sbb xchg aad pop cmp inc dec push iret js inc push popf inc dec scas dec and rol in xchg aaa shlb mov pop sub cld sbb xchg dec in and inc jp jp pop sub jecxz sbb (bad) fidivl or arpl jle,pn push pop sub es adc imul sub pop mov (bad) fldl incl scas cmc or imul adc cmp dec aas cld into inc sbb and add punpckldq mov sti out and add cmp push xchg hlt movl ret ret test mov sbb orb icebp sbb addr16 fisttp les jmp mov sub inc pushf adc leave ret jge mov xor push mov repnz es sub mov fdivr scas jno or movsl and mov cs inc dec dec jnp cmp xchg inc pop sbb mov cltd (bad) add pop jle lds mov rorb aas popa orl (bad) decb inc mov (bad) xlat or sub xor dec insl cmpsb mov add mov xchg mov add idivl fs inc inc ss jp sbb test push inc jns fisubrl lea pop inc fs or lcall jge adcl movsl or mov fstps in in add out xor dec jo push (bad) mov ljmp add pop and jl sub sub inc mov mov out and dec mov lods sub imul pop cmpsb mov cmp xchg lahf (bad) je les arpl inc movsb aas add push mov add fwait push and push mov mov outsl inc mov mov sti sub xlat faddl pop push adc jmp es mov mov ret inc adc xor xchg outsl subb ret popa or icebp decl lods mov call bound inc sbb adc (bad) stc inc pop jl ret movsl out xlat jno roll sbb sbb cmp (bad) xchg js je ret mov jecxz loope std inc lods in or jg mov inc lret decl push pop jno adc repnz ret cmpsb mov inc gs fwait lock mov add or mov int3 fstpl hlt out inc jbe jo andl cmp xor inc xchg and xchg psadbw fwait mov js inc ret or push fild enter fisubl add cmp arpl add xchg inc repz push adc lods xlat pushf imul bound dec gs lea shlb mov xor dec sub mov dec mov inc std daa dec cmp or and dec jge stos xlat les loopne xchg ret mov into push das mov or xchg fistpll xchg insb dec or mov push pop xchg into mov xor arpl lret and imul jl (bad) xchg pop push in cmp (bad) in imul lret dec lahf push (bad) leave and add or cmp xor jecxz or push cli mov dec dec xchg dec ffreep cmpsl pop insl sub sar pop pop orl push xchg adc repnz insl push fisubr pop in xchg lret xor fldl sarl in das (bad) cwtl cmp fbstp inc in pop pop dec dec js inc adc mov sbb sahf and mov es pushf inc test cmp sub dec xor jle dec mov stos xchg push mov mov add inc int3 jne and push (bad) jbe jae out cltd fwait mov xchg enter dec inc pop mov cmp sbbl inc inc je cs fcoms cwtl inc sbb lock inc inc loop enter mov out mov mov rcrb insl jge xchg inc movsb add lcall pop push inc cmp stos pop scas enter mov fstpt cltd loopne xlat pop sub inc ret and out cmpsb pop push (bad) dec mov movb pusha inc in add or dec mov push inc js call add jle cwtl pop adc pop test das jb,pn push cmp stc jb inc xchg fdecstp les pop aad and and add popf and inc lcall add adc pop inc adc lds loope xor mov out cmc cwtl int3 mov repnz rol xchg outsl aas mov mov dec mov ss shrl scas xchg ljmp sbb iret sbb push jmp ret inc daa dec adc push bound cwtl sbb (bad) fiaddl and (bad) hlt mov stc (bad) adc stc (bad) cli ret les test cli gs ja sbb mov sbb sub mov dec std xor or shr push int3 and mov inc loop out inc arpl cmp dec hlt pushf inc fwait pop and lcall cli cmp push sbb sub inc (bad) inc stos dec inc lret out pusha mov cmpl lret pop push xor jmp adc jb add cltd imul out std icebp mov (bad) cwtl or push fwait mov jo inc mov fwait in xlat outsb int3 sub movsl pop xlat rcll add inc jo fs xlat or cmp inc ret jmp (bad) roll decb push inc std ds and dec mov xor push and test adc inc adc stc or add ret cmp xchg out pop jb int3 in inc xchg divl adc sbb inc jl test neg or out inc adc dec cli test push lds dec andl ret push fs movsb xor inc ljmp or xor inc jbe,pn pop test push jae test sub jae mov mov and pop xchg test popf scas mov xor inc mov iret mov inc in and cmp push lods shrl mov mov push mov cmc dec pusha mov inc fs scas xchg fcoms cmp cmpb inc jne fwait bound out inc gs mov mov push xchg mov mov xor lods inc ficomp mov orl mov and mov fisub dec xlat mov cmp dec jno outsl pop sub repnz cmp mov stos fist adc adc sti test aad sbb pop cmpsl out jg into in inc or xchg inc fisubl add (bad) inc loop insb repnz inc cmp inc daa mov and loop xlat push and push sub sbb in sbb push mov clc inc lret add mov dec cli or sbbl roll dec adc push push and push inc adc insb fistl inc inc sub inc add aad dec insl rorb mov xor mov inc das sbb mov push jecxz pop cmp mov add xchg cmpsl popf (bad) sbb xlat sub inc dec pop ljmp gs add mov mov test stos or outsb sub ret mov sbb lret inc clc add push adc dec push dec cmp cs push out lret int ret inc (bad) pop pop test pushf das pop inc cmpsl mov and inc outsl mov fidivrl mov xor inc adc sbb mov add ljmp popf xchg test mov fimul shl out hlt loop inc push gs xor mov sahf inc and addr16 (bad) and jb dec dec in icebp push or inc inc aam fistpll xor inc push cli inc es xor and fldl jnp and push rcrb xchg and mov pop std arpl repnz mov mov mov jmp mov add pusha lcall movsb popf or in ds dec sti dec mov dec pop daa adc jg inc fwait insl inc std (bad) mov mov rol mov jl add lret movsl or es xchg jb imul inc rorl mov aam push test inc aas movb ss xchg mov and lods clc cmp xor mov aam inc imul xlat push jne cld aas enter add loopne and fs sahf dec inc and rorl jne mov inc movsl (bad) ja sti outsb mull test inc xchg daa dec sbb or add mov and mov dec mov scas dec int3 adc dec dec lahf loop push inc adc sti sub sbb lcall mov dec push dec push sub leave cmp adc loope ss sarb mov add push mov shll xchg scas and inc push xor jecxz roll mov decl ljmp dec in pusha mov inc mov mov arpl inc mov aad xchg jae lods imul imul aad test ss push (bad) dec inc mov inc inc add daa and pop dec lret or or ljmp lods jb fs loopne bound jle mov mov pop imul (bad) sub out push push mov movsb inc push (bad) sbb or rclb inc rcll fwait add mov dec dec fnstcw adc scas inc aas cmpsb ljmp push or popf jb dec add mov inc push adc push imul jg mov inc push inc xor mov daa fnstcw dec inc jnp sub sbb mov jo,pt sub cwtl (bad) mov cmp inc bound add pushf cld jb aaa arpl ds rol rorb xchg (bad) lahf lds mov inc frstor adc jp andl rol cmp inc gs aaa push rcl out sti loopne mov cmpsb inc andb inc jl pop lret adc fs inc cld xor test movsl mov stos inc pop scas rcrb or pop sbb pop adc shl inc cmp mov xor add fdivr pop xor aas popa mov inc sub gs popa (bad) inc jae ret sub addl pop and adc in cmp mov adc inc pop sub rcll sbb push add das les stos movsb ljmp aas inc (bad) pushf test cld cmpsl xchg sbb adc rolb outsb or pop or pop mov pop xchg add inc dec cld clc or xchg dec inc jl mov lcall aas les or bound mov cmpsb inc inc enter mov add out popa popa sub ret and dec daa sti push pop dec cmp push xchg mov mov xchg jg pop out inc lea pop inc sbb sbb xchg int scas xor push ret jnp imul jge inc add xor pop in dec inc add movsl es lcall lock in inc mov aad inc add bound pushf test xor sub inc pop orl xchg test mov mov insl sarl fcoml (bad) cmp sahf scas or aas push pop outsl push test mov ret cmpsl mov pop rorb adc dec lods sbb fiaddl pop stc cmp lret mov mov push aaa cmpsl inc mov xchg push inc xor stos sbb and sub orps inc inc pop sub dec jge rcll mov (bad) xor add jns fwait mov dec pop enter jl pop sbb jecxz mov push lods fxch out imull push push xchg ds into push inc (bad) repz into sub stos test (bad) cltd rolb (bad) and test push add fidivr sbb ret xchg or push inc add lcall int3 scas or gs and ss (bad) jo add outsl (bad) adc ja test ds mov inc clc xchg mov inc cmpsl sbb inc push mov fildll mov jle mov cmp sbb cwtl cli mov mov addl pop fs jno and lcall (bad) fstl sub dec int call push and dec insl push cli cmp ljmp les sub sub in sub pop cli cmp push ja (bad) jo xchg adc push jecxz push dec mov mov and aad mov jg int3 imul or and jmp fnstenv arpl sub test mov pop xor loope push ja dec inc push sub pop loopne ret pop int3 popf jae dec jle inc fidivl jns addr16 fs jge js les frstor lds icebp dec xor ret mov or fisttpl aad xchg (bad) repnz mov rcrb repz inc push int test popa inc loop jecxz sub lahf jl push mov push mov cmp xchg fbstp or jb mov sbb xor sbb popa das jge cmpl xchg mov inc es out clc roll xchg push push addr16 ss insb js test jg mulb repnz repz shrb fistpl aas mov or loope add daa sub andl out rclb add negl mov das insl inc jp mov cli push mov sbbb push dec sub pop roll mov fisubrl inc and mov cmp aaa adc pop xlat imul loope shrb aam mov xchg stos push jp dec es lret or imul adc les (bad) int mov add xchg insl arpl jb jae std jmp dec jae dec fidivl inc sbb and pop (bad) in mov xchg mov lcall xchg frstor sbb test test mov add std loop xchg mov ret sub mov push stos out lds cltd fild test (bad) xorl xor inc dec test movsb mov aaa pusha inc push push mov inc into int3 outsl sbb (bad) (bad) sbb test pusha imul dec xchg in jno ja int3 mov clc mov leave or add enter in out add xor add push inc dec repz clc sti lods hlt mov test pop pop mov sub ss inc hlt jb ds std ljmp dec mov jmp mov sbb test sbb and fs stos push rcrl cmp or daa rolb (bad) xor sub in in push stos setns mov dec popf dec addr16 mov ret aad adcl js out fcmovne (bad) jo inc xorl in test mov data16 add mov jge push in mov sub fdivrs xchg enter cltd (bad) dec int3 fmul push pop xlat add jecxz or lret pop pop cld push movsl dec inc sub mov inc lds mov jno movsl xchg loope lret mov cmp or adc and loop jae,pt dec leave or test mov shrb in pextrw or sbb push push jae xlat insl sub sub lcall ljmp imul cmp fwait push xchg stos dec movl add idivl mov gs inc xchg mov pop (bad) mov sub sahf stos lcall push pop xchg inc cmpsl dec loop repz dec lods xchg push mov or ficompl imul push add imul lret and adc mov jns lds enter in repz add dec sub insb jae push push and push out cmp sysexit roll fwait jp pop (bad) fistpl jb rorb jnp and in jne ret ret mov mov lock mov je std adc data16 push fsubl jno jmp inc scas aas xor xchg pop or dec push (bad) dec arpl (bad) dec pop int3 in inc pop and and mov cmp movsl cmp push into lahf dec sub pop sub pop dec jnp pop std sub cltd jl loopne sbb je into mov xchg gs inc mov pop in mov mov outsl sub popa pop inc mov add sbb inc mov out ret adcl frstor (bad) call rorl sub std and sub push xchg fwait xchg sbb sbb inc sbb sarl fistpll gs pop mov (bad) ss addr16 jge movsb push into hlt sarl (bad) inc mov xchg cld aam push popa loope loopne jo lret int3 pushf xchg into xchg nop (bad) inc scas ljmp inc gs lahf xor xlat or mov (bad) (bad) xchg mov lcall mov and in xchg mov inc lret fsubp sahf xchg inc pop idivl xchg xor inc sub or adc (bad) xor imul ret dec inc ss test mov flds mov clc mov jmp pop notl inc sahf data16 out cmp les out inc sbb divl sub push pop pusha movsl das push inc sub in adc mov popf inc sar jns mov mov mov fiaddl sahf mov fcompl and jbe inc or insb testl dec sbb xchg dec (bad) sahf jg or push ret mov jo popf movsb jmp pop fldcw xchg pop sub push dec mov push inc sbb cld push and inc mov xchg sti les mov addr16 js dec repnz inc sbb ret sub cmpsl mov out add bound pop xor inc mov les push lahf inc test outsl xor out jecxz sbb cmp setle inc xor stc xchg jmp push mov inc mov lcall inc or dec adc cmpsb in (bad) jbe adc pusha leave insl mov into ja repnz push xchg mov xchg (bad) std bound lock sub xlat push adc inc dec int dec enter adc stos fsubl ja xor xchg inc out mov out aaa push subb dec push jns jb inc outsl jbe lret dec inc jle lahf popa (bad) jae loop inc xor js adc lret xchg shrb and dec sbb lods cltd add inc shlb pop imul aad ja xchg outsl and mov inc nop test ljmp cmpl sbb gs xlat in gs fimul mov or stos inc out jae add mov mov inc pop push aad or cld ja ss inc dec sub pushf cmp jne cmp lcall daa ret sbb dec and scas (bad) jae test shrl mov nop mov xchg push jecxz (bad) jb rcrl mov dec cwtl inc aad xchg movsl imul mov and (bad) jno out jne sbbl out adc sbb cwtl sbbl fild cmp jecxz dec cmp pusha jl arpl lahf or int pop out fistpll inc lret cmpsb push les fcomp hlt loope icebp add mov fwait cmpsb xor mov sbb push rcrb sub push cmp (bad) jae push push lcall lahf fucomp dec push mull mov jecxz jae jno and inc loop xchg pop add and sbb push inc scas int sub jl fcomip xor sbb xchg sbb gs sbb clc daa loopne adc cmp xor mov stos inc stc cmp cmpb aas dec inc xchg dec xor lret stos mov pusha pop ret fisubrl outsl or jle cmp clc (bad) sub xor add icebp inc cmp mov mov cwtl aam out incb pop loop test and inc mov fsubs fsubr lcall inc daa cmpsl mov jle lahf inc cmpl divl loop dec adc and inc sub cmp push xchg out lods arpl pop and inc mov daa adc out inc jno stos je jmp (bad) mov add lret add mov pop arpl neg in push outsl sub dec pop aaa dec mov jae test jne xchg hlt jne push jecxz and repz pop dec dec sbb add cmpsb leave inc inc (bad) iret adc xor add imul sbb xchg xlat outsl mov cmp (bad) faddl addr16 adc or jne push inc or add in inc scas repz pop outsb jg dec ret sbb and hlt add xchg out and ds fiaddl dec ss lret ret pop add pop mov ret negb lock adc cs popl jp stos push fwait int3 sbb movsb (bad) imulb inc testb dec add popf inc lret out adc gs lcall mov dec pop fiadd push addr16 in lock movb lcall jmp mov fsubs ja cmp enter inc test stos rcl mov xchg add cmpsb mov roll push int (bad) or and cmp mov in or xchg mov (bad) cs mov jae push ds loopne mov fwait out bound (bad) les (bad) rorb add ret cmp lahf push inc jle sbb fmuls mov xchg rcr jbe inc (bad) mov jl mov inc in pop ret jb inc fwait inc leave and (bad) inc sub cmp adc xchg inc sub jmp outsb xor inc jp pop mov or out loope (bad) or inc ret mov sub dec or stos jno lds sbb cmpsl inc dec cwtl sub and aam bound inc shll inc xchg insl add add addr16 cmp inc iret push dec arpl hlt adc cmp push lods cmp sub imul (bad) in inc add sbb inc ret test stc aas rorb sahf mov call and outsb out lahf inc cmpsb cltd lret fdivr in aam jo add (bad) sahf scas sub push xchg mov add lods jb mov (bad) sti js je push cmpsw mov sahf xchg enter mov inc and out pushf sub insb arpl sti mov mov or push inc in hlt dec sti cmp in sahf adc jnp mov ret adc push in movsl pop (bad) mov lcall cmp das add push insl inc mov repnz inc shll dec sub mov inc inc (bad) sbb cld sbb rclb repnz mov pop sbb icebp mov dec aam adc cmp xor lret pop sbb dec into dec mov andl push pop dec fild jge rol outsl fisubr jnp sbb and xchg inc sbb mov fcoms dec jno ror inc cwtl mov pop addb leave xchg mov xorl inc (bad) cli cwtl cmp mov out mov roll call push iret add xchg in sub sbb jb dec xchg dec mov push sbb cmp push mov xchg mov out jmp or xor inc into aaa mov sub orl lods inc int adc and jl cltd or jp int3 adc decl daa stc fidivl test xor iret mov popf icebp mov in (bad) nop adc in test loopne sbb mov pop (bad) adc std push inc add xor dec fcompl rolb mov xchg mov xchg pop ret jmp push pop inc fisubrl imul (bad) or inc leave ds xchg test add (bad) in daa pop mov mov mov mov mov inc lcall insb adc jmp inc dec pop push lock hlt js (bad) mov mov inc loopne aaa dec xor dec dec pop roll mov dec and adc ret mov outsb jo das ret aas xor scas pop mov add mov fs int3 jb jmp sub mov fdivs rcll xchg jl dec or fldl inc test mov std inc push enter inc or cmp add jo lret arpl mov jnp jb aad xchg subl jae,pt dec cmp inc fildll cltd (bad) dec inc iret dec enter sbb orl rep inc idivl xchg jo movsb orl cs mov push push mov sub push jo inc aad and lahf adc inc push cltd mov (bad) mov inc call movsl mov inc aad add pop sti xchg jae dec add add js sub testb arpl push ret in hlt xor insl jmp and into mov sbb mov mov imul lock mov xchg mov sub inc cmc xor mov pop jno pop jb fs movsl ret inc in jmp loope xor sub inc sbb mov faddp pop cltd push out aad sbb sub (bad) xchg ret sbb scas ja xor cmp inc cld inc and test inc jl pop (bad) mov cmp insb xchg fcomps (bad) adc out inc stos repnz sub imul or push imulb or in pop outsl (bad) and sub sbb cmp je fidivrl inc stos inc in sbb lret repnz sti sti lret inc xchg clc inc in into mov adc push ret cwtl dec lea call jl push mov adc hlt int3 mull cmc push mov sub jge shrl mov jl insb push push mov jns xchg add roll scas cmc sti xor mov ret and mov inc jns mov bnd sbb mov cltd outsb inc loop mov push nop push pop aas mov std (bad) mov push bound mov inc xchg sbb popf mov inc leave sbb cld shrl std mov and pop jo mov jae and inc push and in dec loope pop cmpsl push sbbb xor inc add inc xor out dec push inc mov int dec loope mov inc jnp lea adc add pop lret pop fsubs push mov sub and xchg dec jge test js je mov and popf push push jmp inc pop jo mov stos sbb xor dec hlt jp fwait mov mov add cwtl inc clc insl das mov loop sti inc jmp fisubrl cmpsl mov inc ja xchg shll jl inc cwtl insl fisub xchg pop incb pop sub aad inc lds add in inc cltd out pop jae scas push sub scas inc and pop jb cwtl mov lock mov ficomp adc mov icebp xchg xchg lds rcrl lret inc cli and (bad) lahf cld lds fadd add movsb test mov lahf lcall inc fwait cld xchg xchg rcl (bad) pusha jg inc jmp into jge dec ret jb fildll in aam imul pop int3 stc sbb fucomp ret and mov lret inc stos or pop clc lods cmc push bound pop inc xchg insb into push sub inc idivl add int mov or pop test mov dec sub leave mov fiadd jl sbb ret movsl subl cmove stc ds add inc pop lahf pop mov or add cwtl scas inc sub jmp dec mov xchg push loop fisttp jecxz ret pop jl and xchg sub out outsb mov sbb mov (bad) rorl mov inc sub sub (bad) aad inc mov cld add pop outsl imul mov rcll mov fldl mov sbb push adc lcall je push fadds scas sub inc sahf daa fsubrl inc sbb pop pop insb sub jno dec pop push ljmp xor inc daa dec dec ret xor loop sub dec mov inc out lods (bad) mov mov in mov inc ret inc sbb jb mov and cwtl lret ret lea jl add dec push lds xchg js ret cmp sub shrl out push jecxz imul push cli sahf movsb jb jmp imul in (bad) jg dec nop pushf jbe sub cmp dec and ja dec xor xchg inc push into dec ficomp jmp icebp orl lret xor mov mov insb and sub mov fisubrl test dec add icebp inc jle scas into mov jo dec pop dec iret call lea arpl jg ljmp clc jecxz pop sub cmp gs add cltd into cmpsl adc fstpl imul fsubl xchg ret inc jp adc inc sbb (bad) mov lahf inc es xor xchg (bad) pusha fdivrp out mov addl fcomp or rclb dec mov ret cmp repz (bad) dec jge pop lret inc mov in outsb xlat call xchg adc cmp dec push mov fimull repnz movsl aas orb imul and mov outsb clc (bad) aaa int3 pop inc and ror lods inc and and je in push jo jecxz ret (bad) ja jg dec les lods add cmp push repz pop fwait mov inc nop scas mov jne inc cmp jle stos pop icebp jb push in sbb cmpsl inc mov mov xor loop data16 add dec test dec xlat xchg jmp mull insl clc or dec jnp cmpsl cld cmpsb fimul push sub les movsb inc sub adc pop clc (bad) mov inc inc mov jae inc arpl mov dec pop mov mov xor mov into inc sbb ret inc (bad) xor cmc push dec cmpl pop inc mov push lcall add loopne or mov jg xchg or inc imul out jb inc jle pop dec ja iret xor mov mov roll inc push inc call insl mov mov mov jmp jecxz pop push sbb xor mov mov jl push pop xchg outsb jge xor lahf xchg mov test dec jecxz roll cmp dec add and int3 test add scas dec pusha or adc daa in add out jo orl cmp aam mov lcall mov mov cli inc mov dec lods sarb add iret mov insl cwtl and cmc int or push sub jp mov xchg cmpl addr16 lahf xchg xor add inc cwtl dec mov cmp aam std mov fisubl popa in lcall iret dec loopne in test repnz and lea neg mov adc jbe mov imul xchg mov jecxz push jae jp dec inc jae mov scas xchg inc es into notl sub mov xor ror dec clc in inc dec (bad) inc fimul jl pop fbld scas add es insb jae inc outsb jbe mov inc repz dec jp cld pop and ret lods xchg popl push scas fidiv and push aas adc in mov js xchg inc cmpsl fild lds and int push push sbb pop inc add jno jmp sbb and test lcall lahf stc lret rcll xchg cli mov inc sbb test inc dec push mov fcmovnbe repz push jbe call cmp lock jae sar push pop icebp mov jmp popf dec jo scas cmp inc jne test mov xor shrl lock sbb sti inc stos sbb and add pop inc nop daa cmp xchg lods or inc inc add jae aam push sub adc in dec fsubr (bad) aad cld inc jb mov pop inc cmpsl pushf andl outsb mov and inc cmp cs mov das ficom cmc jne test and lret cmp and sbb sub cmpsl pop ret push outsl fsubrl xchg inc add push xlat in push xor pushf cmp inc pop push clc hlt jno xor fildll insl cmp add add decb mov leave pop push (bad) ja fcoms or aaa dec mov jle repnz add jge inc inc lret into ret push js lret outsb cmp adc rcr enter inc sub mov dec repz imull test test adc dec (bad) mov dec (bad) andl inc stos subl pushf dec add cmp (bad) outsb ret jnp pop pop loopne jns push scas mov add or testb jne rcll out mov add inc aas jbe cmp lcall cmp xor enter repnz testb or fisubl inc faddl mov and xor inc call test in clc hlt icebp ja xor inc mov aam cmp mov xor xchg repnz out insb leave sub sbb test mov rclb lods fistpll aaa dec and mov mov imul mov add inc jge inc sbb jo fldt xchg dec std or cmpsl or mov or sub pushf mov jno mov das sbb pop cmp push jne lds rcl in or popa mov lods mov pop mov add (bad) mov and inc imul jmp std lret inc fwait out daa sbb insl push mov mov sbb inc mov jp pusha jmp inc test stos pop stc add push ret dec pop inc inc mov lods inc jns dec imul inc dec pop dec pop inc lods (bad) and xchg jmp arpl jno mov dec mov sub loop xor fcomps jge and push inc mov sub and (bad) lock fisttpl sbb (bad) sti test add push pop jl cmp inc jo (bad) aam xchg mov inc cmpsl scas mov mov push sub inc ret int3 sub into call add dec aad popa or add inc sbb inc xchg fwait sub hlt push shl sbb mov dec mov iret fist jecxz and fidivrl inc scas jle rclb lds inc mov dec mov (bad) pop adcl inc rcl aas lahf pop sbb and inc sub and inc mov xchg push imul cmp in sahf fpatan sbb jbe and add add add lods clc inc cmp add sub outsb inc jle sub (bad) repz cwtl ret jge cltd xchg pusha iret lock ret pop mov inc fadd imul or and pop xor inc insl js and jno maxps ret jecxz jge push cmpsb fnsave jl inc push in inc cltd sub bound xchg xorl dec lea iret lods sbb add imul inc and fisttpl (bad) mov inc fldz mov jnp outsl roll cmp cltd mov inc xchg add jp push insl sbb int dec int3 (bad) cmpsb mov mov push sbb jp mov in cmp ret sub dec pop insb cmp flds mov push push inc add pusha cld or lea imul dec inc test stos mov jge pop ret dec outsb cld xchg lcall inc xchg jo repnz pushf jb push enter mov push cmpsb pop mov inc sarb ret imul in jno pop xchg ret mov xchg fistp sub jae add ret les mov (bad) cmc pop xchg cs inc xlat add cli dec inc xchg pop (bad) lds sub inc add bound bt and and (bad) xor xchg addb adc and push push leave cld ret loopne xchg jecxz inc mov adc or cmp xchg sbb int mov lret dec inc arpl mov enter sahf inc loope in and xor stos lahf (bad) cmp ret mov mov jmp (bad) aam inc sbb insl ret adc mov fwait cmp imul sub test or dec divl andl add push mov mov add popa inc addr16 nop mov outsl xchg cmc and cli dec lretw adc jne mov notb and inc pop loop rorl push repz dec jmp (bad) mov cmp mov jno mov out aas je mov mov adc pop stos jbe add mov inc mov jo les notl loope stc adc icebp jae std pop inc int xchg shlb lds xor dec pop push pop loopne inc ja adc sbb adc inc sbb add push aad arpl inc inc data16 cmpsb jb das adcl mov aas inc dec sub (bad) ja into inc pop lret sub inc push aad imul outsb push daa adc or lods js mov mov mov mov cmpsl add ror mov inc mov and mov push inc inc loop daa test inc in add repnz mov inc clc or ss movsb loopne loope mov push lret xor daa jge xor sbb sub imul sbb dec cs (bad) push aas pop sub fbstp mov inc popl jmp enter adc and pop mov adc cmp sub fimul mov enter cld xchg xchg dec cltd insl in adc popf icebp push bndldx (bad) dec mov inc clc (bad) sub or mov dec push stos repnz iret pop cmp cmc ss fwait mov xchg cli lret jnp dec stc insb mov dec (bad) push ret inc add adc (bad) ret loop xor jo subl xchg mov add fldl sbb dec mov xor pop sub dec inc xlat sbb push ss sti lds inc out xchg pop mov lcall stos or sub repnz je mov (bad) outsb ja pop inc repz inc jne sbb sub add xchg inc xlat inc or scas scas mov inc sahf repnz cmp dec add rorl push add cld xchg imul mov das imul sti or jae icebp lcall jb int shrl jo mov test ffreep mov jb xor pop sub inc fisttpl fdivrs dec or inc inc lcall add pop and mov inc in adc ret mov push aaa leave cmp stos mov iret cmp das cmc or and jb pop xor xchg aaa mov addr16 bound push ss inc ret push cmp iret jae sbbl pop mov dec inc (bad) fiadd push mov mov in push out xchg iret inc sti lret (bad) or sub cltd imul jns inc fimul push loopne xchg xor xor rcl jmp sub inc leave jl mov dec test jb sbb or push cmpsl mov dec mov inc inc xchg (bad) mov or sarl daa inc mov fnstenv call scas inc or ljmp push lcall inc std sub cmpsb sbbl inc pop popf call adc (bad) icebp pop mov ja xchg das gs jnp add pop aas pushf sarl cwtl es mov lock bound cld mov jg in sahf xchg and jl mov push and ss mov sub sub mov fwait in inc lods hlt pop shrl test inc mov and rolb add inc mov hlt pop fmul push or das push loope and inc adcl test jb lock in pop cmpsl inc xlat jnp rclb push aaa cmovns js test inc or lds xchg lods push jno cmp fildl xchg mov jl push add lret xor sub jmp sbb cmp scas add sbb cmpsb lds inc lcall cmc xchg dec clc popf fidivrl std fisubrl fidivl or in test inc pop aam movsb nop jp mov cltd daa xorl sahf jg xchg (bad) jne incl jg scas subl repnz inc inc fisubrl add push add mov mov addr16 into jo mov inc mov sbb jo or jnp cmp fwait inc fsubl hlt stos lcall ja push adc dec lret xor push inc or (bad) out into push (bad) mov aad push lods test push test stos push mov (bad) and and xor and push dec mov push cmp arpl add stc imull stos leave pop cmp scas arpl loop,pt icebp jo repnz sbb test mov sti inc and js add mov or xchg out sahf aaa xor sbb adc cwtl int3 roll test xchg inc ss or fisubrl out cmc clc subl out loop mov push nop (bad) loopne int3 adc faddl movsb add lahf mov push push xchg ljmp and (bad) imul sbb fbstp add hlt or test rcrl stos cs inc dec andl adc fcomip test mov sar push and repz sub aas inc add ss fildll inc jmp cmp popf jno jecxz jle (bad) adcb repz inc push fdivl testl int3 cwtl sub jo rcll aad js and ret mov push push orl divl push sbb mov ss sub inc sbb mov cld movsb inc inc hlt xor ret adc jae mov push cmp in (bad) ja repz lods cmp inc stc daa loop std fldt sbb or scas add cmp mov das xor (bad) inc mov lret int outsb inc xlat sbb mov (bad) pop stos dec leave test dec gs jno fildl mov jl pop loope or movsb push mov mov pop test add (bad) rcr sub sbb xor push jne ret xlat xchg lahf cmpsb mov add jle sahf cwtl (bad) incl pop adc sbb rol bnd ret stos or daa push inc aas std xor movsb add aad dec pop sbb xchg (bad) and inc mov and sbb jl add imul fadds lret xor mov mov popa fiadd dec jne mov jecxz mov popa test dec and sub push les cli inc (bad) sbb sbb mov (bad) and and add ffreep push add inc gs push cltd fcmovb push and in mov jns repz (bad) push aas mov sub push bnd xchg fs hlt dec arpl arpl lret push cmp push xorl xchg jl dec stos jecxz cmpsl cmpsl push std andb push sub into stc out xlat loopne fadds repz shrb jne mov push jo sub and icebp adc and sub sahf xchg jbe fist pop jg mov frstor or bound mul stos inc dec jb sub int3 shlb push and aas jae dec push fcomip push push cmc sahf vmovaps lds and pushf call inc or das mov int and les and mov roll xchg xchg rclb repnz out mov out dec pop push (bad) addr16 push out dec test iret cmc das or add sbb aas into loopne in inc xchg jg xor add clc xchg aam ljmp jnp or leave ds cwtl hlt cmp pcmpeqw add sahf mov icebp (bad) in jg outsb out push and roll popa inc inc inc jmp cmp sbb adc addr16 mov inc cmp into add jmp fs cmp lds les inc leave mov repnz jne inc test sbb fiadd pop sbb dec mov sbb sub addl divl aad push scas clc inc xor adc push roll jmp jmp inc fistp mov push inc ja inc mov jno pop insl inc popa les addr16 sub popa xchg fisttpl dec cwtl or ja add incl push out lods dec enter bound movsl jmp call movsb outsb mov push aas sub rolb inc scas mov sbb or dec dec jl out mov icebp lret cmp sbb stc (bad) rcl xor inc (bad) cmp test enter pop sbb xor in mov xor or and push and xor jmp or sub and or mov inc mov cmp test into int3 fidivrl dec pop test cmp inc (bad) mov out xor sub xchg ret dec mov mov adc out bound clc xor push dec mov loopne ret mov stos stc insl ret add subb and cmp popf out pop pop lods ret inc jecxz sbbb ds rcll scas xchg repnz dec lahf add dec mov les repnz nop sbb fsts in cmc sarb mov dec dec push jle aam scas mov movlhps push lea lcall or and pushf test gs lret (bad) sub adc add pop cmp push mov in mov add add sbbl sub mov push outsb inc scas andb arpl in push jae leave inc sbb or fs popa jb fisubr sbb jno mov in jle adc dec fwait hlt shrb mov cwtl inc push cmp addb repz clc pop mov imul mov or sub dec sahf cmpsl in cwtl dec int3 leave inc pop push icebp jmp stos outsb mov dec pop dec push xor aaa movsl inc aas push xor fmul mov inc gs (bad) sti sti (bad) push or mov inc imul jns daa lods push rolb inc and inc jp mov jge inc popf mov xor cwtl jb inc sub fldt imul jmp fsubs jne mov pop jnp mov test dec mov aas jbe inc xchg test cmp and movsb jp lahf pop add movb rcl in and pop xor dec mov inc and lea mov imul sbb xlat call push (bad) mov push inc pop in lods lret ret dec std mov out cmp in mov sbb inc push mov call mov es or adc dec mov out dec sbb mov inc jne test int cltd je addl leave pop jmp nop pop adc iret cmp push int3 and inc notb bound xchg pop mov or lret loopne in push inc mov and lret lahf xchg mov dec scas (bad) cli mov inc out popf jp pop andl movsb inc xchg lods andnps in inc xor or xchg dec mov scas mov pushf (bad) lea push inc dec jno adc mov lds add xchg cmp ret aaa (bad) sub dec sub mov ret pop pop stos mov cltd cmp fwait xor outsl add mov add inc push sub mov in inc ss pop in das fildl aad clc mov leave iret lret fcmovnu mov or cmp sbb pop call xor sub xchg xchg cmpsb lret inc inc fsubs or jge push add stos push push popf (bad) xchg test cmp push cmp mov add sub pop mov push cmpl cmp adc or lahf add cmp in arpl sub cs ds or icebp stos movl add or inc and (bad) sub inc push sub inc in or jnp sub ljmp push xchg dec sti roll sbb stos xchg mov dec mov inc add test push lods and jnp sub xor out test (bad) push inc movsb repnz or xor xchg sub lret fldl scas sub push pop xor mov xchg xchg dec xor in out sbb sub adc std xchg sbb dec mov xor xlat cs push data16 lret (bad) mov outsb xchg pusha loope das inc (bad) mov or or inc pop mov xchg (bad) repz outsl aaa xor dec lret sbb inc inc jg pop imul add dec push xchg adc ljmp in and xchg inc adc divps mov pop popa mov ljmp dec out or aam push inc and int3 sbb scas adc jge xchg inc cs xchg xor push jl sub push daa lods cmovge sub inc mov xchg sub hlt js out in sub xor jl (bad) lret adc pop inc and and lods fld pushf mov sbb jae jecxz inc adc or inc mov daa ds in fcomip ret add rclb cltd lahf ret and sbb inc aam dec stc out in cmp pop mov (bad) mov (bad) mov inc inc sbb pop push jno jns lahf mov add cmc outsl inc fwait and (bad) jno jle mov and adc jge mov sub push addl daa xchg adc add inc add dec pop mov sub lock xchg sbb sub repnz jle push fsub push cmp enterw out adc lret imulb jnp mov test (bad) pop jg add and lcall xchg inc or into ret out call adc gs aas xchg ja bound and mov push xchg in sub mov pop sub jge fist push xor dec dec sub (bad) xchg fildll mull mov add movsl pop int dec add cld adc jmp dec push and sbb repz cmp mov add inc jg sub mov fcoms mov mov sar fisub inc jecxz (bad) ja jb pop and inc add sarl jecxz lods pusha push push (bad) int loop (bad) hlt fs lret sbb mov xchg adc (bad) mov out inc testl and shrl std jmp jmp dec mov dec cltd stos and mov inc sahf cmpsl insb in ds iret mov or pop xor dec inc test jl repnz inc imul mov pusha push fcomp pop dec incl mov and adc inc sahf xor add or lahf xchg fisubl inc movsb test jnp scas xchg cwtl insb xor xor out sbb test cmp out mov push xchg ja cmp (bad) lea sbb xchg mov adcl push sbb inc add outsl push jbe fild negl fiadd bound in jmp shrb pop mov xchg cmp jle inc je mov or xlat js fcmovnu pop rolb sbb jle in push loope or jb imul das mov cltd pop inc imul popa popa (bad) mov pop mov xchg push arpl dec sti cmp xchg dec mov xor inc pop pop outsb jl cwtl (bad) inc pop adc test mov ret aad dec lahf mov sub cmp (bad) xchg mov xchg inc add je sahf (bad) stc loop stos xor sub sbb std jl mov xorl fs popa add (bad) mov fs dec and dec sub mov lret fimull rcr (bad) mov out call out xor and sub lock shl and push pop arpl inc ret imul insb mov cli push stos push dec sbb inc roll jbe add jno (bad) rcl xor or and inc ret andb inc mov sub jle or movsl aad ds push out inc pop or (bad) fnstenv cli add cld dec push inc cwtl and repnz xchg (bad) push roll ret aaa or sub loopne in rorl jmp shlb jnp adc add in pop movsb inc popf xlat in outsb sti xchg push push into ret push pop lock enter stos pop xchg jecxz pop scas inc jns call pop inc push sti cs xor dec mov enter inc xchg hlt lock lock add test int3 xor in push std daa cmp xorl adcb incb sbb es int xor sub mov xorl xchg jmp mov fiaddl aad jp test inc (bad) cmc jns,pn mov int aam roll rolb sbb inc into xchg mov sub add (bad) out pop out (bad) dec and sahf leave mov (bad) repz inc jecxz popf push dec mov inc js mov inc adc outsl jle paddusb mov dec mov mov das popf xchg cltd inc daa popa add je mov jmp rcrb push xchg push pop sti pop dec popa fs inc inc bswap ss fildl adcb mov xlat sbb cmp (bad) hlt xor jp push dec dec pop loopne ret mov bound loop adc js loope or inc aas es in push mov dec cmp test jbe pop dec notl mov addr16 fidivr inc in xchg stos sub imul add inc movsl sbb cld push ljmp dec jl xor and inc cmp popa in pop mov (bad) sti inc push mov dec add xor imul icebp mul and inc orps and cmpl fildll call mov fstl leave pushf adc jmp sub iret cmc push arpl cmp in cli sti mov dec sub outsl imulb ret sub insl sub add int daa addl inc adc into inc popf push lcall loope and pop inc jle cmp mov jne loopne rclb ret stc addr16 pop in pop push push cmp mov inc rolb int movb and stos add dec addb fs insb mov (bad) fldt jb les adc inc adc jge pop pop aam repz gs popf dec jecxz ret dec cli ret sbb sub outsl inc in xor daa xor and or subl add add je push mov inc das jne add mov outsb popa pushf inc repnz push xchg insb sahf (bad) mov cmp xor jnp push ret xchg cmp inc mov lds inc push lock stos adc add and fldl sbb (bad) sbb in pop add mov dec mov and push aas push leave call push cmp mov cltd mov movsl inc aaa sub jle daa push cmp inc jecxz sahf push inc out popf lds mov add jmp lock ficompl popa repz jno lret call mov fstpt lock cltd mov push mov adc push jns xor dec push lcall cwtl sub cmpsl mov push sbb sub sub ja notw mov std push push sti inc or mov loop or in out cltd cmp sbb in mov loop pop sub push xchg xor sbb pop sub ss sbb push adc and pop inc mov dec mov sub dec (bad) jecxz and ljmp jecxz xchg cmp sub mov cmp xchg ficomp xchg or mov xchg xchg dec add sti xor lods sub and repnz cmpsl fisttp or (bad) xchg out cld xlat push sub mov inc mov jp sti mov int3 jp sub dec daa loope dec push jmp or out and add test push dec mov fs xchg sub mov pop push shrb push fdivs or sub imul mov jb,pn mov sbb xchg mov sbb add in mov pop cld sub sbb adc in xchg cmpsl mov mov jp mov fwait add jl or lahf push and mov push stos push mov adc loopne loop imul js cmp aas xchg inc push dec or inc push dec stos loope insl das inc cmp jle imul addr16 (bad) add cmp sahf or inc call cmp out dec ret push or (bad) in pop (bad) bound mov ljmp aad push cs js sub push (bad) xchg out push pop push insl add enter imul add mov push mov push jge dec pusha repnz xchg ja inc leave dec sbb cmc inc imul adc inc cmp mov jb or fist daa push dec pop sub adc mov push push loop pop (bad) xor in cs mov mov pop jns aas push lds out mov fcmove stc jecxz cli add nop inc imul mov fidivl dec int3 mov or movsl loop mov inc mov dec jns (bad) add int3 xor adc cwtl shlb jle mov fwait imul sub jg ret addr16 xchg mul scas inc add aad or mov mov xor sbb xchg in push dec cmpl dec jo xchg jo sub ja mov xor in sub lea imul sub lds aad stos sbb mov inc in fidivrl push pop hlt xor test (bad) cmc int3 push shrl aam fcmovnu adc cmp mov imul mov add mov in sub nop (bad) and popf fcomps je mov aad push inc jo jmp lcall inc cmp cs aas (bad) loopne mov std sbb dec inc les mov cmp in cmp leave cmp mov jo movl mov lret cmp push jne lcall jl jp ja add jg xchg mov in cmp icebp push dec xchg adc js inc es sub xchg fimul loope or shrl sub mov mov or jmp (bad) lods fstp xor jl xchg inc aam cmp pop mov dec stc mov fsubrs into mov (bad) mov push icebp lahf pop mov push pop mov push sub inc (bad) rorl mov sbb lahf inc xlat std andnps dec sub jbe scas add in inc sub loop and adc je popa or mov (bad) jnp push adc outsb aad and rcrl inc iret jle xchg movsl pop shlb pop push jge roll fstpt pop or push movzwl inc mov mov test shrl nop and adc movl mov fnstcw aaa add pop in sbb inc xchg test mov dec mov faddp daa std push push and cmp das sahf pop xlat inc dec pop loope xor pop sbb xchg cli adc inc clc sub or inc lds xchg shlb pusha inc jo inc in sbb mov adc movb in arpl pop scas faddp cmp ljmp pop dec and cmp fs iret out xor test mov cwtl dec in out adc pop shrl mov cmp inc test shr push (bad) int3 inc and loopne sub pop push inc (bad) shlb clc mov aam les jae ret lods mov std (bad) mov mov lods lcall xchg shll dec xchg cmpsl mov into sbb outsb cmc cld or shrl (bad) int3 inc cmp pop imul fsubl jmp ret or lock add pop and push push push push (bad) dec arpl scas lcall (bad) mov add ret out sbb jbe inc cmp xor add or inc loop jnp or stc inc std xor inc inc push xor ss in arpl cmp xchg stos mov ret outsb sub ljmp jl mov rorl pop push (bad) rcrl pop pop mov adc add mov inc push ret jle aam rolb mov and clc (bad) adc xor lret lret outsl push lret inc iret in repnz scas (bad) jae jecxz scas divl cmp testb inc arpl es inc loopne xchg outsb ret and inc scas (bad) mov arpl int inc std push jge icebp icebp inc adc or leave (bad) outsl shl sub inc ja jg dec hlt aad mov add fidivrl mov xchg ljmp jb mov sbb dec mov mov inc sbb insb push hlt push out jbe inc dec gs mov (bad) aad or daa inc add mov xlat ret iret clc inc or cmp es in mov mov inc xor mov stc inc xchg cmc mov aas push inc addr16 sub or add xchg mov stc inc pop ret cmpsb and mov dec cli sbb aaa inc xchg push mov nop jne incb pusha outsb inc rolb (bad) jp and aad dec cmp cld dec ds mov mov addr16 test pop outsb sub cltd mov (bad) scas loop mov lcall push sbb cld lods (bad) aad outsb lret loopne xor pop push cmp xor inc inc push dec mov push outsb inc pop cs jmp or ret jge clc stos fidivl pop rcrl lds inc repnz lcall inc ds (bad) imul lret int3 cmp les inc xchg push mov inc xchg int inc inc jg dec ret inc les clts push jae scas push loopne ret outsl mov imul mov add sbb cmpsl add ficoml push inc jp mov rorl sub dec pop fldl out int3 out mov aas fucomi sub mov cld xor inc (bad) aad into nop loopne or pop sti xorl addr16 xchg jns testl cmp pusha push call push jge mov fdivrs mov scas mov imul rolb ds jmp mov push inc mov sub adc es or addr16 adcl inc jg fistl sub mov add cltd jno sbb mov aaa addb inc push xor push lods dec xchg (bad) jecxz (bad) xor push pop cmpl xchg mov rolb adc fwait sub aaa in arpl pop mov pop cmpl or (bad) mov mov jecxz fwait lods mov inc adc loop ret pop cwtl lea push xor inc pop add in sub push and ds dec xor and xor sub lods sbb cmp aas mov stc sbb cs mov adc dec test pop xchg push lret popa add stos inc (bad) mov xchg ret pusha inc sub pop sub mov dec stos dec add adc and dec pop lcall sub jg scas (bad) jae ljmp jle mov (bad) sbb xor xchg push notl add loop sub inc push shrl rolb pop cs cmc sub jl lcall aaa int3 mov cmp mov jns add push inc sbb inc imul push pop sbb cmp or cltd mov mov int3 xchg cmpsb insb push lret stos xchg mov lods out jns and outsb mov sub xor in ja mov mov and jnp inc lds adc add mov push aam jl jbe cmp fildll dec (bad) jb xchg mov fdivs mov adc push subb decl sub cmpsl (bad) inc stos dec dec cmp lret xchg ror aad add sub xchg sub inc mov mov sbb fwait test les add std jecxz out adc or pop pop into sarb mov push cmp fist sub dec lret add jnp shrl sub dec insl lret rcl imul jns mov xchg dec pop iret pop les push lea add or lds xchg push int push je gs jne push arpl jp in inc stos jno xchg out sbb rcl fwait xchg push add jmp or and les push push pop inc adc cmp lret aaa (bad) cmp sarb sub cmpsl cmpsl mov sti xor xor sub mov ret stc sub xor dec into (bad) (bad) sbb pop mov sbb aas pop inc out dec rcll mov cli inc imul jbe stc in std outsl xor pop mov data16 lods lahf movsl out and outsb sti iret add adcb cli inc rolb inc inc push cmp sbbl inc dec movsb ja mov pop ret (bad) push add cmp inc mov mov sbb and clc and mov mov lahf or jo js xor gs roll pop sahf mov and or dec xor add inc inc mov pop (bad) inc jmp into pop insb jno xchg popa inc and scas mov pop inc test inc inc inc arpl stc mov inc mov sbb dec fildl add add mov pusha fs test xchg rclb loope push or bnd imul call jecxz,pn sub fsubr dec sub add sub dec js (bad) repz xchg sub inc fdiv mov sbb cmpsb mov inc dec loope xchg lret inc push in xlat and scas outsl aas test mov sbb test inc vsqrtss out call mov sub cwtl in cs push jbe int3 xor adcl push or dec sarl ret sahf or cmp ljmp xor inc inc push cmp sahf stos xchg inc daa lcall push mov js sbb orl fs or jg push ret outsl fisub pop mov ss (bad) mov and stos jle inc mov jmp pop inc inc mov adc fxch add je inc xchg jbe iret dec inc or jle arpl mov les repz out cmp mov jp ret adc data16 dec mov loopne (bad) inc (bad) (bad) mov sub loope jecxz out adc add andl fwait and mov pop push jmp (bad) (bad) jle xchg (bad) or pop push mov xchg dec sti push inc inc sbb sbb mov inc cmp faddl push daa imull adc inc pushf shlb inc (bad) fbld je movsl adc cmp jnp adc inc dec sub cld add cmpsb popf mov sub ret rclb dec mov or test adc jl push jle loopne sub dec divb and or add push repz dec lock pop lods out inc add fstpl push xchg jo inc xchg addl cmp inc lds lods inc or xchg lcall data16 aad popa jo pop inc sub xor mov jecxz mov lcall mov (bad) jge cmpsl cmp ret inc inc fisubrl imul lea adc jno mov pop int pop push xor mov inc xchg push xchg sbb in cmp dec je leave test mov icebp inc imul movsb inc stos je mov insb dec mov shl push loope in aas lds ret inc inc push sbb xchg roll and and incb add mov sub adc cwtl ret fnstsw clc xor movsb ret lea xchg pop adc das mov rol lcall stos mov xchg (bad) sub popf sbb sbb jg inc sbb or loop cmp in add push (bad) (bad) dec movsl fmulp push sub cmp inc inc add hlt mov mov cwtl data16 loopne and out je pop fwait sub and xor mov (bad) rorl stos lcall push lock cltd out mov lcall jecxz stc dec insb jge int inc adc push lcall imul cmp add jb cltd (bad) inc jecxz sub xor push jp movsb idivl sbb rep push cli mov insb into inc mov cmp pop lea repnz sbb lods aaa sti jb add xor xchg push dec and jg,pn outsl clc fwait cmp das dec enter fmuls adc pop std addr16 je enter pop ss inc loop int dec mov inc ljmp push inc andl push (bad) popa jne fwait inc setbe mov jnp mov imul jb jb,pn out pop call cmp arpl (bad) notl stos int3 xchg hlt xchg lahf fistp inc adc notb push hlt sub lods mov lods cmp add or cmovp jl push or cmp (bad) cmp fimul sbb cltd inc cmp in and lods jns andl sub cmp aaa lds andb xchg and inc push jge es cmp jno cmp push stos sub mov fldl or mov adc (bad) iret mov inc dec jge arpl repz pop mov dec cmp push loope jo scas inc fcmove or push bound xchg pop test clc movsb repz mov dec insl xor sbb cltd leave ljmp and repnz cmpsb lahf in lcall mov mov push imul or xlat sub inc dec pop sti dec xchg and inc jge pop int3 mov add push das out stos aam addl adc jmp rol inc mov add test loope mov (bad) fbstp sub stc or arpl enter test and mov inc add clc ja xor mov sbb lds cmpsl ret lret adc mov nop rcll out icebp inc aad int3 mov and test out add jae repz daa or xchg sarb in jne jge shrb cmp subl lahf pop sbb dec outsb scas xchg cmpsl ret rcr push and mov add inc inc test pushf mov mov jns xor mov orl sub and inc insl add xor mov inc dec and xchg mov adc (bad) je ret adc mov inc xor jo and sti push inc pusha or and inc arpl cld mov out pop dec inc divb sbb push sub lock cmp jp mov ret push cmp inc add nop mov lcall mov push daa incb or add xlat pop inc sar pop scas sub (bad) push sbb xchg pmullw aaa push inc out add call inc jbe xor popf movl out inc xchg add rcll mov outsl xchg and sbb dec add mov push pop in sti mov imul inc jno inc or jne imul mov les mov ds sbb inc cmc jl in xchg push inc int3 sub push jecxz enter jno adc mov inc pop inc movsl cmp cmpsb dec mov and inc cli inc pusha mov stc sbb movsl mov insl pop sub mov inc adc push xchg stc push pop in repz stos dec les mov int3 ss jo mov add push pushf cmpsl fistpll sar rcll cs or mov inc xchg dec xchg add xor inc loopne xchg sti lcall inc push dec out cmpsb mov dec or fstpt adc jo lea addl ljmp (bad) fildll mov dec xchg mov push fwait adc push imul cmp lods inc sti add xchg and (bad) mov pop je mov lock cmp clc mov sbb enter rcll iret cmp xor jecxz outsb movsl in fisttpl test mov rcrb ficompl mulb cmpsb cmp add (bad) rcl jne loopne jb imul mov push lcall imul pop sub adcb rorl test jno pop call movhps ss pop cltd addl int3 or (bad) or mov jb leave int cwtl shl jp into mov lds jnp mov stos in pop sub cmp stos xor aad insl mov mov and cmpsl outsb jnp cs lcall push lea (bad) imul test arpl add mov lcall dec mov imul jecxz outsl sub dec mov pop mov fstpt out inc mov cmpl xchg or das mov mov cwtl std popf pop xlat xor outsl fisttpll lcall ror mov cld sbb out mov cwtl les dec sub sub ret sub mov and jo iret rorl dec fistpll sbb mov ljmp xor push cmp dec pop sub enter xchg sub rol aad inc subl xlat out dec add mov fwait (bad) xlat mov and mov push outsl stos sahf aas xchg sbb dec inc into aad ja pop iret pop sub xchg mov pop loope inc sbb leave adc adc cmp sti addr16 sub imull fwait xor sbb fwait dec or mov push or sti in dec xlat fnstcw jae js (bad) mov iret jbe sahf bound scas mov out cmovle repnz mov push sarb stc inc push push cmp ss and mov inc mov movsb rcl cmp lcall jmp outsl jnp push cmp in (bad) daa mov testl inc push sti adc xchg shrl inc mov push cmpl lock jbe push sub out inc pop mov imul (bad) push mov cmp pop jmp sbb incb scas sbb int sub and jmp push xchg mov sub jl add sarb mov fistp push addr16 rorl sbb add add (bad) jecxz dec xchg inc push inc cmp insl ljmp xor mov cmpsl ret loop xchg pop cltd mov push push mov js out fisttpl ljmp and ret aam push pop mov out jne mov shl pop mov inc xor in lds and mov or insb inc xchg mov pop jp sub (bad) push orl dec fwait lock jae ljmp xor jb push popa inc inc in xor jp aaa outsb inc jg mov pushf inc lods mov fmulp sti jecxz sbb stos inc iret push inc cli stos xchg or lahf loopne inc pop adc (bad) inc rcrl scas inc push in pop addl inc sub test sti xchg pop xlat das jnp and inc aas (bad) (bad) ja sbb nop mov inc dec dec add sub cmp pop add pop sub roll repz dec xor inc cmp pop movb cmp push cwtl push ret shrl int mov cmp xor mov movsb jno popl (bad) out dec mov xchg stos xor dec ret rcr cmp or cmpsl jb jnp pop (bad) cltd shrl adc xchg sub jmp xchg movl lea xlat int3 push data16 cwtl pop (bad) mov mov popa orps add pop ljmp jns popf cs sahf int3 pop push sbb sti push rcrl stos fisttpl daa cmc lcall or outsl (bad) mov imul mov lret nop dec pop xchg (bad) dec mov add pop (bad) sub fdivr mov push (bad) push push cmp repnz dec sub out or out stos jmp call or mov xor or es dec enter dec sub aad adc sub mov mov scas imul push inc rorl inc sbb stos je fwait dec test leave or adc fmull pop mov mov iret mov (bad) sub cli adc xchg sbb dec jb daa xlat add test adc rolb cmpsb pop jle mov pop and adc push xchg fsubp imul pop push pop push repnz insl sbb les arpl xchg fucomi inc mov mov hlt out push (bad) popa and jae rolb mov and xor jne dec movsl xchg inc andl mov dec insl cmp inc fcomip aas gs int inc sub cwtl add cltd in (bad) ds xor lea mov inc jl std insb cmp inc dec lods cli lcall inc popl adc push repz (bad) dec cmp adc (bad) icebp cmp xchg inc jno (bad) (bad) sbb dec fadd mov push and mov jae xlat inc sub push aas inc inc jns inc dec pop mov in xchg fdivs inc mov mov mov mov jmp xchg inc ljmp stc inc sub mov sub call std xor int dec aas addb pop mov mov movsl out push repnz divl shlb inc cmp cld test mov (bad) out inc mov negb mov aad or outsl dec pop sub ret out inc xlat out (bad) fimul fimull mov outsl in mov roll cmpl xor inc xchg ljmp pop aaa jmp jmp addr16 inc in iret incb mov hlt and adc inc adc sbb arpl xor push jecxz ds jnp or sbb push gs jae cltd fidivrl lds in inc shlb lahf loope jns movb stos movsl out xor outsb push not es inc shrl fstl jecxz mov sub or pop push jge icebp hlt or cmp mov inc in nop xchg (bad) jb out inc aam bound mov (bad) repnz inc mov adc inc (bad) lock dec loope fdivrs and add insb push rol jle movsb aad sbb mov pop lea mov sahf cmp jmp orl dec jb mov adc xchg cmp add roll les int imul inc sbb jo sub fldcw mov and mov jmp add fucom daa mov (bad) pop push inc lcall cmp lret flds clc lods out popf scas (bad) icebp inc sbbl inc inc out lds mov and sbb jge pop lods mov inc sbb inc loop je dec rcll out int3 frstor adc jg inc add dec call jno clc pop stc inc lods mov adc stos cmp cmp dec xchg push add xor push pop inc pop mov out inc dec adc stos inc (bad) (bad) mov rcll mov test (bad) loopne push mov mov push inc and push or inc inc push push int pop sub lret stc (bad) pusha jle mov insl jb mov add add jnp xchg je int3 pop or lods add xlat inc outsb xchg (bad) ss add fstpt inc sub inc into pop dec sub cmp popf cli inc pop inc repz jno jge jecxz cmp fmull mov sub cmpsb cmp xor dec lea int3 sahf (bad) imull mov fcmovu (bad) inc push jmp jg xor push sub fisubrl int mov fistpl inc roll outsb jecxz cmp jg dec cmp inc inc (bad) jno xor cli ret (bad) or inc mov popa push pop mov out out jecxz ja ficom xchg xor lret pop jl mov hlt push inc sti and lock int3 push add pushf add mov adc xor outsl ret xchg cmc mov dec jnp (bad) xchg pop xor fisubl pop xor daa fcomps xor adc mov inc mov lea fistp or scas inc mov lret mov cmp cmp popa cmp mov jns adc jo dec sti xchg lret out inc sub mov shrl ja sbb scas add fnstsw fwait rolb sti xchg cwtl jl lods dec lret cmp std loopne in inc adc dec mull inc inc mov mov roll mov test xchg lahf xor clc mov or aad xor mov sub inc popf and test add push push cli es and mov ljmp (bad) aaa inc outsb xor repnz and je jae cmpsl inc fucomp or movsl adc inc int3 pop dec mov add cmp inc push sti and mov mov mov xchg (bad) mov xor sub push sub decb scas and cmpsl mov popf ret lea jecxz in in xchg pop iret jne std test ret scas add mov jnp adc (bad) out ret movsb cmpsl mov push push xchg shl mov fwait enter arpl inc loope or inc inc js mov xor ret pusha pop in mov les inc mov jne jge cwtl mov nop bt out inc inc mov sarb sub push and (bad) push pop cmpsl jle,pt jo sbb scas add pushf dec mov xorl inc xchg mov sbb xchg pop sub pop jmp inc (bad) out ss fdivrs jg lods ret int3 mov inc std dec int push or mov (bad) stos dec out push mov mov add (bad) das xchg cmc add (bad) push andl outsl jnp ret xor xchg dec dec imul sub inc les xchg cli sub dec (bad) push lea ret and mov cmp sbb lods mov das movb inc fistpll or mov sub sbb lcall cmp pop in cmp xor mov pop push or jg repnz push jb into test stc inc sahf mov pop add fild arpl inc into ficomp jecxz andl arpl cmp dec test or dec or adc ret push lods loop inc dec push lret nop arpl lods pop mov ror ffreep test clc mov jb inc mov mov add daa and rcr icebp push pop sbb add mov stos mov sub xchg cwtl dec rolb mov mov das jge sub ret jb jb repnz push xchg dec push int3 xchg mov mov inc inc or outsb pop lcall xchg lea es iret nop ja lock mov pop sub mov pop sbb jb (bad) shl out xor cmp sbb dec les fistl in cmpsb call ss cmpsl xor imul jnp aad in ds lods ss loope fnstsw adc mov cli outsl outsb pop jge xchg out push lret mov xlat xchg inc daa push or sbb dec jecxz rorb aad cs add int3 jno,pn xchg shrb or xlat ds pop mov lret sbbl inc cltd fwait popf push loopne std dec sub inc push mov nop add xor push mov inc rcrl adc (bad) mov clc arpl mov xchg pusha dec xor push repnz aas jne (bad) les pusha jl xor xor jecxz cltd stos arpl jbe jmp fxch test add add sub addl pusha mov push jae insb jo pop cmp xchg inc mov sbb or adc inc xchg mov push pop arpl cmp mov xor jp ret lods add cmp push xchg cmp or mov cmc clc mov pushf imul popf xchg xchg jno inc ret and adc sub cmpsb mov jo or sub mov dec popf pusha cmc xchg xor inc int jmp jl cmp ror cs mov add jle cli sub (bad) out (bad) jae adc scas push and pushf aad (bad) (bad) dec mov or mov push jg jb dec dec sub lret pop fmull loop jne data16 into sub test mov push lret mov and jecxz mov lahf push pushf push jb aam jae cmp jle mov mov ror xchg ja inc clc pop mov cmp inc xor xchg cmove inc int3 jle xchg rcrb dec in inc mov lret out xor sub (bad) xchg lods stos aaa rorb mov dec sub bound sub mov sub xor stos push ret cltd cmpsl inc enter shrl out and pusha fiadd (bad) dec mov adc adc iret lahf out push popa adc mov daa jge fimull insl mov dec test sub stc pop mov test xor dec inc push cwtl cltd test xchg cmp imul mov adc gs sub rolb xor sti inc adc into lock lea mov mov dec mov mov lahf and sbb into mov stos fist pop xor scas pop or mov pop iret and lock and loopne rcl cltd fcoms fisubl loopne mov aas mov jle adc negl sub push jnp loop lcall test cli pop (bad) xchg sub loopne (bad) adc imul rcr cmp inc add pop jecxz call xor xor xchg cli cmp addr16 inc push pushf sti and sub push roll dec andl arpl and into cmp cmp cmpb stc push popa sbbl or xor fsts lret roll push sub fcomps scas inc xchg dec fdivl push push sub dec dec mov jns dec dec xchg sbb in and stc xchg xchg stc addl test add and es inc dec dec (bad) and cmc xor xchg or add mov mov dec or cltd ss mov dec rcl aas mov add aas inc (bad) std cmovl and or mov aam xor ret push xor sti jb jg inc lds xchg shll mov xchg (bad) jmp out inc repnz idivl stos cltd mov mov fldt xchg inc roll pop ja xchg xor aaa mov dec pxor ret fwait xlat (bad) jbe dec (bad) push sub nop xchg inc aad adc dec and cwtl push xchg (bad) pop cmp inc dec inc jecxz mov popa (bad) dec scas xchg lret mov inc sbb scas jbe dec and mov add push movsb in inc lahf movsl data16 sbb mov sbb das inc mov fmull iret clc shrl push int jno add cmp outsb inc pop dec loopne add mov and ds jmp push dec adc dec jo adc repnz pop mov rcll inc mov aaa scas out mov imul cmp or cmp mov mov push xchg pusha push nop pop ret call pop dec jl shl divb xor push adc testl xchg mov inc out test inc daa ds xlat cs clc jmp inc push sar outsl lds mov xor dec inc jl inc push xchg lahf mov adc xlat test sbb or jl lret mov jno jnp insl push lahf add addr16 outsb lock out (bad) inc out mov roll jne cld mov (bad) hlt xor or call leave mov add cltd dec jge xchg add or pushf inc sub test add lahf or pop jmp jo addr16 iret sahf inc push jb dec xlat sub mov fld fmuls inc lods fcoml (bad) aam lds jge lahf sbb mov ljmp mul es push xchg inc jg xorl and movsl push mov xor inc pushf les pop dec pop xchg notl cmp pop fcmovb inc inc xchg or rolb insb xor fldl adc popf sub outsl inc sub in dec stc xchg jle fwait dec fnop hlt repnz mov es xchg movsl insl push fild pop loopne pop jb jmp inc inc lret cmp xchg push sub loop sub or scas icebp addr16 adc ret lds dec dec (bad) xor sub pop into mov jae mov sti ljmp bound testb iret dec repnz jno push gs repnz in inc jae or pop (bad) fwait inc dec add jecxz mov push fmuls xchg mov mov (bad) and xor dec inc fidiv mov lcall inc pop (bad) add lods push daa js dec cmc mov dec popf pop push daa push push jo or mov pop icebp je les lea les inc xor (bad) mov mov movsl lahf fdivs add or inc popa jbe xor rorl sti das fs mov jle std inc xchg sub or outsb clc sbb inc or adc xor popf inc pop pop mov inc cmp test inc cmpsb (bad) jl inc inc or js mov in inc sbb push add scas or jmp (bad) test inc into int scas ja fiadd daa sbb mov repz and xor cmp test xor pop fwait es lahf pop xchg icebp xor xchg popf xchg das mov jmp stc arpl repnz sahf lret out add add (bad) mov xor dec les in lods cmp lods aad mov push xchg aaa and cmp jae test dec jnp (bad) jne add add push popf inc adc xor xor dec push pop ss xor cli inc in sub mov inc dec lock cmp gs fbld (bad) xchg mov inc rcr fwait mov push scas adc dec sarl repnz jae push sub mov lret push leave ja cmpsb (bad) ds dec push sub popa cli out and clc pop xchg test scas ret repz stos lods lock jbe pop add sbb xchg out inc cmp mov mov clc pushf inc sub leave stos inc push ss dec pop sub icebp add sub sbb scas arpl ret xor aas fcomi dec sub jns dec push mov sub fidivrl push pop stos (bad) push jae adc out fidivl cmp das sbb iret dec jg cltd xchg and inc loopne pop rorb inc pusha jbe dec jp mov popf lret stc jae xor jge sbb push out xchg adc outsl or pop inc mov mov mov dec pushf push push adc inc mov (bad) push fwait dec imul jle mov ss add sbb cmp pop lret pop push mov inc loope pop jae test jb divl xchg inc push and bound ret mov mov fs outsl pop push or call jae jno sbb fsubs inc mov inc das jmp xor pop aas fdivrs inc dec stos push (bad) pop sub xor inc sbb das xchg inc dec push imul pop inc hlt fwait cmp mov xchg push jno aam sbb test mov jg sar cmc pop cmp inc sbb mov and adc inc (bad) aam xor (bad) leave inc sub dec clc inc cmp mov push inc mov fs add push stos fcomip cs (bad) mov in jns adc sub push into (bad) scas hlt (bad) in out inc divl int3 inc cmp push mov mov insl loop ret mov je (bad) ret add and cmp xchg outsl mov clc or push mov cmp jbe mov mov adc incb ds outsl adc pop movsl stc lcall inc mov fwait cmp mov cmp pop push frstor repnz pop bound arpl inc movaps mov ret mov xchg push mov push inc sub dec call push jns jbe jb,pn lahf insl inc pop mov lock adc sarb jnp sub mov mov fucom mov mov xchg sahf push inc add dec dec xor ret clc inc arpl cmpsb push call test shr fmull pushf lock adc (bad) or loopne les push sahf mov pop or ljmp popa fiaddl incb lods cmc nop adc inc lea dec cwtl jp out pushf in pop (bad) repz inc imul xchg sbb jbe jg mov mov adc add xor xchg push ret push scas addl jg dec push push dec mov inc dec mov cmpsl test fsubs push arpl inc dec arpl xchg pushf dec aaa push dec inc jno mov pop and (bad) jge and stc gs into int3 ss cwtl mov fwait rorb dec insl arpl aam push jno xchg mov xchg xchg repnz push mov test mov xchg jl inc adc or lock inc inc and mov push add shll xor push inc es test inc push push das popa and inc lahf jmp xor and cs mov sbb fnsave jmp mov jo roll ja adc pop stos (bad) dec sbb cli xchg xor xchg aaa pop incl sbb jg sbb loope sub rorl cmp test das pop cmp inc push mov or or dec or jbe push jge leave inc adc cmp dec mov push dec mov sub pop inc dec negb stos sbb stc cmpsb repz fstpt lcall mov jb fldcw jns inc push imul mov (bad) gs mov mov rcrl das out and loop sub les sub cmp es sub ret sub inc inc xlat jl stos cmp dec in rcr mov int3 mov mov pop fwait cld sbb je ljmp hlt inc repz pop sti stos dec inc xchg movsb mov out loopne jle add je pusha mov (bad) jno mov pop mov mov test or jl push outsb out push je xchg cmp ret sub add xchg cmpsb mov add mov inc (bad) (bad) imul dec arpl or adc mov dec sti jle stos out push shrl mov pop loopne sbb cli inc int3 push cmp popf sub lea shrb xchg pushf push incl push mov mov add mov repnz xchg inc ret sub ret popa into add inc cmp mov ret loope std or push std or repz adc or adc or cmp xchg std cwtl xchg jne out push push gs bound push lahf pop dec outsb fldt jb add xor in ss mov mov insb js iret bound mov into data16 xor inc inc into cmp mov dec movb pop jno sub jnp push xchg decb mov sub mov sub inc xchg adc cmp jg jnp dec pop out pop push addr16 pop lret mov fs add cmp jl push das xor pop in arpl xor mov cltd inc shr loop push sahf mov sbb xchg push mov adc mov cltd repnz xchg dec cmp push lock jecxz jg jbe pop dec mov rol inc das aad sub pop inc insl xchg mov inc lods iret test cmp dec mov popf xchg xchg test jo in sbb inc push adc flds cmp add adc and cmp popf sti and sub jecxz out loopne inc popf movsl mov test lret jge add mov in ret addl stos pop push test mov jb fwait mov cmp pop ds clc and mov xor es push mov lods outsl jl inc ja sub lcall dec aaa outsb add mov cmp cmpsb inc arpl push dec dec imul sub mov lods in sub rol push das xor js mov repz iret and imul inc push into xor in es lret jp stos shll inc mov mov and jns bound lods je loope dec cltd push gs and ljmp add cmp out inc pop inc push imul sbb aas dec add out inc testb and mov es xchg das or inc (bad) out (bad) pushf aaa mov xor mov movsl xor outsb sub jbe (bad) je dec push rolb or mov fsubrs mov test dec (bad) aas push clc arpl jg xchg xor sub loopne gs push test sti inc ljmp iret sub mov stos adc roll in inc cli inc int gs or ret cld jg xchg jo mov inc xor mov bound inc xor and lock push cmp mov out push mov inc popf in jge fcmovnu push std inc mov dec xor stos loopne adc ret pop int3 fdivs std pop xor xlat inc or out adc lcall repz repz shlb aas lcall or idivl jl mov or adc dec aad call data16 ret arpl adc sahf xchg repz mov inc daa add pop fucomi inc add jb and xor and jmp push push sub cwtl imul cmpsl push inc jb rclb loopne cs add jne and inc in cs lock fldt adc xchg or xchg pop repz iret inc aad pop popa xchg dec mov jg int fadd mov inc lahf loopne inc jb xor or jp push int3 mov je or arpl mov mov dec or dec andl mov js popf ret (bad) lock inc enter sub sarb in fwait xchg popa (bad) int test dec pop lock cmpsl push cs and mov pop out adc in loope mov sub cmp fisubl lret mov mov lret and pop inc mov iret pop inc mov and pop test cmp xor mov sbb ficomp loop cmp in subl aad ja mov test mov imul sahf adc ret mov inc push insb neg xor mov mov jg push xor loopne inc pop mov or xchg test inc jb xor mov mov push inc outsl mov push inc push and inc loopne sub jl movsl stc mov lcall aam (bad) test (bad) daa push mov and repnz push mov dec outsl pop insl sbb test mov adc jno (bad) jne jae xchg mov mov loopw xchg push out out jecxz adc (bad) iret addl jmp aaa aad dec dec leave bnd arpl mov inc add je dec fildll (bad) inc add mov pop or pop aad mov adc add lock sbb rcl aam (bad) fidivl push mov dec sub add aaa mov mov inc or or and add mov aam sub loope jno int3 test arpl in int add xor aas test add lcall xchg sub sub inc sub pusha ret (bad) iret mov int3 enter push xor pop fidivrl pop pop push inc inc std rol lcall sbb fwait jb mov inc and cmp sahf jno inc mov xchg inc into fistpll pop mov iret xchg std cwtl je inc push lret lods push jne mov jo mov sti stc inc or cs rcl inc fistp or push jbe push pop mov cltd mov mov popf pop and ds daa data16 std inc inc stos cmp adc push mov scas inc and jmp push insb aas jle out cmp dec mov fcoms pushf and cmp add inc pop xor xchg mov xchg iret inc inc adc (bad) je add aas cmp mov bound shlb adc data16 or pop inc cmc outsl add orl (bad) je mov ret mov jecxz mov jo outsl (bad) push call pop mov inc rol mov lret mov dec (bad) das pop pop mov inc dec enter mov out inc inc rclb pop ljmp inc popf repnz add inc sub (bad) scas (bad) mov imul das (bad) xchg pusha jo rol leave fcmovnbe hlt push sub and loopne mov aaa inc fimull jns inc insb pop and ja (bad) inc icebp xchg adc fidivr movsl pop cs in inc pop dec stc cmp fimul rcr sub push mov xor ficompl pop add lret mov push mov push jb loop ficomp cmp inc add inc push adc (bad) stos pop dec mov mov sti sub jl add cmc and jne push sub dec and (bad) imul jnp push pop ret fxam les xor daa xchg (bad) push jmp addl ret dec pop addb sub loopne pop mov fadd in jg pop jl ret popa insb xchg mov inc push xchg int3 das sbb cmp outsl and stos mov das inc cltd sti mov dec and sub push push leave jo fldcw inc pop test mov dec xor sbb in iret add add add sahf inc int3 inc xor nop hlt jae or test pushf es inc (bad) je adc add jb mov and inc add (bad) dec (bad) int mov sbb mov test outsl leave mov stos (bad) scas mov xor jg fdivl lret sub mov mov xchg (bad) xor xchg loopne dec push scas inc loopne pop shll into cmp cld aaa inc cs xchg sahf movsl dec pop sub in test dec or mov js sub imul jo les pushf popf dec pusha sub mov mov out into into and cli mov movsb cmp (bad) or sub jecxz into ss jbe xor and xchg leave js jge sbb (bad) mov mov mov pop scas (bad) dec cmp inc adc adc out add lret and fcmovu icebp aam or inc lret sbb mov inc push pop and adc xchg xor and jmp mov (bad) inc pop imul add xor inc inc (bad) arpl sqrtps lcall aaa loopne mov inc jl pop dec mov ja jl mov cld ds mov pop mov adcb imul add daa or inc dec mov mov adc inc sub or inc cmp imul jp inc ja hlt mov lcall xchg lock sti xchg add jge add jbe popf inc daa sbb pop pop cmpsb jg dec mov scas add in int3 jb or push inc ror inc fdivl pop push inc arpl bound sbb adc mov repz stc sbb daa cmp out and sub fimull rorb adc dec pushf lcall icebp lcall scas and incb dec xchg (bad) movsl insl inc leave sahf jb mov (bad) (bad) dec loopne pop stc into mov add push arpl jb dec mov nop pop in imul ja loopne insb pop jnp adc or sub mov shrl mov repnz or mov xorb lcall sub sbb push xlat dec cwtl xchg mov xor out xchg bound (bad) out imul adc push dec mov loopne shl pop outsl fprem1 repz dec cli mov mov int3 into int3 adc pop fadds mov push jnp or ljmp xor ret cli mov add cmc inc inc and push lret sbb lods aaa inc lds inc in enter inc adc mov pop dec inc (bad) subl fnstenv add test sbb (bad) jecxz fwait mov cwtl sub sbb stos fs pusha xchg dec popf push mov sbbl cmp adcl xor mov int3 ss push addr16 xchg sub or jae (bad) mov dec jecxz stc lret add add enter lret dec popf arpl xchg xchg cs pop out jae xor icebp call int loope inc inc push out movhlps std movsb inc insl lock xor icebp add or insb mov sbb xchg daa fiadd ljmp clc adc cvtsi2sdl rcll mov sub mov and movsl out std jmp jl inc lret and xchg sarl popa (bad) or inc xor jp add lahf add (bad) mov rcl (bad) mov test out xchg movsb add scas push jno push stos inc lds cmp popa and inc cmpsb pop or and add repz cli and jae mov pop xchg std add les inc in std bound leave pushf icebp je xlat insl mov dec cmp rol inc sbb jns xchg pop mov addl mov xor fdivs shl movsl pop (bad) out cmpsl lea ret xor xchg jbe fwait or cmc stos inc arpl std enter mov addr16 inc mov inc pop sbb lret cltd decl adc mov sbb push inc je mov daa outsb pushf jle sbb adc fisttpl lahf mov jb ret (bad) xlat sbb adc mov cli dec sub add lea mov add mov push sub mov sbb dec pop inc mov bound inc dec lcall pop int3 mov add cli add cmc cmp call stos roll mov pop movsb pop fnstenv jae sub loopne lods mov sub mov and jmp pop push jo lahf ret cli jae mov mov test (bad) xor adc aad cli out push (bad) dec into sbb aam dec into dec rorl adc dec or nop mov or arpl adc cmp rolb (bad) inc and ficoml mov or push sbb jle pusha inc push fcmovnb inc fcmovu adc cmp jnp mov sahf jno (bad) inc inc and mov push mov inc aas xchg mov (bad) pop xchg jb xor push mov loop enter dec rclb repnz cmp xchg sub sub ret lea cmp adc jns jno pop addb std sub arpl test into ret (bad) sbb enter nop cmp jae adc or repz inc and inc mov add ljmp inc push adc hlt and add inc add in in lret (bad) xchg (bad) xor sbb push lea inc imul mov faddl popf inc scas test xchg jo pop outsb cmc mov sub inc popa mov dec push lods fxch adc loope inc mov xor cmp jbe dec dec sub jae insl inc ret pop push push mov mov cmp add lods dec mov inc xor sub dec sbb (bad) out push sub andl inc stos inc sub sub mov sub out dec dec push fistpll sbb aaa lea fidivl lock lahf or js jae xor sub enter les inc je or lret dec sub cmp jnp adc std lea xor in add push scas sahf add cmpsl mov jl mov pop or push mov js mov xchg mov pop iret movb or sub add mov stos iret (bad) fildl pop sub fdiv pop stos jg push lea (bad) (bad) hlt repnz mov add stos inc hlt (bad) std sub lds sub enter sbb inc fistpl repz scas mov ja lds mov ds add movl js outsl idivb flds jp push pop out (bad) xor jo inc enter lret jno (bad) push out aaa and dec and fstpt sti or push rolb lahf incb lea outsb inc add shl sti xchg icebp xor sub sbbl jae cmp jle lret dec add rorb and inc cmpsb (bad) jecxz fistl jge (bad) cmp cs mov mov roll sub aaa movsb mov jae xchg sub rcll and mov inc fimull push mov cmp loopne cwtl test mov and movb out (bad) jb aad mov add movd fildll roll (bad) fst mov jnp es imul dec adc jno lret (bad) xchg mov imul inc jl mov sub rcrb rclb jne inc push rcrl mov inc xor mov push jb popa jno movsl dec nop adc lds test fwait jo adc shlb pop ret inc push mov rolb fcomip inc dec push out mov in jne jae jns cmp xchg dec jb pushf pop cmc inc ss rclb inc call stc or (bad) insl jo pop mov fmuls pop push out push popf sbb in cwtl test push mov and dec in scas sbb ljmp jl push push es mov push cmp std sahf sti test sub ds xchg mov jae ret lahf loop shrl sbb mov pushf (bad) call xor jg xchg sarb push das push xchg cwtl pop pop and mov or fucomp jbe pusha mov and push scas les insl pop mov xchg xor mov shr dec mov addr16 jb popa push add jne jno xchg (bad) lcall inc inc shrl cmp call inc inc (bad) sbb adc addr16 std aas add insl inc inc sar dec or xor sub add (bad) adc push arpl push mov test inc fsubrs mov cmpsb xor inc rcl in xor cwtl mov mov shl mov cmp lea mov (bad) inc popf lcall inc sbb sbb sbb out mov or dec xlat jns jp bound or jb push aas in idiv (bad) es lret cwtl outsl mov or sbb (bad) mov mov imul and jo xor scas into cmp dec loopne jno adc inc ror lret ljmp and jmp push lcall fbld (bad) cli jge and cmp xor mov cmp push sub jg lret aas shll jg jb inc dec pusha xchg adc mov push pop imul mov cmp lret xor push lock mov or fwait or cmpsl add out idivb cmp dec sub stos pushf push enter push inc aam sbb cld ret rcrb dec (bad) or fisttp jg xchg mov ret je inc out adc test jg xchg (bad) iret xor inc stos cmp xor pop pop cmpsb adc cmp in push scas inc ret mov imul (bad) popf cmp add xchg clc outsb (bad) mov js inc test mov fiadd aaa cltd or and cmp jcxz push outsb xchg xlat cs jmp or (bad) sbb aad nop sbb sbb sub mov inc cmc dec decl push mov dec enter push mov xor ret or inc in cmpsl dec scas push adc mov outsl mov xchg push xchg jb andl jmp out (bad) mov dec cmp inc xchg je pop movsl nop inc xchg push fcoml jp repz push lea pushf fldl adc dec data16 lea movsb push lock add test xor xchg ret repnz xchg (bad) cmc outsl inc (bad) cmp sub imul dec push or inc sub add dec sbb popa jmp dec mov lods mov cmp and pop jle add mov xor icebp loop mov inc xor mov test sub inc add sbb cmp sahf mov pop jg mov (bad) nop lods inc idivl pop cmp test outsb jbe fdiv jae jge sti (bad) jmp enter xor ret into negb inc pop sbb fisubl lret xchg mov inc sbb call mov sbb dec pop pop test std xchg dec pop fucomp sub push aas inc movsb xlat mov int3 pop imul std sti inc inc icebp es jne and rcr mov iret xor adc sbb pop inc insl jmp fisub lods les fwait outsb mov xchg xor gs loopne (bad) xor stos pop leave mov mov sbbl mov mov jecxz jp into adc inc test insl (bad) in ljmp ret ja dec jne mov aam ljmp dec (bad) insb dec cmpsl pusha fs movsl adcl sbbb cmp ja push add inc pop fldt jl call mov fisub inc xor xchg (bad) push jge push dec add outsb xchg sbb mov push lcall movsl sarb loop movsl push mov cmp mov enter and dec repnz ret je test and mov xchg cmp mov xchg (bad) je arpl push dec inc fistpl mov inc sbb outsl push dec cmp sbbb (bad) jle pop movsl inc movsb cmp cmpsb (bad) mov inc paddb xor fwait pop pop pop cmp sub xchg fadd and sbb mov sub imul sub inc pushf adc mov fpatan mov xchg mov cwtl mov (bad) (bad) pop int3 mov jo rolb xor pop mov and ret pop dec push int jo inc div idivl ds je xlat adc jge jno cli push push das repnz cmp arpl fldl2e adc rcr mov mov push out bound shll sub repnz push imul sub ljmp cmc push push xor pop test xchg es icebp inc sub dec fsubr sub xchg push scas xor inc enter cmp cmp mov addr16 lods fcmove inc and add jae inc clc xchg mov push mov shrl das xchg inc dec cli sti std xchg xor mov mov and rcll inc ficompl loope inc cmp in jo jge lds dec sub inc mov pop sbb inc mov sbb push xor mov or jge push int3 mov or pop inc bound and jecxz enter fiadd rol les mov js imul push mov or aad sub dec sub out divb lds lock dec sahf xchg cmp ss insb cwtl imul lea gs push fadd (bad) dec xor ret fcoml into fldl in xlat cmc jo int3 xchg inc jno popa sarb loope inc repnz inc inc int3 mov pusha cmpsl in cmpsb aas jp imul mov cmc sub jecxz pop jo pop mov repz inc add inc mov inc in mov (bad) ds ret adc or inc add cwtl sub inc or mov or arpl fstpt inc stos adc int jne (bad) stc lods mov pop addl cmp das (bad) xchg mov mov hlt and fisubrl ja mov dec movsl pop dec dec xor stos lahf sbb push into in jo in adc andl mov js push mov jne in dec mov in hlt les sub lcall rcr fdivs or xor addb mov jecxz adc xchg fmuls ret sub loop rclb ja or xor jno ret stos and sub adc push out jg adc xorb adc dec jnp inc mov rorl sub jecxz (bad) lock (bad) popa nop or sahf inc std gs push xor icebp rep push stos ret out scas movsl sub push pop mov cld jle sub rclb std sahf inc pop out sub cmp imul mov cmp sahf dec out push ljmp cmp sbb or sbb sub xchg pop dec sbb imul mov rorl lock ss ljmp lods rorb jle int3 or pop jnp xor cld jb cpuid fisttpl jge mov sbb subl stos pop lahf fistpll push push notl jmp dec mov adc outsl fcompl dec jae lret fistl or sub ret push fiaddl popa cwtl into movb dec or lcall subl add lret adc push mov pop lret sarl mov push leave (bad) jnp mov sub xchg arpl jns rorl pop dec rcrb dec or addl fwait sub popf dec push bound loopne aas leave popf sti lret xor stos das arpl jl cwtl mov mov icebp push aad cld ret inc inc inc test add fs jle int3 (bad) jb lahf into inc mov stc xchg jmp fcomip aaa add mov sub or lods pushl jl std sub lds xchg jle add mov loop sbb out popf ds mov xchg in das movsl shrb lods ja inc jmp repnz cmp out push adc sti push cltd jp,pt cmpsl imul xchg or push pop jecxz jge pusha inc or xchg (bad) push bound jns inc fdivl lret xchg mov pop pop movsl dec rorl ret (bad) sub sbb movsl and xor movb arpl fst aad pop mov push testl or mov jecxz pushf outsl dec inc push cmpsl fs jnp mov inc (bad) ss lret stos sub cmp insl mov push push icebp aas mov in call rcll negb je sbb movsl mov inc ficoml ljmp test inc push add xor pop rcrl mov sbb scas adc ds xor lahf inc gs decb lods sbb addr16 or sbb adc xor lret and inc pop mov push fdivl shrl pop pusha jg fscale xlat sub movsb mov shlb inc add adc cmp inc sahf xor repz push rolb inc push into scas cmp incl inc test jb mov pop jge clc in ficomp inc leave pushf adc jmp enter or xchg pop mov sbb sbbl lret inc adc mov or clc std mov ss fisubrl js in std fwait dec (bad) adc push add (bad) repz sbb adcl adc andb inc int out add or jmp popa out cmc mov aad xchg fstl jg inc adcl xchg inc jl or sub stos jp int cli roll inc movsl scas out test inc out pop sbbl das mov cmc jle stos jecxz and jb into fwait in in dec insl imul and pop hlt fbstp sbb imul inc jb jo xor xchg daa cmp cmpsl xor inc push mov fstps int inc cwtl test adc jle push lock fdiv dec jge test pushf iret push jns sbb cmc stc in or push xor inc cmpsb pop xor mov lahf ret inc mov stos inc lods lret pop mov push adc test adc rorb fstpt dec repz xchg pop adc mov push inc pop mov sub and rorb lods clc dec scas sub inc and iret push pusha pop mov xchg sub sti push dec idivl mov lahf jne ret je jbe jmp cmpsb sbb inc int3 popf sub dec inc sbb push (bad) xor out lock mov hlt mov and xchg mov ret adc insb pop xor mov ret jne std add jo xchg cmovae data16 je sbb mov xchg add out xor push cmp xchg inc addl loop mov add ss (bad) cmp mov lods inc mov (bad) or loopne push nop ss dec das test inc and mov mov cmp and inc sbb jnp ja pop cmpsb dec fdivs mov lods and add mov dec nop loop imulb ss daa and pop inc sti lcall adc bound ret mov adc jae (bad) in and stos mov sahf dec jl mov dec inc aas stos adc cmp mov aam adc xchg jb mov jae push jmp int adc cmp xchg mov dec and test outsb flds sahf push pop pop push dec push fldcw or jecxz jmp fildl mov or pop int3 inc out mov (bad) fdivrs gs mov mov (bad) dec mov rclb inc int fmull inc mov aam push bound aad cs cltd or ljmp fimull sbbb adc sub mov call pop jae shlb and dec sbb jae fadds int adc add imul fwait add lahf es rcrl and cmpsl push jo flds repz out pop inc xchg fsubrs jle lcall cmp pop call test sbb xchg cli adc push push xchg (bad) xor in inc jecxz adc pop test dec jae rcll mov sub loop jle inc push scas aam mov add xchg xchg popa loopne mov fsubl scas mov push mov movsb xor mov ss inc aad cmp or and jl inc iret add pop test repnz cli (bad) add popa sub scas mov cmp xchg or fnstsw lea in xchg iret pop or in aam mov arpl out cmp mov jl lahf fistl dec (bad) rcl adc sub sbb inc sub or inc adc mov dec andl fwait mov add gs mov or jecxz pop pushf or cltd xor dec inc (bad) jb push lret jmp sbb xchg add cmpsl std adc add mov push fadds xor xor sarb or cmp push sbb dec test inc push in inc lret fcomps and add mov inc shl sub sub sti pop jnp fistpll adc loopne push inc push stos movsb enter adc inc std xchg xchg (bad) repz pushf scas int3 test push or pop leave adc sub (bad) push jo inc dec dec sub je adc cmp xchg int3 cmp pushf or lods pop inc xor mov cmp push les mov mov sub cmp inc in or dec popf xchg lret dec jnp into lock les gs roll ljmp movb inc push test subb mov xor or movb sbb adc subl mov ja popf rcl push cltd cmp pushf pop push test popf add fcmove inc sbb rorl jns pop test subl std fistp push aaa inc push mov and into inc and fs scas pop mov jb xor inc sub shr inc addr16 mov mov inc call jmp push fwait sbb push imul outsl addb mov xchg scas (bad) repz mov xchg clc andb sti imul adc daa fwait mov mov mov mov jmp pop scas stos mov stc pop aas jb aam xchg push jle push inc sbb lods dec sub add cmpsl pop mov test jo notl cmp inc inc sub fldcw push xchg and lods cmp dec adc lret cwtl sbb pop sub inc jnp jmp cmp mov sub ffree rol mov adc stc cmp inc pop dec cmpsb sub pop xorb mov cmp popf mov and mov inc iret gs mov add lock popf and pushf or dec js or iret popf rcll enter iret adc pop in (bad) fiadd mov push pop sub mov rol test cld sti sub bound movsl icebp test ss test ret ror jge and (bad) icebp lcall push outsb lret mov dec jno jb sti shrl xor push dec sub hlt imul xor (bad) mov and mov jl jmp push push fimull ret mov dec push jmp stos mov xor outsb cmp push fcoms sub cmpsb lock aas mov icebp in xchg sub push outsb aaa pop mov xchg pop fildll shlb push popf test xor adc dec loop inc push inc test jo mov fistpl lret fidivrl sub jnp inc and addr16 add push rorl xor (bad) (bad) inc loop jle shrl jp xor sbb mov das mov and inc mov lret iret movsb sub dec fcmovnb inc and popa les sub push bound and lret mov dec or cmpsb inc fidiv sbb mov push fs in xchg leave xchg dec mov xor cmc mov aad (bad) jmp inc lods pop imul pop insl jno sub int adc sahf cmp test push push loope inc jnp mov mov jle mov test inc lds lahf xchg mov scas xchg xor or lea inc mov les inc mov cmc ds inc mov int3 pop lcall lcall inc push cltd insb and jno imul ret sub push aas push pop fwait stc lret pop fisub xchg inc outsl mov jecxz pushf jl dec sahf mov lds fwait rorl lret loop faddl dec mov adc lahf dec popa jmp adc jns or icebp dec fs dec pop aam jle insl rcll jno push add inc les divps stc xor jp jns loope inc ja sub cmpsl loop hlt arpl dec xchg pop mov idivl fldt dec pop sahf mov jecxz sub rclb ds or inc cmp pop inc add mov negb inc (bad) push sub sub push test repz pop ja fisttp inc int3 stc mov movsl cmpsl adc fstp and dec push dec inc sbb (bad) push fabs out sbb lods inc add popf repnz fnsave add fisubrl adc push fld and imull xchg fcoml jge test sbb jne and cmp movsb push and sbb shrb movsb pop sahf ss dec (bad) pop cmp xchg (bad) push aas int3 aaa ret dec and (bad) pop mov movsb fldl gs loopne pop add aad stos fcomi inc mov dec lahf test or mov dec pop xchg and xchg jle cli mov lahf mov dec sbb inc cmpsl sub pop xchg clc aaa push xorl iret pop popf xchg jmp push je (bad) jmp movsl pusha dec shlb adc test into (bad) test inc push and and xchg (bad) aas fnop xchg mov lcall (bad) sub mov or fnop fldenv dec jo mov inc dec inc push arpl push inc ret sbb ret dec clc mov inc xor and orl add repz xchg pop fstps jbe xchg cmpsl inc add sbb adc xor dec aad mov inc inc mov fimull mov testb out repnz incb sbb iret inc push gs sti push jp inc jne lret stc xchg push pop mov push cmp daa jle xchg rcll inc cwtl cmpsl inc rcll pop insb cmp or ret sbb daa (bad) in shr inc fs inc (bad) fsubp inc addr16 jnp sbb out dec stos pop test into mov cmpsl jp daa sub dec fcomps ret mov jnp stos int3 inc sbb pop sub xchg inc jg inc loopne fidivr aas adc enter cmp imul push clc sbb jecxz push dec je lret xor loop xchg push les mov xchg mov pop dec mov add leave aam (bad) lahf xchg imul loopne inc jnp sub mov inc mov inc or into lock push sbb dec sti pop std sub adc inc es dec inc and inc ror insl daa push int3 xchg repz daa mov xchg out outsl stos push push mov int3 push xlat jle inc dec cld cmpsl mov mov rorl ds add sbb xchg adc dec sub mov mov repz sub inc loopne outsl ficom jge cltd lods jo mov inc repz push xor mov adc jle mov jae inc push test cmp push add inc push inc nop cmpb ffreep sub cs scas xchg sub lret sbb cmp fstpl ss sub pop add ficompl in cmpsb sub adc fnstenv mov mov dec cmpsb pop outsl bound cmp push xorw push lods dec int3 std sub jae push lds sbb sbb mov mov lea mov out adc jno mov call push cmp sub xor loope adc test jmp inc mov outsl in pop ljmp jmp out jbe sub add xchg lahf cmp in repnz scas inc jmpw pop push pop enter fistl dec jbe inc pop int (bad) rcl cmpsl (bad) in inc ss int3 sub fdivl test fiadd out pop and dec inc dec xchg mov ja test test addr16 scas jae push dec jmp cmpsl fstpl mov push inc insl sub mov int js out adc movsb add jmp and in xlat sbbb fsubrs leave lahf inc daa mov icebp mov jbe aaa inc loope or out icebp xchg into inc ss mov inc iret sbb xor inc pop adcb sbb and nop mov push and pop pop push push adc addb inc mov add cmpsb fldt inc (bad) insl lcall shll inc ds ret negb nop ret add push mov call jp test jle sbb add jae stos clc pop mov sub fwait cmpsb inc mov and inc xor sbb mov sar stos sbb push cs add mov dec mov jge dec xor lods cwtl in cmp mov dec lret inc xchg js dec popf scas add test iret push pushf clc and imul repz imulb imul mov inc mov loop xor cltd sub sbb adcb xor inc adc add bound push outsb jg arpl push pop push loop inc xchg (bad) outsl rcrl enter pop mov data16 hlt nop xchg (bad) rcll add mov mov cwtl jmp sbb adc mov mov pop test insl pop sahf xor push test sbb shll push adc adc test lret xor and lahf std or xor xlat les cmp cmp push dec dec cmovae imulb inc inc inc pop cld dec and icebp or mov inc cmp push lret (bad) jbe mov out leave pop pop jno cld rolb and pop rclb movsl jl inc pushf mov fisttpll jmp notb pop das inc inc lret adc adc (bad) xor add sahf adc jp imul jb jge xor pslld push jecxz fs inc js add je xor xor sub inc iret xchg adc cmpl pop xchg add jo xchg xchg sbb out popl jecxz ret aad cmc inc dec cli imul js push pop lock aaa cwtl xor rolb (bad) dec (bad) cmp mov (bad) (bad) lds test inc push cmpb (bad) xchg push popa data16 mov sub jo popf and in sti inc jmp mov add sbb mov and movsb and add lea lcall ret test popf mov sbb fdivp es in and fiaddl dec xchg or lock inc sub hlt mov sti cmpsl shl dec clc pop mov push xchg inc mov shll inc outsb scas sub mov jecxz and lret cmp fpatan insb test inc xchg mov sbb stc fcmovbe repnz loopne ss or dec add idivb sub imul popf movl ret sub arpl pusha cmp les xchg aad inc push xor dec push mov jp sbb cmpsb test ret dec fldt lea cmp mov jle fadds sahf inc xchg dec popa subl orps repnz out and jecxz mov adcl cmp xchg jb mov (bad) mov lods shrd mov (bad) ret or sbb xor inc mov pop daa insb stc dec jg xchg mov adc dec xlat or sub dec daa sahf fistpll aad mov mov jmp lret rcl (bad) mov push mov stc or add mov xchg test movsb inc xor mov repz fsubrs push icebp inc jae inc mov daa lret pop inc bound in add adc inc lea lret push push sbb outsl inc dec es xor pop dec dec nop sub lds rcll push dec xchg gs pop idivl inc daa stos xor bound pop dec (bad) mov mov cmpsb sub cmp imul mov inc (bad) cmpsb cmp pusha cmpsl mov lahf lea pop (bad) std scas mov stos cmc inc lock add pusha nop in xchg mov mov repz (bad) mov dec adc adc lock mov sahf xor repz push jl mov mov jae push mov (bad) pusha push rcr pop jecxz les clc movsl cmp roll cwtl inc mov push inc and pop repz out stos cmp add sub insl ja mov pop loopne (bad) leave outsl push adc add sahf jge pop lds sub ja jecxz fidiv pop loop dec xor or shl repnz fwait ret test (bad) fnstenv loop mov ss les inc push mov inc fcoml xchg push sbb cld mov aas cmpsb mov cmp orb arpl stos sti stos incl xor fisttpll add mov sbbl out sbb pop pusha inc push mov dec mov outsl adc movsl inc mov push loope int (bad) inc fs lea adc repz inc es pop aas cmpsb pop inc (bad) cltd mov fwait clc xchg sbb cmp clc insl add out jbe mov mov out repnz in add (bad) stc inc sbb inc jnp push aaa or and js inc aad lods xchg pop mov xor or stos rcll jl push cmp xor addr16 je pop mov call scas mov jecxz inc cmp cmp mov inc (bad) push jb push aas daa inc test shlb inc repnz (bad) in and test xor aas inc xor aas inc mov add jae push ret cmp dec pop add test mov add js inc (bad) call mov mov arpl loopne cmp fstpl enter xor (bad) cmp icebp mov push push test loope icebp fimull imul xlat sub pop mov pop fucomi rolb cmp adc jecxz ret xor gs xor in popa push push cmpsl push push inc jmp sahf andl mov loop fistpl imul pushf aam mov dec xor out imul or das addb fldenv ficomp jae inc dec jne and inc test add bound xor push lahf rcll lods mov inc (bad) dec (bad) lock outsl mov dec add mov imul inc lret mov dec sbb or add in push add das or adc repz aas rolb inc sbb dec int3 sbb cmp sbbb test jbe arpl mov jnp xchg les or mov mov add dec sbb mov pop cmp lahf xchg add push (bad) sbb jno pop mov push add lret movsl int3 loop mov jns jae sbb fiaddl (bad) int3 adc mov mov inc push (bad) cmc inc sub cmpsl inc jb mov cli and mov lock adc arpl dec inc cs sar stos cld or and ficom mov sub mov (bad) cltd mov cmp out fsubl ret lods in mov cmc and cmp mov fstpl inc std aas cmp xchg dec sti xlat pop xchg movq (bad) je inc mov add pop mov inc inc xchg add fs popa sub mov push jecxz popf xchg xor (bad) lds cwtl sub ret nop jo dec jecxz stos fist imul ja mov jle es das jbe arpl cli stc xor dec inc lcall xor xchg insb push mov adc push into push dec pop dec xor int jb push xchg cmpsl pop or fldt dec (bad) dec dec mov pop xchg sub enter imul push pop pop in xlat dec cwtl mov fimul mov mov pop arpl sub cmp out add mov push inc sbb (bad) stc cmp add add fadds push loop cmp mov mov icebp inc dec push sub enter or adc or test xor xchg arpl ret dec stc les or (bad) lods ficompl xchg add add fsubs les jnp inc sti cmp jb sbb xchg xchg pop fistpll push add dec stos cmp fisubl out cmc mov fcmovb mov sbb sub rcll sbb lds pop inc xor xchg (bad) (bad) repz xlat inc push incl push fnstsw cmpb inc adc inc daa jle dec out aad or (bad) aas repz adc lods cmp push mov insl nop xchg inc add pop mov test fadd out aaa hlt dec inc jb test xor je mov jne inc add fdivrs xor sub daa jb jmp sub in jecxz or dec xor (bad) xchg pop sub mov fwait imul mov movsb or ja mov push cmp sbb aam (bad) xlat jno inc fild pop push lret dec cli cltd cmp push lods jle fs sbb push xchg cmp imul outsb pop and cmp out push dec jmp into add jo and sub mov cmp icebp repz mov push sbb mov shrb shl or cmp adc das mov or aas xor inc or cmp jns (bad) mov dec push lret and xlat jp adc or cmpsb sahf lds mov jb dec lcall pop push mov xchg movsl xchg sub xchg fcmovnu jne cmc scas xchg popl and dec jp xor les repz mov ret and inc mov in push push add inc mov sbb sub arpl fnop mov repnz pop in inc (bad) loopne mov inc ss pop cwtl jmp test inc (bad) ljmp inc cmpsl sub xor inc fs dec movsl pusha lock pop hlt mov out dec (bad) jno xchg jecxz and inc fst dec (bad) outsb rolb xlat or push inc cmc pop inc dec push stc stos xor mov popf scas inc in aad test pop fs pop lret or mov lods mov clc push sub push sub jg xchg rcrl test shrl xlat xchg into pop scas out sub jo inc mov mov decb popf jecxz mov adc enter dec xor sbb sbb int3 stos psubb pop pop scas add mov outsl imul enter in jnp inc scas es dec stos cmpsl push sub pop bound push ds adc add pushf jnp xchg jne lea mov cmpl add andl pushf sub sete cmc pop (bad) mov imul sbb ss or cltd shlb xor rorl push mov jle incb add pop sub lret in jb (bad) std cmp jns and inc pusha cld std xchg pop push jae inc iret or pop (bad) or orl xor testl stos lds loope orl daa sub dec ret or dec jmp arpl push inc int jbe cmp jp dec stos stos fmuls jl and sub stos pop inc repnz ror sub popa mov (bad) popf ret lahf sub ret cli stos cltd ja loopne lock cli sub push out std mov je xchg rcrb sbb mov incb pop fsubl mov inc cmpsl jne inc push push inc ror sbb xchg lea or stos sub aaa subl pop inc add mov testb add sub cs pop mov dec sbb sbb jae ds insb pop imul mov (bad) repz cmp or add inc mov sbb mov push jmp inc (bad) jb (bad) sbb fcomps pop push aad test mov shlb imul sub xchg inc jae mov or ret inc mov push inc mov stos sti in ret mov ret loop jmp xchg incl aaa aam shrl inc mov (bad) scas imul sbb loopne cmp cmp pusha cli pop faddl mov call icebp xor rcll push jecxz jp inc sbb pusha dec popa dec push dec shrb lret xor fmull xchg jge (bad) xchg cmp xor inc out gs out fstpt pop mov inc test xor adc mov inc xchg push dec or sub enter jno orl sub sahf xor out call lret shrb jo xchg push and mov into and dec pop pushf sub fcmove inc in adc das jne test xchg and incl ret push mov inc xlat clc int inc iret push addr16 jb and pop ljmp adc pop dec jl lret cmp pop inc and test xor mov mov rorl xchg insl cmp mov pop imulb loope add fcoms xchg xor roll fs inc mov mov pop jl sub rclb jb addl dec push lahf mov outsb inc or ret or mov nop (bad) lods xor dec enter inc repnz fstpt inc out mov xchg mov and or imul sarb mov add jbe mov or dec les mov inc sub outsb mov ss out fldt push xchg mov lret mov cmp ror daa mov int3 xchg fstps addl dec popf daa jnp inc add loopne aas mov jecxz jb addr16 inc mov mov dec sahf sub enter inc pop sub loopne scas movb roll or movl xorb lods inc lock push ljmp shl jp bound ja inc daa cmp lcall test data16 xchg inc xchg idivl cmp ret sub loop inc dec ret cmpsb adc and jno jnp ds jle pop ret jecxz test lds (bad) dec xor les repnz mov mov push adc dec ljmp enter mov lcall pop adc aad adc sbb (bad) jno sub movsl inc xor mov pop cwtl inc push pop aam test out testb xor cmc inc aaa pop loop pop inc sub rorl xor es fcompl mov add pusha jp cmp test pop in stc and es (bad) fwait cltd xchg mov pop adc into mov push add xchg mov mov inc jge cmp add cmp inc inc dec cmc das jle jmp inc push push cmpsb mov call outsl rcrb inc mov subl cli mulb aad pop or cmp mov dec push jnp andl inc lods (bad) or mov es inc mov cld pop cmp inc inc mov push pop mov arpl pop and test ret stos icebp cs add jge in mov xchg dec test outsl js sub mov (bad) xor es aam das addb cwtl lea insl imul bound add (bad) scas inc and dec pop cmp push mov mov iret jecxz inc add jbe jmp cwtl inc fwait cmp or ss sti cmp pop daa ret hlt (bad) mov inc outsb (bad) pop in push mov mov inc mov lods aaa int iret push inc (bad) dec inc aas or lds mov fldt (bad) sbb fstpl xor sub popa xrelease sbb xchg add adc pushf popf inc push sbb add jae sub inc outsl adcl pop cmpsl cmp sbbl call jno stos sti pop dec in add cmp mov mov adc mov mov push (bad) stc mull stos dec pop sub insl or xchg mov into ja mov xor (bad) rcrb repnz xor pop and into lock push jb data16 daa xchg mov jg inc sub pusha xor fdivrl stos push xchg imul stc inc mov mov fisttp inc in cwtl mov ljmp imul jmp push (bad) insb jmp xchg dec mov cmp (bad) (bad) in dec sbb (bad) sbb mov lods lret push mov loopne shr rol lret push psrlq mov and stc adc jecxz cwtl fidivl sub mov sub jb cwtl ret fsub cs sub sti adc cmp nop pusha dec push lock pop or mov fldl inc fcoms cltd gs sbb mov jl xor test inc lds in pop add pusha inc pusha xchg xor fisttp mov mov cmp sub pop xchg xchg cmp mov int sbb dec pop xchg inc imul mov xchg mov mov repnz add sbb cmp stc movl outsl mov add push dec stos imulb lahf imul pop mov in icebp les cmpsb inc mov iret clc and mov in imul cmp es adc mov push sub jg int3 dec xor lock xchg and pusha cmpsb fnstenv imul push xchg cwtl inc std jecxz icebp imul les xor rol rorl scas loop (bad) outsl fs cwtl (bad) push inc data16 xor lret dec ficompl add aad xor add int3 movsb lret pop add scas mov dec into aad fistp adc stos mov dec sub rolb insl cmp xor adc andl lods mov addb (bad) push int3 cmp jno mov fisttpl inc iret pop xchg test inc or or add cmc outsb inc cmp das pop mov out mov test pop inc or js int dec cmp dec mov es enter inc imul fdivr dec call sarl push mov sbb push inc cs insb dec ret imul cmp adc or inc xor or loope sbb cli mov sub inc les pop and pop mov loopne sub add push test inc pop (bad) aam aas dec rolb loop fisubrl aaa jne adc mov aas inc das xor and in int dec jno or sub cmp cmpsb inc fnstcw and or mov ficomp icebp dec inc mov lods in repz push in add lods mov jle xor or imul pop std je test out add decl jge mov outsb ss mov (bad) out xor cmovbe lea cs mov inc pop arpl sub or push mov les jae xor es mov jne int xchg sbb scas lods cltd pop pop jmp jecxz sub arpl ret cmp push cmpsb dec mov inc add or dec cmp (bad) dec ja push xchg cmpsl and inc pusha mov inc mov rcll aas mov out outsl push sahf jecxz pop and es inc jnp sub daa jl int mov sub jg push pop mov inc mov stc dec mov add cld cwtl jge popl push je leave popf mov push lcall pusha cmpsb inc test mov xor mov inc xlat push aad dec mov cmp mov push das sbb ret jb inc sub pop cmpsb mov pop cmp jno cmp aad data16 shl leave add xor into fisubr cmp sbb xchg rolb lods push xchg cmp jne lea popa mov pusha aam fiadd lcall dec inc clc or xchg sbb pop xchg jae out and jmp pusha mov add inc push in pop push lods cwtl int in lds stos mov enter mov pop cmp mov sarl (bad) int aaa sbb lret inc push dec and int3 mov mov (bad) cmovae test sbb and add add stc fwait das in push insb fldcw push inc pop les and push push xchg and outsb loop push ljmp xor and push jb in aas (bad) lret fldenv jbe inc loopne jle aam movsl pop inc dec add repz dec outsl mov pusha sbb imul pop inc push sub cwtl xorl sub jg mov out int xchg imul sti (bad) dec mov dec fwait loop pusha jl push add ret lret dec adc push or ds mov ja push addr16 pop pusha mov mov addr16 int3 flds stos push bound loop inc cmp mov jmp inc push add stos cmp ds lahf int3 push pop ret add sub pop xlat cwtl dec fwait loopne in jo push jle (bad) cmpsl mov loopne std and movsb sub sub add mov inc inc cmp subl dec mov gs cmpsl popf ss inc mov mov mov fstpt jne fbstp push pop les mov pop and pusha scas (bad) iret xchg inc popf add cmp add mov push ja jg jb test sbb sbb gs ss jecxz xchg jmp sub mov pop into pop out popf fsubs lods leave add int lret (bad) and rclb xor pop sarb jmp cmp je inc push scas cmp test jg inc mov (bad) dec pop xchg fwait stos inc je adc push xor push mov movsb dec das (bad) enter inc sbb pop xchg pop (bad) into shl mov push sti aam push cmp jae pop arpl scas xor push dec bound movsl xchg mov movups aad dec xchg sub fnsave (bad) adc xchg in inc sub sbb or inc add cmc lret dec aad jmp mov out push cs aaa cmpsl inc in mov jmp lret fcoml jbe das dec nop (bad) sysenter dec xlat int3 push dec push inc fwait inc push mov movl lock sub in jecxz int sub mov mov dec das jne add subb xchg stos push cmp xor mov cli or ds addr16 push ficomp sbb cmc adc jle cmp data16 fidivrl jg inc ret bound faddl sbb or mov push push pushf inc ljmp adc jmp mov dec pop dec xlat pop ret (bad) xor pushf mov sbb fcmovne cltd in dec push mov adc in pop lods jae cmp (bad) ret lret stos mov jb mov inc sub out dec fadd inc stos jge aaa (bad) jne push inc mov aam scas sub xor add cmp mov cmp test repnz repz insl mov in xchg shrb sahf dec xchg cmp cmp dec inc stc push outsl or int3 cmp xchg mov fcomp stc fcomi (bad) adc loopne push arpl push fisttpll test cmpsl cmp cmc push dec and scas fildl add mov int3 cld (bad) ja xlat imul nop dec push stc out or sub (bad) dec xor ret std mov sbb push orl popa in outsl cs fucomp inc inc jo mov clc push sbb jmp rcl in cmp sbb push lcall stos and fwait push (bad) insl lahf pop dec adc xor cltd mov mov or dec adc mov add outsl sub jb ret scas mov inc xor jb cmc out jmp push clc mov jnp or dec scas in or and adc sti inc bound pop sub mov xor inc lods jo into and mov or fs daa cmp insl out movsl rolb mov in pop mov int3 mov pop adc dec adc xor jns adc cmp push pop jmp and add or inc repz sbb xor lcall xor sbb adc jbe (bad) sahf inc lret jp pop push push or ret pop std ret jno es push bound and rclb hlt add rcrl mov cmp add push into lcall bound rclb shll int3 and jns inc push (bad) (bad) xchg xchg out inc in outsb daa mov sbb inc sbbl inc mov mov lea outsl aad push ret cmp test fimull dec dec inc jecxz cmp push sarl repnz add dec test cmp sahf fsts inc dec mov cmp mov dec psrad out xchg mov shr pop lods mov xchg or mov xchg push (bad) or sub dec das scas ja push dec sub stc inc lcall push vprotw mov (bad) aas cmp test mov out mov mov imul push jae orl shrl mov sub sub jl push xchg xchg aad dec add into mov xchg lahf int3 push ret jg add mov cmp pop jp push notl xchg arpl test xchg iret ds stos scas (bad) insl scas aad push inc aaa inc add or (bad) aad in inc jp stos js xchg xchg mov imul cld loopne adc bound adc in test pop dec sub pop int aas add add mov mov (bad) test or cld and inc stos jmp adc daa jo dec sub sub sahf out stos dec add mov (bad) dec add rcr or les jnp mov (bad) (bad) jne test popf adc sub outsl test push cld sub cltd push dec and cmpsl jo xchg scas jae sub mov sub inc outsb pop sbb decb or xchg inc js (bad) cli scas dec dec loope push ret jns lds mov dec test mov stos pop fucomi push jns sub mov and rcrl push sub dec sub stos push push neg cmp xchg (bad) in mov mov mov xchg daa xlat pop inc loope xchg lock jge adc mov mov out inc inc outsl adc mov aas adc loop repz mov sbb xor lret xchg inc bound jmp inc jb mov inc stos inc (bad) xchg cli mov es mov inc mov frstor xchg outsb movsl repz stos inc nop jbe xchg js fldl2e (bad) arpl ret out aaa dec test bnd jnp inc icebp xor inc dec pop fild int3 jns dec pop int data16 clc inc pop jg fxch inc push push sub push repz cmp jbe pusha popa sysexit xchg xchg scas mov xor int3 js jo mov mov pop or inc dec (bad) xor inc fbstp mov inc fsubrp mov stos sti cmp test stos add dec inc mov ss and in push pop and xchg imul inc push aam arpl mov pop push pop jo test adcb add mov inc shll ret aas enter in je mov xor xor addr16 out dec (bad) inc and add or lods arpl inc dec mov test test mov incl aas (bad) inc mov mov cmp dec or mov pop imul lret xor and icebp shll inc mov call je lret mov cmp and ja jns cltd stos test addr16 pop mull (bad) es fmuls das add pop dec dec daa pop rclb insb jge (bad) inc mov andl push (bad) (bad) mov cmpsb push das pop movsb inc adcl (bad) mov insl dec xlat cld test mov gs jmp adc push mov jmp fstpt cmp out push addr16 pusha jae jae lods dec es aam cmp add (bad) out jne push jl mov add and sub cli adc movsl pop or sbbl hlt fild out mov push lock ret mov sbb dec and xchg imul push jle inc xchg jecxz repz insl push inc sarb dec xchg rcrb sub icebp mov xlat pusha mov mov stos lret popa outsb mov pop stc in inc jne pushw aas enter dec inc in mov out sbb jecxz sub (bad) add jecxz xchg (bad) ret add add pop loopne arpl xlat mov int3 mov mov cmpsl icebp (bad) stc jb movsl shrl or inc ret cmp (bad) mov inc dec jne xor lahf mov mov sub xorb lock cltd dec mov mov add fs and out je inc cmc insl cwtl cmp push incb loop ljmp pop pusha pop push dec jbe sarb into xlat mov inc lret mov addl jge mov ja mov dec mov fisub nop push inc test cmc push push dec jno jp and push lahf mov test inc dec xchg cli int push dec mov cmpsl ds xchg scas push (bad) jb dec jnp jmp inc test sub into divl xchg bound adc inc and sbb bound loope sub testb add imul les mov xorb ficoml and aaa mov xchg jb loopne ret mov mov cmc mov (bad) leave inc (bad) inc rorl inc inc aas inc push pop insl lods ja inc enter ret or lock out pop jl int3 (bad) (bad) mov adc or iret adc sti clc stos mov fisttpl jg repz fdivr sub add dec js inc enter icebp pop inc ja lea mov popf scas adc cli test xor aaa movsb pusha dec int js std loop mov inc (bad) push jle mov sub and push jmp popf (bad) dec xchg inc das jecxz push jb inc sti inc les (bad) ss dec insb inc call pop test dec jns xchg add jmp inc inc popf and pop mov inc pop pop imul or push cmp inc and sarb inc mov aam les jbe push pop adc es nop repnz and mov sub jmp popa insl aas jb stos dec inc inc push icebp and inc ret and or je mov movsb add lea aas mov inc push sahf push out (bad) sub enter mov cmp xor adc inc push loopne sti or sbb fwait outsl push push inc insl std cmpsl lahf mov rorl jle pop cmovne les lods sbb loopne mov mov arpl test (bad) or xchg hlt mov pop aam (bad) ja add inc (bad) jo xchg push bound mov stos jle ret imul jp mov (bad) and sub gs sbb faddp mov dec add lcall (bad) lret jmp testl shrl dec outsb inc xchg inc push movsl jg fadds mov ret sbb inc mov js jae iret in jno inc or arpl sbb dec cltd push or ret sbb lret inc lds out sbb jl cmp fwait pop adc cmp loopne pushl insl bound sbb push int3 fucomp cs xor loope outsl inc push mov cmpsl or jbe popa cmp cmp push addb push xlat sub sbb pop inc stc or pop xor add inc adc dec mov jb outsb inc lea xchg adc mov loop xchg les push lcall or inc inc popf jae enter pop std addr16 jecxz fwait fwait lock and std mov inc in cmpl mov out add pop xchg add or sub xor sbb lret lods jae pop loopne popa dec int jge and cmpsb ds push push mov push outsl fiadd aad out dec add fcoml and call mov ret add or inc roll xchg imul dec lods cmp ret xor jbe outsl inc xchg jo pop stos pop xchg enter std inc aaa in add and mov inc push ret jecxz fadd in jle aad adc dec aam ret in inc loope inc (bad) or dec fdivrs push ljmp ds jo syscall mov xlat xorl push push sub dec add outsl and nop xchg jecxz shrl shlb imul xlat mov (bad) inc and jnp les inc mov cmp mov jmp out iret roll sti push cmp enter incl xor cmp and das loope push xor or ret mov jb jo lea push ror dec dec arpl adc add imul dec xchg add ja mov data16 fild insl cs movsl xor jl leave inc and jecxz cmp dec (bad) clc sub pop xor mov movsb pop (bad) and inc popa inc inc sbb mov daa inc push fisttpll aas bound repnz lea push pop (bad) xor pop xchg lods data16 inc in ja (bad) sahf scas movsb push out sti sub jo adc xchg push out or xor ret data16 jle sbb add rcll pop push divb inc mov dec adc mov ficompl int and (bad) inc inc shlb add mov insl cmp sub inc dec xchg rcr mov adc decb leave add cwtl lahf sub mov pop jno xor inc imul leave dec mov mov or cmpl gs (bad) sub mov pop lret call std repz into stc push sahf mov loopne and pop xchg cli pop inc jl cmp or push mov ss in outsb dec xchg xchg stc dec (bad) sub lods mov ret inc test jg les in (bad) push push fs test dec push xor das xor inc sarb jmp inc scas ja adc sub sbb xchg adc (bad) popa add inc fbld fildll dec pop mov mov sbb out inc jg push jg and mov cli jnp jg pop inc mov xchg push xchg add dec push push cwtl fsubr jo imul aad mov dec rcrl je lods cmp push inc test incb mov dec cltd cltd inc scas test fildl sbb sbb sti jns loopne ret repnz (bad) mov inc (bad) outsb sbb jae push fmull mov inc ja mov daa cltd pop loope insb cmp sbb lgs dec jb inc (bad) out and stos xor fimull inc cmp mov dec mov imul mov dec insl mov inc ret lcall inc jne (bad) cld enter out jbe andl aaa leave dec jae mov sub fistpl push and and insb dec ss pop sbb dec arpl pusha ficom pop sub inc stos dec dec repz (bad) and insl cli mov rorl mov push add cmp je imul mov mov (bad) dec lods lcall sbb (bad) fxch push adc jae push roll je inc jge insl xchg jmp cmp popf sub inc and fstpt ficoml and xchg lcall or cli dec sub gs jmp fcompl inc pop lret sbb inc dec dec cmc outsl iret (bad) testb pop jge add inc adc inc dec mov mov fildl adc and cmp mov test fsubr lcall or inc call adc rolb es pop mov sahf push jbe xchg inc cmp and inc pop je movsl xchg inc mov jecxz dec lds dec sub aam int3 aaa idivl adc xor sub andl fdivrl outsl out ja inc inc into leave jnp stos jg add ret xchg jae push fstpt mov and inc sti pop lret ficomp xor les mov stos loop pop xchg sahf (bad) icebp inc insb dec mov les and lods dec aaa cmp dec sti xchg push inc pop mov (bad) pop cmp dec enter ja cmpsb cmc in pop jb or in arpl test (bad) (bad) cwtl mov (bad) je push fiadd and ss loopne adc mov cmc nop and imul dec xlat push in sti dec pushf push push xchg cmp sti xor out dec movsb out xor sub xchg enter ret les ret add xchg js ficompl lcall inc lea push jge fs fstp or out les xchg mov xchg dec popa cmp call fwait mov xchg mov pop cs dec ret mov xorl mov add push xchg aad stc ret pop into cmp push sub xor mov mov jmp call mov mov inc mov jbe inc sbb xchg xor mov lret mov or dec daa in inc lret je lods mov inc repz sub pop in aas dec dec lds (bad) jne ret out stos mov clc fimul mov ja mov dec adc sub mov push lea jle,pt ret push std es bound push andb mov dec inc ja pushf test jbe add and imul xor cwtl mov pop sbb stc mov inc jecxz mov add add fildll jns sbb out les jae xchg jb sbb cmpl mov or push pop mov fwait inc cmp xchg ficompl inc inc fldt fist (bad) push jae mov cmp cmp inc inc xlat jb pop mov loopne inc nop out outsb imul movsl insl and or es (bad) push fcompp pop cld lds mov mov test cmp cmpsl insb jle cmp aad addl scas daa les sbb pop sub inc push jbe adc test inc arpl mov xchg cmp cmp into cltd aaa or ja inc adc xor dec fistpll or std sbb sub stos push mov lock sbb imul or push and je sbb cmpsl push jmp shrb (bad) int push pushf xor stos sub dec sbb mov or mov insl lds int3 sub repz push ja (bad) mov sub sub aas (bad) jne cs xor pop cltd cmp in push cmpsb sbb sub out mov pop lret mov scas dec shll cltd repnz xor inc sarb shll loopne outsb dec push push gs xchg sub push pop sar rorb mov lods dec mov push or movsb add into push (bad) xor pop jnp adc sahf imulb inc (bad) xor fistpl cmp jge mov inc dec jp rclb mov jg dec push dec mov and pop inc mov mov in jnp ds xchg sub adc adc addl sahf sub dec iret pop mov stc sbbl pop addr16 push jmp dec out xor lret ret push es push imul insb fldt dec add adc cmp ret mov mov inc or adcl xchg call movsl inc call xor in js hlt jo mov fistp sub lcall test sub sbb mov inc sbb les scas or mov or cltd out mov or shlb pop mov stos ret mov add orl sahf scas push mov jg cmp das out inc inc ficoml and stos mov aam or pusha jae xchg fwait lock inc loopne insb popa adcl fmull mov add out mov pop pop loop mov mov jmp fsub iret push iret push dec pop test pop add test arpl pop xlat into ret add cmp sahf aas and push scas rol pop xlat mov mov outsb xchg jae and pop pushf push pop into and sahf add (bad) sbb pop pop std mov xor aas push push das push popf inc sub push add inc (bad) les inc in push repnz push pop mov repz adc inc std push inc in add insl xchg fwait aam incl test xchg fdiv inc insb mov mov stos fstpl jecxz ss cmp arpl jae ljmp add mov aaa push loop or jmp xchg mov cs cmpsl outsl add popa dec cmpsl xor inc stos jmp adc dec or sarb into lea sbb cmp xor dec mov notb std lret movups xor ret or mov dec pop jp cmp lea sahf (bad) and js add fsubs in adc adc fnstenv mov sub inc cwtl pusha sbb (bad) xchg ljmp int mov adc add inc int3 inc cli stos pop mov sahf mov cmpsl mov sbb adc mov incl dec (bad) lahf (bad) out ficoml lcall pop pop aas imul xchg sarb mov cmp xor add pop sarl js or sub mov pop inc subl xor js loop addr16 rorl sahf push inc in push or xchg jnp jae cmc and enter mov push pop mov data16 lea add xchg add cli fcomps sbb or imul decb sbb mov ds jle (bad) mov dec int3 out pusha dec cld test push aad int je outsb (bad) pushf aam mov and test aas inc dec xchg insb imul pop sti dec mov (bad) movsl pop push xor popa fs jle mull ss cmp sub in fild cmp xchg adc out inc ljmp sub daa fdivp scas ja sbb sub or sbb pop inc les mov mov push movsb popa push jns inc mov ret inc movsl mov sbb pop mov aaa push dec lret xor out (bad) mov jmp aas jb dec das inc xchg ja out les test push or xchg scas sbb lret push dec fimull xchg inc cmpsb test fwait lahf push jl lds add repz mov outsl sbb push mov cmp fsubr inc mov mov popa ss cltd fwait pop scas dec xchg push add adc xor mov dec insl push inc popa arpl pop mov dec pop inc push mov mov (bad) jmp loope and test popf repz xchg gs (bad) fnstsw inc popa in leave repz std movl loop adc mov xchg lahf push mov mov inc sbb pop sti xor jmp and cmpsb inc in lock ss sub mov test aas cmp inc mov and jle data16 inc test adc mov sarl sub ljmp daa push pop sbb mov inc add mulb fbld cmp inc jp mov ror mov loopne sahf jne pop ss add xchg aam mov and lret test xor rol rol hlt fadds test cmp cmp lret sub mov adc sbb cmp xor orl mov (bad) xchg mov fcmovnbe push push jmp stos in adc inc cmp sbb outsb or jecxz dec call int3 ss push inc aad pop pop add fucomp inc inc add icebp ret popa pop rclb jne sbb popa mov gs and andb nop mov cmp inc addr16 cmp and inc push scas mov xchg test ret out cmp lods mov sbb mov test mov push imul imul int3 mov mov dec mov dec imul sbb bound push mov push enter inc lea int das dec pop popf mov fistpll pop inc dec insb ror jl outsl cmc push out mov add movsb inc add cmpsb jle xchg imul addb int3 mov dec jno inc insb mov dec mov mov add sbb fs push jp imul mov (bad) pop push jl lock cmpsb mov add shlb cwtl mov inc mov out push jb arpl push test push and movsb mov or fcmovnbe inc addl and push lds test hlt inc jo inc xchg insb push pop movsl cmp and cld (bad) call cs jmp (bad) (bad) add loopne in pop dec pop andl fisub (bad) ljmp arpl inc fnstenv in idivl pop insl cmc cld jno push xchg enter sahf mov outsb add inc add jecxz lcall jae orl ja jg mov pop rolb xlat dec aas dec inc mov mov add mov loopnew push daa jp add jle inc pop jne add xchg adc imul cld xlat jns arpl lcall pop test sbb xchg jg mov cmp out shlb leave or pop fstpl or dec loop cmpsl pop movsl mov and inc push pop cwtl dec (bad) push cmp mov xor ret ds push les mov movsl fistpll xchg ss ja add mov in dec inc repnz and nop imul push das cmc dec inc jg cwtl lods out addl and dec loop push enter int3 clc or jmp out xor iret dec add rclb inc out inc lahf movsb mov jo test fisubrl (bad) repz cmp lret pop stos or dec call or push and cmp push jmp lret insb jnp inc dec and sti cmpsb xor xor add mov adc shlb cld jnp aam popf push xchg adcl sub fidivrl mov std push mov dec or rcrl add and aaa pop inc push test (bad) jecxz jb cmp repnz sub fisttpl loopne dec jmp add xchg lea push fwait inc fildl push gs scas xchg cmp jle push out inc mov push cs dec fldl dec cmovae pop sbb push and in xchg inc xor push cmpsb lret inc mov xchg fildl repz push stos ss inc push push jle push sub in imul inc ja bound mov fwait or xchg (bad) hlt fldt jecxz enter fistpl dec pop mov inc mov aaa repnz jnp ja dec mov ret sub lcall lret cli rcr push stos in sbb push add inc in cmc lock sub and movsb popf mov pop popf (bad) fimull push out cmp inc sub dec cld pop movsb sub cmp repz inc cmp es inc dec mov cmpsl xchg inc loop stc dec (bad) inc mov inc jno sbb sub sbb mov js (bad) xchg mov lahf fs inc jnp sbb jo inc cmp ret pushf das mov inc repnz mov call jo (bad) xchg inc imul icebp je (bad) dec sub int3 cwtl arpl push pop ret dec push in enter (bad) ret mov clc push in add cli adc cmp daa cmp fucomp inc cmp push test ret cmp dec cltd dec sti mov pop lea inc sbbl popa inc clc dec mov loop push inc aam cld xchg enter ss vfmsubadd231ps mov insb pop cltd pop xor adc mov or dec (bad) out inc inc stos sbb (bad) xchg mov add std pop add adc in pop fsubrs sbb test and pop cld loop push pop mov pop sbb sub push jno mov add add cltd pop int3 or mov push test pushf sub mov ret cmp clc inc inc int3 xor in inc dec mov rcr sbb mov jnp repz push xchg lea dec add sub mov xlat imul fiaddl lcall enter loope xorl sub (bad) dec jbe dec (bad) leave jbe mov ret mov dec std into sub dec cmpsl test outsl in mov loop pusha xchg sub xchg ds sbb mov aas cmc xchg mov inc mov mov into in mov fadd adc mov add les lock xor (bad) and lock lahf mov dec sub mov (bad) (bad) fsubrl cli adc fbstp loop xor fwait lds sbb jbe bound les mov pusha mov cwtl adcl add cmp or lret stc push adc in scas or testb cmp (bad) sti in mov pop int3 adc mov xchg mov inc jecxz mov add jbe inc push xchg mov fldt jb add jmp dec aaa scas mov or mov jne hlt lock inc adc (bad) or xor imul mov or mov push in mov cmp outsl mov mov jnp xchg into stc mov pop xchg sub or xchg sar push out aas bound mov dec daa rolb push mov dec mov std add mov fs adc jp mov mov mov cmp nop push into mov mov dec xor jo dec sub pop and inc pop lods clc inc or mov inc push xchg insb pop add aas push pop dec pop sarl dec cld imul incb mov and shlb add movsb lods pop test jle imul cmp cs mov test mov inc sbb and add inc lret fdivrl cmc push movsb lods stc mov int3 ret out jle xchg outsl call mov mov inc add dec loop repz add cmp jne mov xchg test (bad) mov jno add and adc jae xor fcompl ret jge lret push pop or inc ja jmp mov jae xor or mov push ret mov movsb (bad) lods lock inc daa push ficompl xor test cmc jo jg jg bnd adc in jl inc jnp and push fucomip neg cmp mov xor adc mov sbb inc push divb lcall and mov and hlt jno lds (bad) xor push inc adc cmp sbb mov inc mov idivl dec and xor cmp xor lret dec or test mov jne cmp fdivr fiadd adc mov mov inc mov js iret fcoms inc inc push ret (bad) in stos lds push inc imul mov sahf lods rcrl cmp mov aad daa jle or inc add xor xor inc aad dec les sti sub push xor dec mov nop push add std sub adc add out lods inc mov insl inc dec lds (bad) repnz push adc cmp int3 lea sbb outsl dec jl inc or cmpsb aas xchg (bad) xlat in mov or dec push ja jg sahf inc cwtl scas dec test inc push add popa inc dec mov cmp hlt xchg in push jg adc test mov or and das sbbl icebp jmp mov outsl mov pop sub adc xchg sbb mov add push add inc (bad) mov jno sub inc or popf adc rorb mov sbb xor jb mov xchg sub pop inc inc cld scas pop idivl dec pop leave push push movq insb lcall mov sub pop xor shrb inc outsb or ds adc js or or pop adc and std jb negl or push mov adc ja push add das sbb add sub pop cmp (bad) push sbb pop lods inc push push sub mov dec mov loopne mov dec fs sub test cltd mov rol in aaa js sub nop je cmp sbb rcl dec (bad) mov mov hlt cmp imul les cwtl outsl push mov cmpsl and nop test dec push out sub mov cmp call in and push add lods mov arpl jae jno loope int3 push sub inc inc mov es inc (bad) ret aaa xchg loopne test cmc gs dec fsubrs cmp das inc mov jbe dec movsb mov (bad) sub inc sahf jge xlat lods push and dec imull inc outsl andnps xchg jo testb insl out cld cmp dec adc mov add push inc push inc xor cmp add in pop and lret inc jo cmpsl push (bad) out mov inc clc push add sti or or or ljmp inc xor push bound sti jbe inc xor mov cmpsl sahf mov inc pshufw inc xchg push jle inc bnd fiadd scas mov xlat mov jnp jo inc dec popf ss pop ret xor testb push mov push adc and xchg testb mov lahf and cmp add dec jge ja sub iret inc mov arpl enter inc xchg loop test ret jl negb xor pop xchg jae les dec ret sub mov and pop push test int arpl push in inc jl add mov addr16 movsb pop outsl (bad) push nop fisttpl inc pop sub lock adc sub sub push cmovno push ljmp fmul add es or mov jnp and pop mov xor aas (bad) cld rorb repz (bad) fwait test aad clc ficompl mov js push imul aad mov insb mov in mov inc pusha jge sbb pop sub inc xchg ds call mov xchg push int3 push data16 xor fadds mov dec xchg add cmp hlt mov pop mov ja (bad) enter cmp mov arpl loopne movsb ds arpl into scas mov mov fs sub push inc lcall insl mov push sub repnz stos jo (bad) arpl adc out movups loop sub push xchg add int cmpsl aam mov push sub cmp bound das xchg std add jbe (bad) push (bad) jb sahf imulb iret cs roll adc or stos sub fcoms push fadd popf dec scas jae inc rcll jecxz adc mov das or jecxz (bad) out mov sub je out jae sbb add daa push sbb mov mov pop and xlat sub lea hlt push subl leave fisubl jo cmpsl ja fiaddl push ljmp pop das jns and mov add lahf in icebp inc insl xlat or mov popf jb xor adc repnz mov push arpl fisubrl les sub popl ss mov pop sbb jg inc inc inc push cmp nop inc stos add cmp inc sub xor int or adc sbb sub (bad) fisubl inc cmp push cmp test sbb aad mov add lahf jecxz pop pusha sub xchg lret ret out fstpl xchg rorl pop dec push jae sbb insl lret mov insl inc mov sahf inc pop jo mov adc push fs push inc cmpsb add inc sub outsl es inc pushf fldl and mov mov imul dec lcall out xor inc cmp test call or mov jnp loop (bad) xor mov fisttp jnp sbb mov out ss pop ds pop movsb shlb cmp in sub cltd and push hlt xor dec xor ret rcll data16 or sbb and cmpsb rolb push jbe arpl icebp imul stos mov sti inc pop pop (bad) ljmp mov jle adc repnz jbe mov repz sub inc inc or pop jo arpl xchg inc dec (bad) xor dec push shll pusha inc xchg lret arpl mov in mov lcall repnz adc adc inc stos mov mov inc out inc mov mov xchg imul jmp and dec testb inc push inc call jnp aaa insb mov orl popf jo and jecxz mov sbb xchg inc divb out das mov sarb es stos inc mov add push dec push repz mov adcl aas orb jge loope incl mov sub sub mov mov andl in loopne call adc nop mov jb inc sub subb dec pop aad scas lock push xor mov int les xor cs pop call inc and inc mov stc push pushf ret jecxz mov rcll xor ja adc insl js int inc mov mov mov loopne inc xor cwtl daa in outsb jl pop mov and dec dec push or imul mov aam inc sub push inc or in jge addr16 fisttpll sbb inc pop cmovs add pop (bad) movsb clc and or sahf nop sti xor lcall push cld pop cmpl sub loope push nop jge add gs cmp pop xor mov ljmp add push (bad) push aas jae xor sub and ret adc fildll or push lds add in in inc fsubrs adc mov and cs inc (bad) ds sbb stos mov (bad) out inc adc jecxz mov mov inc cmp incl push mov xor pusha mov clc jae sub mov shl fcmovu inc sbb scas int loopne push inc andb leave lods inc cwtl js adc inc ret loope mov lahf push arpl hlt mov repz cmp push sbb repz jmp jl xchg notl (bad) int in and mov cmpl fsubs nop jecxz mov xchg out pushf mov inc mov push add and jle pop push inc ja mov ret dec imulb mov xor pop or jmp push sub adc out mov cmc lods lea sbb inc fildll fimull mov pop mov cmp fnstcw pop sti push popl push lcall xor pop sbb popf std push cmpl lock cmp xchg fdivs js or mov or jo lock fisubrl mov push leave push pop add popa shlb aad cs jg sbb leave mov dec aad pop mov movsl adc dec (bad) (bad) and ret gs sub pop cmp inc mov and movsb pop int3 test nop mov (bad) sbb shrl test rep mov sbb xor inc cli lret sti mov push cmp push test mov aas xchg mov or test ret (bad) mov iret adc fildl mov stos add cs imul push pop test cs out push cmp push inc jge jp out ja (bad) loopne and leave test call clc inc iret jne dec mov incb sbb imul stos mov and and std sub insb inc in bound mov das dec jno pop inc inc rcl out mov cmc fldl pop mov pop sub ret inc push inc lahf fs pop imul add repnz hlt fstpt push daa inc negl inc mov push pop jg outsb dec (bad) pop push inc adc mov das mov pop sbb popf shrl push dec test inc call loopne jbe cmpsl xor fildl add movsl out ret out sub mov or lret lahf jp jb ret or inc cmp push xor test aas aad jl jae push push shl int or pop andl mov (bad) push xchg dec pop push int3 arpl xor inc jnp add sahf addr16 mov fild cmp mov fnstenv (bad) mov add (bad) jle (bad) scas xor std xchg movsb fldcw push (bad) push icebp out mov test fiadd loope icebp arpl sahf jns push pop sahf push cwtl out xchg jl mov (bad) mov pop cld cmp mov sbb dec (bad) arpl dec sub mov adc imul (bad) js add call test mov cltd mov adcl sbb and (bad) add mov mov mov loopne and dec xor push mov cwtl inc jb jge fistp xor mov outsl enter push sti xor stos xchg dec jae inc sbb fwait adc fadds test in push inc xorl jo cwtl sbb ret xchg cmp int3 mov mov stc or pop xor sub add adc pusha outsb mov sahf lcall jnp mov xchg lret (bad) jne dec sti sbb (bad) and das xor aas mov sub mov xor (bad) fist js xor adcl mov mov inc mov mov jae xchg lretw add stos rcrb frstor enter mov or xchg dec stos rcll or dec sub in in into dec pop push rorl inc in sahf (bad) mov and cltd (bad) xor ficomp daa dec mov pop (bad) xchg sub (bad) jp mov add xchg mov dec mov xchg (bad) fs add or xchg mov push lea dec insl es addr16 enter pop loop rcll sbb ss or lret xor xchg lahf rorl cld inc stc add lret and shr xchg rclb das mov inc (bad) lods dec dec and sbb fisttp (bad) xchg sub rclb adc add mov rolb testb ja cmp add loopne test xchg aam push fwait or inc cmp inc lcall insl fbld or sti or sbb push inc xchg add dec std mov sub mov in sbb jno mov sub insb cmpsl xor ret sti cld or mov add dec lcall stos lahf movb (bad) loop xor jle fldenvs aas cld pop xchg push inc scas pop arpl sti cmp imul lahf movsl pushf popf add (bad) cmp jns icebp push cmp das test inc adc add push pop sbb inc mov jns inc mov movsb into negb (bad) out fnsave mov xchg lret daa mov call jmp add inc inc fadd push inc rorb xchg arpl or test and dec push dec mov dec jb jne jge test fiadd (bad) in fdivs dec dec mov inc mov add cmc sbb jno adc mov fisttpll xor mov inc mov sti xchg xor sub popf enter inc pop imul push lea call test or jge mov mov and xor sbb mov outsl add cs jno jecxz ret sbb inc push jb sarl jno push jecxz das lods mov scas jg repnz sub xchg jp outsb sbb xchg test in mov clc xchg fild in push (bad) (bad) add xchg ret xchg mov stos pop imul loopne jle (bad) out inc out addr16 lcall repnz inc cmp popa jne cmp mov inc xchg fbld int sbb dec test jge jecxz mov cmp push mov fldl das inc test jne ret and rolb outsb adc mov push fwait sbb in xor fs bound jo addl push aad scas loop cmp inc or mov xor (bad) or fs mov int3 iret sub popf cltd lock rcll add or scas add andl dec xor cmp out lcall xchg xor popa aam sub push clc jmp shrb cwtl scas stos xchg mov ds stos cmp or sub pop leave dec jbe lcall dec (bad) sbb xchg xchg incl jo pop xchg fiaddl add push (bad) mov jo lret aaa cmp sbb inc push ss jge ss and scas push addr16 fsubs in cs fdivl dec lods sbb pop nop pop or iret sbb inc mov shrb daa inc add jae xchg xor loope sub xor (bad) jmp push sub push andb dec inc in mov ja movsl aam jl test or or in mov jg inc inc in (bad) dec pop ds cmpsl int add xchg inc scas mov adc imul mov push adc inc inc sub clc or and pop fcoms repnz mov mov mov mov inc test mov inc xchg aad xchg hlt in orl (bad) mov repz dec cmc dec nop sub inc push inc notl imul inc add dec inc xor mov push inc mov jae mov xor add cli and bound push (bad) jbe insl cs push add adc inc mov aam hlt xor dec insb js sahf pop es mov dec sub arpl inc xor push cmp dec push xchg aad das jecxz loopne and (bad) ret cmc mov mov inc ja mov cmp nop scas inc fisttpll es inc and jb mov rcll mov cs pop stc cmp dec ljmp sbb rolb adc pusha jle mov iret loopne inc mov jecxz outsb fst mov movsb push push push push insl (bad) in xor push nop mov pop and ss push jge inc ret sti int pop pop add inc (bad) nop jne sub stos repnz jb and icebp dec int sbb xor add push in test push jno (bad) stc mov xlat jecxz fidiv arpl push inc pop cli jo push inc pop add stos repnz inc popa jbe pusha jno jb rcrb sbb add movsb push pop dec inc (bad) fisttpll sbb and js ficomp add scas clc adcl mov and lret pop and adcl hlt push inc dec xlat call cmp test push cmp pop ret mov pop xchg dec in mov shrl into test inc test cmp dec movsl rcrl mov outsb inc (bad) jbe lret pop mov (bad) dec pop add cmc add push movsl faddl (bad) outsb neg mov inc clc mov aaa mov or test adc push out add jge nop loop fstps push inc push fwait imul cld inc (bad) or imul xor cmp dec xor push pop in inc out dec push push lods xchg and push in sub sub nop xchg out add imul or (bad) scas inc mov xor lods or out incb pop std add lahf jno xlat jnp sahf mov cld out mov push mov mov ja pop ljmp ret push pop insb jns jne leave jmp fldenv scas lods rolb jnp sub in call outsl pop test sub or xor sub out mov inc mov cmp xor jl ret (bad) xchg loop je push sarb (bad) iret cltd out mov loop sti addl pop mov xor and xor and mov dec das testl adc popa add xlat or in push xor sub push push jbe inc out jg insl jle cmc in lods mov stc cs repz inc add arpl das notb xor fisttpll push xchg clc inc outsl std into mov imul inc push adc and mov inc fsubr lds int3 fmuls int test inc push arpl mov repz cli inc mov fidiv psubusw xlat inc add popf adc inc jecxz rcrb sub xor xchg mov test jnp or arpl inc sbb nop mov dec int3 js mov int dec fiaddl and inc dec xchg and mov add jne rcll sbb fld dec push insl adc xchg jbe lds or inc cmp add cmp cmp jnp sub (bad) (bad) popa cwtl call into ret jo loop cltd xchg cmpsl ss fwait scas fistp inc lds mov jnp sub dec cmpsl cmp int3 and dec mov sub dec fadd dec mov loope xchg pusha mov inc adcl fwait or aaa rcrl mov pop sub popf mov adc (bad) dec fstpt mov mov sub cli stos dec sub stc int sub addr16 mov cmp (bad) inc dec cmp test stos dec sub leave shl mov imul orb xchg out jae push and faddl mov jge mov pusha dec push aam popf fldcw test ret stos data16 loopne sarl incb sub dec fmull sbb inc loope inc lds sti mov rolb mov mov les adc jo xor mov mov jne icebp scas and jno xor clc int3 fstl add add mov rorl jae sbb incl push or in xor xchg push inc das mov push repz (bad) mov xorl (bad) jmp sbb push pop push and push push xchg imul sbb iret xor adc cmpl mov shll or call (bad) (bad) jno push xor xor push dec inc mov pop cmpsl fadds fnstsw (bad) adc xor and inc outsl ss lea push shrl inc test dec jb and jl pop (bad) (bad) dec inc notb mov (bad) leave fsubr ret test (bad) nop je js mov cmp xchg ss push push outsb xchg xchg inc dec mov cmp jmp jb mov iret dec sbb pop cld lods jecxz inc mov push and popa sbb ret nop mov stos and xchg sti sbb fistl add inc jge adc dec nop inc xor and xor in (bad) push xor inc dec sub cmpsl cmp adc inc pop jne and push (bad) repz fidivrl incb andb xchg mov aam or lahf dec mov sarb mov (bad) icebp fsts cs loop loope fistpl adc out inc clc fcmovnb iret or inc fidivrl roll push test add arpl arpl mov dec push xlat (bad) add into xchg sbb adc lea movsb cmp in (bad) xor xchg lds (bad) adc cmp push stos js push push xchg dec lahf jne mov mov pop lret out call sub mov into stc lahf mov movsb pop sbb dec and push inc leave (bad) out sbb xor (bad) jmp shrl test dec cmp push and inc andl loop xchg mov jge cmp fs imul ret jb inc push das inc jo lcall fstps jl cs inc xor shlb cmp push psubw add mov sti dec push ror cmp jecxz push rcrb jo out xchg inc cli dec pop jb push test pop test push jns clc inc cld nop adc loop or and cmp dec mov and cltd roll mov (bad) fcomps jmp (bad) imul dec loopne or mov push popa dec out mov sub inc hlt dec cwtl push mov subl jle call scas and ja sahf adc jg sbb push fnstenv sub je jne xchg loop push push jno pop inc or aas sbb ror imul movsb sub inc inc inc and inc pop pusha fptan inc jb sbb pop jo out ffreep and (bad) aaa sahf inc inc mov fsubrl dec lret sbb cmp fimull cmc (bad) dec mov inc inc aam int ds adc sti mov adc or mov xchg lret in adc sar sub jae daa inc xlat jbe sub jg add mov imul xor jo jge sub mov pop sbb je js sub xchg inc dec and inc xchg clc cmp and inc test std pop (bad) sub or ja fild and adc add or cli jo hlt cmpsb lret fwait loop jmp ja in push ds stc pop push sub xor dec xchg sarl push xchg sbb arpl or or shrd jg outsb adcl int mov dec add xchg into int3 dec call mov xchg outsb and repz sbb call repnz mov jo push xor mov aaa inc pop adc add ret add imul lock dec xor ss jo movsl jecxz scas loope pusha mov ret mov inc fmull cmc lock jo xchg jo xchg xchg mov fwait loopne push push inc xor repnz (bad) inc sti mov aad icebp dec lds dec shrl inc mov ds mov jmp stc xchg adc popf adc sti push dec xor mov inc xchg adc leave mov rorb xor xchg das lods jno stos push dec push xchg aaa out add in push push sub ja movsb push pop pop mov lods dec js and jle jecxz lea out jg (bad) cmc hlt cmp imul nopl cwtl in jg adc inc popf clc mov inc sbb pop lahf adc jne jns pop imul jmp and lods inc mov mov ret cmp jbe into inc xor fisubl inc jle (bad) sub xor pop int cld mov xor sub cmp pop jno xor lods xchg cmp cmp add inc pop mov inc sub pushf jns cmp push rclb or stos inc sbb add loope mov popf add sahf cmp adc in leave faddl shlb popa in sbbl jb push and ret cmpsl cmp inc fadd inc cmp push pop mov jnp jns (bad) mov inc adc test mov fsubr mov pop leave inc (bad) imulb addl dec cli inc cmp fs jg pushf nop pop aam loope inc mov push mov jbe add into enter movl add pop sub popf xchg (bad) fildl cmp pop out jmp add mov stos xor out arpl stos test stc push xor aad cmp cld push in mov lahf enter push jns les sub rcr push jmp test jae add aam or and mov jl adc mov fsubrs dec inc add repnz cmp jnp jg,pt int3 or in xor adc cmp enter ja insb mov lea mov push lcall pop icebp jmp add dec cmp sub mov ficompl call rep sarl and add and daa xchg add or stos movsl mov mov xchg pusha rolb adc jo sbb stc cli mov bound jns mov mov push adc mov into pusha aaa rorl push adc fxch inc sbb arpl in inc stos stc aad mov mov lahf dec dec xchg decb lods xchg cmp push andl push dec jnp cmp add push insl ss sbb std out aas jp stos jae dec jge sub (bad) insl aam movsl stos fs ss xchg rolb mov mov inc cmp inc add sub icebp imul cmc dec jg out popf xchg stos das into xchg add retw mov add push inc cmp cmp cs sbb or dec jge pop add into lods and aaa or insb adc sub jno and orl je sub jge popf inc adc mov and pop mov pop push pop inc push (bad) fistl adc les dec sub add inc loop mov ja aam jecxz xchg test inc sete (bad) add mov jnp mov pop test jp inc int3 mov mov push (bad) in dec add and mov fcompl out cs imulb cmp cmp stos and ret rcl loop add lods mov (bad) cvtpi2ps dec inc mov in int3 or sahf addl outsl mov icebp inc repz ret jb mov mov inc lret stc mov and adc push fs cmovp inc adcl add inc sub popf int3 jns xor inc fnstcw push dec inc addr16 inc out jp mov cmp sub mov mov mov dec xchg int pop xchg outsl jno imulb and movsb mov fildl add sub flds inc popf in hlt jne lock vpunpcklbw shrd inc xor repz fucomp cli mov inc loopne jb out leave icebp mov js (bad) ret push aam std idivl inc loop or in rorb insl ret inc cmp mov push or rclb movsb push mov jle sbb mov sub inc xchg dec stos sbb (bad) add jge pop xchg jbe (bad) lea adc fisttpl stos in mov sarb push int push dec or adc add stos pop dec adc test outsl cwtl xor sub lods mov cmp push shl mov mov cmp lds fs inc mov inc inc pop repz dec or inc or mov loope cmp popf decl push or in inc ljmp and xchg dec call dec sub stos std mov mov push (bad) add dec cmp fwait and aaa sub lea sbb leave or adc dec mov mov cmp add dec cs imul cmp pushf inc into int3 sub mov dec add stos jno and or dec push (bad) jecxz loope cltd (bad) (bad) arpl cmp adc inc sub into test inc sahf inc jae dec jge jb jne mov sbb in sub jo xchg js sbb mov jno sbb add cmc jnp sub scas into arpl addl mov xchg mov cmp push mov negl out push lea test fwait outsb dec cmpsl xchg push (bad) xor pop add jle aas mov lock xlat scas mov push fimul sub call dec cmp std aad xchg cltd ret mov test sti jmp xor push xchg sub cmpsl pop add jno ss push or (bad) repnz arpl mov fs mov xchg cmp jnp mov ret aaa jecxz xor andl scas sub inc dec pop mov sub enter or ret or mov aaa rorb inc inc pop or xor fistpll dec test or lcall stc mov dec lcall xor sahf test mov mov (bad) pusha andl xchg (bad) iret rep inc aad int3 out aam inc mov into int adc pop fildl inc mov inc inc jge xchg test movsb mov subl push and hlt fistl or pop int3 pop sub aas lret xchg movsl bound mov xchg (bad) out push push adc xchg dec movl jb sbb imul add mov fwait push ret cwtl push clc movsl sti lds xor xor cmpsl mov lret decb xor jecxz and xchg sub xchg ret mov out xchg stc repnz xor mov pushf lods cltd inc test shrl mov push lret cwtl outsl sbb sbb movl push inc aas mov jae stos mov sub test lock dec cwtl sbb fadds dec aaa inc adc (bad) lock xor popf xchg jne,pt arpl test dec leave data16 inc out in push mov bnd je,pn cmp sub sbb dec push mov cmpsl dec lock inc jge outsb (bad) xchg (bad) stos bnd jge xlat loopne enter (bad) inc (bad) inc sar xchg sbb outsl inc mov mov xchg repnz in nop mov cmp jle inc stos xor adc nop adc jecxz into aad cmp add fnop (bad) mov push pop mov inc loopne mov adc adc dec or push les xchg dec mov push fnstenv dec sbb repnz nop cld inc xor xchg hlt shrl mov cmp xchg out add jle mov pop xchg inc jmp xor das lcall lcall imul mov aad push out push push lahf xchg ljmp rcrb and pop lahf movsl bound or imul inc fidivl push dec or mov cmpsl jmp imul inc push lock sbb push ret xor fmuls dec pop jns loopne sbb mov pushf inc xor stos cmp outsb jbe cmpl inc xchg xchg cltd out push cmpsl aaa inc mov pop rorl sub bswap jo aaa mov call test adcl cld cmp mov fwait test and sub and inc je push mov xorl (bad) mov sbb or cmp mov add inc jg inc or inc (bad) lret fcmovnu push cli pop push jb inc inc sub inc jmp inc pusha data16 clc je loop inc and mov inc cmpsl popf pop or inc mov inc push fsubrl push fsubs pop add xchg push stos dec lahf pushf push mov inc mov cmp cli add lds loope push les mov arpl stc stos pop (bad) das sti inc aad jne mov rolb adc ja jb lods cmp inc outsb push imul and into jbe fs pop pop and inc xor test mov roll inc push das lret jns imul fadds dec mov mov je test inc add (bad) add out mov pop lahf cltd lret dec or cmp ja inc rolb xchg faddl out (bad) or xor mov inc cmpsl sti sub imul or add lods js xorb movsb sub inc mov std inc sbb fimull jnp adc mov or mov sub jg test (bad) das cmp arpl movsl lahf inc lea fadds mov and cwtl inc insb sarl movsb ljmp push ret cmp jecxz aaa push pop inc lds lea enter inc sub outsl sbb pop adc bound loope (bad) aaa in inc jae mov daa out test movsl cld and ljmp inc movsl lret jg cmp imul cli (bad) scas push mov mov mov rolb xorb dec cmp xchg mov jae pusha movsl inc fwait or add dec scas xchg fisttpl rol les and push daa and add movsb test jge in pushf fistpl outsl jo mov mov dec jbe shrl mov mov shlb cmp ss ja inc xchg ljmp mov leave sbb aaa insb inc enter and sub cmc out int3 add mov scas mov inc mov fldt shrb daa mov jb adc push inc test jne xor and adc out mov fwait cltd inc dec pusha stos mov xor stos (bad) adc jo mov add gs mov fbld pop dec test sub arpl adc dec rcrb add sbbl loop push data16 data16 add dec xchg pop cmp mov jae mov and loope stos out iret dec hlt loop xchg sub std jle mov push pop nop sub (bad) jecxz stos gs add sub push push addr16 out pop sub les aas aad fnstcw dec pop sti cwtl pop pop dec call jae movsl andl jecxz (bad) das sarb mov movsb xchg add cltd not cltd push cld add sar lods jge js daa dec sub cmp sahf and push mov std sub inc mov mov mov mov bound jecxz mov aas movsb dec add ljmp test popl test mov sbb sub pushf outsb fs mov movsl dec jecxz call arpl incl xor push inc jecxz dec sub int3 adc scas jb cmc push ljmp dec ror xchg cmpsl test cmpsb repnz push jnp adcb and cli inc lret ret dec dec and fist pop pop enter dec lock cli fwait int3 mov into mov pop enter je sub sub jle aas mov les mov or inc jl cmp loope lds sub mov insl sub aas fwait cmp push icebp gs mov call push mov ret (bad) dec push addr16 sbb cmpsl ss pop jbe loopne mov adc fidivrl inc jae adc mov dec fldcw movsl mov adc sbb jle rcl test insl xchg sbb loope out push cwtl das mov pop cmp push lret cmp sbb ss jne push stos jg pop ret insl xchg rorb or test dec stc loopne dec push aad jmp les jge das pop cmpsb loop xchg xchg mov push jnp pop or sub rcr mov fiaddl popa leave scas enter lds add jae add addr16 xchg sbb faddl aam dec sub sbb into packssdw dec dec dec stos (bad) mov lods movsl sbb icebp sbb fdivrs sti sub jle sahf flds out jne lret mov iret xor das mov add hlt push adc ljmp pop lods cmc and hlt nop xor ss scas add jl dec xor sbb rcrb aaa pop imul mov sub das fmuls pop imul pop mov outsl scas adc add sub in sub xchg add xor mov mov jnp inc pop push sub mov int jg or test insl mov repz xchg aad sti jo les imul enter xor shrb dec ja adc jno (bad) sub jmp cmpsl into add mov xchg sub pop into push sbb jle cmp or rcrb inc ret dec loop sub jge cltd push xchg add stc xchg enter enter sbb xchg jecxz dec mov sbb in mov sub lret and loope test xchg lea lahf leave movsl shr sub lret inc outsl aas scas imul ficom sahf sub jnp xchg push (bad) sub sbb sub sahf push push lret sub test push ret daa pusha xor call movsb push sbb and sbb mov adc popf push xlat cmp and das es pusha mov inc ret and daa scas insl popa ja (bad) clc int shll fstps inc mov xchg mov sti push aaa (bad) xor push push pop cmp sub jg arpl ds inc mov and jbe or cmp dec rorl ret aas arpl popa push xchg pop add or push test push mov bound in dec in (bad) fild testb fs sub mov hlt arpl jge cmovae lret sub add or lret cmp shr cs inc dec stos jp loopew mov jbe in pop cmp and mov xchg inc mov pushf out daa ss test dec shr fwait and jge dec fs xchg xchg les xchg in dec aad xchg sbb das inc fmul push xchg in inc ret stos jmp sbb sti or inc subb xchg test popf lcall rclb xchg jg lret inc sbb test sub lea mov dec inc add cmp fwait add fldl inc mov les pop cmp sub clc ret jno clc dec (bad) loop pushf xchg jecxz fcoml fsubp add (bad) sub pushl lret xchg outsl std iret (bad) sub jne jecxz add inc xchg dec and dec pop mov ret mov and push std inc xor outsl and or imul mov push ss and enter and clc loopne push inc arpl adc push nop je (bad) xchg testb jg xchg sti lret cmp popf push push std jecxz incl xor inc insb cltd stos push mov inc pop outsl adc sbb or jge and or leave mov mov int push or xor stc in std pop jle mov cmp xchg fdivr lret fwait pop inc stos xchg iret loopne mull mov cmp (bad) rcl lock xchg sub push (bad) out outsb roll (bad) aad cmp sub inc out stos sbb pop cs mov xchg jne das rcll cmp inc mov push cmp inc ret and mov inc push dec loopne jp adc outsl cmc adc inc push mov inc ret cmp sub inc add test or mov sub jmp ret ss adcl faddl and xchg shrl mov adc jmp mov out dec jmp push sub jg mov inc negb or push dec dec in pop ret sub mov or inc push enter cmp inc cmp (bad) or mov cmp aad mov and mov nop lret jle in rorl push mov sub push inc imul ret ret dec push lds pop fwait test fisubrl pushf shrb add push inc cwtl xchg int3 mov loope sti lods xchg std dec jo and lahf jge aam push fldcw dec fidiv scas bound out pushl inc sub or or sbb rol fwait push inc inc pop out mov outsb jle fs bound xor leave jae xchg fcmovb jno (bad) int3 in pushf xchg dec add out aad inc mov sub or and jb mov cmp xchg pushf and fstps xchg mov xchg xor fwait xchg adc loop insl xchg mov repz mov adc push jb inc cmpsl xchg inc sarl loope or add sbb mov inc negb xchg dec test mov hlt jmp add leave je xchg scas add mov jp repnz icebp adc ret xor clc icebp and mov dec dec xchg push and xor dec sbb ret or xchg xor outsb test ret mov pop or aas imul andl inc mov cli lcall xchg xor addr16 (bad) ss inc in (bad) mov movsb mov inc mov push lret jnp or ret sti in push movsl addl xchg stos mov iret pop jp js fsts dec fsubp sub mov cmpsb inc fnop aad ret mov imul in push xor les test cmp test jge ret pop sbb mov sahf pushaw pop cmpsb out sub pushf movsl out push xchg ret negb mov inc xchg push call stos pop sbb in (bad) xlat push in test sub fnstsw scas xchg pop clc int sub mov inc cltd insb adc adc and xchg or mov mov inc push cmp sub xchg flds sub inc es out in inc xor nop lods mov add jg pop or dec xor clc dec insl std inc loope mov or rolb mov mov in aaa inc pop out inc xchg out pop push mov dec sub inc and dec inc xchg std jmp adc sti pop rorb adc test inc jl aas add (bad) xor outsb scas cmp sub hlt fistpll sbb xor mov add repnz mov pop fwait mov mov push rorb jno inc pop sbb or les adc jge inc out mov jmp daa sub inc test mov adc pusha pop mov dec out fadds push inc push ds enter clc inc cmpb pop fsubrs les or loop (bad) xchg testl scas and add sahf out jmp (bad) int (bad) fisttpl ret add stc mov in lods mov mov add test lea out flds test sbb inc shll pushf in pop loop lcall lods xchg lea push xor inc int3 jbe jmp imul inc cmpsl mov shl and and and hlt lahf and dec das pop cmp jle jge jns xor jge mov out (bad) sub cld xchg inc out mov in push bound mov cmp push inc mov ret lret and mov mov stos inc push xchg aad and push xor xchg ret xchg cmpl movsl adc pop cmp xchg inc jg repz adc pop lret lcall lret aas sub mov and fwait les jmp stc pushl jnp mov scas out inc xor sbb and add icebp xchg les ds aas add xlat inc scas xchg sbb leave call mov addr16 (bad) imul xchg sbb int3 and icebp lcall xchg inc nop (bad) out inc (bad) fnstcw dec rcl sti outsl inc (bad) add xchg inc leave pushf mov test int3 dec scas lret inc ds or inc mov xor xlat sti or push movsl jg lds inc (bad) cwtl lods pushf test fdivl xchg test mov cmp mov ss xchg iret inc cmpsb sar and add or jge ss aaa mov jg jmp sub ret loopne subb in imul inc mov imul jns fwait repnz jmp jecxz add sbb test inc mov jnp sbb shll xchg mov inc rcl out stos cli cmp mov adc cmp mov jno loope sti cmp mov fdivl xchg je (bad) (bad) jne pop inc mov data16 dec mov fcmovbe stc inc push shr fiadd in fmul inc sbb fild pop mov jle bound inc js loop fwait jae aam jo popa jb ds aas xchg mov gs cs movsb mov sti test ljmp inc scas rorb pusha sbb lock dec jl pop popf repnz movsl mov push adc divps inc mul sbb imul mov adc fs jmp ret icebp dec mov add into mov inc or adc and jno pop je xor xor test xchg leave push ficomp in xor mov inc cmp mov pusha add pushf inc ret push out popf scas xor mov mov clc sub das mov in pop xchg mov xor mov and lret or jge pop les add xchg test push icebp add jl inc and shll es jno and adc jnp pop sbb push in loopne sub (bad) mov lahf sub inc loopne cmp inc sub (bad) dec aad mov pop jmp daa dec cmp cmpsb faddp mov dec xchg stos jp adc addb adc test sub inc subl inc inc dec xchg in and inc clc (bad) xor movl jno insb pop inc dec imul ret push adc std sub js push fiadd mov xor movsb mov xchg fbstp daa inc loop mov sbb and adc xor xor dec inc xchg pop leave xor sbb inc pop lret out jmp (bad) cmc dec stc mov inc rolb add fiadd test ja cmp fucom cmp jb xchg xor out lods fstpt add inc inc jmp mov inc daa jno (bad) fild rcrb popa sbb pop inc std movd push cmp push push jo add pop test fldt or repz mov push call inc sub hlt push bound add out test shll xchg mov inc sbbl (bad) minps stc inc (bad) pop mov ret add cmpsl leave (bad) (bad) movsl fistpl inc mov out inc cmp add daa cmp dec jb inc sbb mov add inc mov decb rorl adc mov test adc pop rolb test loopne push add aad xor ja push inc jb fcmove fnstcw cmp dec inc inc push fstpt pop xor sahf mov inc adc xchg sub jne dec popf push (bad) fsub and jg jle jmp mov and shll sti mov cmc pop fwait adc add lcall dec es inc out mov imul add lods pop sub jb int mov cmc dec repz in xlat int3 stc inc popa dec iret xchg repz mov xor jge pushf push and jo dec cmp gs das mov inc popf adc loop pop pop inc fwait mov sub test push arpl movsb lods das bound cmpsb xchg test (bad) push roll add (bad) xchg mov push xlat (bad) cmp mov in imul dec dec xchg lds add mov inc push iret loop inc les in mov and mov sub fcmovb mov push pop add lods jecxz pushf push call test ret inc clc or jno or mov add dec mov and or jne inc jl pop fidivr push addb inc inc scas pusha test inc dec jmp int3 les rorl fistpl addb outsl push shlb pop push mov cmpsl jle sub pop xrelease cld sahf pop pop pop and xor imul cli mov pop mov cmp hlt (bad) insl mov cld sub sub mov pop push sub popf xor sub imul mov lcall add xchg sti push mov cli (bad) mov insl sub stc mov out inc sub mov fild inc lahf add sub jmp dec mov jb leave lahf sub cmp cmp push daa mov fisttpll push inc mov xchg cmc je or xor sti or mov aas ja and (bad) pop inc sub loope aad ret inc mov enter pop add in out cmc ret jno add movl (bad) daa push in xchg (bad) dec inc xchg xchg shl sbb mov sbb fsts int mov lcall inc add xor sbb mov stos adc push inc xor adc popf inc xchg and (bad) mov sub cmpb fdivl pushf leave pop jmp push lcall inc mov fdivs jmp push iret push add push dec imul inc dec and mov mov xor mov out and lea sbb xchg lods adc das pushf rcrl mov cmp lret jle clc andb daa xchg in adc fisttp push pop or mov xchg dec fwait lods js sbb inc push adc xor cld sub pop sbb loopne dec sbb or inc xor dec lcall daa ret rorb xchg les sbb mov dec push mov push ss jmp pop lcall sahf daa xchg adc inc cltd inc cmp in loop mov pop dec ss inc jno add cld dec enter les lock xchg push imull jg xchg out cmp inc mov push nop dec cmp popl push jl adc push xor stc inc jge sbb aam push daa and dec pop or scas xchg push (bad) dec push icebp xor mov iret xlat mov xchg mov stos int3 clc imul xor dec fisub (bad) loopne adc jb aaa in gs ffreep rorl outsb xor inc push das add jecxz aad xchg pop sub (bad) out in fisttpll pop push inc pop dec (bad) (bad) in ror add inc clc jb icebp inc imul cmp and je lds int3 or cmp repz (bad) fs imul inc int3 dec mov mov in (bad) fmul xchg ret lahf jne adc popf mov dec sub mov xor mov out insb arpl adcl out and ret cli push sub push int pusha cmc xlat mov push dec cld pop cmpsb xor add or popf imul ret arpl xchg loope aaa shlb fisttpl push mov (bad) in inc aad mov jo sahf daa sti fldl adc in dec pop popf imull add inc jge fnstcw xchg inc jmp add test shrb lahf cmc scas inc fsubr sti sub and stc stos inc mov sub sbb adc inc mov outsb divb out or ss xor daa (bad) popf mov xor jne and add mov mov inc sub mov clc inc ret and jmp mov mov lods arpl call aad adc iret adc incb inc mov popf sub insb jge cld cmp sbb mov ret sbbb xorl fwait cli lret mov add lods stc sbb sbb (bad) jle ret fsubrp aaa fistp test mov mov jae xor test xchg jae mov inc jle js lods jns je arpl insl clc out and stos push ljmp out je addr16 mov rcr aam or pop ret sub pop sbb in inc jg pushf pop xor dec dec push adc jo push or repz sbb mov jmp addr16 adc xchg aas dec icebp sub popa inc mov add es jmp dec das xchg lahf std push (bad) pop inc pop add add mov cmpl pushf aas int add pop fucomp inc lea pop mov movb inc push dec rol push (bad) jnp inc push scas fsubs lock sbb divb push add xchg enter fnsave mov popa inc repnz or fldl popf xor add scas push negl fldl into imul jg push ret adc xchg movsl pop dec ja jl mov mov enter cmp imul iret xor or imulb xor jae fstpt ljmp cmpsb push roll dec mov push mov int icebp push cmp pop inc mov ret ret or fstps mov mov jbe inc shl pop push bound inc arpl leave cltd insb pop mov adc add js pusha jbe mov and cmp adc jge cmp inc loopne dec mov push dec adc std sub lods les mov mov xchg add push push out mov pop popa mov les mov out pop mov sub push mov repz cmc lea cs stos stos arpl fs test and (bad) imul adc loop jb inc lret imul mov int3 les sub out xor xor mov aad shl in mov fwait sub movsb mov mov sahf cmp inc pop movzbl (bad) popf xchg mov inc std and sbb push inc mov in push inc aad not push je cwtl inc lods add dec xchg test enter and dec out add stos push test jp fcoml shll hlt push cmpsb or inc jns clc jp pop push in dec xchg repz cli mov inc cli xchg shlb ja xchg roll jecxz (bad) push inc or cmpsb mov fs imul mov jg xor sub push hlt adc pop sub dec cmpsb pop mov leave pushf ret rolb xchg or mov mov ret pop cwtl lods in push pop jle js mov push test push repnz lods adc push add shlb ret daa pop add dec mov sbb dec rorl push sahf popa mov sub test mov iret outsb push mov or aad sub adc cmpl cltd jmp daa mov idivl push ret and push adc add push (bad) arpl mov and pop (bad) clc mov add sbb adc movsl repz pop jae pop mov pop push pop out lds inc and insl cmp in xor out pop mov cmp (bad) and ret xchg cmp jne pop out roll sub fwait in aas sub xor mov jae ds (bad) (bad) leave inc mov aaa xor scas dec mov adc popa and xchg sahf add sub mov repz cmpsb (bad) jle sub sbb dec fldcw pop mov andw mov lods js inc fdivrl pop sub ja lock insl shrl inc push sub jg dec mov and dec xchg fwait mov adc pop mov xor rolb cmp inc jns imul sub cmp fs inc push push cwtl inc inc dec out pushf or inc addl aam in sbb inc mov test cmc and or test mov jecxz popf in inc dec cwtl sbb xor daa or out cmc push out orb incb jecxz push aaa cwtl cmpl fwait inc loope and orps es mov and sbb ds dec std jo nop sbbl pop fwait pusha stos inc test repnz pop lods inc mov or repnz lds sbbl sbb xchg dec xchg sbb addl dec adc pop mov mov outsl addr16 inc inc repz je jno imulb xchg cmp sbb andl imul sub sti pop int3 xchg xchg xchg and and mov outsl nop jge idiv dec push ret push add mov dec outsb les fwait adc mov sahf dec call pop ret add jp aam dec jmp push loope dec push sub repz push sub inc mov xlat repnz cmp mov sub ss aas sub xchg negb enter popa pusha fcmovnb mov add sbb vmread push aas pop lcall pop loop rolb dec loop cltd jae sti jmp inc push xchg sub imul push fadd pushf jg xchg push fcoml jb inc xor lret mov fnstcw sbb jb pop or inc sub jo lods lahf jl xor dec cmp jl adc inc lods (bad) xchg out sub das les int sbb pop push push and adc jmp sub mov add ret fimull into lock cmc dec clc mov add sub in sbb jl jnp,pn sub cmp pop or add adc bound mov dec test xchg jae les adc imul jb movl test xchg push js add lret rorl aad mov shll idivl push dec sub fimull aas xchg lahf pop pop in or das je sbb xchg imul pop mov rcrb or inc inc sub and pop sub out mov mov push inc imul or or lret pop pop push lds lcall lea out (bad) (bad) int3 adc iret mov push xchg push repnz clc push popf dec lds pop ja stos inc cmp or cmp stos xchg (bad) or pushf je fnop pop jo daa mov pop xlat pop mull lcall push daa xlat mov or mov out les fwait cmp loop int3 mov aam les push ss (bad) repz xchg mov into adc xsave jnp sbb (bad) hlt jecxz mov sub push rcrl icebp dec mov mov adc push push mov cmc xchg push pusha mov repz pop incl fldt jns cmp jae loop enter or sbb out add xchg lea lds xchg push add cmc in push ljmp sbb gs sub (bad) jb repnz inc stos xor std imull mov mov sbb outsb mov mov add call adc loopne mov stc inc test ds inc (bad) dec adc xchg jle cmp or inc inc sbbl pop inc popf lcall push or inc sbb insl adc inc pushf sub mov ret fwait into pop dec cs dec ret addr16 dec jo cwtl inc (bad) add xor (bad) jecxz and pop mov js inc lds jb xchg sti leave fiaddl push stc fmul sub data16 (bad) jno divl cmc ss call cmpsl dec mov jg add inc fcoms pop jo mov inc jbe push test sub sub inc xchg (bad) iret adc lret (bad) aam sti leave test inc mov jmp mov inc xchg iret ds push cmp mov movsl out das inc cmpsl in inc xor stc mov dec mov fildll jbe mov lods push pop test movsl xchg (bad) popf inc (bad) cmc xchg clc cld or mov imul lock jne stos sub out and cmp push mov cmpsb inc inc aam sbb xchg inc mov movsb mov lds inc aas jecxz cli push inc mov mov mov dec jnp mov inc pop out sbb sbb insl arpl ret jp rcl jecxz (bad) jmp adc test cs scas or sub les adc outsb nop sbb push (bad) inc or jae push cmp jbe jge lods dec jle out pop loopne inc sbb clc mov ficom mov out push loopne cmp jnp add mov adc pop cmc mov jl push jmp inc mov and movl add in aad inc mov cltd push movsl xchg jg (bad) repnz in cld dec add inc int3 stos jmp xlat sub sub (bad) popf xchg popa cltd test ret or js adc cmp in clc sbb adc loope lcall scas rol pop mov lods jg js pop push jmp and mov scas inc or pushf enter sbb mov xchg adc jmp loope add inc jns movsl pusha jno push sbb les adcl ja enter xor inc inc and pop int xchg dec dec pop pop movb and mov mov mov and push (bad) (bad) dec roll push sub sbb mov jo test push push clc sub mov push xchg out insl push stos push in add ret inc and jge xor aaa es popf ret popa out (bad) mov fwait ror and ljmp or popl xor repnz lcall scas cmc xor inc sahf movl xor int3 pop push pop xor data16 adc enter inc push les sbb aaa bound mov subl jae pop or fwait mov jecxz pop dec out sar push jmp inc sbb loopne,pn sub imul imul inc push jne lods inc shll lahf imulb mov jne sbb inc sar into int sti jb mov inc sbb mov sbbl push jecxz mov inc mov cli cmp add aaa push dec mov jl add ret adc sub cmp fnstsw inc rep push sub xchg mov mov mov shr stc pop les dec xor lea xchg or inc push faddl fwait cltd xlat test dec mov cwtl add lret add push pop jmp addl stos or ja pop orl add mov (bad) enter jne adc add pop into mov jnp sub mov mov dec sub jb daa (bad) push add jno jae mov loopne inc jle cmpsb adc ljmp (bad) fcmovb pop cmovb imul inc jg xchg out stc xchg ret and or ljmp inc add sbb mov pop mov sbbl inc out cmc add inc pop pop dec inc mov andl add jp jb lea jne add and pop in jle push std inc mov mov popf and ret push mov sahf stos test jle mov mulb fs (bad) jo mov inc and jne sub mov jno push xor pop jmp inc aaa dec ds push push add call cltd sti (bad) adc out outsb in cmp inc add xchg or jo bnd dec (bad) popf cmp in pop pop mov pop jle je loope dec cmp inc cmp jmp popa pushf hlt les int cmpsb aaa subl sbb push call lret xchg fsubrl mov mov pop inc (bad) push xchg jb insl xor jb mov pop and test dec xchg cmpsl notl pop mov push pop push push cmp inc jg jge or insb fmuls rolb sti or out lock int addl sti push pop mov loope sbb sub sub jnp inc sahf add jne jno push sub sbb jns dec popf inc inc iret add dec pop sti sub mov sub aam lods mov aas rorl cld mov add sub (bad) and xor leave or popa mov ret mov or sbb mov or test push mov xchg mov shrl add xor into push sub ja xchg sub ljmp or negb lods push testl inc fisttpll je jmp adc fild xor (bad) ret push push leave xchg flds mov mov into cli dec sub jno mov clc jns jmp jg insl fbstp aas dec rcr mov sbb lret in push fstpt adc fcmovbe js cltd out xor int3 dec scas (bad) mov js loope lret pop sub mov sahf fistpll icebp sbb push mov xchg (bad) sbb lock inc dec sub repz cli aas pop pop lret cmp sub fnstenv push dec inc mov into outsl xor inc stos add xlat cmp mov mov adc arpl pop arpl ss les int jecxz,pt (bad) or sbb pop push cmp inc mov (bad) lea xchg push inc pop je xor lock inc inc loope int lcall mov cmp add sub addl ljmp fs jo dec lods push das es clc mov inc sbb js xor inc or data16 dec inc or mov insl jl ds (bad) nop sub fmul jg imul inc jle fwait enter cmp cmc inc js int push sub push mov loopnew xlat cltd jecxz in inc add addr16 jmp push jg inc push fs mov arpl (bad) xchg nop pop bndldx bound pop je cs repz orl mov cmpsb pop outsb in scas sub imull sbb aas arpl dec fsubs add mov and imul adc push fcmovnu addb dec jge idivl hlt dec (bad) dec (bad) jp inc loop stos push popa inc (bad) int roll sub and add or bound xor cld inc jnp fildl sti jne imul xchg inc sbb mov scas adc lcall lods mov push cmpsl push inc gs sub shrb js add (bad) xchg cli out inc dec sub out add ret sarl insb push into aas push adc int3 shlb (bad) inc jns das aad int or sbb gs rolb rclb cli inc test rclb addb jo adc orl loop inc test and inc mov jbe push mov ds add add ret stc push xchg test add inc cltd stos mov int xchg pop xchg mov mov xlat mov xchg daa mov or cmp loop sub and data16 push ror sub scas dec inc sub and xchg imul or sti fidivr sbb push mov inc repnz (bad) cmp xchg mov jecxz out das addr16 jl fcomps jb xchg fimull je cmpsb out pop jecxz into loopne pop cmp in inc cwtl frstor lcall out inc xorb ret dec add push mov xchg jno mov imul inc xchg (bad) push pop push xchg popa inc int cmpsl mov xor mov (bad) fildll imul sub mov mov cmp lds ja mov not sbb loop xchg hlt add mov inc pop cmp shrb les arpl cmpl repz inc cld xchg dec fcompl jae mov addb sahf stc stos jl pop lea jbe push in jno jle jo dec xchg and inc sub push cwtl push bound ret outsl inc pop mov mov dec les jae fisttp adc int add lock popf jne mov fdivrs jecxz sub arpl imull lret adc jle cwtl sub sub xor iret out aas inc je test adc fadds cmp repz lahf into (bad) arpl sub sbb pop xchg and add inc inc shrl test scas ss pusha dec push mov add push insl sub nop aaa jbe push jl push mov mov sub popa aaa popf dec mov mov test and push add adc repz movb mov mov loope int3 or or push xorl lret mov lock jno push int3 xlat inc or (bad) cmc push pop rorl lock outsb sub xchg pop dec push cwtl cli inc mov hlt std in pop xchg int3 xor pusha (bad) stos gs dec jae (bad) mov faddl fsubrl dec sub adc inc maxps (bad) dec sbb push or rolb outsb xchg push stos jp daa arpl repnz inc inc jns jno sbb js ror cmp dec sar icebp jp add push inc pushf test inc push popf pop aas movsb inc mov leave sbb stc inc nop mov jmp cs adc lahf pop ljmp (bad) popl sub adc and in nop aam and cmp pop test bound add clc aaa out (bad) jo rorl inc icebp rolb push pop loop stos dec mov mov add xchg dec lock (bad) repz lods inc mov push mov xchg push pop les sbb or into push clc inc sarl pop fstpl xor xor dec inc lcall ret out pushf lahf dec rcll loope and jecxz loopne stos in lret jb and and pop insb ds push data16 inc rcl js mov pop (bad) adc dec jl fild outsl inc mov rorl pop mov or fiaddl ret cmp cmp xchg sub xlat je pop xchg inc call jg in ret jp sbb jne mov in push fldl imull cwtl mov fistl inc push (bad) fdiv sti movsl add test push push sbbl pop mov roll sti cmp std cmp push push imulb dec cmp insl pop push es push sahf inc jno pop ret cmpl dec fistpl mov adc and loopne gs mov sarl push shll jbe lods jae or jl inc inc push cmp mov dec fidivl ljmp aaa xor lds adc ret inc cld (bad) (bad) xor inc inc (bad) push mov rolb stos pop ljmp jns mov and mov and mov xorl arpl sub or push mov jns mov mov push xchg fs xor jae sub dec xor sub fwait in xchg (bad) ret stos pop lcall in lret inc cmp rcll inc inc loopne sbb daa inc pusha push mov (bad) pop int3 fstpl inc sub jbe ja into sbb sti sbb in out cltd inc mov clc pop xchg jp push adc dec xlat sbb push dec std inc faddp dec mov inc add fistl jecxz jb inc popa mov xchg fild cmp cmp lahf test ret enter nop dec popf push cli add add in inc jns lahf and or mov addr16 imulb push or imul jmp data16 nop sbb out int fsubrs pop push int3 dec dec popa lret jmp ljmp sbb push push sub je pop clc lock out lcall shrb fldcw cwtl outsb (bad) mov add inc sub (bad) pop jg inc (bad) mov or dec pop xor lahf (bad) fcmove pushl rorl mov push xchg sub sbb mov dec (bad) dec jle mov arpl fdivs sub cmp ss inc pop (bad) cli in je jne and and push mov xlat push dec out inc add cwtl push mov push xchg lods xchg repnz repz sahf out jg add gs xchg xor pop test cmp test push fildl dec loope stos mov (bad) cmp test or jb sahf mov nop push scas mov jg fwait jmp push inc adc je adc inc jge adc cmpsl cmp mov pop or push ljmp inc xchg xlat add jge pop outsl mov call lret movsb mov scas or inc push ret cmp ret sub inc mov (bad) push xlat or mov xchg sbb int loopne inc inc lahf (bad) lcall scas mov adc inc call loopne adc mov clc adc dec or das inc subb inc pushf and pop sbb insb inc stos enter iret add lahf and sub cmp inc mov dec je and xor jbe and add push aad arpl inc mov incl popa mov mov adc mov loopne icebp dec pop jle add jp adc or xor test adc or lods daa cmp add jl out xor pop arpl stc das ss sbb inc inc push hlt jb mov pushf inc lods push (bad) mov ljmp shll xlat fldenv sbb add sbb movsl getsec icebp je lahf mov (bad) jmp add pop xchg into pop inc adc cmp cmp scas fiadd int dec sub jb imul scas sbb pop cld pop inc lods ret hlt xor push in pop lahf mov and (bad) fldenv mov inc aad rclb jno xchg mov dec outsb lret sbb in dec inc sub mov xchg outsl lods das jmp pop inc mov mov inc and ret inc inc push aad jg adc pop fwait jecxz cld es (bad) or dec inc mov into aaa cmpsb lret inc adc mov and cmp sub in jno scas inc fldt push stos lret push inc fidivrl enter sti loop aas inc ds (bad) ss ret cwtl int lock cltd xlat dec and and jnp ret cmp mov pop inc mov rcll movsl (bad) mov mov bound add jae dec cli jmp enter imul call dec sub inc mov inc fstl daa icebp (bad) mov loope ss lock lds dec sub adc add fisttp pop arpl icebp xor mov inc add pop into shr rcrb inc in iret into mov fildll pop mov icebp or cs movsb test push lea cli inc out sub cmp sti mov stc test std adc ret mov push dec sub xchg jecxz ret pop aaa sbb mov repz andl jo pushf test or dec (bad) out out lret add cs in fwait inc cwtl lret insb sbb lods ret mov mov out ss push imul faddp sarb gs and cmpsl mov adc pop sub aas addl inc push mov lcall dec mov inc cmp sbbb mov adc sub inc stos loope aad sbb jge sub out jne arpl inc push xchg fsub inc cmp ljmp test jb inc clc insb jge xchg lret xchg cmpsb mov pop ret add xlat add or push (bad) testl (bad) sbb aas (bad) call cmc jo cmp cltd add dec outsb sbb out jecxz addr16 ds lods jmp inc stos jo nop repnz sti push push icebp xor xchg stos xchg push aam add arpl push mov out addr16 or aad sub aas mov imul mov movsl push inc js fldt sub fimull clc aad xchg sahf das pop pop and pop jl inc and xchg scas push shl mov xchg jecxz push pop clc popa int3 or in push lret inc dec lahf imul les xlat add insb fsubrs aam jmp mov aas pop mov cmp rcl rcrb in mov icebp adc mov inc movsb xor push test xchg or lods add dec mov daa and lock testl jbe and xor into mov (bad) imul repnz jmp sbb mov jb adc ljmp inc leave lret fldcw sbb jle push push subb fxch mov jle ja test je leave in (bad) jmp jns xchg stos inc sbb movl orl push xchg sbb push pop fs ret outsb jg inc ds mov cmp mov add fwait jae inc and outsl (bad) aas addl mov jecxz outsl sahf in pushf inc mov hlt jae inc in movsb pop sub jecxz insb gs aam ret enter movb cmp bound cmp in lea ja stos movsl add fiaddl ja or stc mov jnp adc movl dec push pop imul sub inc rclb hlt cmc inc adcl insl jo push dec pop push push in std jbe mov dec mov aaa (bad) mov lahf lock cmp cmpsb imul test pop mov ret mov xchg lock mov test sbb jge inc jae addr16 stc sbb jecxz jecxz jge (bad) rcrl mov aad or inc inc xchg fwait stc dec add add xchg jb and mov ret out mov bound jbe subl das fdivrs jne cli inc (bad) (bad) or jbe inc cmpb fldl push push push inc rorb rolb inc push mov pop sub pop mov nop negb clc add jns push lods or mov jge test sti mov pusha jno hlt icebp inc add sub sbb fs bound je inc enter pusha dec jns inc popf (bad) mov lahf inc add sub out mov inc jo into (bad) cmpsb inc and adc jl pop je dec xor jb and insl inc cltd lods ret (bad) xchg add adcw or fildll push inc aad gs or inc fsubrl fs daa mov sbb xor inc mov fs std es xor xor cli add sub jg imul xor fsubs cld cwtl xchg movsb mov pop cld repz lock sti lcall icebp mov std sahf inc mov inc stos loopne jge jnp push je sbb pop addb cmp cmpsb in (bad) add pop les cld aad ret lcall stc pop scas lea sub sub jl mov push or (bad) loop mov push xchg or mov add cltd stos pop int mov cltd data16 lock push into addr16 jle out jno sub xchg popf (bad) icebp pusha jmp lea and or dec sarb fidiv pop cmpsb cwtl pushf jnp inc imul in inc sarl add jo cmc lea or rcll aam dec repnz push (bad) bound push ljmp add xchg les outsb je inc add jg in les pop xor inc jnp push pop mov sbb add sbb push pop pusha fsts pushf dec inc ret mov enter xchg jle cmp aam mov add cmp sub seta dec xor icebp iret orl mov mov stc sti inc add cmp pop sahf add movsl jae sub lds nopl insb lret inc mov addr16 out lret fsubl xor ret bound pushf mov or (bad) adc xchg out mov sub iret pop push setns inc neg aas xchg call sub out mov xor hlt out je test xchg inc and mov mov jp test mov adc xchg add adc cltd ret dec push jo ret inc scas dec aad pop inc pop mov mov xchg xor or or cmp mov addl jecxz arpl adc and sub xchg or mov mov fnstcw add dec enter xchg inc mov xlat push adc test xor icebp orl mov nop repnz loope pop and aas imul test movsb add sub es fs or ss call icebp jae orl dec clc or dec lahf add inc adc mov and mov adc or xor gs mov and inc mov loopne xor xchg inc cmovnp dec and aad inc lcall mov inc dec idivl inc pop leave ficoml push inc outsl orl lea pop nop mov push sti faddl mov pop sbb push pop jmp mov loopne cmpsb push or adc pop xlat xor mov je mov mov iret jnp ljmp aas push stos jnp or mov lret sbbb xchg add bound cmpsl aas pop inc xchg adc insb lods popa push out das stos lahf loope and (bad) rcll (bad) inc fs xchg xchg in push pop (bad) mov fistpl add mov ss inc test rolb rorl mov xchg cltd inc mov insl xchg xor loopne jg dec inc cmp aas push jae jge arpl pop xlat mov and cwtl sbb rolb cmp loopne call inc scas jecxz pop cmp xchg mov pop jae sbb cmovg inc stos out add repz mov inc inc push pop mov sbb sub lret inc add xor jl lock and jno les je fcomps arpl inc mov bt mov imul inc enter test cmp xor out mov ss inc clc or pop xchg xor dec fimull ret popa arpl sub inc adc mov lea mov jge scas push dec inc (bad) or ss loope dec in dec pop sub mov and pop cltd je mov addr16 pop repz inc mov pop sbbb pushw ljmp je insl (bad) int3 in fwait xlat dec inc mov ffree test inc and jg mov mov add xor push psubb decb movl fwait mov imul mov int das cmp and pop jne sbb xlat mov fadds outsb mov stc dec jmp xchg das test jle cmp push sbb lahf repz mov sbb cwtl test mov mov pop jo mov lods jb in pop xor sub in shll sub (bad) cmc pop dec jp adc insb bound inc inc xchg push in stc dec fldl2e mov mov and insl mov xchg and lahf mov aad daa out pop or add xor pop rcrb in (bad) aaa call aas inc inc jnp cmp (bad) enter ljmp (bad) dec cmp pop add add aas inc xchg jg or inc sbb mov mov ja jno (bad) iret inc insb fstps pop stos arpl cmp inc ja,pn pop scas sub pop jg adcl or jo push scas ss lods xor jge pop (bad) pop push fadd ret icebp les push sbb je push xchg ret (bad) std enter fwait mov (bad) out mov jp dec mov jae jnp jb outsl stos out push xor nop inc push jge cwtl push loop rorl lahf mov mov cmp sub cmp stos dec aas nop scas lret int3 dec xchg mov addr16 mov das cld xor subl sub push adc insl rcll adc dec sub sti push add iret notl stc arpl or xchg idivl sub or test mov pop sub xor inc dec xchg pop rcl std lret inc test (bad) jmp test push sahf lds jae jecxz mov push addl fist into mov push or sub lea (bad) lds sarb xchg mov stos fild call sbb aad aas (bad) sti movsl in inc subl xchg sub push arpl mov inc sarb je mov (bad) popa add mov mov sbb dec sub push or cwtl mov jb mov sub jge addl shr daa inc stos add inc xor test data16 sti aad movsb mov adc push push sub lock dec mov lahf out cmp movsl pushf mov add inc (bad) jae xor mov repnz cmpsl pop and xchg push sub mov (bad) (bad) nop inc pop sub bound repnz ss mov pop cmpl dec jmp les imul (bad) inc dec pop scas (bad) push lds fcmovnbe inc sbb cmpb (bad) sti sub lods pop pop jae xchg bound inc cld ret mov scas mov push push popaw roll push xchg xchg lods add inc clc or xchg jno (bad) fnop sbb lret mov sub xchg sarb adc push dec sbb insb movsl fwait (bad) loop ret inc fnstenv cmpsb mov dec cmp mov je adc inc pop in aad jge xor inc cmpsl fmul push sbb push lods dec movsl ja lahf mov loop sahf outsl xor jno or push sub fild out cltd iret xchg daa pusha jg gs xor in sti dec inc jo dec mov push leave mov pop mov inc cmp mov into inc and and or popa cltd stos mov sarb inc cmp push xchg jno push in cmp xor sub outsb fucomp arpl sub imul adc ds inc xor stc dec mov dec mov arpl (bad) jge addb adc shlb faddl add mov xor inc mov dec cmp jb or jno aad out pusha sub and cmc xor cli xchg pop adc outsb fwait loopne push nop decb out mov jp xor sbb outsl xorb sahf repnz movb jns xor stos jmp mov out jb daa mov push sub and jle dec ja outsl mov ljmp in call pop push push stc hlt out jge sti xor ja xchg mov inc arpl (bad) fs loopne cmp cmp pop std xchg mov (bad) dec jne je fwait xor insl add or (bad) xor inc ret xchg cmpsb lahf popa mov jecxz jecxz fcmovu mov and inc pop aad mov mov jg (bad) push pop test inc in lcall jo aaa or inc or test add imul icebp test inc jmp cwtl sbb stc mov loopne sbb pop lock pop sbb adc shlb push loopne dec push insb scas xchg and dec xorl jnp ja jae aas or daa sbb cmp xor (bad) popf jno mov jp cli pop or push mulb dec movsl inc (bad) mov imul cwtl aaa repz inc into call inc xchg (bad) pop mov sbb push incl loop adc mov inc dec (bad) mov xor mov mov mov in pop push pop mov push movsl aad mov and dec fistl cmp push push js sub push bound into mov push push sub adc stc fistl icebp stos test aad mov dec and daa mov adc pop sub sub cld jg adc dec cmp aas sbb cmp jmp inc outsb xor clc xchg mov test fcmovu xchg aaa (bad) dec (bad) enter fwait outsb in ret lret xor insb mov mov inc mov arpl test lds add inc jbe mov (bad) xchg adc and rcll lret fisubl inc mov popf pop sbb inc lea in les scas arpl xor jl in mov mov fldl2e inc addl or inc push or outsl push cmc dec ret add dec mov pusha mov in xchg xor jns inc mov int3 inc lods sbb into (bad) outsl orps xchg sub (bad) dec sbb (bad) fisubrl push inc push (bad) pop mov fwait and pop iret adc mov loopne sbb sti pop out les add dec pop (bad) ret jp jp inc jns loope add mov mov movsl inc ret insl adc bound mov sub jg mov mov mov cwtl adc sbb xchg stos pop cmpsl call cld bound stos pop mov inc push mov jb inc in xlat mov push inc mov ret lods mov js add dec fisubl pop imul or movl sub das imul movsl dec sub and mov mov orb loop addb sbb inc pusha jno popa sbb (bad) mov test ret cmp xor jle mov xchg adc lcall xchg inc dec pop (bad) mov pop dec pop inc jo push lret mov inc cmp stc push xor aaa test insb dec pop push lock sbb in sbb arpl or add das adc ret push scas cmp push mov adc push das inc fidiv xchg mov addr16 fdivp mov lret das adc adc mov cs aas loop add ret insl rcrb inc lea jg dec pop push nop fildll (bad) adc adc imul inc inc aam sub dec adc jns inc outsb popf mov xor add mov inc in jecxz iret push stos inc scas xchg outsl aad (bad) inc dec inc bound push insl pop mov decb ss fwait inc inc push pop mov push stos cmp imul dec out aas in stos add pop jmp (bad) lea adc jg adcl cmp adc inc mov sbb jb push data16 popl hlt rcll jecxz je mov xlat es dec nop sub (bad) adc cs sbb daa mov dec in rclb pop dec cmpsb push pop sub stos or mov inc dec mov sub cltd fcmovbe hlt xchg xor inc loope xor inc fsubrl jo mov xor jp add test sti inc cs inc xchg sbb sub cmp xchg aad fldl scas aam adc notb inc ss mov sbb ffreep aas and sahf push cli or pavgb inc push arpl movsl add adc inc jns pop cmp stos stc roll xchg sar inc push lret adc sub pop imul or sbb jl and andl dec cmp inc aaa outsl jne pop das repnz stos pop xchg lret lea inc out arpl mov pop or outsb add call aaa jb mov (bad) or in push pop inc cmp xor fldl2t jno mov pop inc mov in lret pop inc scas xchg jae inc add inc scas iret xchg cmpsl test pop ret out dec rcll in add mov jnp push jg js or pop loop mov mov mov cmp repnz cli or icebp rcll cmp movsb outsb ret jmp lods lahf cmp mov test inc inc add popa ret or clc in xor push add ret inc insl xlat repnz inc sub mov sbb andl test add and inc mov xor inc xchg jge movsl iret lds xlat cld (bad) or mov cmp jnp loop fadds rcr mov inc cmp push pop dec cmpsl (bad) xchg cmp cli inc xchg out neg or cmp mov dec out push push into aad inc dec or ret inc push dec xchg rcl andl shrb repz sub rolb jo insl dec jp into pop xchg enter aaa xchg inc xorb insb cltd jmp fcomps or sti push cmpsb jnp inc rcrl into xchg (bad) and or and adc lods jge (bad) faddl cmp inc xchg push or sbb out les (bad) clc mov pop testb lcall rcr fdivs mov inc mov xor into clc pop mov out sub ret pop xchg insl idiv push dec pop inc in cmpsl lods mov insb fsubrl jo and xor orl ret es dec inc lret out in (bad) xchg repnz inc lret iret dec xchg mov pop sub cmp mov and rolb jnp sub (bad) loope inc mov fisubl lods inc sbb movl outsb cmp mov stos and jns inc fisttpl (bad) lahf cmpsb fcmovnbe fisubrl aam (bad) xchg jno inc pop ja leave fcompl call inc push repz nop mov xor loopne sbb imul in dec and lcall inc pop cmp push (bad) push popf dec pop sub mov dec xor inc inc std dec lret jmp aas add inc xor push lahf inc mov push or imul dec int3 sbb loope ds or aaa cmp xchg enter jno leave pop and mov sub movl push test add mov xchg jp outsb push std cmpsl inc enter push into jge push les and inc push xchg test outsl rcrl adc std pop pop push aad loopne (bad) inc cltd stos pop test sub xchg push ljmp imul push push adc loopne add lret xchg push mov lds adc aas sbb ret into stc inc mov and dec fcomps lret sub (bad) icebp sahf stc mov sbb lahf or sbb add mov sub test loopne adc popa push cmp int3 xor ss pop ret mov xor stos fnop or enter mov movb cli daa push add xor ret jecxz dec cmp insl dec push mov and pop mov out outsb push mov inc push shlb imul or adc jecxz adc inc imul jae adc loopne imul fdiv repnz jle jge xor xchg sti out loop dec sbb rol push (bad) call ss sbb adcl daa jecxz or jnp aam (bad) ret dec in pop cmpsb inc push stos add jmp sbb sahf jle in xor sbb and sahf mov stos lcall flds mov inc leave int3 insl mov mov push imul push outsb arpl ret sbb inc ret sbb inc and mov inc inc xchg pop stos in cwtl and dec fdiv out insl mov pop add sbb aas push sub (bad) inc dec push stos faddp inc mov das and aam push push mov push inc rcrb in dec inc dec inc lock and pop jnp (bad) ds dec adc out mov jne inc inc push shrb mov je out mov and push nop xor xchg mov push mov (bad) gs adc dec mov push iret jne jno (bad) xchg in lock incl inc adc rorl jg pop data16 jnp dec pop in inc sarl stos pop xchg mov dec in mov jl (bad) jmp dec fldcw in mov les ljmp test xor es jnp (bad) cmc stc call nop out fwait andl pop xchg ja outsb ret (bad) dec aam les cmp mov sbb add stc jo inc xchg aam jle push pop adc xor pop add lret repnz fldl2e mov ret cmp rorb sub dec ja inc test pop xchg push jo int3 ficompl test xor add fidivl pop sub (bad) das dec mov pop mov outsl push push int3 repz (bad) mov sub repz fmuls lahf mov cmpl dec add fwait dec dec stos pusha mov and mov out test sub pop stos repnz sub cli mov jae mov dec daa (bad) loop movsb adc stc sbb pop dec incb jecxz bound cmp stos not mov or les (bad) adc (bad) sub mov dec pop call pop je xchg dec jge inc cwtl insb sub cltd lods pop (bad) pop and cmp mov sub inc insl jle push mulb inc cmpsb call pop cmpsb iret mov pop dec out push inc mov int3 or dec (bad) xchg push out rorl int cmp inc repz add stos jmp pop negb add andb loop add out push sub sub ss (bad) cmp adc daa inc sbb les jae push pop dec mov pop pushf (bad) jg dec pop test mov jecxz or pop cmpsw in mov scas fdivl xchg rsqrtps loopne cmp fs lret fnstenv out fdivp cltd inc inc cwtl sub hlt push les jge or mov fldl cltd xor sbb dec pop push mov xor xor sbb cld push mov sub stos aad repnz lret cs inc jno sahf notl pop cmc xchg pop inc scas mov sahf int3 pop fs fnstenv inc ljmp xor push add mov jge pusha and repz xchg lret aaa scas xor and sub mov (bad) outsl mov and insl jnp (bad) insb xor adc push jo js inc push test dec add cmp inc mov xchg out push sahf stc and aam add jne cmp roll pop sub and aas ret xchg outsl adcb inc outsb and fldt cmpsb dec insl mov in sbb arpl aam add or clc add pop aad into test lea add inc or push shlb sub inc fmull sbb and inc push sub sahf mov in dec cmpsb jle loopne ret movsb in fldcw das jecxz xchg inc jbe mov mov inc mov sti and dec nop loop mov and pop mov inc cltd mov pop cs ret mov sub sahf jb jnp inc jp fisubrl push mov inc mov and imul cwtl repz in inc aad dec cmpsl push imulb inc ret aam lahf test je or xor jnp mov dec adc sbb leave pop inc aaa jnp pop loop inc mov push xchg fildl sbb (bad) pop inc outsb cmc mov hlt push add leave imul jmp into jle daa and mov pop xchg out pop mov xlat in and dec stos add inc and add (bad) dec dec sbb (bad) out jecxz mov inc or lds test inc cmp (bad) mov jmp inc adc test inc fs aad into mov adc cmp cmp dec adc fs ss loop adc mov in daa push add fdivrl push inc int3 out cmc add lds mov test xchg mov and push jbe inc in fdivrs mov out push addr16 jo push or imul dec pusha and inc push mov inc dec xor (bad) std ret aaa sti int3 dec (bad) (bad) fidivr ret and push pushf inc inc ret inc add jbe sbb gs lcall mov inc (bad) cmp pop inc daa and inc inc add faddl inc cltd dec mov popa push inc dec int clc insb and mov (bad) xor movsb inc jno add (bad) repz dec sbb (bad) (bad) push test jecxz,pn xchg push gs aad ficomp pusha or inc (bad) popa addr16 popa jno into inc test mov in mov jecxz dec mov into movsb pop aam outsl (bad) or ror (bad) addr16 add mov cltd dec insb cmp xor jno inc das mov mov aam mov repz out inc pop jmp mov ss pop test inc inc dec mov sub jo icebp xchg nop (bad) aaa cmp push cs jecxz shrl lret adc arpl arpl inc lahf inc jecxz fisubrl (bad) aam in mov sub repnz fsubp in pop fisttpll rcl push jbe fadd (bad) hlt lods hlt inc inc into (bad) cmp cmpsl pop xchg mov or jae push (bad) mov outsb mov shl push mov or into (bad) mov jo lahf movsb jo sbb jns lcall movsb jg mov dec fcoms outsb push andl cld mov cli ret std addr16 mov stos inc loope into xchg fnstenv xchg dec mov inc out xchg mov fist or inc test xchg cmp or dec push sub scas add xchg call push cld mov or mov sbb sbb xor push xorb (bad) sarb (bad) xlat insb sbb loopne rolb jmp shlb cwtl ljmp enter leave jl in jbe inc repz iret xor std mov inc fimull insl inc xchg scas out adc aas stc test sub test jo inc push mov xor inc iret repnz mov add pushf push xchg ficompl push sub loop inc inc stos shrl (bad) imull in in sbb ret sbb (bad) xlat inc inc add jmp ss sahf les or and daa mov sti daa inc aas adc aad inc dec mov lea pop or (bad) adc mov mov jae fmuls and inc es add ljmp fxch jmp cmp push aam cmp inc cmpsb jmp in xor xor lahf mov (bad) cmpsl mov and fistp int3 sahf or pushf inc adc add dec mov inc xchg jae aad (bad) mov adc add stos add mov mov mov xor mov push sub imul ret adc movsb mov lea and sti inc iret (bad) repnz out mov add and xchg sub cmpsb sbbb insb dec addr16 (bad) iret lret sarl dec into sub aam inc repnz xor mov ds sub cmpsl jge cmp ss inc dec mov pop xor (bad) int stc inc sub jnp fldl2e mov push sti lods jb xchg dec dec adc rolb movsl cli mov sub inc or sub in sti js sub jl mov mov mov cmp aas inc scas push or addr16 cltd push inc and inc cwtl add popa xchg rcr push mov test aaa imul jecxz lock and inc pop out jbe in repnz fxch pushf (bad) push push xchg mov inc dec or in pop cwtl lcall (bad) out cmp int3 flds lods mul loopne and sti push dec mov adc ret insl xlat inc imul imull arpl (bad) sahf mov sahf and fistl mov mov fucomip jb movb and pop inc sub xchg in cs push (bad) repnz push out (bad) js inc dec enter pop dec aad cvttps2pi pop inc insl or outsb (bad) inc mov in sub jp rol add sbb pop inc fmuls fiadd das sub lods jecxz inc cli testl and aas out cmp adc sub sub imul fwait out rcl xor test xchg xchg movsb mov inc add and push fwait or dec subl mov dec push or out sti pop nop rcll cwtl fs clc dec dec jo and mov in cmp sti mov push push xchg push push mov mov test out xchg jnp sahf cmp int3 stos cmp pop fdivrs sub push jecxz mov and lds dec mov inc adc mov xchg inc rcll loopne push popf inc inc ret dec or jbe pop inc imul imul xlat out roll dec inc out push cwtl or sub mov sbb std pop inc push dec cld push mov push arpl test mov icebp jecxz add adc inc insl mov xor cmp in inc dec sub scas (bad) flds fmul movsl jmp mov pop stos jo adc ds push inc xchg adc push bound mov into sbb push imul repnz push push inc and daa scas movsb adc inc mov xchg push push out add inc (bad) adc test hlt leave xchg pop inc mov or or pop fmuls gs stc cmp xchg sub sub inc jae loop (bad) loope inc push stc xchg mov pop out ds ret ret vcvttsd2si (bad) fistl pop test mov enter mov out decb gs mov scas lock mov pop sub pop or aam lock xchg and fs fstpt pop insl push cld ret inc hlt mov inc push xchg nop sti add addr16 cmp inc inc and inc push pop dec pushf push pop jle dec inc leave jg outsb ret push inc mov pop lods mov out loopne xchg lret stos mov mov xchg (bad) das xchg aas push jno arpl lahf popf cmp add sub mov outsl fildll add lcall sub pop cmp cmp ret std xlat sub outsb call outsl cmp mov andb inc cwtl daa cwtl clc adc add push xor push inc faddl sti pop imul add into ret loop or and (bad) daa jle pop mov add fs mov sub xor dec iret (bad) aaa and jl rolb (bad) push scas test inc lea (bad) mov cli inc or std inc add cs adc iret cmp push jne add lock jb in mov cmpsl (bad) sub pusha outsl mov dec or (bad) pop jl cmpsl test (bad) mov sub mov jp ret int3 or pop dec jbe xor add xor and sub ret stc push mov add rcrl jae rorb stos sahf cld jns lods ds fnsetpm(287 clc and mov dec lds ja scas cmp enter xchg inc lock fdiv outsb popa imul dec add lea sarl ret or sbb mov mov roll jo js sbb add mov out aam add inc jb cltd das push mov jmp dec (bad) jne out adc insl aaa out inc (bad) dec scas (bad) xor xor cmc cltd sub sub push adcb push out out inc cwtl xor add mov imul mov inc mulb (bad) lahf mov and inc les xor repz or lret adc mov sarl add mov inc xor push call xor mov pop repz das fwait imul lds nop cld cmp enter cmp imul das inc mov xchg jle sbb cld cmp inc push inc mov ret cmpsl ds xchg inc dec les fwait out dec fisttpll sub popf or enter cmp lcall or stos cmp jp push cmp sub adcb push mov cmp jg adc push inc push xchg dec fimull cmpsl or (bad) xor leave popf enter loope aam add aaa adc sub fs lods inc mov mov sarb dec jne mov mov cmp cmp inc xchg cmpsb inc roll push sub or data16 out ret mov sub cmpsb mov dec xor pusha dec adc popf cld add or dec inc sub pop mov push (bad) lahf inc repz push insb ja popf sti inc test sub and xchg push mov mov mov imul les lahf add dec test jb jns std pop adcl not nop inc adc or mov mov add pop mov adc rcl dec inc stc add xchg sub les jge outsl mov dec dec cmp out push jb inc jle fwait lock clc pop out (bad) cmp test mov push push xchg das and mov in mov adc mov mov or sub loopne inc inc aas xchg (bad) mov sub orl sbb xor mov data16 adc dec jp,pt cltd sub mov loop cmp mov mov mov sub movsb cmp (bad) pop aam dec lds mov lcall pop or adc ret push dec rclb je jecxz pop sti repz test mov test nop mov sti lret call cmp mov ffreep adc xchg add adc mov jge xor and mov (bad) aaa pop mov jns dec imul sub pop or sub ret (bad) mov shrl lahf mov outsb cmp jb dec inc dec rolb ds sbb aam or pop push inc loop mov add sti jb mov mov cmp aad jne dec cltd jne xchg push test xor or dec push dec add cmp lcall (bad) fildll jle xor mov nop mov pop fsubl sbb fmull lcall push push jle mov sub xchg std push int3 roll inc cwtl mov push faddl and inc and jnp ja sbb cmc or fiadd push stos mov push jl roll mov lcall icebp (bad) lock lret popa dec xchg insl ljmp jb and ror cmp push ss (bad) mov add test mov pop adc pop push (bad) shr mov stos cwtl xor xlat fwait push sub fcoml fmuls sub mov sbb cmp into xor outsl mov leave mov push dec xchg mov mov test sahf mov add (bad) in testl xor xchg clc cs push iret jno outsl arpl loopne dec scas jns lods push dec rorl cmp arpl xchg or cmp pop mov push int3 xor (bad) mov hlt pop dec pop arpl bound sbb testl fmull xchg mov out cmp xchg aad sbb loope mov sub pop mov or or rol clc mov xor sub lahf xchg fstpt and push xchg push adc clc xor daa dec jns xor push test dec jmp mov add mov mov in lods stos das jb mov push ret push rol lock pop scas cmc js test out lret adc dec push sub ja (bad) xlat jno push mov jge push adc xor out sbb pushf inc or push or and sub add and scas dec jge inc push stc cmp gs and push inc dec sarl sub xchg mov cmp enter mov scas push cs adc inc sub rclb mov inc inc sub popf ret cmc stos add aaa mov mov lret jbe out bnd ss mov (bad) scas pop xorl add xor sub mov pop or lahf or repz and mov sub fbstp mulb gs xchg inc imul xchg xchg push movsl (bad) (bad) add pop push fildll mov cmovnp sub mov jo or mov dec (bad) adc push add scas shll jb aad jb idivl push mov (bad) movsl jns arpl mov xrelease test add stos pushf inc movsb jl add rcll or xchg (bad) cli jle xlat leave push dec lahf add loop xchg inc adc jb fldt arpl push int cmp dec push cmpsl jae jno jp ret loop add loopne dec mov sahf inc jmp add add daa fmulp inc imul xchg fist or ret or lret aas sbb dec pop sub pushf lea into add int3 addb arpl inc loop jp into jmp stos lcall clc in lret and (bad) push sahf mov mov fisttpl imul packssdw (bad) push dec and mov gs pop sub das data16 cmp out push and loopne rol aad push (bad) outsl ss sbb inc sub inc dec or dec add pusha jecxz pusha push (bad) or dec sbb in icebp push cs xchg xchg call mov hlt cmp inc mov push push mov pop dec rolb cli cmp xchg pop add and dec jecxz inc loop dec (bad) cs ffreep dec ret mov xchg xor cwtl push out outsl sahf mov xor add mov cmp cwtl pop cli into loope jecxz loope mov dec movb xchg out cmp out stos mov sub pushf pushf repnz mov pop jl out movsb loopne sbb das add mov xor cmp insb push push js pop int gs dec sub les sub xchg andl aad fdecstp mov sahf pop inc outsb inc aaa out push xchg push push pop dec xor sub mov (bad) repnz test (bad) out dec xchg cltd add xadd sub fsubr push adc or add mov push inc out jbe sbb xchg (bad) mov sub jmp add or xchg cmpsb cltd int3 or jmp xchg rclb in fidivl sub stos adc cmp dec rcl jmp mov jbe lods add sbb insl fwait pop pop leave inc mov fisubl sbb inc push dec sbb xchg mov lahf adc fsubrl inc push adc mov test add add jg in imul aad xor dec xor push imul movl mov pop mov ret aas adc xchg iret popf inc (bad) out pushf lock inc shld jmp lret or lock jo add aas scas pusha jp lahf ret push push fldlg2 mov push pop mov mov add fsub jge pop mov and mov call repnz mov lods pop adc inc inc or iret out in fnstsw movsl mov notl int push mov add push lret add out mov icebp inc aam push cwtl cmp in add cli inc sarl sbb mov xchg mov xorl popa jl push (bad) rcl out stc ret jge fcmovne jns pop bound jnp xor mov and ljmp xchg mov cli ret adc dec imul in shr inc ss cld std sub sbb inc and and and jno packuswb mov pop xor sub clc push xor (bad) cmc js dec ss inc mov int3 sub fildll mov mov and decl mov bound into ret (bad) hlt push test dec enter ret insb call sub daa pop mov cmp jmp movb mov pop popa inc inc push divb xchg xchg loop imul bound cmp inc cmp fwait mov stc and jp icebp inc fwait les mov pop cltd or repz and pop xchg adc xchg mov cli inc or adc or sbb adc jl dec inc push (bad) cmp xor les outsb fidivrl add mov push testl sbb inc adc loope loopne lret push jmp xlat dec xorl loop or (bad) idivb ffreep iret push or cmp mov lea mov jns mov movsb adcl lahf xchg sbb inc int jge call push push dec mov xchg lock pusha (bad) sahf add aad inc loope and add pop adc push aam inc shlb xor jns mov add pop pop lcall jno aaa add sbb mulps jae test xchg mov or lea add aam inc sub (bad) cs adc test add jecxz imul ret inc out push gs xchg les sbb ret fcomp call std xchg shl or (bad) (bad) fisubrl fldl inc int jmp pop jle push loop dec xor pop in daa xorl fildll fwait icebp movsl push dec or mov mov stos pushf pop or mov pop sub mov movsl mov int push add in inc sub push std xchg es dec popa adc cmp ret push test movsl rol pop popf popa dec icebp lret inc stos inc aaa fdivrs sub inc mov ret sbb sub inc test and sbb sub xchg leave popa mov fwait scas cmp sysenter push push cmp jp ja aaa adcl push aas inc push cs mov pop fdivrp movsl dec xchg mov lret daa rclb jg xor xchg ficomp xchg (bad) stos dec pusha fistp jne cmp lret les sbb jae mov (bad) addr16 pop adc pop enter pop addr16 cmp inc aad mov jno sub inc adc cmp push ljmp mov mov mov enter cmp mov stos ffreep jno aad inc sbb pop push and pop lahf inc xchg loopne push dec push or push inc ret insb shll das cltd inc inc push aaa jne (bad) maskmovq imull (bad) icebp mov adc pop push je jecxz xor jbe call in roll lock cmove pop sub or mov test aad aam outsl outsb cs push xor in or jae cltd loop roll or lea or sub (bad) inc int3 sbb pop imul into xchg cmpsl jmp add jno push (bad) (bad) icebp pusha add fwait inc into or divb and fimul mull push lsl mov bound pop inc jo jle push scas inc testl pop imul xor bound sub call fdivrl ss and decb loopne inc jbe subl mov add push pushf jecxz fildl daa xchg clc sti test jmp push outsb jecxz or jg xor inc rorb push cwtl iret (bad) push inc lods mov sbb sbb (bad) or pop and rcll in add cmpsb inc test std enter push dec inc aas arpl push pusha add mov inc mov int push sub jae mov push fldl sbb imul adc mov inc nop sub bt cltd fcoms pop inc jnp lea and jb sbb movsb pop stc outsb pop sbb arpl fildll nop jne xchg xchg sub ljmp jmp add addr16 xor cs inc clc inc add cmp notb movsb cmp push icebp dec into faddp mov cmpsb xor cmpsb sub or int aad adc xchg push repnz cmc int cwtl fwait push lret add inc pop std mov or or push fisttpll repz inc loop roll jecxz mov jb jg repz das je mov repnz sub repz stos push je sub cmp rolb fisttpl mov fcoml lret push out sub cmp jne lcall fs push enter lock les mov (bad) aaa mov add or hlt inc movb dec push and and cmp mov mov mov mov outsl test loopne mov jge mov popf cmp enter adc adc sub jo xchg or les fsubrs das aad inc roll push enter jae fistl outsl lret jno mov xchg fsin fnstcw inc sub push out push pop push std jnp mov cmp sub jo test mov out inc ret cli je icebp add jg in sbbb and loop fcmovnbe scas inc test sbb adc or mov dec fdivrl je sub ja push into jae popa loopne sbb ficomp pop aad xlat sub mov or add xchg sub popa xor xchg push xchg mov pop or into ja scas inc sub cmp test sbb mov dec test jg inc in mov mov (bad) inc or enter ds lahf sub adc test add pushf and inc inc std mov leave sbb mov inc push mov cmp inc xor xchg fnsave gs mov (bad) pusha in das jbe inc lret pop scas scas adc out in pusha add and jae jo add inc sub pop dec pop jmp rol or xchg jno mov lahf and xchg aam cmp xchg les mov inc mov lods xor lock inc lods inc sbb rorl cmp cmp data16 ret or push fucomi pop mov adc (bad) int3 jo sahf in push mov (bad) mov pop jecxz stos dec mov fnop push pop dec hlt cltd sbb jbe imul mov jl sar popa vcvtsi2ssl jns daa jp cmpsl cmpsl das aaa lcall jo mov lods mov sti (bad) int3 dec int3 stos cmp push push jno mov pop or mov xor adc loopne repnz push lds xchg repz int3 out daa lcall xor pusha mov adc inc dec fcoms (bad) push pop cld jo pop push je pusha xchg fistpll inc ja mov push imul or int cmp popa stos (bad) cmp enter aad dec push mov stos jbe jno and in dec stos jae in movsb loopne mov jmp sub mov cmp das outsb icebp arpl jno add (bad) push sub push mov push xchg inc les jnp xchg sub push mov mov fidivl outsb test mov mov mov and mov dec daa mov sub xchg insl int3 test push push ret inc insl jle xchg rcr add jno or lock or adc or or (bad) jge int3 lds movsb gs mov aas sbb dec sbb outsb imul or dec std mov in out mov (bad) and out dec cli push jbe mov mov or (bad) mov sub inc gs dec mov dec rolb out js ror ja repnz aam out shld add sahf arpl ss mov pop out jge cmp sub mov pushf enter lret inc mov or inc es rclb push jnp imul inc inc into push jge sub adc es sbb outsl pop lret pop out into xchg dec fcoms adc sbb inc (bad) sub pop fwait pop fnstsw inc leave inc jmp scas mov ss sbb push gs mov lods aas inc inc lcall pop xor stos or mov clc adc push cmp pop dec pop data16 jl and mov jo shl inc xor out push aas sbb pop fistpl and js fmull inc cmp out jo sbb movsb ret jmp fnop adc push popf sbb shll shll rcll xchg ja les mov loop dec xchg xchg jno repz push outsb inc divb dec pop fisubl incb data16 dec mov pop sbb bound aas jno mov jmp xchg sub in and cwtl adc inc rclb mov aas and jg mov fisubrl sub in lcall (bad) or xchg scas mov and je add adc fwait daa outsl cmpsb push sbb pop sbb fcomps add test jmpw (bad) xchg pop inc cmp mov movsl test ja xor adc jp adc out movb or inc push stos (bad) push cltd mul cwtl push sub gs push loopne in mov xor sub cltd cmc imul faddl xor dec xchg adc xor mov pop insl rcl stos cmp jecxz inc push fisttp jmp inc int3 pop sbb pop ret lahf push arpl dec outsl xor out aaa jno sbb pop pop dec (bad) inc lds cmp and jecxz js sub dec jp sub adc inc bound cmpb mov bound push repnz fildl jg cmp je jns push das mov iret outsl inc rol jge fmuls cmp aaa lea dec pop dec ja pop push or mov xor es mov cmp cmp arpl cmp int3 mov pop inc sbb adc (bad) (bad) adc jg mov aas push inc imul out xlat int xchg out sti mov dec clc out decb imul mov iret xor jo add (bad) cmpsb pushf or or (bad) cmp add les out push dec notb into cwtl inc fisub cmp add outsl inc jae int3 loop and (bad) jge push xor cmp dec inc inc insb add outsl in inc sbb pop inc dec xor dec inc daa mov clc lahf imul fisttp sub xchg xor aad imul xchg rolb cld inc mov mov mov das dec pop sub or push stos aaa pop mull mov xor cmp jecxz clc adc jecxz bound jge mov outsl ret add std imul ret test xchg cmc test dec jno lahf lds cli call push sub lret dec push mov pop fwait sub dec sub push mov add adc das dec vcvtdq2ps sub stos notl scas and aaa mov icebp stc mov lret dec loope movsb xlat movsb mov daa jl (bad) insl jecxz and inc xchg jnp push or sub mov cmpsb inc pop adc cmp jg addr16 ret arpl repnz push pop movb mov or dec xlat mov (bad) outsl sub (bad) mov dec loope xor add cmpsl xchg cmpl push (bad) mov sahf mov lods (bad) dec jmp or sbb jae mov frstor movsb imulb cmp cmp mov cld jns xchg shrl stos mov dec cs je std mov in gs mov or and sbb cmp push xchg push out jg dec ds or rclb movsl pop roll pop jge adc dec sub jle (bad) push aad aas loopne ljmp inc pop addr16 out push jp in inc inc sub ret and cmp jge or jnp aas inc jbe jecxz es inc xor cwtl add das xchg jae cmp nop (bad) out xchg mov push aas or pop loop (bad) ss pushf or xchg inc fnop lcall dec inc stc push lret add enter sbb push out pop inc repnz inc daa shlb inc imul mov dec cmp dec stos cmp inc and xor mov dec pusha pop int dec inc sub test popa loope test cld cwtl mov jnp in js pop mov mov cmp sbb jno jmp andl sub jbe push (bad) sub ret (bad) call int3 popf test jmp sbb flds push pop adc adc test in (bad) mov jns inc add popf imul scas push jge cmc cmp or fildl incb aas xchg clc int ficomp mov xchg jg ja outsb sti dec xchg out negl mov lea ret and pop push cld xlat dec loop pop pop pop inc inc cmc push xchg ret lcall adc fbstp sub fisubl incl repz cmp lahf inc lret and xchg push push jecxz (bad) icebp inc adc pop and cmp mov repnz inc add jb pop mov pop inc loopne mov rcrl cmc rdtsc je inc fadd icebp stos out lods roll mov sub xor inc je pop push xchg sub dec pop sahf xchg ret rclb or cltd clc mov sbb add jl adc mov push pop imul ret or pop pop icebp mov mov jnp sahf in inc ret adc mov dec popl adc inc in sbb lods ret inc js out jp sbb dec jnp mov (bad) iret in clc in mov sub inc xchg pusha in mov arpl lret add mov xor jbe jne or call clc xor dec mov xchg dec ljmp xchg ret (bad) xor lds in ja mov mov mov mov aas push inc lods cmp sub push cmp mov aad inc inc stos lcall mov push (bad) test sti imul xlat outsb and pop inc mov mov mov cmpsl (bad) sub push mov jnp sbb or xchg lods outsl push push je bound aas pop xchg nop xor inc (bad) and jmp xchg lcall (bad) mov jge lea lret mov jecxz call dec or lock xor flds stos lcall inc stc mov int mov xchg inc out fldl inc aas sub inc shll lock or clc imul inc mov sbb add bound inc scas adc stos shll mov push aam sub add add in inc sbb xchg xchg push mov (bad) int fdivr call aad mov sub cmp ret repnz pop fstpl inc subl (bad) incl xchg push incb (bad) int3 mov sbb ss lock or movsb sub dec jae add jo adc sti inc cwtl int3 mov pop insb inc out call xchg (bad) scas test cmp sbb (bad) xor pop imul inc aad (bad) stc sahf shlb jae sub push xchg dec int push xlat arpl cmp lds xchg mov fimull fimul xchg test out mov add cmpsb dec mov xchg arpl cli dec leave sti shld shl ret mov inc ja,pn (bad) clc mov stc jb mov pop xchg push and (bad) test jl into jae mov or add adc inc arpl mov push lahf sub push cmp sbb dec mov mov ret movnti roll pop cmpsb aas add sub lods add xchg fstps insl inc push lods rcl in jne fwait test (bad) push addr16 rolb xchg insb arpl or xor jb inc (bad) mov jg inc mov je daa popf bnd dec push adc mov dec xchg fildl sarl jge xor xor jmp cmovp movsl addr16 sub bnd pop jmp add outsl ret nop jae test sub shlb jmp pop sbb pop hlt mov test testl sbb push inc push dec and outsl mov mov jne cs xlat lds (bad) mov es mov inc lods aaa sub mov and jle mov lds fstps leave jno xchg stos pushf ds jb aam mov xchg sbb adc nop sarl cmp sub insb fs stc fsubrs idivb add and and xor loope dec lret push push test add es mov cli cmp dec push and inc mov inc fisttpl dec pop add and icebp mov sub int3 cmpsl mov std xchg cltd pop repz jl arpl dec sub inc shll inc inc xchg mov ss js fisttpll add repz jnp rcr xor xor loopne inc dec fildll out jl movl rclb bnd inc fildll lods rolb int dec enter push (bad) sub xchg mov test mov pop sbb icebp sbb stc pop push in ja dec hlt lods push cltd call clc std addl int3 pop cmp roll and in jae xchg jp lcall and lcall jo,pn xchg lret sbb lret mov sub scas int mov inc fnsave daa movsb lcall jbe cli jg loopne das jne lods jns icebp fdivr sub imul cli and sub or out test xchg jo daa fiaddl popf pop lcall cmc fmulp rolb mov or pop sub ficoml add fcmovb aam stc cmc push (bad) popa xor sub or push insl xor ja leave pop outsl jg xchg ret xchg (bad) add jge jae mov inc jl mov ret test add sbb ret (bad) dec push fwait inc insl insb out hlt push int3 js xor cmovne sbb sahf xchg fldl loop mov jae mov push jnp out mov pop jmp inc jle fldl add pop das fimul daa dec js jg mov add jl sbb add adc inc add and cmpsl xlat mov jmp dec cs and lret xor call les pop xchg inc mov push shrb cmp pop leave (bad) mov jg jge int jle cmp es or stos mov dec pop cmp and out dec aad inc and mov pop jb hlt jmp mov jo stos imul cmp cli dec inc jle popf jae dec or (bad) imulb adcl inc (bad) jnp ret inc (bad) (bad) je rcl test push sbb and push cs dec dec dec and sbb mov cmpsl xchg scas bound inc pop lahf sbb jl call bound push fild sbb dec addr16 sbb inc scas cmp inc sarl loope xchg insb mov adc pop call sub add test adc and rorl dec lret sub add js cmp mov arpl push adcl fidiv mov push inc xchg sub fmul mov adc push sbb cwtl inc int xor xchg cli imul adc inc pop sbb inc dec add out inc jbe mov mov int3 and sbb mov mov inc movsb (bad) mov outsb xlat call push jmp fidivrl mov mov push push adc test add xchg popa pop push hlt push jno sarb pusha andl ret inc outsl inc jl jmp sbb push and push adc fisubrl or jecxz aaa adc and les push jnp call sbb cmp dec sub xchg fadd push fs gs mov (bad) xchg lahf (bad) cmpsb out inc mov add in ja shlb sbb out in rorl imul jno mov inc inc and (bad) fsubp dec repz mov inc jg sbb push mov test and cmpl jg (bad) mov outsl repz xchg mov xchg lods add sub out cmp mov roll jns lods daa scas shrb imul aas ret lods add or jle cmp jne mov adc pop add dec roll inc ret ja push sbb in xchg popf mov mov incl fwait sbb lock inc mov cmp inc pop sub packsswb jb jne mov fwait aam inc xor and and andb sahf xchg and mov movb push iret fs mov inc add and repz mov mov shrb (bad) xor add inc inc xchg jg xchg int3 cwtl inc pop shrb cs xor cli or fs fist (bad) loop fs and mov add mov inc call push pop rorl add dec jmp out add add dec jne int add dec ja push fldt cwtl xchg addl cltd jmp push jl (bad) les arpl jle sbb push clc rolb fs std fstpl loopne into mov push cmp mov pop bound ret pop jae (bad) call cmp mov fwait pop int clc jecxz jbe cmp ss (bad) push add (bad) sbb leave test movsl add cmp imul js std push jmp sub cs rcrb lahf sti add pop insb cwtl subl test imul adc subb and out mov in pop sbb mov or push and mov ljmp mov int3 cmp mov out pop out jmp test sahf leave fneni(8087 in dec aad out sub cs das add sub jge pop dec (bad) xchg inc mov outsl cmpsl push or das hlt adc dec (bad) push aas (bad) loop adc inc fmull mov ret cmp pop push leave jmp mov mov xchg mov movl mov sub jns int3 and inc mov cmp inc dec ljmp std outsl mov arpl xchg (bad) sub add fcmovnb pop pop lahf imul in push scas push xchg mov hlt arpl add ret pop pop insl jae mov inc sahf mov lods out clc (bad) in pop mov je or inc pop add xor movsb dec in mov xchg xchg ret push jb das jns insb aad movsl aas popf inc and and imul or adc popa and les outsl ret xchg aas das inc jbe in (bad) enter inc pusha sbb add dec jae pop in push dec mov imul or in (bad) mov xor push inc loopne push gs pushf ret jb into cmp int3 fcoms xchg (bad) xor pop xchg sub and dec inc lret push sbb (bad) mov xchg adc adc mov addl fucomi push inc cmp (bad) sbb sub lcall cmpsl test in xchg mov mov jecxz xchg mov jnp iret sub movb push cmpl sar dec (bad) mov adc pop mov dec sub outsb sbb in popf adc adc mov xchg dec fbld add shlb add sub mov loop mov dec sub fstpt push fild add inc in jne cmp add mov xchg sbb and xor jmp dec dec bound fldenv pusha pop (bad) (bad) inc fbld inc ret ljmp popf popf (bad) (bad) mov loop into test cmc or je or (bad) cmp mov pop movl shr inc aaa insl or repz inc cwtl sub push dec imul lahf bound loope movl mov lods push xchg cmp inc (bad) movsl inc adcl insl add shl jecxz and mov inc xor and dec pop popa scas jne lds fiadd dec xor popa xchg (bad) jnp xchg inc insl mov scas mov (bad) aas lret or jae addr16 lods inc xchg dec mov add push repz mov aas mov sub inc push outsl xchg inc fdivs push test push sub cs outsb push in push out add hlt mov push xchg and ds jnp into divl fimul inc xadd jp in dec mov insl aas xchg lea bound and push inc setbe add lahf sbb call into pop pushaw (bad) push fsubr push add sbb jle gs sbb xchg jecxz shr inc xor loope ds in inc push clc dec sbb ja add out inc enter imul push (bad) xor mov mov xor cld sub lea dec mov push and ret pop outsl inc (bad) loope (bad) outsb push into and fsubp scas add fistpl ret mov xchg dec movsl pusha mov rcl call repz ficompl iret cmpsl inc pop and and sub sbb add lds in sub lcall jne mov push inc lods js imul mov cmp aam repnz dec pop sub or sub xchg dec cmp jae add pop push sbb mov shrb xchg iret jl mov (bad) sbb mov inc dec fwait test movl sub ja adc sub mov js das in int3 mov fisubrl jg cmp pop in pusha repz gs in mov hlt popf (bad) or ret out cli popf inc lods jmp sbb lcall and push mov pop mov in imul pop outsb cmp push or nop inc xchg cmpsb int adc sbb call icebp ret sub fistl sbb negl arpl aam push sub xlat pop add push fcomip inc and cmp (bad) pop fbstp clc xor loop std orl sbb repz dec rcll pop cmp negl into sub and cmp lock rol cwtl outsl sub call jne daa or push lahf adc test (bad) lock dec mov pusha lea (bad) lods stos (bad) lea jle movsl sub mov jg imul push inc add ds push (bad) add or push or push or add push mov rolb mov pop negb fwait arpl sub push xchg repz (bad) xor (bad) mov imul ss rol repz add addl cmp nop add cld mov fnop and pop (bad) xor sti sub insl xlat push adcl rcll stos xor inc test or push arpl shll dec mov repnz sub xchg out xchg je loope inc cmp add ud2 mov jg gs mov cmp cltd fwait push orl add cmp pop in inc idivl int mov mov jo mov movsl dec ja movl lret in pop push xor xchg les js sbb (bad) xor add (bad) les inc outsb add mov das and pop outsb inc stos adc pushf mov sub sbb divb int insb push mov and mov mov inc adc inc pop mov push mov cmp ja test mov xchg dec imul adc ret sbb mov jns popf ret or lock lods in popa add insl add inc loop (bad) popa add rclb or ret push fistl lea inc mov pushf icebp pop dec popf repz jns ret call pop inc sub sub or inc add push xor xchg mov adc icebp pop dec mov add push out jg bound fadds inc add lahf adc jne xchg jecxz (bad) mov icebp inc fimul insl or clc or and repz inc push jo mov sub out push popa jne jns jmp sbb inc mov ljmp inc loope push or insb out fisubrl jbe push jnp mov aas jo mov push push in adc xacquire cmpsl pop (bad) mov rclb or and roll scas xlat mov inc fwait mov jmp ret jl (bad) mov adc inc push mov jnp dec (bad) mov sti sahf and pop or inc shrl dec mov add movsb adcb dec inc inc sbb in inc mov and xchg adc and pop push mov scas add popf xchg fdivs mov das (bad) arpl mov cmp pop sahf inc push (bad) pop or or mov outsl stos cwtl add dec ret outsb mov shll cmpsb inc mov sbb arpl pop ds dec mov xchg pop push sti mov flds or mov arpl mov int out sub lods repnz push xor pop cmpsb mov pop subl addl lea dec sub (bad) jg jge or cmpsl dec cwtl scas inc sbb dec add lcall xor inc dec xchg sub ljmp dec pop js jmp mov repz cltd add inc push jno clc sub fsts and cmp (bad) mov jns cmp sub mov std lcall lret dec push jo shlb aas sbb push sub sbb push and stos push loop mov mov lcall dec mov loopne mov sbb rorb sub mov dec cmp js test adc jnp fnstenv adc lds mov subb inc pop pop mov in popa insl repnz out iret popf mov icebp mov ficoml add aad push fbld mov cmpl xchg inc inc push inc bound inc mov or mov fldcw push cs push push pop in or xor ljmp fwait cmpsl jno repz and movl push flds nop call jbe dec or sub test daa addl into int3 shr sbb inc sub popf or out fcmovne fwait je mov push test sarl pop sub lods jp out add push int3 movsb and movsb sub arpl sbb ss rcr sub jl push add jb gs (bad) mov imul test shrb inc hlt cmpsl mov into xchg lcall in (bad) adc dec add int cmpsl int3 dec sahf mov or mov add (bad) test push inc mov dec cmpsb xor fdivs je insl sub (bad) adc mov mov jg fwait inc xor (bad) xor ja into fsubrs int cmp sarb mov pushl mov inc xchg cltd movsb cmpsl mov mov cmp loopne aad cli ss fwait sar (bad) and icebp add or imul enter inc scas xor hlt inc gs cmp xor fwait or sub daa cmp pop fistpll and mov sbb push or roll imul push mov dec jg (bad) jo mov sub cmpsl movsb push sub dec sub pusha out int3 xchg push mov test (bad) jge inc dec push ss lahf test cmp in mov jp mov mov mov or repz or mov aas mov mov fs popl nop outsl sbb cld ret dec mov cmp push fstpt or adc inc and stos sub leave xchg xchg out cld test sub jmp (bad) pusha mov mov add jo lret fwait scas mov les imul or jnp adc mov push inc jae pop mov inc sahf jl pop test and jne and subl and jae dec jecxz mov in cltd push jne sbb adc std ljmp jnp xchg (bad) pop inc pop inc sti cli sub push push mov orl (bad) xor add jl add addr16 inc in lods cmp dec mov addl adc xchg pop fldenv push lahf mov cmp dec and icebp add add sbb outsb ja cmpl pushf stos xchg mov sbbl inc mov or pop inc xchg push sti les push jne cmp jo ret in inc pusha test or xor jge inc ret aam sbb ret and movsb out add and cmp imul lods fisub inc push popa add sub mov fstpt pop add mov mov js push mov pop frstor adc rcll insb movsb cld in mov dec mov inc push jo shll xor inc aam sbb mov dec fnstenv cmpsl mov daa clc xor mov aad mov outsb xor mov int pop jnp fwait and das cs popa aam push push bound pop inc rcll ret loop das push sub arpl pop pop mov sti cmp fdivrl and xchg cli sub inc sub js (bad) (bad) roll pop aam mov rolb mov cwtl and insb cwtl jno out mov push inc lahf and mov pop xor int push clc or mov pop mov mov test stos inc lods aaa dec pop pusha movsb stc ret inc cmp mov (bad) pop jl pop std inc dec ds inc popf out das cmp cmp adc aaa nop push mov mov xor fsub and jge addr16 jg inc arpl add jae cltd cld leave (bad) addr16 push push inc loopne adc jno test pop faddp dec jnp cwtl jmp test nop in es dec cmp push xchg lods add cmp inc pop cld (bad) out negb sbb movsb pop movsl jbe ret icebp call mov rclb scas inc jle adc or dec in cmp jp sti add cwtl or jg (bad) (bad) xor push fcmovnbe mov dec add inc out jle test fsubrs inc inc push pop sti nop xchg je jae pushf mov pop inc jnp sbb cmpsb jecxz adc (bad) mov and out mov mov inc mov mov jl sub negb cltd fs rolb ds stos loope mov lfs mov and push or cmp cmc dec enter mov data16 test inc lahf ss test inc leave or jmp ret (bad) and bound dec cld jnp fbstp mov add rcrl mov (bad) sbb inc stos leave inc test push movsl jno out idiv int3 mov push (bad) aas (bad) and std out rclb das lcall sub xor (bad) ja mov or aad mov cmpsl cli push jp jo pushf jecxz mov dec cltd testb xlat divl inc push dec shrb pop fild stos jbe add jmp push enter push sub pop fildl jne jne mov outsl lea push cli push xor cltd adcl push sub ljmp mov push int3 sub mov stos les lcall icebp std loop add sbb fxch stc cmp dec test cmpsl shll in sub add test pop das dec mov lock (bad) jae test insl push test andb scas jo and inc sbb (bad) mov jle add cmp jne mov lock lret or icebp sub lods in adc push cmp xchg cld jecxz mov (bad) cmp xchg inc sub or jg adc or test xchg pop xchg fucomi xor adc jle repz clc jo push add in inc lock out and adc inc fsubl xchg or (bad) cmp add in push mov add xchg adc js fwait jecxz pop mov ljmp xchg push push push fistp sbb and dec push cs mov popa out pushf sub jmp jnp (bad) test mov icebp mov inc (bad) pop pop sub dec (bad) push inc mov mov ljmp aaa jo aad cli dec mulb xchg mov fisubr sbb cmpsl lock cltd loope or mov mov xor (bad) mov into add pop mov cmc mov xor ss repnz xor jecxz mov jno hlt int insb inc jp test pusha je popf add sbb mov shll add lock or mov cli mov shl add jl push aas cli inc sbb mov mov stc dec int push out cli mov push push test mov cmp mov xor popf add pop jb mov sbb daa std jge ret xor das fldcw xchg add and mov jmp fs jnp inc push mov stos out sub popa (bad) loopne repnz (bad) mov mov into sbb movl sub stos (bad) pop mov outsb xor pop jl inc xchg stos xor cmpsl jno das insb pop mov jnp push inc xchg sub xor add sbb call or dec add dec fwait stos inc mov dec mov inc adc sti pop je lcall sbb xor pop jle cwtl fwait fs push push icebp xor fs mov cmpsl inc mov jb sub cmp push inc mov push inc test xor dec fadds out mov fild xchg mov inc inc cmp or push mov out sub sub xchg bound icebp loope and das cmc or push push jne jnp ret lret and jns xor dec aas ret jle sarb pop jae (bad) outsl pop cld dec inc popf push mov aam arpl inc pushf mov fildl lahf and popf mov jo fsubrl or sub aaa inc adc adc (bad) adcl aas push pop sahf sbb pop loope stos repz inc scas sub (bad) and push shl addr16 imul (bad) (bad) (bad) pop (bad) and push jb xor arpl inc lods (bad) jno int3 cmp and daa push sahf xchg into fnstsw inc cmp int3 jbe rcl out cmp bound (bad) loope mov adc std pop das fcomps sub xchg enter inc inc or pop jbe pcmpgtw add push adc fiaddl inc dec mov ret xor pop sbb push movsl mov test jo add inc cwtl add and xchg mov push pop ljmp cltd stos sub push inc or pop sti and movsl adc (bad) imul rorl ret mov inc jl inc adc add fildl out cli lret pop and idivb fwait aas cli ret push and cmpsb daa xchg mov adc jno cli mov mov (bad) inc sub jmp andl inc pop addr16 inc test mov mov lock jne jge inc mov sahf jge sbb addl push mov cmp sub and les movsl mov ss orl outsb ret leave pop inc sub ret (bad) test out repnz int3 push outsl andb push rcll push in or mov cltd insb in pop adc sub adcb jbe add clc or int icebp xor call subl mov pusha dec rolb or mov insl xor into mov push pushf add shll mov inc lea inc push adc inc and or jg mov dec std xor xor popf mov cmp xor fildll enter xor leave mov and pop xchg movsb ret xchg pop sub std imul (bad) lods flds cmp mov cmp mov pop xchg xchg (bad) loopne mov pop mov xor sarl adc outsb roll and jb and sub orl sub or pop mov imull mov jnp dec lss rorl call (bad) mov mov lea jb or mov sub in add in mov fs ja aam fldcw jl call mov jecxz xchg out pusha dec jp jle repnz inc inc jo pop sarb fs dec (bad) xchg push dec in js and lahf push aam icebp shr add rol push pop pop sub ret movsl rcrl sar rcr loop les fldt add sub xchg xchg sub cmc push jmp adc xchg out sub and dec push inc inc add stos addr16 pop repnz sub dec negb lret cli cld mov pop or cmc adc xor push pop dec mov out (bad) ficoml mov es pop jle (bad) repnz xor cmp aaa call push std (bad) jecxz call dec mov add imul in mov mov inc in enter ret (bad) into inc sub (bad) cli in int3 add sub xchg pop inc inc lods xlat outsb mov repz (bad) sbb xchg add (bad) cmp jmp xchg pop dec sub rclb mov dec pusha dec fnstcw or imul inc push out push inc repnz adc test mov mov push ret fisub cmp adc movsl test lods xchg jle mov inc and and in inc lods and xchg in mov inc push dec inc adc lea inc mov adc addb jb mov les mov sbb fs ror sub imul cmpsl jmp pop fldl2e inc sar mov lret pusha sub loopne mov mov stos imul sub cmpsl cwtl fnop pop fistl pop pop push adc fsts adc add movsb pusha jmp and mov insl neg dec push push pusha or dec jl xlat or pusha test dec rcrb icebp add ficoml jae aaa mov or mov repnz les mov xchg xor sbb adc ss sti xor repz push xor push dec int3 pop bound addr16 insl lea inc or lods testb call cwtl int3 jns cmpsb push int3 push cs in stos pop push and cmpsl icebp (bad) dec icebp cmp loope pop popf cwtl add cmp xchg lods sub xchg and mov aad and push mov or adc mov rolb adc cmpl sub je (bad) aad enter jl pop xchg or icebp outsl and xor adc cwtl inc xchg stos mov (bad) add sub and lea imul leave inc xchg stos add out test loop xchg push ret push shl mov xchg (bad) mov pop cld mov sbb dec js xchg sub fwait xchg insl inc cmp mov and ret cmpsb decb adcl mov push cwtl mov mov je push or cmp push inc xchg int les popa or cmp inc xlat iret adc dec loop sahf mov loop insb rclb mov or dec pop hlt shl jecxz sbb ljmp mov inc jl in test mov cmp inc arpl aaa jge inc ja and (bad) mov sbb mov xchg push fcompl add jl mov (bad) cwtl sbb and xor mov jnp (bad) movsl and in test cmp je pop add stos mov imul popf or shlb pop sbb inc into scas ss (bad) xchg cmpsb or push js fs jg adc jp (bad) fmuls pop inc das push ret add and fld stos sbb repz icebp mov pop sbb inc dec sahf inc jecxz shl ret das ja jle mov scas adc push call push cmp mov adc dec inc jmp inc jp fmuls daa dec or push mov pop cmp mov inc les add call out jmp lds mov xchg lods adc mov and fdivl out jmp fwait push cmp inc cmp cmp int3 push shll ss mov daa insb rclb xor rcrl push adc ds xor dec mov jge xchg xchg enter mov repz inc mov es pushf sbb mov movsb (bad) sbb repnz std ret xchg push aaa push aas (bad) lahf inc lret dec int lods jle dec pop dec mov pushf ret ljmp insl add dec movsl daa aas loope xchg jbe daa inc jae xchg pop xchg lret and fnop mov imul mov clc mov mov inc sub dec ja scas std dec add jp push pop push mov xor test inc clc mov into jl (bad) or icebp mov and push iret ss lret cmp sub xchg jmp mov mov inc jnp inc cmp push ds adc sub outsb mov ret sarl notb jmp mov rolb fidivrl jmp add cmc scas pop lcall and sub xchg mov mov or cltd sbb push clc xchg outsl orl push jns pop cmpsl aas (bad) stc repnz mov add push mov add mov outsb (bad) push es lea ja sarb mov xchg xor pop lds stos jmp mov jae mov int3 pop dec pop push sub bound inc (bad) mov loop sub incb lods dec (bad) and jnp xor mov jb inc xchg (bad) fisttp outsb (bad) dec ret loope andb or aam loop inc push daa addb inc inc stos push cmp inc (bad) lahf (bad) jbe scas add xor inc xchg add fbld lock inc xor pop mov lret push adc gs adcl sub mov mov dec push xor mov bound ret or dec test lods pop sub cmpl and sahf push inc or dec push in addr16 (bad) std mov ret add jno inc in cmc roll push xor jo (bad) mov jae les pop ja inc inc mov clc daa mov stos jae and pusha lock shrl lods lret stos movsl cmp mov dec xchg jp pop ret push arpl sub rcr out jmp les lret inc jl mov mov idiv inc int3 mov push int xor inc pusha pop test lods fwait stos pop aas xorb xlat cmp sti xchg dec cmpsb or pushw cmp stos add fildll repnz and mov lcall aas sbbl jecxz fldt dec stos (bad) cmpsl push bound cmp (bad) out scas stos inc out out push sub push and cs out cmpsl lock dec or adc mov pop inc loopne roll sub push fwait inc (bad) xchg pop ret ror cmp mov sti test fs ds int bound inc sahf (bad) lock fisub out mov out mov scas pop out add and fsubs lret aam cmpsl mov jl and push dec and cmp mov (bad) xor add out test leave out fiadd pop sub clc add sub and idivb or (bad) out pop xor repz xor nop fimull sti pop jecxz sbb inc add inc fild dec popf scas in pop mov icebp (bad) popa enter push ds push popf xor sub inc push lods push test in into sbb les pop (bad) mov and jecxz lret pop sbb (bad) push and adc ret ljmp and xor in push lock addr16 repz shlb outsl cmpsb dec daa pop xor fidivrl (bad) dec mov out out inc cld push fwait mov mov mov xor call push in and jo andl push inc ret je xchg inc push push das inc iret push lock lahf add mov lea jle mov js inc dec std inc int cwtl dec pop inc cmp adc jns xor and imul xchg out xor loopne add sbb rcl (bad) ds inc xchg jae fnsave add inc dec mov mov pusha inc andl jge inc pmaddwd orl and rcll xor mov movl es sti inc jae icebp rcrl leave (bad) sahf out (bad) int repnz xchg inc dec adc test xchg clc repz leave and arpl and xor sbb adc inc xchg (bad) and xchg ror sbb push mov pop mov inc lods int3 sbb cwtl jmp sbb lds push cmc mov mov jmp mov ss pop cmp cmpsl popa inc aaa dec iret jl jecxz sub cmp pop das xor dec js sbb xchg cmp xchg inc adc cmc outsb (bad) pop dec inc jmp mov sbb jo pop push fild cmc out stos sti add stos inc in mov neg out enter les aas cli inc cmpsb (bad) lahf cmp push mov inc lock psadbw pop cmp sbb add inc add pop arpl sti popa inc icebp leave dec movsl pop int3 inc call pop cld fimul daa jge mov pusha mov inc mov cltd fwait sti cs cmp mov and inc inc gs mov adcl push aas pop test xchg arpl mov nop int mov in dec fidivl push cwtl push icebp test jnp loop ret jp dec mov mov lods cwtl lea mov leave mov lret inc mov xor jb jbe mov sub sub out xor inc cmp fmuls notl inc stos les jns icebp aam push mov xlat jne pop dec sub inc repnz sub xchg std jle add stos dec xor jne jecxz sub roll insl (bad) adc sbb int3 notl add dec cmp dec mov hlt test push (bad) ja lock cs enter popf sub xchg sub sbb out cmc adc cmp pop inc in push test insl les xchg jge mov xchg lds loopne insl lret pop stc or adcl xchg add xchg pop enter insb xchg movsl (bad) jmp xor push addr16 mov shll inc push lahf cmc scas sub sub lods mov add jo mov sbb adc mov adc out (bad) fsubrl mov mov dec dec adc ret dec out fdivrl insl jno loope popa adc (bad) mov std xchg or add cmp inc jmp out test fwait lods popf out sub inc push dec mov movsl dec mov inc inc in lahf dec fdivs orl jmp outsl xchg mov int cwtl test mov pusha sbb ret jmp lds dec jns cmpl and xchg clc or and xor push imulb push inc add push xchg inc movsl cmpsl mov and cmp test cltd dec xor push (bad) cmp add add loopne inc sub sub rcrb gs push or mov and sahf xchg sbb mov lock xchg roll loopne mov mov push or dec cmp cmpsl aas xor call (bad) loopne mov mov lcall or stos mov add repnz iret sbbl stos stos xchg xor or loopne dec or jnp lea cltd adc adc scas lds adc push icebp inc xchg movl ret xchg and repz in and icebp (bad) out (bad) ja cmp sub and shl push test (bad) pop sahf dec jge xchg sub adc sbb cmpsl mov lret push adc sub push fsubrs rol cmp imul add push (bad) inc inc scas dec push inc adc inc mov inc or jbe fbstp mov xchg out lret outsb mov (bad) push xchg cmp aad dec jecxz pop fistpll or pop xchg (bad) xor stos mov fsts sub repnz mov mov and add jb push pop fsubr or lock push ret clc shl ds stos pop (bad) jae (bad) out popf sbb outsl push xor pushw popa sub dec sti mov dec iret (bad) jns jno xor repnz nop dec scas js pop mov ret imul sti daa sub shrb outsb fild sti shrl pop dec sub daa adc imul ret cmp pop or cmp xor push add mov sub push or cli push mov inc sub out mov add cmp pop lds xchg pop xchg mov daa xchg inc dec loope test out adc test imul loop push je sub popf inc nop (bad) or mov inc int3 pusha cmp into call cmp sarb hlt cld adc stos sti cmpsb lock or daa inc pusha (bad) (bad) jo dec (bad) out or ljmp in sub and mov lret mov lret cmp mov adcl mov cli (bad) sahf fsubrl sub and lds pop into mov jae sub push rolb dec fbld cmpsb scas cmp dec imul dec pop int3 or into stos loop pop xchg add rorl sub faddl std pop test jno jne inc gs mov movsl and scas aad frstor lds shll mov aas popf inc mov inc std inc dec mov mov pushw jl jge out fs cld push insl sarl sbb lods inc push cwtl jl pop repz cld inc out gs jo es ret test mov clc inc cmpsb inc sub cmp xor xor aaa or arpl jnp (bad) push mov inc aaa fcmovu icebp adc inc lock les mov jp pop fstpt add (bad) in adc mov and pop mov fiadd dec pusha ret adc cmp inc aas fldenv jo xor aam mov push mov setae dec sub repnz ret cs inc call scas mov int enter sbb push sahf addl hlt push into fwait jns or inc push shr outsl inc jge cld ss cmp mov push bound cmpsb loopne add or inc ret or jno inc pop jmp and out sahf add test lock idivb inc add repnz ret adc add push jo inc mov pop fcoml scas adc mov imul xor mov dec imul inc into scas popf enter mov rcll push clc in jae out scas cwtl inc dec sbb fldl (bad) pushf inc inc xor sub add adc push je lods inc sbb push loopne push dec mov mov jg popf scas dec mov lret xchg rcll push arpl inc adc roll ja dec pop cmc scas movsl mov inc push test cmpsb sti pop rolb rcr mov xchg je pop insb popa sbb adc add push or imul (bad) lret out and push or push push inc outsl ret inc push mov popl fwait lods ljmp dec fsubr xchg std adc inc inc mov cmpsl out inc (bad) mov pop aaa pop ficompl jmp xchg and sbb add jg,pt enter push and int3 mov dec mov pop cs sbb mov push lods push enter cltd or push les adc mov mov loopne jnp stos fidivl fnop dec out adc cmp lret mov dec mov imul scas rolb ss dec inc inc loopne add aam (bad) xor test icebp andb dec arpl inc popa add movsb pusha mov inc (bad) lcall mov xchg pushl adc jb (bad) insb push js dec xor inc inc ss out dec cli (bad) ds into ret cmpl add and inc dec rcrl in pop fcomps jmp cmp adc add xchg mov add jg mov xorl inc xlat sub aaa (bad) pop lds es xor mov push push mov dec repz inc loop ja cmpsb pop mov or inc stos mov sbb inc jae (bad) pushf shlb dec inc test mov push or push inc imul fldl push push (bad) je jp inc add cmp scas out ret inc (bad) lock inc sbb or jne inc and mov ds and inc pop and jmp ds mov pusha mov clc sub mov bound lock adc rolb push das (bad) inc add aad inc mov mov enter imul dec inc mov cmp or pop mov inc outsl cmp fwait pop push cmp or test pop sbb pop inc (bad) repz add inc sbb pusha add or add or je cmpsb pop push fidivl xor nop inc insl xlat sub or rorb inc inc fldl (bad) out out mov jl and bound insl sub cmpsb mov test fadds xchg jmp popa inc jecxz sbb mov fildl mov shl cld pop fadd incl imul inc sbb inc out insl push inc repz xchg mov add rorb incb mov test push roll and jl mov or decb ds dec xor sbb mov cltd paddsb inc cmpsl cmp rcll dec push movsb mov jmp enter insb ficompl pop and add cmp mov int3 cltd testl out movsb xor iret sub lods inc inc mov pop lahf in pop arpl jb notl aaa dec jmp ret jne mov ret inc loope mov in js push movb fs lret movsl or or jae lret sbb les int3 xor sub gs pushf dec and (bad) shl add mov xlat popf jne mov (bad) adc cmp imul lcall int3 cmp inc add adc daa pusha in jecxz rol inc popl ja lcall dec mov je loope clc in jb inc sbb ret jecxz (bad) out loopew clc or cmp xor ljmp sub inc mov adc inc (bad) (bad) fdivrl jae das push push or out cmp aad dec pop lock ret sti loope add lcall xchg jecxz,pn cltd or loop sbb incl push (bad) popf repnz inc ret jo jmp inc and decb jnp cmpsb jle inc sub sub push imul imul inc fwait gs inc mov out je inc xor sarl in lret sti nop sub dec add outsl xor add xchg aad sbb xchg repz xchg jle fdivs push aam cld and jge pusha add fcomps loopne push daa mov add xchg xchg xor mov add fsts rol add sub adc jmp roll stos xor pop xchg mov and push inc pop push inc sahf rorb pop (bad) push stos add inc ja shlb outsb lea sarb je and sbb mov pop push sbb loopne (bad) xor jae push cmp adc cmp or ljmp mov mov loope ljmp dec movl daa pop aaa adc push aaa fisttp aas int3 fsubrs stc sbb push push popf or fisubr scas les fldcw sbb std inc leave jnp mov out aas mov jmp push adc inc adc pushf icebp jno sub aas push jb inc aaa xchg or cmp adcl mov lods (bad) cmp imul das mov xchg and int3 cwtl in (bad) int3 mov xor sub daa inc sbb inc push (bad) jno int3 mov repnz jb jns and stc imul (bad) data16 pushf fild inc jns dec popa mov pop imul sbb in inc xchg mov lret and pop (bad) xor hlt mov jg mov adc cmpl ret pop add dec inc pop call mov ror rcr out das add pop clc int3 inc push inc rcrl enter inc rol pop popa cld push (bad) iret ret lret faddl cmc adc push inc xchg sbb inc push jmp cld outsl mov stos mov or ret call jecxz loope mov (bad) xor dec lea mov mov rcl adcl pop inc inc int3 cmpsl sbb inc in imul sbb xor aam dec imul inc inc cmc sub dec mov jb rcll xor in lret mov xchg adc scas adc mov and pop in movsb add insb push jg and push das dec push cmp inc out hlt pop sbb dec js sti push or pop inc lahf imul inc push scas push sub ret fwait inc or ret lcall mov push cmpsw or mov ds push adc popf inc outsb inc mov inc pusha jns test jge inc test cwtl cmp mov inc orb in cwtl in imul movsl mov cmpsb hlt sub xor aas sti mov rol pop std lea pop (bad) inc fimull mov loop fcoms aam sbb sar lret fs xchg lcall ljmp xchg inc in lcall and inc pop add cli pop cmp out scas inc mov pushf hlt jno jbe fisttpl mov movl dec jg push ret pop call sub in inc cwtl fwait das popf inc cmp jmp push incl inc xchg int3 mov sub dec out xchg xchg mov inc adc cld outsl mov test xchg pop sub (bad) sar inc xor cmp push inc stos sub dec mov sbb arpl aam clc xchg xchg aaa into sub pop add adc or ret mov call les lock stc js std inc jg pop mov stos inc mov lret inc (bad) pop dec pop ret and pop jne mov clc push lds mov cmp leave insl inc test pop fcomps add and jecxz out xchg inc mov sub inc movsl aas xchg data16 cmp bound add ret popa inc mov adcl and mov or push jbe pop jno mov and dec sbb push jecxz sub inc imul adc xchg adc popf aad or icebp adc cmp jb movsl call ret jp repnz mov and push jmp pop cmp test cmp or prefetch or aam out cld dec sub add addl ja mov add loope in cmp iret sbb fiadd sub int inc (bad) or mov push lahf adc xchg xor jb cmp push pusha outsb inc fisttpll movsb test rclb or jl insl push push push icebp lret dec mov shrd inc add (bad) pop dec xchg test inc sahf and mov inc daa jle jl call addr16 sub push fldl sbb xor xchg scas aad sub sub cmp ljmp repz ror lds pop cmp push dec mov enter into movups test addb cwtl int3 jge mov mov jmp and push outsb push push mov mov loopne sti test gs in mov xor sbb lds in and jmp dec ja dec dec add andl cmp cs outsb add daa xchg (bad) js add icebp scas and pusha fxch (bad) cltd sbb pop add cmc (bad) lret sti cmp ret aad aam sub cltd mov decb hlt and mov arpl cld push or xchg repnz mov xor cmp adc fmull xor in mov repnz sub pusha lock dec dec cmc lahf add (bad) out mov clc ret fwait mov pop pop pusha pop or lcall inc fidivrl or mov add sahf repz movsb mov fistl and addr16 xchg hlt rcl inc lods xlat call add xchg out xor rolb pushf pop sub enter inc iret adc sub fadds stc inc or mov push pop imul xor (bad) cmp inc pop out push scas popf inc sub sub orl cltd mov or call std xor movsb (bad) ret leave dec jnp scas lock jae pop in sub lret (bad) or inc adc fs inc mov pop aad cmpb push fwait negb inc mov pop mov jge mov pop sbb mulb repz cli sti cld dec lods gs mov xchg jg dec jno das fiaddl xor stos lds cmp xchg into xchg cmpsb aaa fisttpl push sub inc jne or (bad) xchg sbb imul sbb int sub mov lea cmpsb sbb mov dec cmp ret jecxz test cmp pop fwait inc xchg ret mov mov mov ret outsb dec imul std das xor xchg imul pusha movsb in inc or inc cmp (bad) imulb fwait out adc dec ret or (bad) scas xchg adc add ror add movsl insl mov inc jl das jo fisttpll pushf aad jmp rorl (bad) ss mov and mov push popa inc jbe adc or jnp inc call mov xchg inc in inc mov add inc adc inc xchg fwait push decb inc pusha and and aad pushl adc fbld dec sbb arpl push add mov mov cmp pop pop insb add mov fiaddl adc xor fcmovbe in xchg sbb int3 cmp ficom and inc push jo outsb mov dec push mov push loop mov sub imul aad in dec scas lret out sahf pop sti cli pop fimul sub cmpsb sbb inc inc jbe stos js andl (bad) jmp push insb out inc iret scas es aas add cwtl lret ds cli sub inc mov add fistp repz sub jle repz or les rclb pop test iret negl jg enter push subl mov push pop push mov add bound push add pop lahf inc add sti pop out jnp inc xchg outsl loope sbb mov mov dec pushf addr16 icebp and aas shlb mov inc pop mov mov or sti sub mov stos (bad) cmp inc outsb xchg mov mov dec push out decl add aas sbb cmc ss scas inc lret das in lcall xor add cmc test push or insl shll pop dec outsb aas sub jns pop imul in add ror add (bad) jmp dec es sub pop sti test xlat dec adc xor dec divl test les leave cmp or and mov mov lock or inc or insb sub dec and dec xchg push int imulb sub neg stos sti fisub insl faddl je mov dec jl icebp adc push dec aaa pushf imul bound pop aaa fndisi(8087 inc pop sbb repnz push pushl ljmp popf ja cmpsl cmp inc sti lahf mov (bad) (bad) icebp (bad) std push inc (bad) jecxz outsb idivl dec dec push xor fwait leave cmp cli cmp inc mov adc popa lds cmpsb mov out mov jmp repnz sti mov nop mov stos push xchg out mov mov test mov sahf push ret push sub cmp push pop adc adc loopne cmp dec sub ljmp shrl and sub addr16 fbstp or sub and sbb cmp inc repz inc mov inc js mov xor mov aam and je sbb push mov jne adc sbb mov mov cmp loopne nop xor inc push inc inc mov pop in or lods dec ficompl mov fistl mov mov sbb xchg sarl loope icebp xor stc inc cmp jle mov test das loopne xorl lahf lods cmp inc sbb loopne jae jg or pop out push xchg dec inc pop push nop mov inc fcompl sti subl movsl inc xor jge js lds jecxz daa mov xlat jno jns sub add inc jo ds xchg pxor xchg add movsb pop push add into popa push sti daa adc sub mov (bad) fildl pop rcll inc jae leave jo pop sbb enter mov adc lret cltd into lock push dec sub sbb jo ja stos sub movsb cmpsb sub cvtps2pi fsubrs dec hlt add dec shrb mov mov mov add cmpsl mov icebp (bad) cmp pusha out xchg hlt lahf arpl or xchg mov ret stos mov les (bad) sti call push movsb idivl mov sahf ds mov sub sbb push div stos mov or scas add jo xchg mov sub mov dec jle adc adc sahf mov rcrl cmp (bad) je xor (bad) ror pusha cmpsb inc mov add xchg lret sahf pushf ret mov push cmp repnz in movsl aaa jge inc xchg cmp cwtl ror bound outsb test std cmp insl and int push scas sub aas mov js rep lea xlat (bad) cli aad jmp (bad) sarb sahf int3 cwtl xchg punpckhbw lret and fistpl divl addb pop pushf pop scas stos mov divl sbb dec add test repz pop lds lahf push arpl cmpsl in push mov sbb push repz les (bad) out xchg cli sahf inc divl test inc fist decb fstps jae (bad) fldenv dec into sti jno xor jbe mov push xchg lea fchs jle (bad) out outsl pushf xchg shrl ret or cmp jbe inc xchg sub sbb addr16 lock pop xchg adc mov dec cmp and nop adc std mov mov pop arpl push (bad) movsb mov inc sarb push fiadd leave es dec rcr cmp cmp inc or add xor scas test adc dec cmp lock xor and mov dec clc push mov lock adc insl push fcoms push cmc cwtl lret mov adc movb (bad) xchg jp inc cmp lods loop lds lock nop inc pusha lods inc cmp adc and cmp movsb pop or loopne sub hlt cmp mov test mov aad add xor mov and push aaa pop in pop outsb daa in lcall adc lcall xchg adc jmp mov repz pop popf mov inc mov push iret shlb les aam imul enter dec push and jne pop addr16 in cli mov and dec inc rolb inc sub lret jno xchg cld add out xor into push xchg sbb xor dec lods xlat cli xor dec test pop inc lea mov fs add mov dec push data16 lcall cli les es push cwtl pop test adc jne cs cmpsb das adc cwtl push cmp dec ret and pminub or lcall popa sub mov inc or sbb and and call (bad) aad call (bad) testl push in mov (bad) sahf cwtl dec dec push sbb and into adc sub inc outsl test mov in shlb inc push jno and push mov in and push test loopne (bad) sub cwtl paddq mov push lcall das inc andl icebp inc shll xchg cmp xor push lret sbb clc lods xor mov pop aas hlt inc inc leave (bad) cmp sbb jno xchg jno jb push aam and dec pop pusha test mov adc pop inc mov jno jle mov dec push fdivr andl inc mov daa clc dec inc dec xchg push adc push cs prefetcht0 add cmp jge xchg (bad) push rcll (bad) cmp xor rorl shlb in sub cwtl jb lcall out add inc dec mov xor nop push pop xchg sti shl cli mov push outsl sbb sbb mov fbstp mov (bad) sub sub xchg clc imul sarl mov rorb (bad) dec mov cmp dec lret xlat pop gs jmp daa fstpl addl pusha insl ret xor adc scas push call xchg fsubs inc out pop inc fldenv (bad) fild iret in fsubr cmp cli inc je adc les addr16 sub mov mov ret cltd mov pop cmpl aad adc cli inc push lods jns lods and in dec (bad) cmp mov shl cs jmp sub dec in cltd es les xchg jl es mov jae lods in les aaa mov dec xor fucomip mov cmp insb jg inc (bad) cs xchg mov sub jmp sub das aas adc test push mov mov scas inc stos jp aas xchg imul mov fs popa inc push lahf mov dec (bad) (bad) dec ret cmp push stc cs mov and arpl inc push inc ret popa inc rcl mov sbb inc (bad) xorl dec adcl inc mov pop push adc nop ret push rcrb cmp test lock add pop jo inc pop mov xchg or jle std sub je cli dec xchg sbb sub movsl pusha mov inc rcrl mov rcll fwait outsl das dec inc scas jbe popf fldl mov ljmp fwait in xchg das cmp dec inc add xor cmp push call push cwtl sarb pop and jo xchg mov adc fadd lahf aaa stos enter sbbb mov cmpsb mov xor inc adc sarl popa push sbb enter inc shll push ja cmp bound fwait pop enter pop mov jnp push add outsl into and ljmp lea push int3 xchg fcoms ficomp cmpsb jmp add and pop aad adc pop sub push pop rcrl cmc pop loop jp xchg xchg push lds mov dec xor and fimull out inc jle cmpsl hlt mov xor ss xlat or (bad) int3 mov inc cli or jmp sti mov rorb out mov das inc hlt xchg mov lods mov inc repnz inc cmp lea fldcw or mov jmp in cmpsb fdivrs cmp xor push xchg xchg push rclb or dec mov mov push lods dec (bad) fnsave rcl inc xchg jmp test mov dec pop cli sub dec inc mov stc sti dec std cmp push rorb js and hlt and add xor xchg lock sahf movsb sub es inc test push out fsubrp xchg stos adc mov mov in sub sarb add clc sbb pop mov inc mov adc test (bad) (bad) je fbld dec inc xchg mov adc and hlt jno inc inc xchg (bad) mov jge and jle dec push fildll addl stos xor inc mov stos into out mov outsl pop out inc inc inc fwait std sbb push jg sub adc inc pop and inc pop lret sub inc cmp loope xchg out inc push xchg inc jne fnstcw sbb hlt add cltd mov xchg push ret dec cmp jno sti and arpl out fild jl inc lcall clc outsb in pop adc mov nop mov and jge jae lods dec sbb ja inc rorl adc int3 addr16 scas inc movsl push rorb aas out call dec inc in into addr16 pop iret jne int3 mov leave dec sub pop jnp enter mov inc pop (bad) xor push (bad) ret dec aaa cld mov inc sub add in inc fstps into pop xchg leave mov rorb insb lods ss jb inc sbb inc pop mov push xchg faddl lock es neg ret jecxz jbe xchg mov unpckhps or dec cmc xlat jecxz mov push imul pusha dec jno mov xchg outsl or into jp pop lods test dec cmp jmp enter sbb inc cld sub jne addr16 js mov out xchg xor add sbb cmpsb outsl xchg enter xor jmp jae flds dec (bad) sbb stos ja int add test xor sub sbb inc inc aam out test pusha add xchg loopne xchg addr16 iret inc pop lret (bad) out jecxz mov push bound rolb repz ja lds jge xchg jae and push repnz mov jmp imul inc mov (bad) xor insb stos pop push incl icebp dec repz daa popf sub test cmp sub addr16 icebp std push scas dec or lds and repz leave pop mov ret paddsw add jg pop push xor pop and mov bound xor xor (bad) roll outsl adc or ds lods out pop push bound out jnp dec adc inc mov xor cmp cltd cmp sbb stc jmp outsl int cmp mov les shl outsl mov fwait imul pop imul inc push sarb insb or sbb lcall xor cmp xor (bad) mov xchg xor or xlat push das push test mov (bad) lret fadds cld mov jp inc dec sbb cmp cmp push and push xor mov mov imul dec ret int mov out loope xchg and mov (bad) jmp call mov cli jge jne jp or push outsb scas sub jo dec rcll fisubr mov sbb cmp rolb cmp mov fbld inc sti iret divb adc cmp inc dec stos lods dec roll xor mov orl test adc inc jne pop push and rorb out inc and jecxz cwtl repz xor std inc pushf imull test xor or jmp arpl inc test inc inc (bad) pop movups lea push mov adc lret inc sbb cmp bound push push inc mov or les inc sub fsubr cli sbb nop cmp ret out push andl pop into psadbw adc ret fdivs xor rclb imul loopne popl leave inc insb xchg rclb mov mov das inc or inc mov xchg sti repz out sbb fisttpl cmp and lret cltd inc pop xchg loope (bad) sub leave (bad) sub inc std daa cmp inc ljmp push inc mov xchg divb imul fmuls jg mov lods inc and dec mov test lret fs sub inc into pusha stos rorl cmp jl xchg addb mov xor push add sbb mov cmp in fistpll sub push fiadd fcmovnbe pop sub movsl push and mov inc cmp or in incb cmc popl mov dec and adc arpl xor faddl mov sub xchg roll sub xchg hlt les adc mov movb lcall or lret mov into pushf jae std sub insb arpl aad dec push or out push jae sarb pop mov or jne mov sub ret and repz push xor loopne inc inc rcll jb addl xchg mov cmpsl add cmp push inc int3 into hlt jmp push inc cs lea inc jmp xchg insl popa lret xlat out andl es loope adc jnp mov inc xor add push ss out xor stc loopne inc mov ret ret or cld adc xchg sbb ret out or lret (bad) rolb add mov addr16 and fwait lret sti (bad) jne cmp cmpsl aad pop pop adc and cltd push fsubs cmp adc ficom xchg add fisub out dec xchg mov xchg and lock dec in sub push test aad stos (bad) lds out inc mov shll and aad mov xchg ds cmpsb mov push inc fnsave jecxz xchg adc pop dec sub iret jbe dec mov mov (bad) pop testb out xchg or fidivl jne mov sub sub cmpsb sbb (bad) jno push push sahf out shrl aas inc and inc out jae cltd xor repz lds mov dec jnp fwait pusha rcll inc into fldl xchg inc or rolb bound enter jle inc mov pop lds or ja mov adc xor mov and jg lcall ds add xor imul jae inc (bad) fwait inc icebp adc pop add aaa cmp repz push mov movl test mov cld push dec xor dec pop ret dec in pop cltd mov test stos cli or sbb pop jbe js ljmp add or push lock add inc xor jo arpl pushf enter out pop cmp jg test jg mov inc or out push xchg adc rorl dec add test push mov rolb adc das repnz fiadd roll dec fs mov add jp push mov xchg lods mov inc iret xchg fcmove (bad) inc in inc aam outsb ret pop xchg in xchg and push xchg ror jecxz lods cmc sahf inc cltd sub add bound dec pop insb fwait leave jg inc stos mov push push inc outsb stos jnp adc addl push ficomp rorl inc ds push mov mov ficoml scas daa stc inc sysexit aaa push aas es sbb test push (bad) (bad) pop movsb inc rcrb sub jl mov arpl pop call add sub fsts ret xchg inc sti dec mov cmp outsb cwtl inc dec test sbb iret xchg adc xor xlat mov mov jmp aaa mov push adc add aas sub inc imul inc adc sub pusha subb pop jbe inc cmp imul or sub stc orl cmpsl mov or adc jle in dec xlat inc mov out mov rolb gs cmp in and inc loop insl push (bad) push in dec xlat inc pusha stos das pushaw je inc (bad) loopne lret inc dec loope jne push mov adc xchg mov cli lret insb clc jg mov imul add inc cmova pop push out in inc pusha in jbe fiaddl xor shlb jcxz pop inc ret pop mov aad test popf add adc (bad) push std js mov xor jb cmp negb and push inc adc movsl xor ds repz dec push cs cmp mov add inc add repnz sub lret add xchg out stos dec jle fwait daa ss add fdiv (bad) jp repnz call enter jae dec (bad) or mov bound stos inc test xchg sub aam cmc cs cli adc pop pop jae arpl mov inc xor pop dec jo mov mov xchg adc lds stos (bad) mov fisubr xchg sub pusha hlt lea xor ret push xchg mov pop dec xor arpl loopne jge push fcomp pop dec dec inc mov movsl bound (bad) imul cmp add ss sub icebp lret stc test adc lds hlt xchg repnz rclb add out xchg xchg fistp mov sbb inc cmp xchg pop rcll aas js sbb dec pusha movsl xchg mov sti inc cmpsl sahf mov (bad) cmp dec leave fstpt push add push push addr16 dec bound lods in dec jmp inc fxam lock cmc bound (bad) mov test mov sub pop int inc mov mov pop les std dec xchg inc (bad) imul dec pop pop fdivr mov sub arpl inc mov push push arpl movsl xchg pop cmp push sti test xchg dec dec xchg stos and push inc je insl xchg jecxz jmp mov jmp je rorb shll dec pop xor mov rorb mov xor lods inc mov mov out loopne mov jmp jecxz pop push mov repz mov cltd inc (bad) dec loop cli add es add negb jle addl cmpsl pop and or add (bad) loope or inc popa ret or inc (bad) out xchg or stos repz dec or pop inc mov pop loop mov (bad) xlat loopne pop inc popa (bad) and inc add inc std gs sub data16 addr16 mov inc movsb inc mov gs or pop repnz inc lahf push push inc xor inc (bad) daa cmp add cmpsl or inc push dec mov (bad) pop push jge xchg mov dec sbb pop dec and mov or pop ret cmp enter add out xchg xor outsl inc stc stos (bad) mov adc sub dec xor in mov or stos xlat lods mov inc movsb sti (bad) fldenv (bad) mov pop pushf inc (bad) cmc pop add imul inc scas mov and xor xchg clc dec mov out insl push jae jge,pn mov cmp cld mov sub outsb inc mov leave dec repz out push pushf and (bad) (bad) dec rolb sbb movhps stos jnp push mov shll inc or mov add fbld repz xchg mov sbb push das cmp xor cli mov push stos pop and mov sub leave imul es sbb push pop push xchg cmp cmp fdivrs icebp push mov sub sbb (bad) inc movb cmp push sub repz add mov dec insl negb movsb mov lods jecxz and mov dec add lds xchg mov aad push dec adc imul xchg fldl ret dec and mov ret inc jbe add mov pop addl sub mov inc cwtl mov xchg les ljmp call mov xchg mov repnz dec adc pop rorl jge jbe,pn and push jmp repnz iret aam fadds mov pop inc or add and mov xchg xchg mov int3 stc inc or loope or outsl sbb flds add mov xor pop pop stos push pop mov (bad) or jl outsb ret pop sti dec into call and xor sarb dec inc insl lock mov xchg jo lcall mov lods mov js jns scas out ret xchg shl in dec (bad) (bad) mov popa inc or sub movsb push dec mov (bad) icebp (bad) push fs mov jmp jecxz inc add cmp arpl inc loope pop pop cli push inc sbb adc inc gs push pop cmpsl mov cmp (bad) je les aaa sub shll shrl dec shrl inc repz in je aas sbb cmp push incb jo lds js lcall scas insl fdivs jnp jg repz pop xchg hlt xor inc lods cwtl in addl dec out mov xor dec xor cmp stos enter scas add in outsb push jns imul rol lods xchg mov cmp mov and jmp cmp pusha mov xchg push pop nop aad add adc add sbb and dec ret and mov test mov and dec movsl inc xor pusha xor jne iret dec mov (bad) incl je (bad) jmp dec fsubrl cmp cli dec das add aad fild sub add enter les pop push (bad) fistpl adcb outsl mov cmpsl insb loopne int3 sbb jbe inc pop pop push xchg dec nop lret lret fstpl rcl fsubl out inc push pushw out lret inc sub dec mov mov add inc xchg rolb movsb push inc jle push cli dec (bad) cmp jp pop test outsb xlat jb or add mov rolb push cmpsb pusha pop aas gs rclb push lret cltd aaa inc in pop mov push imul xor rorl inc dec test rcrb enter jbe dec movsl idivb push or inc mov xor das jne mov sbb inc js push popa ret dec cmc dec dec stos (bad) call pop sti adc dec xchg out (bad) push ds std inc loop pop xchg xchg rcl loop jecxz adc inc and dec push add cs adc dec lcall push (bad) fcomi std aaa inc add mov mov and jae mov out fwait scas jo xchg mov inc movsl in outsl mov shlb mov idivb inc fwait lods (bad) push fistpl cmp cmp dec les sub movsb push clc and pusha push add push xor sub sbb stos scas test aad bound cltd dec mov xor sub xchg sarb mov in adc fsubrl cmp push adc loopne xchg inc aad sbb xchg (bad) out (bad) loop pop inc in inc cwtl mov inc popa inc out sahf adc sti loop (bad) (bad) mov jb dec dec outsb ret lock inc nop (bad) push inc or jge jmp push adc cmp les lret adc andl xor movsb jecxz cmp (bad) out inc push cmpsl cmc mov xor inc (bad) or pop mov inc and inc add loopne push add xor adc inc shrl enter jl fiadd or xchg ret mov inc push ss jne js jb pushw btr inc dec dec jnp inc jp addl and add loopne inc xor inc andb xlat das sbb sbb lahf (bad) rolb push lea ret push xchg int3 out jns xchg mov (bad) cmp and add fcmovnbe dec call dec rorb mov dec adc or dec add cmp mov mov pop inc inc xchg repnz insb push cwtl arpl lea repnz xchg in adc cmp leave rep cmp push int3 repnz ds (bad) jb sub addr16 sub add imul mov (bad) outsl inc add insb jae mov ret test mov daa sbb incl push daa cmc int3 or and push cltd xor pop rorl jb sub add rcll push stc inc inc lcall sub add mov mov mov xchg adc addr16 inc outsl and or enter xchg nop sbb imul add incl stos loope pmulhw xchg xor mov test movzbl out push popa sub (bad) xor jge (bad) dec xchg xchg cmc push mov sbb fidiv or lahf or rcll cmpsb (bad) pop xchg push repnz ret (bad) push ret cs inc setne mov inc adc loope inc popf fsubl pop lods mov xlat sub mov inc xchg rcll mov inc add imul inc mov pop pop subl xor mov fcomip sub push inc stc or (bad) leave pushf lods ret lahf repz rcrb mov mov push inc js sbb sahf inc (bad) hlt nop jmp inc inc cmp fmull cmp fidivrl lcall cmp mov jo dec push hlt xor mov (bad) aad dec das stc dec fidivrl jl addr16 nop mov mov cmp popa cwtl sub pop orl push stc lea xchg (bad) inc aaa fsubl iret sahf jl ret popa pop jge aad les outsl push or jg adc stos mov out inc (bad) (bad) mov cld cmp into les pop addr16 cs (bad) sub lock lret push inc movsb stc idiv test xchg stos adc sbb jl daa push push jmp iret addb lret test cmp jae jnp jmp fsubs xchg or int3 xor cmp inc fdivrs mov sub out clc mov fcoms sar dec mov mov add push lea mov add sbb rorl pop cmp outsb sbb mov pop sub xchg sbb mov cmp lret xchg fbld sub cmp dec sub add in lret pushf stos inc dec pop or test mov scas (bad) stos xchg fsubs insb ss imul lahf add sub adc cwtl nop icebp xchg sbb mov mov cmpsb fucomi insl lahf cwtl add jo scas push (bad) adc popa gs push sub dec mov lea or fdivs arpl mov insl insl sti inc (bad) pushl jp lods into mov cmpsl fwait mov adc sub or popf inc (bad) cld pop je leave sub pop dec or add test xor ficom pop xor inc lret leave in inc imul push push sub mov add or cmp push fmull jg sbb into jle adc push xchg loop ret sahf (bad) dec notb push mov adcl fidivrl sbb lods sbb lea xchg mov inc cwtl or popf or inc jnp mov mov pop mov push lahf data16 and mov scas out add mov push dec cmp cmpsl hlt fimull into mov sub xor lahf jno mov sub xchg add sbb pop mov inc cmp mov or mov push lcall push mov sub dec add mov mov fwait pop or cmp and loop orl pop in inc fldl2e mov mov xor inc pop adc pop icebp and xor jno cmp xor lea sub js sahf dec push xchg test cmpsl xchg mov aad push fimul jae push bound pop arpl inc rolb addr16 cmp lods and or ficom out inc repz inc cmp pusha and xor adc adc mov int les push inc inc ret dec and dec dec lds inc loope cmp mov out sti inc sbb add sub pop int (bad) add adc test lea and jne adc sbb jae sbb dec or pop lds dec add mov mov dec in add cltd dec dec popf scas cmp mov jae xor jle cmp mov dec ret mov iret loopne xor jo movl test push dec and xchg incb out push dec rcr push fs lret movsbl out jbe outsl mov iret xchg xchg xchg add mov adc lds iret inc int3 fmuls imul fdivp fcoml aaa lret xlat mov xrelease sub or mov popf loope cmpl outsl test push add test fisttp stc pop movsb icebp outsb or (bad) testb stc int3 cmp test pop std js add mov push jnp imul dec outsb and int3 inc outsl pushf sub mov sub lcall sub sbb out ja xlat jmp daa inc cs loopne xchg jl mov xchg mov add pop stos push mov mov imul cmp fs jge lea xor mov sbb add inc inc push test sbb (bad) mov dec pop mov arpl inc outsl lret xor xor or mov sbb jg fs add je xor jo sbb addr16 jmp lahf push fsubrl add mov dec push cli mov push dec stos bound fmuls jae xchg fisubrl int3 inc dec dec mov fisttpll sbb jge sbb stos xchg push pop xchg insb sub xor or in pushl mov cmp sub mov stos pop adc ss jmp sbb jmp xchg rcll into lret push sub mov xor addr16 inc ds lcall test pop push xor pusha (bad) scas push xchg mov fsubrs cld inc test sbb popf xchg mov mov cmp inc (bad) mov test xor ljmp fxch mov fs insl into ficomp dec rcrl dec cwtl sti lea jbe lds add fadds nop dec cwtl add adc push mov push js stos xchg pop ss stos test pop inc sub inc scas ret fstps inc inc inc frstor cli or mov fmul and ret jo mov inc pop lret mov bound (bad) mov mov push (bad) cli add idivl add xor jl mov mov cmp pop sahf inc mov push sti mov in (bad) or cmp inc push pop test push xor add inc in add fdivs mov sub out cmp add es clc roll sub inc inc mov jnp xchg push inc cmpsb sbb sbb adc test mov push std xchg cmp adc outsl stos and in pop cli pop inc aas cmpsb setbe mov mov in inc nop ljmp pop pop mov cs lcall inc mov pop push ds into fdivrs repz mov jecxz sub add outsl sbb dec pushf fldenv dec les or (bad) xor dec jo cmpsl pop jns std add call gs pop cmpsl xlat out icebp mov xor cmc push jns insl jp push mov or add lods sbb cltd add pop add cmp xor xchg sahf fwait repnz push scas xchg std dec or imul arpl sub xor push shrl push xorl test fs or arpl in mov fildl imul dec dec cmp inc push and mov fs imul push daa lcall repnz mov add xor icebp jno cs jmp int int3 mov dec push or inc jmp push adc sub jnp mov je ljmp mov lds es pop loopne or jnp push (bad) push data16 arpl std mov add (bad) pop inc cmp outsl cmpsb push inc pushf lcall test inc cmpsb clc push scas lret outsl scas xchg inc mov repnz sub rorb cltd stos call sub cli xchg loopne or sub icebp dec mov in jecxz jne push test insb adc jge xor push mov rolb sbb sub jbe push xchg pop cwtl in les jne xlat in jne fwait dec dec sub (bad) testb (bad) enter inc jo insb dec popa (bad) adc pop in shr lods cwtl mov push jno aaa in inc or dec mov mov cmp mov sbb sub (bad) clc inc lret mov addr16 mov scas sti andb sub sahf leave cmc mov mov add inc sti mov sub scas mov iret sub adc push xchg adc dec loop rcrl jecxz fcompl fsubrl data16 shl lahf into inc pop stc xor inc mov fstpl lcall daa insl inc ja dec dec sub mov push dec xor lret ss nop jnp pushf push stc push dec incb inc stos xchg (bad) fisubr sub push inc cwtl or in xchg pop (bad) cmp nop jb push stc mov outsb push xor in mov (bad) push sub xchg pop push sbb fildl and push into sbb adc mov cs or stos push xchg add add pop sub and int cmp mov std std pop and jae pop dec lret stos mov xchg inc cmp test arpl popf fs push xor aam das add movsb popa and cld (bad) fnsave inc mov cwtl divl xor fdivrs popa test xor adc out adc test mov repz inc loope (bad) shl add test mov stos imul sbbb fisubr mov jl pop loope sub pushf aas pop pop push test mov sub jne cmpsb cmpsb retw inc fldcw mov fs pop insl outsl jne sbb inc pop lds lahf out fwait (bad) mov mov xor inc divb inc das inc mov popa and cwtl push inc scas ss and imul cs je jecxz cltd out out (bad) idiv mov ret and push push sbb inc (bad) sbb pop xor (bad) dec test or add lea aas shll jnp imul cld sub mov sahf hlt adc fdivrl push push and inc (bad) sarb imul mov loop mov pop and push aas inc gs lods push movsb push daa inc cmpsl outsb mov mov dec mov jb inc jecxz (bad) into (bad) fisubr sub inc out mov jns cmp xor dec ret ds pop rolb push and cld aas out cmp rcr dec inc (bad) lret xchg rolb pusha dec pop in mov test in fcoms sub jmp incb imul inc (bad) scas mov push jb xchg jae xor sub xchg mov xor jns outsb aaa pop sub xor jno lea cmp pop cmc and loop mov pop xor ret lods dec les hlt jnp inc (bad) bnd decb stos or arpl fbstp clc inc inc pushf pop ret cmp ljmp sub outsb sub xor cmp jg jmp daa push jmp inc stos mov and push out inc test in jne mov jg jle adc pusha iret push stos je lock mov add stos mov mov inc lds add sbb dec push movsl (bad) ret mov mov push fsubs dec pop lods mov jle (bad) push orl jl xchg xor push test (bad) ret adc push out xchg sti pop cmovae jbe xor add movsb in mov add add mov inc cli or (bad) mov xchg push in mov pusha stos fldl imul js in sub int ficom cmp inc mov add jmp adc in fiaddl pop loopne cmp ss jnp xchg outsb fisubrl inc aam push pop pop pop adc cmp jmp lods shl into inc test je ds inc out movsl push jns push cmpsl clc inc pop aam pushf sub aam or and test ret cmpsl lea xor mov incl stos dec pop and pop push cmpsl call push and pop push and cltd fisubrl or in les pop insb xchg jno insl aas jl pop bound cmp repz pop dec lods mov lods sbb push mov dec out orl mov scas dec fistpl mov dec sbb inc xchg push aas and pop ja rclb in sub xchg jecxz mov gs add dec test daa neg mov and inc pop outsl inc scas mov out stos dec in jbe out jb cmpsb cmp sti xor add inc dec clc addr16 fisub cmpl into jbe jge mov aaa insl das nop rcll ja out dec (bad) and lds daa lods (bad) in enter ss dec dec adc and push xchg inc clc inc xchg push inc test bound mov pop cltd xchg mov inc mov fiadd jae inc xchg lea mov inc inc ret loop stc jecxz add dec into add mov jo aad pop mov fcomps out xor ja mov pop pop dec pop inc xor or test arpl pop jecxz and out (bad) rolb jae shlb stos insl fdivrl lahf push push jnp pop inc jmp fistpl cs arpl bound add jno push lds out pop jmp jne (bad) (bad) jns lahf repz cmpsb sti sbb into int3 add imul or sub mov and push jb inc orl loope push xchg mov or sub sbb jl stos xor inc cmpsb (bad) aas push inc add mov push mov mov push scas fmull dec ret mov inc rolb rorb movsl arpl jecxz sbb jbe push mov mov iret mov adc ss and shll call data16 lods nop sarl adc ss cmp pop addr16 mov inc out xchg xchg les inc pop sub imulb hlt nop pop popf scas cs aad pop lret inc sbb stos inc add add push sub mov and movsb stos adc xor lret dec sub jle repz ret (bad) mov cmp xor pusha mov jno mov int fldt lea aam add jb and pushf push push addl mov jae sub js and add push jbe jmp icebp lcall scas jecxz dec bound loopne xchg xor pop mov outsl sbb dec (bad) push sbb dec add cmp mov inc inc jg rcr push mov cli push and pushf andl push inc xor int cmpsl je and push out dec clc or sbb add test mov sti loope in xor or inc inc jnp cmp dec inc jp pop sub (bad) (bad) int fwait adcl lcall mov push jl xchg xchg xor jle fisubrl pop imul pop xchg repz repnz adc adc (bad) mov pop outsl jnp cmp mov (bad) sahf (bad) push je jle push ss nop mov pop push xor and arpl pop pop push xchg ret ror sbb aaa in pusha mov out push outsb mov and out xchg in fwait mov les sahf mov fnstcw push (bad) aam inc push add dec sub inc mov sub and mov dec inc cwtl aaa sbb push inc cld (bad) aad out (bad) cmc jg,pn enter inc out pop popf arpl les xor add adc clc adc out in push sub scas stos (bad) mov in add stos add lret inc cs mov or dec sub pop add rcrl add in ss dec sahf scas pop shrl stos push cmp mov ror test sub dec mov movl add inc lret adc or insl jp mov cmpsb inc lret mov sbb scas jne dec xchg into fiadd daa pop sub in inc popf dec test jo stos inc push pop sub imul test lcall pop movsb rcrb cmp push dec cmpsl mov (bad) inc call dec mov rorl jl cmp out std daa dec push sub mov sub mov cmp push dec imul lret lret xchg or cmp jae fcmove adc sub in sbb jo fcom mov popf popf mov mov dec fildll sub pop popa ds inc jbe imul jae repz cmp in inc cmpsb or daa pushf dec xor mov jmp pop stos (bad) mov inc repz and leave (bad) sti push inc adc imul xor dec lea test jle pop int3 push push aas cmp popa jbe mov lea pop mov (bad) rolb repz outsb jge pop rolb cmc pop dec or aaa dec mov mov inc int3 lahf adc bound inc vmovdqu cmp cmp cmp fsubrp pop pushf lret fiaddl popf jecxz jbe ret sub adc cmpsl mov cmp or jle jge jp repz (bad) push dec gs int3 inc jns ljmp fwait cmp loop hlt dec mov out dec outsl bound mov push xchg xchg xor rep inc or xchg push inc dec sbb or faddl jle xchg lea ja xchg xor cmc lds xchg movl xlat inc into xchg add icebp test cmp (bad) cmp inc adc outsb add jge fcomps xor inc les into add mov in sti mov or pop xor inc mov sbb xlat sbb ja push inc int3 dec sub inc gs mov dec cmp and es inc imul lcall jle (bad) ja inc xchg xchg cwtl inc stos or xchg rcl out test adc dec adc xchg cmp dec inc lret test mov decl fisttpll inc stos mov sbb aad xchg inc mov imul sbb scas inc mov push inc sahf and clc xchg pusha (bad) mov (bad) arpl jb pushf xchg icebp imul dec aam and (bad) sub enter lods loopne lret cwtl sub pushf dec jo,pt and jmp sub insb inc cmp jae stos nop fcompl dec int3 sub sbb push add (bad) aas inc test push lods sbb daa loope nop lds xor cld outsb fbld sub sbbb inc ljmp dec pop repnz add xchg xchg decl les xchg ffreep ret dec out xchg mov jo cmp fs test xor or xlat cmpsl cs int3 std imul mov xor rolb mov das je inc fisubl in jge (bad) cltd adc cs inc std leave daa inc cltd sub jp xor jge ja repnz mov out xor fcmovne enter out pop push or les arpl imul dec push mov ret and dec cmp sbb dec int3 das sub cmp push xchg fiaddl dec mov mov arpl loopne sti xor inc fisubl mov xchg cmp dec or cmpsl popa lret mov sub out xchg and xchg jp mov inc int les insl clc inc cmp mov push mov popa jb xor jmp pop mov push lcall xor (bad) cmp fnstcw mov imull pop mov xor or out and sub xchg lds jo and inc mov xor mov add add int fidivl mov aas ret or pop dec push inc jle push icebp pop sub sub shr cld jnp and cli xchg mov outsb jecxz stos inc sub in mov mov cmc push hlt inc jmp or push insl fwait push icebp push imul into or ja inc daa out (bad) mov sar mov js in inc popa cltd ret mov sbb insl inc sub ja inc lock into out nop aad out cmpsl inc popf arpl cmpsb inc cmp inc js sub pop add push sarb inc inc and inc out cmpsl hlt jae int dec (bad) stc ret and aaa inc push insb out (bad) testb push jg fscale inc sbb int nop imul cmpsl inc mov les push stos sub inc jae jecxz ror inc and cld pop xor mov fsubrl xchg mov adc js outsl pop inc in mov stc ret cwtl fiaddl jbe inc je and pop push sbb incb inc les lcall inc and jl loopne or inc icebp aaa je outsb ret jae push aad arpl je sub dec pop or fmull scas inc mov insb mov outsl xchg lahf decb mov aam sbb inc std shlb inc (bad) or das gs stos pop dec cmpsl xchg cmc jo mov (bad) ljmp dec cmp xchg adc lods mov (bad) ljmp inc pop mov inc pop push mov pusha sarb or scas xor pop sahf pop std jns (bad) repz adc imul sahf repnz imul out xchg and push xlat xor inc xor xor and das pop jo (bad) addr16 inc dec xchg push (bad) dec and mov inc jo iret xchg sahf mov mov mov fwait cmpsb push outsl xchg adc fimull pop jle loop jnp adc movb cmpsb sarl and loop jae cmp sti cwtl and and fildl pop call cmp rolb pop js xchg xchg repz dec out aaa dec push xchg and push inc adc inc sub sbb clc xchg sbb mov shr push andl cmp ret ja pop fdiv adc repz xchg sahf mov psraw inc gs inc mov mov outsb add stos xor xchg stos jp dec cmp pop jl inc cltd cmpsl push mov inc in popf dec pop leave cwtl orl xor int3 inc xor mov fsub inc imul (bad) repnz inc and jp (bad) adc (bad) movsb mov mov std adc or lahf adc mov xorl dec ss cmp cmp popf sub mov je pop xchg dec (bad) pop mov mov xchg pop sbb mov xchg into popa (bad) dec cli jmp popf repz outsl and jns mov leave popa xchg fistpll xor add add arpl in inc push xchg pop inc xchg cmp and jae adc sbb jg inc mov add inc mov imul add insl add jno jb mov rolb aas or add cmp inc add adc imul cmpsb leave jne jo inc in xchg shrl imul loop ja out add dec loope fsubl inc sbb xchg into mov and inc fmull test push orl inc push pop (bad) jae enter cli dec jle inc mov dec faddl inc das (bad) adc xchg sub fstpt mov add or push push scas jbe xchg mov sub adc inc jl nop incl push cmp addr16 outsl xchg sbb inc rclb xchg popa sub ss xchg fxch ret add bound pushf lods add repz (bad) sti inc mov dec bound jge nop insl js inc push cmp push les fs xor arpl imul or add data16 mov sbb adc jg push adc jge push and inc outsl ss pop stos lcall dec push pop cmp je inc out (bad) lret (bad) std cmpsl in push cmovae rcr push mov lcall int3 inc mov push mov cmp ds clc mov sar dec fidivrl js aas jae xchg (bad) decb sarb inc mov push pop dec notb pop pop addr16 and sub jecxz jns ljmp jg push pop mov (bad) insl mov ds das fisttp add sub aam jnp push and pop cmpsb adc inc ret sub lcall sub dec sub test lea pop lret mov jb fs into int3 fsubl inc dec sti movsl (bad) loop or mov push xor xlat outsb insl mov lods dec jo and pop scas xchg aaa dec in in fnstcw loop (bad) shrl jle insl cwtl in push call sbb arpl inc loop push or sbb (bad) cmp xchg add sub lret out pop insl xchg outsb scas mov push test xor cmc jo push pop addl inc imulb mov shlb jmp mov jb mov outsl sub leave js dec scas cmp jns test push (bad) cltd int3 xlat mov imul xchg xor xchg cmpsl shl mov inc mov rclb test jbe jle cmpsl mov inc bound cld jnp imul mov mov arpl or cmp ss xor aaa dec or nop inc mov bound sbb sbb cmp mov lock and fmull into jno hlt inc mov mov xor pop pop inc add stos push add inc repz mov push cwtl inc int3 stos inc test js lahf and pusha movsl mov loopne add int enter dec js ficom sbb inc out inc call pop rorl inc inc setbe bound bound cmpw push mov dec gs xor ret mov icebp xor dec js jl add inc jge test cmp mov or sub inc add mov out inc mov (bad) repz mov inc xchg int3 or push add sub inc push test inc aad push iret das add push arpl inc pop loopne scas imulb arpl and test jbe (bad) adc adc out imul (bad) mov in or repnz pop dec clc dec imul lret inc sbb xor mov dec insb aaa ret cmp out std loopne imul add add lahf (bad) xor insl sub mov push sbb fmuls scas mov push xchg xchg into in xlat sub push xchg dec lret inc stc cmp sbb jecxz (bad) repnz aaa add xor in cmp (bad) xchg sub and or (bad) outsl mov enter lods out sbb shrl test loopne scas std mov cmp fsubrs and pop (bad) int3 clc dec push fdiv adc movsb jl push xor scas inc jnp add in test mov dec test jae xor and mov adcb repnz mov dec xor mov pop inc mov fsubp cmc int3 loopne in xor mov cmpsb push push in mov inc (bad) mov fistpl and mov repnz inc or rclb pop pop (bad) dec pop dec (bad) icebp mov mov sub lret inc aad sbb fdivs cmp lea insl mov inc lods (bad) dec subb lret daa jle cld mov ljmp orl push add movsl loope insl aaa dec stos pop mov sub xor and lods (bad) fiaddl imul xchg test inc mulb pop or loopne ret imul jne push inc inc mov addl inc mov sub repz call outsb jge or or push cwtl inc sti jg stc out jmp inc or jno inc ret (bad) mov or jmp jecxz loope arpl jo mov nop mov mov jns (bad) adc add cld pop cmp or adc cmp jo clc decb subl icebp repnz stos daa inc inc test ret add imulb jg jno xchg sti stos cli mov inc loop test cmc add push fsubrs daa ret jg icebp lcall imull inc iret (bad) mov es xchg fcoms ss xchg cmp rorl jecxz pop dec inc jge fistpll imul add inc or xlat in jb mov cmpsb jb jmp cmp sbb xor mov nop inc repnz fwait mov jp mov jmp lret je aas inc scas stos sbb lret test popf nop inc fwait stos sub push rcl ss pop (bad) lods adcl testb out ret pop imul push cmc fwait sub pop stos shrl inc clc arpl xor inc sub add aaa into fist push sub push lret cmp adc cmp mov or push inc ret mov add test ss add or dec push mov ss movsb sub add inc sub outsl jnp add dec (bad) mov lret sbb out into mov (bad) fldl aad outsl lcall xchg or psubusb mov (bad) stc inc lret mov mov lock xchg or aas int cmp sbb rclb mov adc xlat or inc stos mov and lret mov push (bad) xchg mov inc push (bad) lea dec pop jmp ror or push fwait dec fisubl xchg bound rcll adc xchg inc pop (bad) pushf sahf mov lock xor inc inc outsb jbe dec add jnp mov repnz test pop push xchg dec push mov enter cmp jg cmpsb call mov mov ret mov test mov lock faddp xchg add or inc in into pop repz fisubl or dec cmp lods xor pushf addb dec push sub es dec xchg xchg xchg cwtl mov movsb xchg sti jecxz insl (bad) jno cmpsb dec imul add outsl sahf fldt pop dec push clc out xchg arpl ret jp stos insl pushf jo mov push ficom mov out pop lods or in test sbb arpl fisttpl (bad) fadds (bad) fildll or dec inc push cmpsb push movups and jne enter inc fimul xor push (bad) inc int popf cli xchg xchg push push mov in xchg in inc and pop inc stos imul inc in xor outsl push sbb cmp (bad) test pop inc jb nop sti cmp mov loop mov inc scas jne or pop sbbb inc mov fbld addr16 shl pop jne jns mov out mov enter mov ja dec mov cmpsl mov dec cs subl add inc (bad) sbb stc inc mov lds sahf nop pop mov xchg mov push pop mov inc add add sub xor dec das pop insl jnp xor jae scas inc ret cmp imul push mov push lock cmp add dec mov inc daa out movsl xchg les jo push popf arpl gs cmp (bad) call and inc lahf out call lahf inc insb stc add ret mov inc sub push mov int3 cmp push jns pop xchg jle or mov push inc (bad) fidiv jle movsb jg rclb jl std pop sbb loopne cmc (bad) cld dec hlt xchg xor fcoml sub leave fldt std jne lcall inc sbb ds movsl icebp (bad) mov xchg inc xchg xor mov or cmp leave xlat sub int push or push push ficoml ret adc mov (bad) rcl and mov mov mov and inc inc fbld scas mov inc popl mov xchg mov pusha or sub iret scas lds mov push cmpsb out jbe dec aad sbb xor mov (bad) fildl mov mov in pop lret inc xor fscale dec outsb (bad) rcrl and adc inc or push xchg sbb cld inc inc sub sbb jge daa popa orl xchg ljmp jne inc inc bound cmpsb mov ret inc inc cs jg mulb daa push test aad imul xchg stos mov lahf flds and mov js mov or inc lcall das cmp dec push dec xor inc sti leave in mov imul mov (bad) (bad) dec push scas ss jmp inc nop je mov loopne ret cmp or sbb aas add ja mov add inc pop std push and inc add inc pusha mov test add in mov xchg movsb test push cmc sbb fidivl mov std jle lcall pop push jno jne (bad) fiaddl sub dec jg stc lds jg or ret (bad) ljmp out mov daa adc popa inc jne inc fadds cmp xor push ret inc xchg or pop mov cmpl sar push (bad) adc fs cmp jae aad das jg jmp xchg sub inc push add fldenv and xchg cmpsb and shrl das mov sbb inc add loop out mull sbb rcll ja adc gs push ret and inc test js or pop sub call cmc cld or repz pop or cmp dec mov incl inc push mov in lds inc ja push inc popa push je jg scas inc data16 cmpsl mov add leave inc mov test jns in pop out or sub adc inc f2xm1 add and and ret xchg lods inc mov sub jl jge stc pop sti mov inc mov mov (bad) xchg aam repz add inc and lret loopne rorl push add mov jae dec lea ret xor or or mov dec jp push push mov pop pop leave pushf and push adc rclb fcompl bound lret lret int3 dec fstpt push lods pop imul pusha in repz xchg cli rep jl lret mov imul add inc icebp mov (bad) ret fldcw adcl jg xchg push negb hlt out adc or mov jnp inc push or insb popf loopne aam dec mov in pop mov dec or jecxz xorl or pop inc fsubrs inc sub sub xchg push xchg pop outsb andnps (bad) xor sub sbbl push (bad) stos jg adc xchg mov lods call (bad) xchg jecxz testb dec out (bad) add sbb lret (bad) xor daa fmull repz sub add addl xor inc in lret fsubrs xchg inc movzbl ret push push push cmp cmp pop outsb pop inc test mov dec push test cmp test gs aaa std pop mov stos jecxz jle pop fimull pop dec adc loop or add inc adc ss inc push mov push xor insl enter xor and clc lds in js pop fbstp add adc cwtl inc pop into fs inc cmpsl (bad) bnd mov rcr incl mov lea mov inc lea pop xor add call out mov xor jo icebp clc and jbe fildl and mov inc mov dec (bad) xchg dec xlat inc sub pop lods fdiv rcrb push jb dec jnp pusha test add xchg jg and dec stos dec mov dec add fstps ret jle,pn incl ljmp adc xchg aad fistpll cmp jo dec and out popf or jo daa pop int3 inc push js stos mov or inc andl cmpsl sar sbb inc mov cmp push pop dec cmp (bad) cltd push int inc pushf clc cmpsl ret (bad) push negb movsl dec pop xor bound xchg jge lret dec push (bad) xchg inc xchg inc sar or sub pop in xchg in push push and cli lret or cmp xor sbb mov in inc scas jg add mov roll inc dec fnstenv xchg jmp push cmp pop popf sub xchg pusha xor pusha test aaa xor shlb aas bound js mov movsb out jge jns mov inc jo or inc mov xor jb push outsl push imull sbb pop dec inc fwait xchg icebp in ret cmp xor pop lods out imul mov (bad) mov sbb enter pop (bad) (bad) insb jo and mov jns bound lea aas add mov jnp mov pop push (bad) iret xor lcall sub negb sub mov inc mov rcl out (bad) xlat in movsl (bad) mov into pop inc adc push fist pop fs add add xchg pop shrb movsb and xchg jne add push xchg out and inc jp jae cmpsl adc stc cmp add nop in xor xchg cmp xor arpl cltd lret or rcll out inc sbb sub out sub jbe insb or mov stos push inc (bad) outsb inc adcl push adc push jg inc or (bad) push jnp cli arpl dec enter fwait (bad) fstl mov fisttpll adc add xor dec outsl aam mov push pusha mov add cmp xchg out std mov inc mov mov xchg lock jnp mov jne jae loop dec out testb test xor dec jbe cmp or inc inc fistpl push push inc outsb scas in (bad) cmp ret inc (bad) loop cmp imul xor iret jg pop jo push (bad) cmpsb cli inc jae mov inc mov fidivr cmc mov cwtl mov (bad) xchg repnz mov pop push (bad) mov adc mov inc push inc in xor cmp les insb js inc je inc ds or sbb int3 mov inc adc dec mov mov imul popf sti ljmp ret push dec xchg jmp arpl fcmovne (bad) dec (bad) jl fild jle sbb (bad) ljmp rorb faddp sbb icebp add (bad) jno inc mov inc sbb mov inc lds ja mov stos add xor fidivl and ljmp leave fistpll mov aad std addr16 ret push cmp jae jl inc inc xor pop jns cmp inc aaa out jle icebp mov lods push inc movl jno (bad) jae cmp out movsb jge sbb mov inc or stos jp and pop pop adc mov inc jle and fnstsw add sbb gs aam out push arpl sbb andl mov inc decl dec cltd stc push pop les das jmp mov xchg xor sub push cli stos push ret jp imull inc and inc xchg popa xor andl cli cmc (bad) ret (bad) sub inc adc movsl stc out mov lods or sbb pop adc aas insl inc dec clc or outsb dec and push rol jb sbb add jae push jmp adc pop (bad) jle inc scas xor xchg pop cld push xchg (bad) mov xchg addb data16 and decl iret push mov cmpsb stc leave jbe xchg lea addr16 in or cwtl pop fidivrl pop pop lret push xchg xlat insb dec sub rcl ret loope sub stc aas xchg mov movsb sub mov clc fwait loopne fdivr out dec (bad) cmpsb out inc adc fsubrs jb popa mov shrl mov rorl repz enter fild and imul inc incl inc xchg mov pusha imul push fsubl sbb aam dec pop sub dec inc mov cmp ffree cmp test in inc or xor loop xchg xlat inc xlat sub fsubrp jo in aas faddl movsb ret jp out inc add testb gs xchg inc push aaa push lea lock (bad) out movsl inc out loopne xchg inc fnop jl push pushf sbb jno je inc sbb cmp rolb lahf icebp xchg inc lds push insb mov pop and sti adc cltd andb xchg push inc add bound lock in pop adc or mov inc (bad) pop push (bad) daa xor scas xchg mov jo jbe repz cmp push scas jae cmp push mov enter lods cmp and ds in xchg test (bad) ljmp addr16 aad adc pusha add inc inc inc push mov xor aaa add pop push repz daa daa push push adc aaa inc in lock mov inc xchg movsl popf out xchg dec (bad) popa xchg push mov pop pop aas dec (bad) ljmp inc stc sub push xchg rolb pop sbb cmp push push pcmpgtb sub clc ret pop lock and inc adc arpl (bad) out insb stc dec sub mov cmp aaa jno sbb mov mov dec dec popa (bad) or jns call les cmp xchg (bad) and and neg stos es xchg xor int sbb iret repz or (bad) movl push test sysexit andb sbb inc push (bad) dec jb orb inc dec rolb jle bound add push fbstp jb sbb xor jo rclb push mov add sub das outsl xchg inc (bad) sbb dec sub pop and shl sbb mov cmp les jnp (bad) pusha popf fbld add or add cmp sbb mov mov into xor lock and ss or dec jge xchg mov arpl sahf xchg jle imul ficoml scas push mov xchg adc inc ret adc scas sbb outsb inc dec jp push aaa dec pop push mov pop mov aam sbb js out inc add addr16 call cmp jb subl cmc lea jmp pop shll imul pusha clc jl jb lcall xchg inc lret mov add nop xor cwtl les mov clc ret cmp inc out hlt lock adc mov out push inc fmull push add std test add sub inc test negb fcmovnb and dec (bad) loope andb and adc xchg push or mov ljmp lea add dec mov sub fcoml out cmp mov inc hlt bound push stos in add sti mov jl mov das roll xchg mov test dec test hlt dec es mov mov fisub lods cmp in push xor mov andl inc pop push dec pop mov (bad) lea or std ret fwait andl and sbb shll pop dec int3 flds mov jne lahf out xor std ret push xchg daa mov inc inc mov arpl add xchg xor or in mov aam mov jae push dec cmp mov pushf mov popa pop out mov cld inc cmpsl shrb scas lock push sarb mov mov add addr16 fwait loopne inc rcrb in inc dec or mov xlat xchg push aaa and inc mov jge sbb in inc sahf add aas jno stc inc mov xor sbb inc ljmp inc in psubq and push fwait mov dec adc push dec aas mov jecxz dec jno pop add shr cmp jne xor imul mov sub dec outsb loop faddl ss cli jmp shlb jne add mov push inc lods or imull mov dec stc add fdivs mov popa ret mov mov sub inc lret lahf mov repnz (bad) xor inc (bad) dec pop cmp mov mov cmp xor inc insb mov cltd lds (bad) cld jg call xchg add fs inc es pop jg fsubrs adc fs inc jle test rclb jae stc sub add xchg push jo or jb mov aas inc pop sub jge dec pop fwait mov sub sbb sti into arpl mov inc stos pop sub inc (bad) lret jle xor cmpsb das pop add call adc hlt xor addr16 inc sub cmp add pop xchg std dec mov inc loopne lret and es push push inc mov (bad) decb (bad) imul add or add push (bad) xor fisttpll adc aaa push (bad) jnp int3 cli push outsb inc insb ret inc dec jae bound negl cltd inc jne (bad) jmp iret inc add mov pop mov test lret jp lcall pop add loop mov lret orb shrl in inc hlt push dec sub dec xchg mov mov push or stos or repnz add outsl mov xchg movsb inc push dec jne lds adc test jecxz push pusha add les mov loope inc imul xchg dec (bad) cmp cmp lret jnp jbe dec push pop push push mov inc sbb addb xlat cmpl ja dec sbb inc jns push mov push mov cli xor fistpl sarb xchg iret dec hlt inc rorl mov and jecxz cltd fiaddl dec mov lea jae mov push outsl or les aam inc mov inc jge inc leave cmp (bad) cwtl loop cwtl xchg mov imull dec mov repz xchg xchg rorb xchg outsb inc xchg fdivp adc add roll cld sahf inc dec cmp push mov les inc ret clc fwait or imul push pop lea lahf inc gs movsb iret stc outsl jecxz popf in repz push inc je stos inc pop adc out inc nop clc in push ds negb inc push iret jbe fmul and push aas scas insb mov mov sub inc repz mov push xchg add mov aaa xor cmp xor pop rcl mov or sahf or mov insb stos sub xchg dec cmp mov jg jns mov inc xorb pushf (bad) pop cltd inc inc add xchg cmpsl push jmp mov inc pop jp add xor mov dec mov dec jne test xchg sbb cmp mov test mov xor jbe ja push dec xor lahf sub push imull fcmovnu enter loop jae mov add push push lret dec (bad) das inc xor adc dec sbb jp movsl sub bound stos pusha push call loope rcr adc adc insb lods rcl add aas xlat inc and or fisubl cmp push ds push (bad) adc das mov dec test insl inc mov clc xor sub mov in dec and adc sub xchg fimull lds (bad) mov mov and int cmp xlat lods js cmpsl inc jnp sbb push out add and mov pop add cmc mov sahf xchg js pop inc add loop xchg adc jle loope ds les sbb adc addl daa adc stc in and push xchg out ss inc mov insl add dec inc inc sub and loope pop leave (bad) or xchg inc lods sbb xchg (bad) into sahf mov in sub xor and cld mov mov cwtl fimull push xor das loop and xchg pop sbb icebp inc cmp inc or push test dec sbb inc ljmp or pusha pop insb push ja inc scas adc xchg rol call insb iret xchg jmp push inc out hlt add fcmovnu lret movsl and pop cmpsb push mov outsl inc dec ja inc push dec push addr16 outsb cmp xor sar cmpsl ret jmp pop and or pop pop es xchg or mov or add sbb lret dec push pop xchg cmpsb inc mov or pop xchg into aaa dec jae mov bound ret push popa jb inc mov or pushl xor push fmuls aad in daa jnp sub xlat int bound xchg cs jmp jge mov mov int and nop ds inc push out mov mov fs push adc push mov or mov orl imul xchg (bad) in push movsb out ret std push stos int stc ret fcoms mov and add add xchg gs popf jb pop add inc ret mov pushf daa scas inc push push jb and inc pusha and pop jg movsl or scas aas push sub dec pop inc xchg add test xchg shlb dec (bad) mov push fsubrl push or cmp insb fsts lock xor pop or lret xchg movsl mov std push mov stc notb add mov dec shrd (bad) fcomp out scas aaa (bad) pop dec je and out add aas xchg jae jns mov daa jge sub mov enter cmp (bad) pop dec int3 xor cmp outsb and xchg in inc pop mov fs ja repz orl out (bad) dec into aad (bad) (bad) fnstenv ret dec scas xchg inc jns inc stc aad fsubs pop inc or sbb ffreep inc loope clc in cmp test jnp inc lods dec fs cmp cld scas xor addr16 push cmpsw sub (bad) xor inc jg xchg int3 inc push sarl (bad) ret (bad) mov sbb pop popa inc push push jge cmp dec sarl sbb in add inc loop and push inc (bad) aam sti mov lock je push push daa mov push jg shlb cmp stc je xor in push mov (bad) repz xchg lods testl andb mov popa jb in mov fimul bound dec and or inc cmp ja lahf ds lret add shl outsl jbe xor push lcall and and lds mov cmp push sub pop xor stos jg xor cmp into or loope ds out jg arpl add in jne inc cltd lods or std test add dec add adc add mov mov lock mov push sub loopne imul (bad) (bad) dec pop inc addr16 xor lahf dec loopne out mov and rolb xchg mov (bad) add call and pop cmpsl out std inc fild mov sbb (bad) jb test inc and and jae leave mov ja (bad) pop pop adc sub xor and and ljmp lcall mov iret lods add (bad) dec fdiv cltd or or dec push test push xchg mov loop pop xor lods pop push rcl out inc lret dec cmp loop xchg xor std lret lret and add push lds mov jl inc and mov lahf push mov rol jbe add (bad) sti inc jo imul mov inc xchg push push es outsl xchg lahf push shrb push fldl or lahf fsubs sbb inc imul add scas idiv mov out sahf add mov mov cmpsl or xchg fucomi in sub idivl adc pop xor incb jmp inc mov rdtsc in xchg mov add ss arpl movsb in jns mov inc xlat cld or push cmp push rcrl insb inc jne jns nop sub cmp stos adc dec mov inc xor jle ss mov xor mov inc mov or and jne jno es lock dec mov jmp or js (bad) jecxz xor mov iret mov bnd mov xchg arpl mov inc inc inc cwtl sub cld inc (bad) rcr lret fsubl add (bad) bound pop pusha aam mov push add pop xchg insl or inc insl pop push fiadd cwtl cmpsb aas into stc and dec sar or dec jp push in jae xchg sub or scas push stos std (bad) in mov add inc lahf das mov add and and stos fstps cmpsb mov (bad) xor das loop fcmovnu adc mov les int3 xchg arpl sbb add jmp scas (bad) ret cmp dec pop cmpsb xor ja sub sbb nop inc in sbb jno arpl and xchg aam xchg inc sub mov arpl lea xchg pop ljmp add xchg popl inc push test addr16 jae pop outsl call mov sbb mov cs inc jbe,pt lahf aaa in dec inc into pop pop ret mov lea push mov xchg xchg js jp int aas cmpsb cli dec daa or aaa out (bad) hlt fs push dec outsb push mov (bad) stc fisttpl in pop aas les adc outsl shl cmc aaa fwait jmp mov nop inc xchg icebp scas das out mov mov test ret or cwtl mov jb adc outsb xor dec movsb mov lret push aas hlt inc addl pop inc pop hlt add int3 mov shrd cmp (bad) xor inc enter mov mov or inc ljmp add mov (bad) push sub ficomp mov and jae in push ss outsl rcrl sub adc (bad) cmp stc or inc popa iret pop sbb or popa inc jnp lods pop imul loop push xor add ret dec fadds xorl and mov push inc outsl (bad) (bad) or and js mov xor mov stc jns push cmp icebp cmc dec xor lock sub mov lds xchg push stos aad inc mov push push jbe enter xlat push mov inc jno mul stos mov mov mov push (bad) and lahf dec jecxz into dec fst mov addl add jge (bad) repz nop cmpsl inc and mov test ret incl ret push push dec sub or push pop outsb jecxz les andl mov inc xor movl repnz xchg mov pop (bad) xchg cmp faddl loope push (bad) and imul add pop sub int3 (bad) test xchg dec jg aam dec mov rcrl jecxz jle leave pop dec pop in fildl fs (bad) fnstenv scas jl cmpsb push mov sub mov xchg std push push fcomi movsb mov and dec pop mov inc ljmp inc arpl mov icebp add dec pop or jle adc lods ja (bad) cmc (bad) mov iret stos inc lcall das cs xor cmp dec sbb popf xchg test jno mov sbb add inc xchg leave movsb jae dec xchg sbb xlat loope add inc push lcall sub test pop mov and add ret call and js xor pushf aad aam vsubps aam je sbb sub sub lret inc inc loope xchg and inc stc imul xchg (bad) add in sub ja inc sbb daa cmp es jbe ret xor cmpsb mov gs pop push fcmovnbe lahf rolb push xchg push pop xor sbb or (bad) add sbb call (bad) cmp je add fbld ss popf test fidiv (bad) insl fdivl push cmp inc lods (bad) imul push and je dec mov push adc insb cmp out (bad) and divl inc lock mov nop add adc push test sti inc inc and push jne xlat inc sti and inc sbb aas fstpl rorl fwait lock (bad) dec cli dec aas inc inc mov adc xchg loop (bad) pusha loopne lds dec iret gs dec mov call lret mov fildl mov cmpl xchg inc (bad) dec hlt in and pop xchg add cmpsb add cmp cmp addb ficom xbegin pop mov lea je pop mov (bad) cmp dec push cmpsb jle in and mov push add dec jb aad mov js mov in fidivrl pushf cs cmpsb in inc cmpsl cmp lahf add les in and xor xchg inc call jge mov lcall and das out (bad) aas inc jno jns lret or outsl sarl pop lcall aas sub imul test mov or push push adc push mov jecxz ret add cmp (bad) jo enter dec xor pop fs mov xchg pop test jmp push cmp arpl inc or cltd mov sbb mov jnp inc sbb mov movsl repz dec rclb jbe mov stos mov sub (bad) pop push ds fadds (bad) call xchg ljmp pop push scas inc add xchg xchg aaa adc add repz adc sub dec inc sub sti jne inc lahf mov and pop or sub inc outsl mov repz (bad) push xchg lret jbe cmp lea fldl and xchg andb cwtl fldenv int3 lds lret ds pop push fidivr mov (bad) and inc insl in pop aaa nop rol inc add fsubrl mov pop (bad) dec pushf inc jmp add repnz movsl sub inc cmp mov lahf pop cmpsb gs inc cmp cmp inc rorb push stos jo addr16 out inc leave sbb or xor popf pop (bad) dec std xchg repz lret inc sbb xchg sbb ret das jne jns mov cld call pushf sbb mov add adc mov mov cmc push (bad) cs lahf enter int iret xor adc cmpsb inc sbb lcall adc insl or mov insb inc into inc pop mov fwait push pop arpl mov cmp inc sbb or loop sub in es add inc jmp imul sbb repnz jl clc mov dec aas push jge icebp pop mov pop inc stos or sub enter inc les mov sbb out and inc inc fstpl push movsb inc xchg (bad) mov ds pusha inc inc sbb mov (bad) icebp outsb inc xchg cmpsl pop call inc pop sarb jnp add pushf mov mov dec mov roll add jge xchg sbb push mov pop dec cmp xchg xchg es mov int dec pusha mov call inc cltd add push arpl sub hlt mov (bad) push inc daa pop pop inc fbstp aam or and inc sbb pusha inc (bad) pop mov cwtl xor aas dec mov arpl std out dec xor lret cli dec and out xchg imull add xor call loopne fdivrs addr16 sbb (bad) cmp inc push mov mov fsubs dec and lret mov mov push jno inc (bad) push inc int fcmove ret ss and add ds xchg dec jg add int3 cmpl and cmp pop lret hlt loop sbb les sbb xchg sbb (bad) jp mov in sub mov (bad) std arpl aad das ret orl add fwait dec insl imul xlat popa aas xchg push repz sub inc sbb sub xor sbb cmp inc or mov jb xor xor rorb push out inc orb xchg jno xor daa dec pop pop inc dec test sub sbb mov cmpsl ljmp inc (bad) cli jmp jns push test movsl mov pop xchg dec mov bound xor nop push data16 repz inc xor mov pop xchg mov inc cltd or std jge gs (bad) mov icebp add dec cmp lret xor mov xor mov into push mov sti adc jnp (bad) pop jb sbb gs (bad) fstpt adc hlt sarl jb or ret and imul insl jle inc xor xor mov lahf xchg lret jle ret sahf mov or push in sbb icebp je pushf fisttpll test add and push loop mov dec icebp mov and inc pusha sub cwtl ds mov mov xor dec in add movl inc push (bad) je lock sbb inc scas cmp enter inc jmp leave dec sti or in addl xchg ret xchg pop add and idivb pusha sub orb sbb negl repnz mov ret add push les dec call mov mov lock mov sti daa or mov add adc jmp pop out ret dec stos inc mov (bad) mov fldcw scas mov iret mov xchg dec sbb ret adc inc add sub inc add sbb test inc mov (bad) xor fiadd push add inc dec in or jp lea iret mov imul sbb jo jg inc inc and push mov and pop out out inc mov ret jmp cli cmp (bad) mov ret inc arpl mov das out inc inc fcomip xor mov out sub add dec dec ljmp inc std sub lods mov inc xchg dec rorb xchg pop inc xor pop push dec mov int inc sbb add sub inc xor xchg mov popa in inc das pop fldcw orl in ret fidivrl mov ds rcll add insb inc jg add dec lea inc jo or in mov inc adc xchg gs mov mov dec xchg loopne ret or sub mov repz inc cmp inc mov jne testb lock and inc mov les pop add jnp cmp rcrb mov mov lret sahf push inc push lds jb jno gs push dec mov add xor cmp inc inc hlt pop (bad) loope and daa cmp mov cld ret cmp adc inc pop mov push inc popa pop and setne movsb sahf jg add jne inc rcl push jge dec mov in call and out aad push push push in rcrb (bad) mov sbb sub inc fidiv push inc fiaddl add xor ret adc pop les fiaddl push jle mov popf (bad) lock ret push push mov movsb cmpsb in loop xor and and lods ret mull mov repnz inc sub (bad) sub (bad) dec test push push cmp mov lock fldl ret cwtl adc inc std push or popf repz dec aad loop lods adc out xor loop push lods mov imul mov (bad) add repz cmc mov mov add mov pusha int3 ret pop (bad) cmc imul imul mov out jmp out pop dec cmp sub mov jno mov jecxz fwait inc dec mov add mov ja dec jno div vcvtdq2ps sbb sub cld aam push addr16 loop cwtl add cmp sub push arpl test sbb sub pop lods in dec push cmp test jb add mov clc mov mov scas xor insb (bad) repnz push rolb sarb xor fs fbld mov fsubr sbb push aas mov push xchg lock lcall fist ja mov inc and push das fsts cmpsl inc repz adc push xor fiadd inc jecxz addr16 inc add imul testb in in cmp lods push push xchg (bad) insl inc rcr sbb pop pusha cmpsb lods repz mov hlt fmull pop inc and stos ret out out es pop adc xchg aas in leave xlat mov inc mov scas loop dec aaa mov sbb jp ficom inc (bad) inc cs cmp mov jle fistl jp dec and add pop mov dec mov jae mov pop nop mov clc inc mov pop js loope mov push fwait inc dec cmp stos enter adc push clc add and xor inc mov jo cmpsb int3 xchg loop mov push mov sbb xchg repnz jo pop dec jns inc cli jo popa mov xor inc cmpsl pusha push test mov dec inc push rcl xor mov push loop mov mov mov stos inc in mov xlat sbb dec add jmp mov sub dec mov movsl push mov add sar or inc mov jbe (bad) or adc fild sbb push push fadd popf xchg insl scas popa movsl pop test jbe pushf aaa or add ret fwait ret cmp (bad) outsb fnstsw sbb jl add cmpsb decb cmpl mov ret ficompl dec xchg pop imul ret xor cmp jne cmc iret lret nop xlat xor jbe stos in outsb inc imul mov int3 xlat or and add or inc fisttp cmp inc fsubr insb xor jae sti je popf push out inc jg xchg mov repz dec lock jecxz (bad) fadds ss mov ljmp jmp dec mov pop je in or mov shll (bad) (bad) jne adc add inc sbb (bad) jae lods inc dec lock cli scas adc in ffreep iret test jle dec and je cmp push cli adc popf pop mov fcomps cmp std xorl xchg xchg mov (bad) decb cmp jo jno inc pop adc xchg push lcall loope (bad) int3 pop inc cltd inc jle mov cmp cld mov xchg lock inc adcb fmull mov jge or xor fcomps inc ret add adc inc in punpcklbw aad repz inc or lds xchg popa and outsl xchg jae loopne ficompl push (bad) xchg mov mov shlb add cmp sub in aas (bad) (bad) mov inc or cmp push sub xchg ret sub dec sub mov jo,pn push stos lret stos jae jo mov sbb mov xor pop fcom fxch dec inc add mov and inc xor adc and cmp movsl mov or stos fbstp push inc sbb pop adc ret mov (bad) stos lods or int3 push mov sub adc sbb mov push (bad) testb aam out xchg dec sahf and jmp into or inc inc pop cld or std inc pop (bad) stc ds dec add jp jbe sbb push dec xor inc dec sarb outsb xor ret nop jo mov addr16 leave mov inc add pushf outsb loop mov sarb push inc rorb sub int3 ds cli xor mov xchg lods cwtl ret cmp sbb add jne not mov mov movsb mov xchg mov fdivr xchg sub mov pop out mov pop mov or inc sbb outsl add into imul sarl lret mov in inc sub sub jne lea das sub or in std or or cmp andb dec inc pop popa test aaa mov mov inc mov in fwait (bad) fstp je adc ret or dec adc sbb mov pop int stc imul dec push out mov jp inc insl mov popa and push pop lock (bad) ss (bad) dec iret xchg jb pop mov dec pop add loop push inc inc popa jle les rcrb adc and cmp in inc inc or fwait inc out xor xchg mov inc mov pop inc xchg jbe es cmpsl sbb pop into xchg clc mov dec jmp in cmp hlt inc sarb gs (bad) or mov orb mov push arpl enter inc sbb add cmpsb fbstp inc xor cmpl inc mov popa push scas dec mov inc hlt mov cmp dec cmc ljmp insl sub icebp lds negl inc ljmp pop cltd outsb inc testb cmp addr16 jb int test cmp inc shrl dec sbb repz sbb popf ss jecxz btc mov mov mov ret xchg in out jb xor xchg push ret inc xchg dec pop jne add leave popf inc hlt in gs sub ret sub xlat xor loopne mov inc pop out pop dec pop hlt add ret add lahf repz inc pushf and mov mov (bad) das loopne out clc add (bad) out out out mov aaa xor pusha popf add imul jg faddl inc add out add sbb dec lds inc pop fidivrl xor aam adc dec pop aad pop add jmp mov add arpl lock inc sub scas mov addr16 jo lret push sahf (bad) imul mov ds je jb or lods dec mov loop xor js pop out mov fbstp sbb cltd mov jle insl inc nop mov sahf xchg jae insl jg (bad) xlat std sbb mov inc ficoml pop push pop arpl scas inc ret dec push gs addr16 test or push iret xchg (bad) jle dec call jns dec push cmp jecxz and das push inc inc adcl push icebp mov adc dec inc fcom dec test lahf cs je lods (bad) or loope pushf mov stos aam mov addl stc sbb push rcl inc stos mov jno inc aaa (bad) in sahf bnd jno addr16 mov push add mov imul xor addr16 inc dec fnsave ret imul jp pop jge gs push pop jnp dec (bad) out (bad) dec arpl push xor rcrl sbb out mov loopne (bad) push outsl fdivrp xchg test (bad) mov repz into fadds lahf mov xchg aam enter xor add outsb jg es in or mov mov mov mov addb lret pop enter (bad) ficom sub xchg inc popf cmpsb lds scas outsb mov insl popa clc push lea call inc movsb adc jmp cltd pushf call pop sub add fimul push ljmp sub cmpl int3 cltd sbb cmc sbb pop sti or or sbb mov adc dec mov sub adc jae sub dec out sbb (bad) int3 mov pop sub popf push leave stos adc stos pop mov mov dec mov xchg scas add fdivl ljmp gs inc sbb push sub lods rclb sbb sub (bad) adc test inc fsubrs mov mov setae (bad) sbb mov aaa sbb stos int movsl in sub leave inc inc imul sub inc pop adc clc dec mov dec mov int3 sub ficomp xor imul push les lock fistl vmovapd in lea and inc xor lret mov sub sbb and int pop cmc std pop jp inc mov adc mov jle adc add scas out inc mov ds (bad) dec or movsb mov adc loope je out jb test movsb sti inc mov aad mov push lock xor xchg xchg out aaa (bad) mov orl xor lock pop or sub sahf daa out mov inc inc push push (bad) push into mov addb cmp (bad) xor push xchg aas idivl sub xchg sbb scas daa xor loopne aam scas add je or popa dec cmp sbb mov xlat jbe xor unpcklps pop add jmp int3 test sbb mov ss test cmp add cmp sub mov daa stos loop jb aam push les into jae inc cltd sub pop push xchg push pop std stos cmp std lret push scas xchg into aad ss push mov cmpsl dec adc mov sahf sbb cmpl outsb add push gs idivl mov cmp inc jb mov adcl xchg repnz leave pop es fnstcw inc push cmp jge int xlat add xor cmp fsubl decb repz loop and inc scas and sbb xchg inc das xorl (bad) cmp inc test sarl xor push jnp cmp pop adc mov add pop pusha jmp xchg jge mov pop lar push push jae mov stc or inc mov pop (bad) xchg inc add cmp push test sub popa mov ret adcl fs aaa insl xor push dec xor push xchg cmpsl inc add add mov inc pop or and cmp cmp sbb dec out aaa mov sbb std xchg push inc add or rcll cmp mov or in xchg inc or jmp dec bound dec adc sbb ss imul fnop adc inc add pusha jecxz push ja push (bad) adc loope hlt repz inc addr16 les mov mov (bad) lods pop pop imul or xor cltd and mov ret out aad cli push loope inc lds repz dec test inc inc test (bad) addr16 pop mov add inc push adc hlt dec popf dec pop xor xor dec fmull or shll test xchg mov sub inc (bad) mov (bad) sahf inc scas hlt icebp xor xlat sbb inc ror lcall push mov out push pop adc in pop xchg add add xchg adc xchg shl adc es fadds dec push and pushf orb lock xor cmp fidivr sub inc or sti xlat cmpsl lds pop adc testb fwait inc fldl mov or bound out xchg dec imul or jno mov jge jecxz idiv rcr inc ffreep lcall fistl int inc push pusha jbe push cmpb out mov maxps fmuls adc sub add shl scas lods imul inc mov cmc stos hlt loop pop jo push and lea cmp icebp mov cmp xchg scas mov inc inc mov nop hlt add roll lock xor lahf and gs bound cmpsb xchg jmp sbb lods push sub roll imul fs mov adc lret ds into push (bad) mov inc shrb std and lea loop mov popf decl inc negb inc lahf fisubl enter imul (bad) rsqrtps dec sbb and in incb sbb out aam in stos mov outsb xlat out inc adc dec jns sub mov lcall enter ljmp pop repz movsb ret mov fbstp add aas lock dec andl cli jno push into insl or and mov cmpsb mov daa inc dec enter sbb cmp rol sub pusha mov adcl inc cmpsb add mov pop ja pop cmpl jp inc lahf cmc (bad) ret inc mov rolb mov cmp mov data16 lods lcall sub mov jbe roll jp (bad) adc jecxz push xchg pop inc movb sub inc mov push mov sbb outsb mov push add sbb xchg ficomp aam jo adcl sub xchg mov inc (bad) scas js mov inc inc aad mov jnp or fdivrs inc rclb cmp jnp lcall daa int3 xor dec mov pop addr16 nop mov mov mov pop xchg lcall imul cmc push dec push inc xchg ss aad data16 call jnp lds sbb fisttpll inc dec imul in daa sar add stos mov adc stos je into pusha add cmpsl dec push in (bad) inc mov or push mov inc shrl arpl mov cs add inc out xor dec aaa call out xor loop inc xchg jp jb (bad) sbb add cmpsl push aad cmpsb fstl pop lahf sti pop xchg dec rolb jmp inc sbb cmc mov mov cmp push out std inc or hlt ja add adc mov inc adc xor mov fidivl xor cmp xchg sub dec add add loope dec out lahf xor inc fwait cltd scas push push ret popf push jmp mov dec outsb ret sub sub inc out mov jle xchg dec mov inc nop sahf pop lret inc popf jnp push pop ret pop das cmc push loopne cld xor sub out mov push mov mov dec push jbe outsl icebp ret jnp xchg xchg inc xlat lcall sahf pusha and jno (bad) inc inc push fadd cmpsl xor sbb testb xchg inc out or jecxz push and inc aas push mov sub mov push repz inc (bad) movsl and push stos add repz lret mov mov sbb pop idivl rol in inc insl xchg call movb fldt sti or pop pop lcall xor cwtl inc daa pushf int or xor outsl push push cmc push inc fcmovb lea mov dec imul (bad) aaa int xor sub and mov jo mov aaa (bad) out inc dec mov jp inc out pop lret sub or sbb dec and shr flds es xchg iret and fnsave mov aad inc add mov (bad) cmp mov dec sub jns mov and fimul jge rolb mov dec xor inc push pop mov xor inc testb dec pop push inc sub and into dec fnstcw popf cmpsb inc cwtl push xor sarl pop (bad) jae pop push pop test jb cltd pop inc xlat dec mov push or add (bad) mov push sbb inc loop mov and or addr16 push les mov stos xor ja lea push int shrl loop andl fild std push int xchg add ljmp inc mov xchg xor add and movsb add outsb mov mov (bad) (bad) push mov into mov jae dec push jecxz stos push (bad) jl into mov sti push inc pop mov sbb jne cmp or pop xor loope in mov ret aam pop inc pop mov sub or imul lds adcl pop inc fsub cmp out test lcall xor sbb push arpl sub mov out incl and int3 cltd in ret push cmp jl leave lret fldenv (bad) fs cmp (bad) cmp inc lock lret or inc xchg mov or sub in inc jmp dec dec pushf arpl inc int3 (bad) sub push adc sahf cmp mov shll (bad) dec movsl outsl aad int aaa push addb pop dec mov jg gs jne ret clc add sti mov push xchg not add fistl pop inc stc ljmp cmc sub mov mov hlt push scas rolb mov aaa fidivrl jmp pop incl pop adc hlt adcl inc lahf sub pop hlt fdivp inc inc scas scas ret push daa mov mov and lcall and inc mov dec mov push push mov in add xchg fwait inc mov xchg out push mov je add enter push push cwtl inc (bad) imul fs sbb mov dec mov inc sbbl push mov add lahf cmc repz fmuls dec inc and (bad) shrl mov inc mov (bad) xchg sub ja pop addr16 push icebp inc call cmp clc insl (bad) xchg (bad) ja push les popa in test imul fdivl out jecxz inc mov jmp dec jb test inc sbb out repnz inc scas rol mov loopne push inc sbb adc inc rolb das pop mov dec push xor mov fisttpl sbb imulb add loope and repz push inc test jle fisubl inc inc push repz pop inc imul mov sbb inc add push (bad) pop jo out rolb jnp xlat add (bad) imul mov pop adc mov in test cld add fcomps enter lahf es and and (bad) rclb incl inc dec push (bad) jle pop lock push pop insl arpl or sub and inc push pop sbb dec push sub dec push mov add imul push dec movb shll add push push push xor pop jl jnp movsb adc dec (bad) fcomps pop test adc add dec push pop add out cmc ss push fwait lock inc dec jnp push xor fcomps incb inc mov adc inc cmp lret pop movb enter or (bad) jmp push and cmp out inc nop aad cwtl sbb and enter pop add push in jns mov es mov fadds jbe xchg push and or dec (bad) or pop xchg aam push repz dec test and (bad) xor repz inc push lret rcl adc into inc call cli (bad) aaa pop inc popa outsl jbe repnz fldl leave jnp nop test sbb sbb add cld call xlat imul adc mov adc pop pop add nop mov add jb ret inc mov inc xrelease mov shrl hlt mov stos mov sahf sub pop xor inc fwait pop in je inc mov jge rcl loop xor mov hlt jl jge pop add lret jp pop pop ds push repnz (bad) xor xor add outsb jg inc ss iret (bad) in mov out push popf push mov adc adc mov mov pop or gs shrl dec (bad) cmp imul dec movsb xchg sbb dec dec test aam in add imul dec mov xor cltd roll jo sub movl rcl loopne repnz hlt xchg testl adc mov add jmp test xchg and mov cmp dec push ljmp mov cmp pop pop or movsl sub xchg stc mov inc mov (bad) xor inc ret (bad) inc mov add shl pop dec ret mov insl jno inc jg stc enter xor cmpsl icebp add data16 cltd inc cmc movsl repz push rclb pop inc (bad) rcl dec inc sub inc adc adc jge rolb pop fcmovb (bad) nop in out lahf pusha mov data16 dec popl enter test scas xchg pop shlb cmp clc int3 test jecxz dec nop inc push xor mov mov xor inc push and dec sar add push dec push cwtl fmuls call inc (bad) bound lock in jle sbb fisttp orb fldenv xor adc cmp or sub shrb add cmp pop insb int add dec add sbb dec out dec addr16 push pop fidivr sub scas popf cmp lret jno lock mov inc mov mov in hlt adc mov sti jle sub adc and fbld jl or shrl or daa ds inc push fwait sub in xchg add imul (bad) popf addr16 mov cmpsl inc push imul dec in mov dec ret push xor pop imul dec fsubp mov bound sub int jnp inc (bad) scas jns iret add cltd repnz push cmp hlt shll jae or cltd mov inc sbb dec cmp les mov add or push das int3 inc dec imul leave mov test sarb xor push cmpsb nop jle mov add hlt dec cmp dec inc ja,pn and mov repnz mov sti push dec rclb loopne jae jmp inc pusha cmpsl popf fisub jg lds out pop in dec sub sbb (bad) inc lret (bad) sti adc xchg scas sarl int sub enter dec push outsl ds xor adc popa insb inc pop gs (bad) mov inc movsb stos outsl pop and add int pop dec or push fldl add pop mov cld push inc std xlat (bad) cmpsb inc out cmc xor sbb mov jge iret les dec mov lods ja stc and loopne shrb in xor dec pop cmp enter rcl je sub mov inc (bad) int sbb scas pop outsl mov sub test xchg mov orl add addr16 fidivrl (bad) inc aam push push idivl sub mov (bad) out movsb pusha or cmp mov add pop inc add jmp fisubr cmp push call cmp push movsb sbb xor inc (bad) cmc out xchg adc pop jae les into push mov lret divl adc inc xchg dec fwait nop aam leave or cwtl inc lea dec lcall push or rep (bad) scas ss out mov xchg aam mov adc xlat ds mov adc nop fdivs push inc enter pop addr16 clc lret mov std pop fxch inc rclb and loope fsubrl mov dec mov dec mov mov dec dec push scas jl adc sbb std es dec scas push mov aaa roll sbb add mov loop shrb cmp inc jge adc inc sub mov (bad) push sbb sub and inc xchg (bad) out sub push mov sbb pop xor push stos jae flds shrl adc mov adc call push leave cmc sub sub clc pop pop adc rorb push lret (bad) int jb stos fcomip push add out pusha dec mov jmp flds add hlt push stc sub jecxz and mov push popf mov xchg lret in int3 enter pop movb lcall mov or inc dec (bad) fstp int mov jb push xchg sahf dec rcl push cmp pop bnd adc add push das out imul and jle add mov or jo jecxz (bad) shl (bad) call movsl push jae test jp mov inc sub ret imulb dec and testl int3 flds inc push lea ret lcall jbe mov test add clc and add mov cltd int3 inc mov mov cmpsl pop cmp push pop push jl outsb push cmp inc insb mov rcll cli xor fldpi or lea xchg xchg add fcmovne mov inc xchg movsb mov jae sbb mov push dec push gs outsl and cmovs mov or inc in inc add or cmp cmpl jns sbb iret fstpt jmp sub dec ret shr dec ss ds mov in mov mov jae dec pop ret lcall push jmp jb mov inc mov dec mov incl lods ss push scas inc insb js int3 dec cmc gs push out push bound clc insb scas inc outsl std pop inc aad imul data16 jae dec mov pusha roll (bad) push push mov int3 jecxz inc fildl jb packsswb arpl dec inc sub ret cmp push stc lcall stos xor xor mov call mov xchg xchg and xorl je fidivl cmpsb ret (bad) stos sbbb movsl dec lock or popf mov cwtl je es fbstp mov dec ret sbb pop xchg push xchg repnz sub imul jno push sbb decb mov or rorl mov stos push jecxz int3 lret push cmpsl les push jo cmpsb sub dec add sbb int cmpb fsts cmp jl sbb push rcr add mov jge stc xchg in mov mov xchg jmp inc sub lahf inc test into scas (bad) sub xor imul ret jb enter icebp (bad) (bad) mov push and xchg lret das mov pop xlat pop mov add push scas mov test cld and frstor jno and stos lret pop fisttpl xchg ret leave sub stos sti cltd test into aad add cs mov sub mov sbb aam dec out mov mov movsl repnz xchg stos rcll std sub cmp shr sbb xor cmp cmp in leave cmp fs fistpll sbb inc add stos lcall leave (bad) imul inc fcoml jno sub sbb bound fs in xchg mov xlat cmp mov or sahf sti sbb adc pop or dec in aas dec push sub andl mov test lret push xchg mov cmp stos push cwtl cmp loopne in cwtl lcall stos mov add aam shr sbb cmpsb pusha aaa jb mov jo and (bad) adc fiadd ficoml add imull aas dec sahf cmpsl sub dec and sub movsb cmpsb mov push add push cmpsl or bound lret test rcll cmp mov xchg add inc jecxz xchg sub (bad) (bad) dec (bad) jg loop xchg mov leave sbb insb iret cmp mov lea pop outsl mov inc stos jnp hlt cmp push pop mov mov mov mov nop sub push repnz add fcmovnb std dec mov pop mov movsb push repnz ret pop mov xchg or add (bad) ljmp pop (bad) mov pop cmp xchg (bad) call dec cmp xchg pop sub xchg xchg es dec lock (bad) imul je and add or jae outsl popf addl inc mov xchg (bad) xchg push push inc push sub xchg add add scas and or add push jl (bad) or mov cmc mov js mov sub pop fisttpl xchg sub (bad) mov (bad) ss xor fstpt or mov enter sbb cltd icebp fldcw add fnstenv mov sbb xor (bad) ja les roll jmp pop mov push inc fisub lock sub fwait mov int3 gs cmp outsb and scas leave cmpsl aaa pop inc mov mov push adc push xor pop sbb enter stos insb pop adcl shr and xchg jp or sub or cmp mov dec jp cmp cmp xor addr16 add dec dec xor inc or inc pop arpl sahf int mov test je ljmp mov dec popa aas out sahf cmc mov add clc push aaa or sahf sbb sub fmull ja cltd sti js mov aas add outsb jg mov inc xchg scas ja mov sbb mov fs inc or hlt daa mov add popa inc test sub dec movsl push ds cli xor insl xchg fsubs sarb xor popa mov leave sbb sub fiaddl push mov lcall inc loopne mov ljmp xor jl cwtl and clc add cmpsb repz (bad) daa fdivs stos mov sbb dec add dec cmc xor cwtl (bad) push aam and push mov dec mov and sub fiadd pop sub xchg insb cwtl ljmp adc fadds or in inc icebp inc dec pop clc int3 mov dec sti mov sldt imul or dec mov ret inc xchg lret outsl les push pushw push inc xor mov imul adc mov mov jb push into dec mov in cmp call aad pop sub add fs add push sub dec push xchg (bad) inc adc mov pop in dec stos fildll mov inc int mov insb inc inc mov cld addr16 popf repz es jg ret mov inc sub pop jno cltd stos ret mov inc stc pusha inc pop push dec testb cmp mov (bad) push in dec ljmp inc and rcrb adc mov sbb fiadd sbb dec push push cmpsl stos std lds and (bad) sub xchg out ja test es mov rolb or movsb xor mov ficompl pusha inc adcl ds jne cmp xor bound iret pop loop cwtl vandnps inc inc mov mov inc ret outsl inc jno and mov pop adc out out or mov daa cmp and lods imul testl inc cmc jle xor push inc push mov xlat xchg out push sahf stc out addr16 movsl dec mov dec mov movsb lods and (bad) mov fildl xor test repnz mov ret push xchg inc shrl or inc jge test sbb fcomi push sbb dec inc jnp add roll pop stos mov push or sbb outsl addr16 pop push and and ret lods xchg add icebp sub repnz jno pop pop xchg ds jecxz mov jecxz adcl fisttpll xor mov into xlat mov data16 jecxz or clc mov ret sti imul addb sub adc shrl outsl add sbbl and pop out rolb in enter sarl jno movsb dec shll mov xor (bad) cwtl pop xchg sub lahf cmp dec sub je adc ret adc jb inc addr16 adcl add add xor inc pushl fidivl inc xchg cmc nop inc insb shrl inc popa xchg sarb dec xor lcall divb xor xor clc enter push xor inc test repnz jle cld enter add mov mov aad out sbb mov jno inc outsl in rcrl xlat pop out add jns and in out dec push sub inc or jae cmp sub pusha movb nop xor sbb mov shlb loopne push jmp mov dec inc int sbb (bad) ds rcrl mov inc repz push mov push fidivrl adc scas imul test inc pop pop mov mov xchg adc jg inc pushf mov icebp repz stos jp mov mov mov (bad) call add push pop inc lahf mov push jb outsb cs mov add out mov sub scas inc mov inc jp push jle subl and movsb push cmpl cmp xchg sub sub mov fmuls mov add adc adc insb lods es in push inc adc loope enter inc in lock adc jns mov outsl xor mov aam orl add dec daa jp mov adc mov gs cld cmpsl mov jecxz bound cmp mov xor inc xor call lods add iret xchg cmpsb dec or ss (bad) outsl jp mov cli and dec mov test push retw out loope loopne xor inc (bad) (bad) or mov imul clc int3 jnp scas inc pushf ret pop pop (bad) mov test jp cmp inc cmp mov inc popf clc int adc sbb sbb dec inc pop mov mov (bad) hlt (bad) lret inc xchg pop mov inc xor push adc (bad) xor push mov adc enter dec pop ja loope cmp jb sub out mov dec rcll mov mov sahf sub cwtl inc fwait jmp add and loopne push pop lods ds (bad) dec subl dec cmp pop cmpsl cmp mov dec addr16 aas movsl and push push cli xchg repz andb jge (bad) out (bad) stos popf cmpsl out xlat xchg mov inc repz push data16 daa push fwait adcl sahf xchg movsb stc mov inc popa and popa rcrb push push jne ret push add adc cmp je push popa sbb ds popa cli bndstx mov jge pop (bad) jecxz mov add sub inc dec sti mov xchg aaa aas fldt or cmp inc rorl and ds lret cltd movsl lahf mov adc mov dec fisttpl clc cmp leave das (bad) lock fldt in mov test data16 push pop lret pop clc mov inc inc cld add popa pop jge xchg enter or clc fiaddl jns data16 in xor inc or mov push mov (bad) sub pop adc xchg lds or jg mov fucomi push fisub sub leave xchg dec inc fbld jle cmp enter pop aas pextrw testb or cmpsb lahf out jp mov inc ds fmull dec push loop dec mov inc fsubr dec xchg push int imul int3 pop outsb fs jp push xchg push orb (bad) mov nop lock xchg and or adcl xchg sub test cvttps2pi adc xchg xchg mov add lea insb pop addl (bad) pushf test test jns jl or or inc xchg cmp adc mov and mov jb,pt or or lret inc push sbb rol xlat icebp add pop bound pop add fildl add add and lret and imul dec imulb out mov sti rolb pop pop xor push push pop push adc inc fildl fstl mov aaa sbb push aas in cmpsl push add test daa or sbb add cmp imul or inc sbb fs cmp lods sub out inc movsl dec (bad) push xlat add mov out push pop mov and fs leave inc mov jp xor sub mov pop sub ret stos xor out inc jg int cmp jae mov add mov xchg inc lock es mov inc mov loop inc test jge int rclb inc adc lods jg stc cli cmp ret and add jg ret iret dec adc mov int3 sbb push out nop jo mov fwait pop jne hlt addb dec (bad) test aam (bad) lock dec mov ret fild mov dec and sbb sub inc xor add out mov aam jno jne and in outsl ja out dec call dec push lock add repz xor push repz imul es and test inc lods lds insl or ret cmp aaa incb loope dec pop lds dec (bad) xor push add iret aad dec std lcall es pop iret ret cmp push add (bad) pop push push pop scas mov ss push dec mov sub sbb jle add nop jne test xor jecxz loop jo (bad) mov dec add adc arpl cmp cmc push and pusha jae and movsb bound loope jle inc adc jbe inc adc xchg ret dec mov inc mov fist popa pop pop dec ret stos loopne mov outsl and xor lahf sub jp mov add fisubrl lds pushf test inc out es dec pop jl ds pop push xchg mov scas mov nop mov xor sub (bad) mov inc gs mov cmp je ds pop sbb dec les dec jecxz sbb inc les pop arpl inc (bad) and cwtl inc iret imul push push incb je in and lock movsb and sub sub (bad) loop ja inc pop lea or test or inc (bad) adc add das js and inc in cmp mov stos rcll xor push int3 jae add (bad) movsb mov das das inc insl in adc xchg dec bswap clc test and xchg lret mov cmpl pushfw lea lds je cmc push inc pusha jno mov xchg test outsl mov sarb inc add (bad) push bound xchg test ds sub fcomip sub fcmovb rcl std add jl mov cmp inc (bad) into xor loope xlat inc (bad) add mov adc das push inc es mov daa cmpsb incb les shr mov lret push mov cmc and fcomps cmp pop cmp lea repnz mov popl rclb mov sub jb rclb fucomp sti sub rcr push dec mov addl push inc xor push or mov xchg dec sub and icebp inc sub xlat xchg into dec out and pop ret push adc pop inc xor iret xor out inc (bad) (bad) mov mov fbld cmp dec jp xchg test push lds cwtl in test push sbb jle cmpsb push push inc pop jnp jmp fisttpl mov sbb shrb push push test outsl fldl push enter dec popf out mov or adc lcall mov or inc inc sbb push daa inc test mov lds enter mov loop jns js pop jae rcll adc cmp dec int3 cmp sbb inc jmp pop lods clc dec dec je push outsb gs in inc fs fs mov fcmovb shl cs cltd add inc mov pop and pop lock push rorl hlt and (bad) rolb mov push into fist lret cmc jb mov ret or in cmp fwait mov jge lea subl jno push push sub lock movsb push popa add sbb pop out push mov push movsl inc push add push sbb add dec cli in inc aam xor aas xchg add push inc cmp insl pusha mov pop clc in pop ds jp jo cwtl push aad and inc bound adc push inc mov inc adc je adcb mov and jle pusha rolb (bad) es das mov or inc (bad) orl les xor or int sti stos (bad) pop mov lds cmpb cmp js out push xchg rcll push into aad iret dec (bad) inc call sub stos fistpl inc push sub jb fdivl jae repnz pop sbb mov std mov test stos sub inc xacquire stos push mov or arpl pop stos bnd imul add hlt aad cmpsl mov and cmc stos sti mov icebp pop push mov mov scas movsb mov jne jo jno (bad) inc lret stos popa cmp loope jo stos push adc ret ffreep ret in div pop shrl stos sbb shr mov push mov pop lods inc and or dec inc bound dec jl (bad) xor mov dec fldcw xlat inc out bound adc repz pop mov jno push sahf lahf pop sub repz mov inc mov cmpsb call dec pop push pop pop cmp add xchg sti add and ljmp popf rol (bad) mov xor sti nop inc data16 lods nop xchg add xorl adc cmp xlat call aam pop ja mov mov es jns inc (bad) pop enter fdivs mov inc cltd fwait rcll pop dec gs std and outsb and inc (bad) cmc push test inc mov mov jecxz test push popf mov inc pop sub dec shrl push inc push popa ficoml inc (bad) lea push sub or cmp mov cmpsb xchg push (bad) jmp cs inc and dec clc es loope fmul jmp mov bound inc enter mov push inc cli mov pushf lods sbbb cs lock in setae (bad) ljmp mov dec xchg popf cli dec fldl std daa mov fwait xor inc jge jbe jnp mov popa push push bound cmpsl shr cmp fcmovu lock rclb stos cmpsl mov pop jle ja pop mov mov cmp lret inc adc dec sbb add outsl aaa push dec les mov aaa sub lcall lret adc rol or inc addr16 and sub dec add cmp rclb jns repz and sbb ret ror mov rclb dec pop lds mov (bad) repz cmp push imul cmpsb push push inc in add jecxz insb xchg leave outsl sub cmc push iret and xchg punpckhdq arpl jp out mov push repz xlat push pop mov in and mov jns sbb add shrb sbb (bad) fstp dec mov ret adc into adc cltd lcall mov int3 bound sub push inc adc jae inc jmp rol inc add mov stos xor ds cmp push dec mov push cli (bad) push nop movsl and xor sbb mov adc adc dec mov mov les sub pop je jp mov jg sub dec xchg sub ret inc or xor gs xchg js inc add push dec mov lock sub (bad) enter adc rolb add dec test cmp out jae cmp fsubr mov je xchg lods icebp stos imul jnp ret leave sub push sub sub xchg fildll mov cmpsl subl daa orl dec bound imul dec mov aam dec xchg sub inc add or (bad) cmova sbb sbb (bad) inc mov jmp jae sub sbb pop or adc outsb pop cli xor fcmove in stos lahf pop inc rcll pop mov mov push div jecxz inc push and sbb (bad) pusha fsubrl cli mov push jecxz mov adc lea mov scas pop js sub pop test cmc call dec mov pop xlat cs bound inc inc repnz (bad) mov inc sub cs sbb jle lret (bad) mov mov nop hlt push xor inc addl jge ss mov mov mov jg lock out dec fist fcom xchg in inc imul push dec pop popa mov push inc mov fldl jno push cmp (bad) jle and inc add adc std jg and repz sub xchg fistl ljmp jae cwtl sbb jg and jbe or lea (bad) cmp adc out pop dec enter and sub (bad) mov and sti nop aas fadds push mov rcrb add sbb inc add rclb inc inc fwait std pop xchg sub mov adc ret and add xor lret mov stos or sahf jmp xchg adc mov dec push lods aas mov and fmulp inc stc pop mov mov mov divb xor lret inc xchg in adc dec bound jb and (bad) movsl in inc fsubrs jl inc jbe lcall and jecxz push aaa test ret xlat jecxz jmp push pop arpl fidivl int mov inc mov xlat ficomp sbb mov repz inc and mov dec call push add cmp inc pop outsb out nop rcll dec pop addr16 int push in fldl2e sbb or inc repnz shll fild pop sub mov fiaddl push mov aas xchg sahf inc repnz jbe mov jecxz pop sbb aaa leave or scas inc push loope (bad) out lock jecxz inc adcb aas inc gs mov lods pop repz dec lock inc jge xchg dec mov inc inc sub xchg jo (bad) sbb mov fsubl xchg inc (bad) (bad) sbb pop dec dec jp cli xchg ds pop jmp stos imul and inc inc fdivr xor add mov (bad) jmp mov and imul jmp push mov ficomp sbb and pop leave pop mov sti cltd push jo mov enter cmpps xchg mov xor xchg push rolb scas jecxz or cmp or sub dec jge inc jle adc pop daa shll cmp movsb (bad) jae imul xor mov cmp (bad) decl (bad) sub rol imulb mov inc pop sti les popf sub test mov inc js fimul inc mov rclb lcall sbb dec aas inc data16 pop dec dec inc imul xor or mov inc ret clc jp lods jns mov and sbb dec inc imul push add inc xor les (bad) sub out ds inc inc stos push xor or test mov sbb (bad) icebp int3 mov ret rolb repz pop out cmp adc cmp rolb sbb jne add or pushf out (bad) icebp jmp fwait pop jo mov dec lea inc sahf add mov ja pop push inc clc mov add jmp and aas add sub and nop repnz add and inc pop test mov test jns das mov inc fnstsw sbb sub inc pop push or test jb les or in dec inc sub pop or dec sarb ret pop ret sahf xor dec dec stos stc sub push push cmp xchg aas cmpsb mov xor inc fimul (bad) (bad) (bad) mov sbb flds sbb lods xor xlat mov aaa js adc xchg (bad) into xor push (bad) div inc scas pop dec mov les dec inc lea (bad) hlt inc cmp jge in int3 loop xchg and pushf jmp mov inc lods cmp data16 and jo jbe ljmp xchg dec push mov mov repz inc mov pusha add ljmp mov jmp sbbl bnd test xor sbb push sub lea pop les mov adc das popf inc sub push (bad) lock mov add xchg in xchg repnz icebp push lcall cmp or pusha sub cmpsb mov inc mov push pop das mov int3 inc xchg pop repnz out push push jmp hlt xor movsl inc (bad) cmp cmc jo jb jae and mov push lods pop dec dec movsl inc cmc push xor fistl mov push push dec mov ret cmp jae add imul xorl sub hlt icebp add xchg fwait or loop mov dec inc pop jae insb ljmp dec pusha outsb sbb pop mov mov ret insb sub mov push inc mov repnz mov pop xor add test std push mov rol inc idivb inc or in pusha lcall jnp inc jmp add popf xchg adc inc out ja ljmp jbe mov pusha jmp push out lret out dec dec mov push jg jmp in push mov adc jns xchg and mov push xchg iret sbb xor adc inc pop lahf mov sbb sub pop scas inc pop and push scas mov insb roll (bad) std cmp add jae xchg sahf mov xor scas lret sub mov inc pop loop and dec cmp jb outsb fwait and cltd push pusha pop cli inc mov or mov inc inc fbstp (bad) data16 std xor pop push adc xor xchg in (bad) arpl cmp or inc cmp mov movsl inc mov mov xor sub stc mov inc lea xchg test scas inc faddp mov mov pop dec add int3 jns ret mov inc lret mov push lcall sub dec xchg cltd mov and mov js mov test ja mov idivb (bad) bnd (bad) dec shr into inc test pop dec mov mov or pop arpl aad push lahf loop push pop sti pop fwait icebp or out inc cmc popa push lahf nop sbb arpl mov and push add mov loopne dec mov mov jecxz inc pop mov pusha in repnz add or pop mov add inc mov jno push ret inc roll mov cmpsl inc test rclb in mov (bad) pop les jno repnz sub test push fldt and cmp sub popf (bad) lret inc repz jb pop inc adc cltd mov negl (bad) repz pushf cmp outsl xor aas push in lret push jb (bad) dec mov js jnp cmpsb sub inc push inc test inc and fs dec cs repz mov dec and push mov dec ds add sub mov addr16 ret cmp mov pop and ret dec sbb sbb xchg jmp inc inc xor mov xchg vandnps adc mov inc and popa (bad) aaa cmp aaa insl fst inc cwtl sub out xchg pushf xor enter lds inc loop incb aaa lods mov xchg (bad) stos fldcw sbb fwait ja dec mov mov jno shrb daa inc imul pop out addl ret call dec popf jp outsb push mov popa push outsl addb les lods xlat mov push js (bad) divb mov push xor inc rcrb cmp iret pop popa xor or aas (bad) push xlat in das sub cwtl imul add jno test (bad) mov inc mov jo jl movsl mov jg aad pop add inc inc sub and inc dec and cmp push pop pushf pop or popf (bad) fiadd aaa mov cmp xchg and pushf ret cmpsb nop stc mov repz notb nopl push push mov and and sarl test cmpsl (bad) jo inc cmp stos add and xor dec mov jle inc mov fwait or push fidivrl bound inc sahf repnz xor jge and fcomip xchg mov inc repz dec cwtl inc test push jnp dec out js inc pusha in pop mov adc push enter subl add mov daa push fcomi jl xchg inc int3 mov sub mov inc lods pop inc xchg xchg xlat (bad) (bad) dec mov jle sub sub and loop mov popf mov dec je push in inc dec lcall (bad) jo xchg in xchg sbb (bad) inc loop lret aam add jge pop pop jns inc jl jl cltd arpl pop lods mov jle (bad) ret outsb push mov es inc iret loopne and inc dec sti bound arpl outsb aaa pop or sbb add xchg xor insb or inc scas mov mov adc xchg int3 inc cmp adc lods push nop mov mov call xor cmpsb add fnop mov mov movb dec test cltd jl fwait jbe loopne das outsl add pop cmp cltd mov xor lods push addr16 scas push leave xor xchg sbb inc dec das xor inc (bad) aad mov add test scas arpl mov push and (bad) movsl mov sbb inc add inc jle cld leave sbb xor sbb ret xchg mov inc cwtl inc cli js stos jbe inc (bad) negb es mov add ljmp mov ja inc inc cmc outsl mov pop xchg jnp adc jg jle or es push insb rcl sub and push pop or std xchg and push jnp rcll gs xor stc inc add mov mov (bad) inc push outsb sbb push hlt jo adc cmpsl sbb xor dec cld or add sar mov sbb mov aad pop cmp out inc jp cltd add shl arpl fwait inc (bad) loopne lds enter adc and scas xor mov out decl movsl xor fmul dec cmp xchg cld imul mov push pop xor mov ret movsl sbb cmp xor dec pop pop pop add push pop pop cmp push mov inc cmpsb inc pop dec jne add cmp jbe push inc icebp in sbb fwait inc mov jl inc repnz aas imulb shrl or cld enter mov (bad) dec shlb outsb or add add punpckhbw cmp ret outsl test mov ja push popa xchg sub sahf mov push push jae mov cmpsl (bad) sbb jle arpl imul push push hlt lock dec and dec lahf mov outsl mov jb arpl and inc outsl mov or rorl and mov xchg ret out pop in inc adc sub sbb inc xchg mov mov fildl out dec xchg iret jne add daa aam popa push xor xor cmp xor lret mov xor or xchg dec cltd scas fadd stos pusha add inc int3 sbb sbb lret inc pop pop (bad) push xchg enter lcall and bound loope fidivl jnp addb xor push jl lahf mov adc push inc adc ja xor outsl add xchg ret adc scas inc sbb cmpsb mov notl out ret das fcmovu or jb push imul addr16 adc (bad) pop jae pop inc imul ds dec mov shlb dec movsl add pop mov push inc push les jo inc inc or and inc fwait lahf sub addr16 pop mov ret les xor ret cli repnz out inc mov daa lret fstpt adc pop fcoms add fistpll xchg scas inc inc adc mov mov xchg cwtl adc cmpsb repz jno cli mov add push add and xchg (bad) test rolb mov lcall xchg shll dec xlat fcompl mov das enter pop cltd add and adc pop inc xchg rcl push push aam inc das dec bnd out adc cmp xchg aas inc test adcb adc mov push loope loop push pop (bad) jbe pop or incl hlt pop mov pop mov pop fs jne in and les inc jns popa in (bad) jg mov int3 xor mov jge jbe pop inc xor or rorl adc movsb xchg adc lcall dec repnz lcall cld ret dec cltd stos adcb inc fldt rcll and push or sbb inc and call popf inc push test in (bad) test sbb hlt push inc dec pop or dec inc movsb (bad) and add push mov lret int3 push jle push repnz push fwait dec pop xchg test cld aas push inc pop push fist sub repz xor (bad) and inc add int3 mov xor bound xchg adc popf lcall fsubr sub mov jbe push in fstpt loope jmp mov mov xchg (bad) ret cmpsb ret dec cmpb mov icebp je fadds pop mov inc push scas outsl cltd sub inc es popf dec xor dec stos dec mov and sub pop sti sub cmp stos push mov dec jecxz (bad) jnp clc jbe mov sub std cmpsl aad mov push repnz inc jnp push mov lods add subb loop,pt dec arpl or (bad) sub ret stc outsb ds aad xchg in arpl push sahf fdivrp fisttpl xlat push mov jne cmp mov decl loop fs loope ret adcl leave out pop dec dec sub adc shrb pop dec push add inc jnp mov push push into sti dec mov xchg cwtl mov push dec lcall pop or sbb jb stos std pop divl out and rorl push cmp jbe mov stos add xor xor movsl xor test adc dec push lods ds ret sbb rcl inc ja sbb fbstp jge popa dec add mov mov mov stc jmp xor lret fildll or jb lock fisubrl or inc jno mov lret mov scas (bad) movsl cltd sub aad dec pminsw je xchg aad pop shr xor add sub lea and (bad) jo dec push lea sub or mov (bad) mov repnz cmp mov jo mov mov sub push (bad) adc and ret rcll nop pop (bad) inc inc sub mov fsubrp push fcmove imul or stos mov cmp sbb insl dec push sub jae adc mov call int3 mov jp cwtl les add jno xchg loope mov lret push (bad) sbb stc sbb or icebp insl sub mov movsb jmp and xchg jb jo sarl dec mov shrl sub push mov int3 lea pop arpl int call xchg cmp add mov insb xchg push dec jle std int3 mov push sub jnp into fistpl fildll sti addr16 lock mov mov imul pop add pop mov aam jnp jge ret dec subl out mov sub xlat cwtl je mov scas movb sub mov jns cmp vmaxps adc or sahf add (bad) aas inc cmp into lahf add dec aaa xlat cmpsl xchg push pop cmp sub add mov (bad) pop subl mov xlat jecxz push (bad) jb les xchg fsts inc es dec stos inc je push mov popa dec mov add cmp enter repnz mov mov push clc xchg inc cmpsl sub (bad) lods pop jo ds ja lds xchg cmp outsl out push mov bound push movsl into aad add dec lock fnstcw push mov sub xchg outsl sarb je mov pop stos ds inc ret sub inc push jo sahf fiaddl push xchg pop jp cld and inc leave pop jbe xchg arpl mov fist shlb dec adc sub xor or mov ja iret xchg xor rorl inc push and xchg es mov inc sub or idiv bound sbb in cmpsb aad xor sahf addr16 out mov sti cwtl mov push xchg push ret mov shr mov adc add add jecxz and mov mov (bad) xchg cmpsb movsb jbe push xlat mov dec push sub enter xchg rcr lcall addb fildll add arpl sub in in enter cltd pop das add outsl push cli push data16 das xlat shll loope sub pop in and cmp hlt xchg add push cmp mov jno xor inc xor test pop adc mov pusha test inc inc (bad) out mov adcl push push sbb mov outsl jne mov test lret mov mov test ret lret es js add outsl in jo or cwtl xchg pop lods sbb and mov pop sbb aad popa inc xchg cmp push and or push out add pop add and rolb add lcall inc push daa mov cmpl mov das jge jno fwait pusha pop xor jbe mov movsl pop sahf inc add cmc jmp cmp loopne loop (bad) in or jne and loop test hlt jecxz fist addr16 movsb adc add addb or jge (bad) hlt mov popa das iret (bad) jg cs stos and add jo cmp push xchg stos inc mov jle decb mov test jae fstps xchg mov adc imul aad pop addb ret dec loopne xor jl xchg sub sbb ficoml dec jno loop mov mov dec xor mov aad fldcw jnp ret stos decb mov inc lods sbb adc and mov push addr16 adc inc jle stos arpl cmpsl mov pop dec inc test inc into outsl out ror inc rolb pushf inc lret cltd stos popa add lds loopne jbe mov mov adc cmp fadds sbb inc jl mov jns int3 (bad) fcmovu inc pop inc push daa push sub je cmp push add xchg inc call sub or xchg aas dec inc in js push mov pop inc pop push cli push sub push mov mov inc fdivl pusha mov outsl xchg roll fs loopne fcmovne rcr xchg jmp push ja mov add mov or (bad) dec hlt jno mov add repz sahf mov out push inc xor cs lock fsubs and jbe inc mov aam dec lret sbb frstor ret ds daa (bad) mov bound push movsb popf jmp ljmp and and lret in sbb in sahf dec scas mov adc pop das out mov push int push inc shll mov add cld outsl adc imul inc push aam loopne add or rcrl xchg pop mov int3 jno addl push and rolb mov inc pusha inc dec ret mov (bad) xor push fs pop or jne sbb sti ror movsb clc stc or pop imul sbb sub movsl add fistp and jmp mov rol dec lret sub sahf pop add insl fisttp push into push xchg and cs push add or pop roll sub movsl outsl movl aam adcl and sbbb imul clc add lcall (bad) jno (bad) push int jnp cli inc xor ss shrl mov mov sub (bad) dec cli popa mov in inc push leave fwait (bad) paddw out mov jns xchg imul ficom ret ds dec add in test lcall sub sub in sub pusha mov call jmp sub mov xchg out loop adc inc dec sub sahf xchg fwait sub push pop pop pop sti divb dec stos inc lock add sbb jl jnp push mov popf mov aad pop imul aad es push or (bad) mov lahf add pop inc sub add mov loopne fisttp icebp push ret sahf (bad) pop sbb inc push loop nop test or sub cli mov jns aaa cwtl xchg xchg jge in loope pusha or cmpl hlt fsubrl xchg mov test mov stos test cmpsl mov jno lret je add dec mov fcmovnu mov andb mov pusha loope aad aam mov fnsave std insb scas (bad) adc jge and pop add jle xchg sub mov push nop/reserved xchg dec out add and (bad) xlat mov xchg sub sub pop movl and mov sbb fadd call push rcr push add xchg inc and add aaa jmp sarl test sub mov mov lahf push sub aas movl jmp add adc add loop into fwait cmp inc mov inc jns add cmpl cmp (bad) sub rcr ret jb add arpl (bad) pushf sub mov cltd stos xor mov mov fstpt js aam aam sbbl outsb outsl mov inc addr16 lock push out lcall fmuls fs sti insb pop sbb ja push addl push add cmp sub or cmp fcomps nopl stos dec gs outsl add jge dec ret jle mov dec add mov dec mov repnz xlat fs and push fadd nop loopne jl mov push mov push push sti pop rcll stos xchg and jmp dec clc pop repz mov mov scas movsb mov sbb int xchg (bad) call mov test sbb mov in loope xor insl cmp (bad) ljmp aad ja and call jle inc mov jmp push dec (bad) loop push xchg pop ret inc mov mov cmp push inc in aaa cltd mov es jb (bad) aaa dec xchg xor loop inc cmp sbb andb roll (bad) push inc push jne jg xor xor sbb push sbb lahf sub test ds mov and inc daa sarl ljmp lahf mov inc jbe hlt inc dec in pop sti jb fwait inc cli cmpsl fadds inc out mov pop addl call (bad) push scas and cmp out (bad) xor iret jo lahf cwtl inc inc pop ljmp fdivr fs push xor rorb mov xchg test inc call xor sbbl mov fldcw stc cs jg lods sbb sub ds rol dec pop jns inc lret mov mov adc add inc ret mov mov dec pushf fisubr gs negl or adcl (bad) push lret push mov mov sbb dec adc int3 mov jle jp inc inc lea cmpsl into mov adc inc icebp or sbb inc push push std sub add jmp test out sbb pop inc in jg push inc fcomp lret xor orl or int3 iret xor dec inc mov add and andb loopne lea test mov sahf and inc mov lcall pop outsl mov lods ret inc aad lahf xor bound (bad) mov stc sub inc push mov push pushl mov inc mov jae loopne and es push sbb inc jmp cmpsl mov dec int3 or or mov jl mov andb mov outsb inc scas sub pop in lret adc dec inc xor in mov sub add pop jmp mov push pop (bad) mov sti shrb in fstps adc addl test jecxz outsb push or jl pop dec int push dec inc in mov sahf bound or arpl push add shlb adc and aam push mov jo cwtl mov inc jmp lock cmpsl pop outsl rolb gs jecxz cwtl addl insl pusha test popa jno xlat add mov das cmp cmp out dec cli aaa fwait xor jns pop fildll mov sahf outsb adc pusha cmc and (bad) sub pop ja dec aaa imul adc repz jb fwait mov push sub cli aas jnp jne (bad) stos sbb andl ret adc cmc aam movsl dec ror xor cmp jg (bad) out movsl es xchg push std arpl int3 insl jno xor push push mov icebp (bad) xchg cmp cmp mov inc stos in pop clc scas xor cld mov pop fidiv (bad) mov jb pushf (bad) fsubl pop add push loop add fbld sbb add and push mov cmp cmp push add pop loope ret push mov ror les out ss aam mov mov jb shrb (bad) insl in and or sub (bad) jp xchg in (bad) (bad) dec mov lret sar hlt adcl insl sub movsb and or add arpl push xchg cld and mov cmp adc (bad) hlt push dec lret cmp cli inc mov stos sarb addr16 and icebp mov xor xchg sbbl and jmp mov add jl leave inc jecxz mov jge ja daa jmp adc jle ja add inc xchg ret in xchg sub jnp sub mov lcall daa pop jle (bad) into enter out inc or dec aaa dec xchg std cmp push xor mov inc lods (bad) mov popf jg (bad) push fstpt (bad) ret ret or aad push std xchg mov (bad) lea sbb mov aad aas dec and scas or ljmp xchg add cmp loop daa sti sub inc mov into push mov (bad) mov and loopne test mov push repz sarl cli pop xchg jmp inc ss inc mov lds inc into loopne add adc dec and push outsb add lcall fsubrl add scas adc (bad) xor test jns jno dec inc scas push push pushf or jl mov ret or out mov pop sti mov imul mov dec push sbb pop add sarb sbb or stos rcll inc push mov in push (bad) pop mov sub rcrb mov xchg icebp jno lock inc hlt repz fs lcall inc dec jnp xor mov and pusha and (bad) (bad) fsubrp lds cmp repnz and mov mov sub ljmp mov popa inc jns mov pop addl add and stos mov mov push and dec pusha in fiadd add out xorl pop roll cmp rcll mov inc push int3 daa lcall jmp sub or xchg mov sub pop lods out mov xlat popa dec mov daa in stc push aad add xor nop jne jg or dec cmp (bad) in jb loope and and int3 xchg test add inc jle pop mov pop sub repnz push add fidiv fistl fbld js ret imul add outsl sub fcoml push inc int insb fsubrs mov dec cmpsb aas add mov fisubrl mov push mov adc orb faddl mov add (bad) pop pop xchg jecxz sub lds stc add cmp aaa and dec in clc int icebp lcall xchg std psubusb enter pop and mov mov dec inc loope dec xchg sub or leave jge arpl bound scas ss mov cmp pop jecxz (bad) xchg inc cmp fmul fidivrl push pop or inc sbb add pop jo movsl xor dec cmc sub jo loopne add xchg rol mov daa jnp and mov mov pop daa sub in sbb or dec push push inc xchg sub iret and scas (bad) mov push add mov inc xor sbb cltd pop mov xchg xor mov iret xchg inc ret sbb mov aaa in idiv xor and xor clc outsb pop iret pop inc add inc inc sub pusha gs stos in inc into cltd cmp in rorl push xlat dec xchg jmp dec pop outsb and mov sub hlt dec (bad) cwtl push add mov ret aam pop imul scas ret dec in jp sbb jecxz ret sbb add push cs dec push pop insl scas mov inc inc movsl add mov cmp pop inc int scas out test push fistl clc bswap or add ret push addr16 test xchg scas push out (bad) xor addr16 je sbb imul and dec adcl mov xlat insl push jle and sbb pop roll pop pop pop xchg test testb mov lret or inc test hlt pop fld loop inc cwtl mov mov mov lods pop pop cltd sti icebp inc push mov add shrl pop pop (bad) dec dec inc ret sub fiadd xlat inc int stos lds out inc mov adc xchg mov pop or scas jns call pop shlb stc adc (bad) adc or test aad icebp adc clc xor mov mov sub out aas into xchg jle adc popa pushf int outsl (bad) fist das push inc mov push sahf scas pop sub sub cmp das dec stos adc push fucomp xchg dec cmp rcr jns psrlq jp jne xchg and mov inc push jl jb xchg into (bad) incb jns dec mulb sti incb pop rcr insl jb cmpsb jecxz loop in inc cmp xor lahf es sbb out xchg in inc jmp inc push push repz inc clc insb mov jno aam sti xor xor inc add inc test push pop pop jb or mov sbb lods ja inc push mov sub xor std inc inc push test push (bad) mov xchg jae test or dec xchg into stc sbb imul inc jne fnstsw js popf (bad) mov dec cmp sbb cmp push sahf fmul cmp inc sub xchg in in aas ljmp out mov add popa test shlb or bound int3 xor into aad enter dec jl aad js std enter xor mov xchg adc loopne xchg sub push fstps lds dec jae and add mov adc mov out sub lods and lock push (bad) jle jmp inc hlt xchg imul lret fild hlt or push inc (bad) in movl inc dec jge daa bound jae mov in inc stos cli cmp dec bound dec lock pop sub scas ja or adc loop mov sub sub inc cmp arpl mov xchg jg sti adc mov loop bound dec test and dec fcomip fucom movsl cs and test (bad) or jl mov xchg nop jne push int3 cmp jae and ret dec js inc repz test inc jle sub inc and pop xor dec sti push push out pop sti sub inc mov arpl push lea push adc push add mov clc xlat mov mov dec out dec mov or dec mov outsl mov out ret ja cmp icebp jno dec dec mov add xor push push iret loopne xor xor inc int mov in lret pushf inc or push pop lahf xor popl popf xchg fwait xchg lods (bad) popa inc mov int3 adc adc insb js lea cmpsl adc cmp mov pop jo test lcall xor movsb bound loope jecxz loopne out sub adc push and pop add fild cmp enter loop sbb ret stc bound cs sub stos inc xor das jg xchg fdivrs mov xchg pop mov std push lret xor push inc repz mov (bad) push (bad) mov (bad) push out pop jbe stos dec mov sub mov loope mov and mov mov test pushf jecxz roll test shrl es dec jns jne xor xor or stos pop inc scas and enter in inc movsl int3 lds mov daa mov jp push ret jmp out popl mov js xchg popf aas mov cltd add jecxz pop mov push sub (bad) xor sub xor mov enter fisttpl sub sarb inc aam mov aas fisubr sahf and mov push mov mov in popl cwtl push popa (bad) cmp and cmp push insb sbb pop inc lret data16 pop lcall add jl add sub sbb add mov ret push insl add adc jl adc test call inc jns sub mov shl ret fsubrs popa push iret and inc sbb enter push stc std inc push int sub mov pushf inc pop scas pop xchg rolb add sub xor inc pop shrl push jp bnd inc les dec lahf cs adc jb sbb and or ret clc xchg cmp add (bad) sahf or repnz push inc sub daa sbb inc ja mov out or fimull mov mov inc mov cmp dec inc push adc loop cli sub into sbb hlt inc xor stc mov (bad) jae jb dec jmp xchg sbb cmp inc pop ret bound cmp sarl or out sbb add das ds lock movsl inc pop inc mov mov fdivrl lahf xchg jle lret ret out and dec jnp (bad) inc scas out movsl dec bound push mov aas insl gs addr16 xor push fs mov (bad) sahf inc in loope das adc push incl xor daa addl cmp dec push and (bad) (bad) xlat flds out pop in scas dec xchg sbb pusha sub ljmp out inc das inc jle mov and pop lret cmp mov dec inc int3 pop scas xchg into mov insb loopne ret int3 daa aam jns mov inc outsb jae sub xchg sahf repz dec jmp ret repz std rclb add or popf xchg subl out cmpl mov jmp movb arpl inc mov cli mov mov add mov lcall cmp jbe push mov repz inc push stos (bad) mov inc fdivr push xchg pop jo repz sub std test addl ds push inc and xchg dec inc xor or repz push nop inc (bad) insb xchg add sub fdivrs pushf lret push inc icebp test aas cmp sarl inc jmp push into xchg cwtl lcall mov scas push test sub sub imul cltd std xor les pop mov call neg int3 ss push fisttpll cli pop jb sub cmpsb add cmp dec stc lret sti jg or scas leave ret cs xor mov inc idivl push aam dec inc fisubl fisub test repz push aas cmp enter jnp add out outsb shrb push lods cmp lcall inc cmp sub and jg push out rcll dec imul inc outsb or jno stos pop and pop jb je add and (bad) lcall inc lret and mov mov int popa add adc pop stos mov xlat aad inc sbb out ja outsl and add lea mov in (bad) xor push arpl cltd add dec jle mov loop aad inc mov sbb xor bound push push out add ss add and xor inc (bad) mov gs incb pop fwait mov hlt inc int3 sbb dec xchg mov in mov dec cmp pop pop lcall sahf into das ds mov cmp dec inc (bad) aas divl push enter or ret jge push lods xor jle mov xor fcomi inc sub add int imul ret mov jl sahf inc xchg xchg aam adc push mov inc pop int3 fnsave out add cmc (bad) scas add inc adc repz mov mov add mov inc push push call jmp pop outsb rclb add inc mov add outsl push mov mov loop jmp sbb stos aad lds push dec jmp (bad) aas push inc push in mov stos add push push mov cli cmp push movsl push pop (bad) jmp repnz lods ja jne cmpsb fistp add cmpsl test jb mov push fild mov sbb lock fisttpl sub jge hlt roll test add inc ret (bad) mov ja xchg xchg or push push sbb inc cmp in and in inc fisttp mov mov push xor dec lock pop xor dec xchg jmp xlat inc or sub or inc fldlg2 push dec mov idivl jmp mov insb pop addr16 mov cmpsb inc jecxz ljmp clc cmp les jge rcll inc jl dec fisubrl push daa jl pop add push mov jmp pop icebp orl (bad) fsubr inc leave cmp mov (bad) sub xor sbb inc and cli ds dec push ret sbb lea addr16 in mov ret add push (bad) or inc sti ljmp mov lcall lret adc int3 adc jge int3 movsb sub out push adc push and js mov inc (bad) into and jg addb cli outsb sbb jae in mov mov adc aad rorl (bad) sbb add xor jl mov imul leave out (bad) pop test scas inc dec jl dec cmpl inc cmp repnz stos inc jo mov or loop pop insb inc (bad) repz into fild pop inc pop lea test lock or lahf push test jle sbb cmp inc cmp adc mov xchg nop push mov inc pusha mov adc jp mov movd ss sahf test hlt in sarl decl mov into jb add adc push sub mov push imul jo and jbe ret inc and inc les add cmp mov push push add cwtl ret jge mov xchg fnstsw repz mov pop xor int3 mov pusha int or sbb fbstp dec addl stc jb xor rcr jge (bad) inc std ljmp push mov jmp cmp cmp inc push adc xor inc loope jge nop xchg daa popf ret jecxz (bad) idivl sub jge test (bad) dec lret es sub pop mov shll mov das ret cwtl stos push lahf cmpsl cmpsl sub mov das xchg pusha mov arpl sub pop sti loop inc pop inc fiadd lret cli xchg aas fstpt imul lds push insb pop mov dec add fistl xor inc adc negb push data16 pop push insl lods sub add push jnp mov push inc jecxz rcrl inc movlhps dec jae fmul push xor loop leave inc and xchg in rcrl imul arpl xchg and mov xchg cltd out jge mov ret and cli dec sti jle pusha or mov fsubl mov mov inc fisttpl movl sbb insb enter inc inc cmp pop adc sbb inc mov aad bound jbe ret xchg popf mov ja rcll in and inc fcomps scas adc xor (bad) aaa mov mov pusha fs jo sbb and xchg cmp and xchg pop fmull add sub pop cltd lahf es dec lods or popf ds je insl cltd (bad) ja inc pushf adc xor add cmp inc mov cmpl jae jne aas lds (bad) aad add push inc shlb inc fstl push cmpsb jns movsb mov out xchg push movsl test sub push cmp push xchg push push add imul sbb jmp sub jb (bad) cmp push add or mov mov aad inc pushf sub mov pop ss repnz sbb jecxz adc (bad) dec (bad) sahf pop repz ret sbb push (bad) jbe ds xor jg adc movsb add ja data16 inc test inc mov pusha lds inc push pop imul shr rcrl xchg or dec popf fisubr push inc and out stc and jo dec cmp inc lds ffree ret cld or inc cmc xor in add movsb inc fwait sub pop xchg inc add sbb rorl jge ret arpl inc in jno (bad) dec out push stos ret mov fmul lahf cmpsb mov ret xor test inc sti aad ds (bad) (bad) int cmp inc out cmc das in pop cmp inc sub je ds inc push xchg sbb movb dec pop sbb dec and in stos and pop ret sbb and mov (bad) pushf add inc adc adc add mov rclb sbb mov inc arpl movsl pushl imul aam adc js int3 fldl2e loopne in leave sbb xor pushf jae mov mov dec cmpsb ds inc push inc jge xchg and add cmp mov jl sbb jae cmp es popa stos int test jg inc sti rolb mov inc sub rcrl add mov loopne pop jbe out inc add cmp rorl lahf fistp loope dec loope int3 pop mov and xlat jae push mov xor mov les stos (bad) lods xor aaa mov sub jp add shll call idivb push in (bad) mov nop adc es adc sub cmp push lock and jae mov jb sbb repz jnp ljmp sub inc leave stos sbb movb jne xor neg jb pushl jbe pop dec (bad) rolb or aad and sub sbb adc and rolb mov sbb mov cmpsl mov mov imul mov mov fwait add mov mov or gs lret push movsb push mov sub dec (bad) fistpl adc inc pop push sbb dec inc or shl (bad) sub dec sbb inc add enter or inc inc sbb dec cmc inc pop jb scas push scas or into push cmp pop inc leave cmp inc (bad) jge call push (bad) inc mov mov fistpll mov xor lret fcomi jne fbstp pop ja cmp imul (bad) les mov inc aad arpl xor sbb mov add cld xor rclb (bad) mov xchg daa lods sarb (bad) fsub in cmp sub dec popf pop (bad) jmp inc mov push xchg out insb mov mov xchg jb mov pop jmp into ficomp hlt dec adc rorb xor jge mov jg call inc sub xchg add xor jge dec addr16 div arpl mov add sti repz inc xchg push loope sub add push rorb cmp fstpt cwtl std enter cmp add mov rcrb std ret idivl test inc mov jle pop push (bad) xchg cltd xchg dec xor pop mov fisubrl mov push and jae pop insb sbb mov roll (bad) xchg cmpsb les xchg mov in inc sbb pop incl push mov cmp push out daa popf push fcomps xor sub fs or sub sub pop daa adc cmp mov rorb mov sbb xchg adc xchg inc test roll js stc cmp daa and inc mov push shrl pop lds lcall push pop popf movsb xorb cwtl sbb aas xor inc cmpsl popf scas push out inc jns aaa push pusha (bad) inc cltd and in inc es adc in inc mov (bad) xlat fidivrl test dec push cmp lcall mov sub inc jb fstl cmp dec bound jp das jne dec xchg (bad) gs dec add shlb inc mov test out in arpl sarl inc je and mov inc and stc inc fisubrl pop sbb adc cmp xor mov push fstl movsb inc mov inc xchg negl inc lds sbb and scas xor inc lahf and mov dec (bad) adcl in mov xor mov inc leave sti mov andb clc daa std mov (bad) decb sub shrl and imul mov arpl push (bad) pop dec mov inc and fdivp add pop test xchg bound xchg mov dec jnp push mov dec mov inc mov inc jg mov and jmp into not loop xor push rcr les pop lds ret inc bound inc xor dec inc in not xchg inc jno inc sbb push imul mov xor push jno xlat dec dec movsb inc outsl ret cmp sarl cmpsb push (bad) jb inc (bad) or xor inc jg or jge mov sbb lods js cld push and iret xchg shl sbb popl inc out in inc rorb push adc in arpl cmc mov xlat fs mov sbb inc (bad) cmpsb pop xor sub in cmp pusha adc jnp popa das xchg inc lcall sar add jb push or roll xor xchg stos shrl or sbb add jle addr16 popa cmp mov jb sub les push jo and push imul ds out in sub mov or push mov xor inc scas lcall inc jne (bad) lcall sub test adc inc inc sub mov out (bad) cld mov ret inc (bad) sti push popa test dec inc jg push jbe mov (bad) je nop mov mov (bad) inc jle (bad) outsl clc lods movsb loopne dec sbb pop mov cmc jmp das xor test fwait inc mov pop aaa mov mov sarb addl fstpt push pushl movl in imul int or mov push mov xchg cld fs popa cmpsb mov ja mov mov dec inc and sbb xor bound scas inc xchg jle,pn ret inc int (bad) fmull mov mov mov mov andb pop cmpsl xchg jnp mov dec push aam je ret cmpsb and push push inc xchg mov out (bad) jo push lahf mov jg pop fstps push jno or aad daa add lea mov inc push inc gs xor cmp xor les dec int cltd mov xchg and mov aas lcall cmp add popa jne adc sub arpl xorl ret loope (bad) or or loopne fbstp inc jg sub pop icebp cmpsl lahf inc outsb xchg out aaa cltd jno sub aas cmp jecxz dec shr pushf pop push or leave inc mov inc push addl mov dec lock popf dec pop sub int sbb repnz mov jp (bad) xor aaa into lds sub dec ret sub push xor xor dec inc (bad) clc mov outsl and call test push jp xor das and ja loope lret mov mov pop ror mov and (bad) aam pop into stc jp dec push mov fldl lock jo cmp and sbb fldl inc lods inc int3 cs shl dec stos das dec push int dec dec sbb fsubs or and xchg fbld cmpl mov cmp call lcall adc add jne mov test inc inc fisubl je jnp test xchg push inc pop data16 lret or (bad) movsb inc push movb jl scas insl xchg mov rcl push fcomi nop inc pop roll test lods and fnop adc cld dec leave ja push and aas gs insb xchg inc xor xchg inc xchg (bad) pop loopne lret cmc mov or inc addl cltd enter in inc pop xchg inc push cmpsl je sub pop popf jb aaa adc inc sarl ss push iret pop inc dec xchg icebp mov mov dec fmul call pop xchg clc flds pop sub hlt mov inc add push sub rcll dec mov shl leave pop cmp scas cmp adc and inc mov lret ror jo mov sub inc push jge sub das ljmp ret mov or sub loopne in outsl and jmp push outsb addr16 test inc push push movsl std test inc cwtl push pop (bad) shlb add mov mov mov std adc xchg movsl aas sbb lods int3 bound notl xchg repnz mov sbb xor push inc nop js or fstl call inc add add adc hlt push dec es loope test fwait adc dec movsl inc dec sbb cld insl inc or mov aam (bad) mul (bad) dec inc fiaddl addb outsl mov (bad) adc xchg test into xlat call loopne mov and jnp fisub cmp sub daa mov sbb shlb rcll cmp test sub (bad) push cs jnp push add xor or icebp pop inc push push mov cmpsl sti add cli push (bad) jmp sub bound int pop dec popf sub out daa ds mov aas lahf movsl shlb and cltd mov mov mov and out xor mov dec sbb cmp inc rcl movsb out xlat icebp aas mov scas push mov adc inc sti or jns in and sub int fiaddl ds out loop cli inc out mov mov pop outsl mov push xchg jne cmc arpl xchg xchg outsb adc inc mov cmp shrl inc mov addl inc adc stos sbb (bad) jb scas shr clc ret enter push lahf repz xchg push lret insl xor dec inc cmp das aaa fs in repnz daa inc addr16 loopne sbb jg mov pop fisttpll pop inc lea jns iret and data16 pop push out aas or push push mov dec movsl ret push and in cmp ljmp cmp dec test call mov cmpsl jnp les mov in inc clc or xor jl add mov or fwait fs mov pop (bad) push loop ja ret loop std enter test pop sub pop and cmp jne inc shll inc enter scas or sti je adc cmc das inc inc out mov xor and subl stos iret (bad) xchg mov icebp cmp and repz adc sti xchg push xchg ja jnp arpl push insb jbe out mov (bad) xchg inc fmull dec arpl (bad) out push push adc sti xor inc popa (bad) clc addr16 repnz or mov adc movsl inc mov test add inc pusha cmc add jmp jp nop es jecxz adc inc inc aad std inc lock out add (bad) mov mov inc and mov dec inc test lret fsubl inc sub into lea dec jl pusha test subl fwait jmp lods mov pusha js bound inc in sti test roll push and xor dec mov mov loopne adcl mov repnz mov mov push pop in cmp cmp jmp lea pop sub sbb addr16 pop xchg fiadd stos cmp xchg cmp enter cmp push mov movsb imul pop daa (bad) xchg imul jge mov add xchg jp addr16 in call jae pop out adc inc jecxz and cmp inc ret inc test sub dec lcall cmp mov rolb pop or test or cmp mov lea mov jle inc roll (bad) repz mov xor and xchg clc mov ret test mov inc mov int3 pusha jmp jge lcall aas xchg lods daa fiadd push jge inc ficompl xor sbb sbb sbb ret add jb pop orl (bad) mov xchg sub (bad) xor (bad) setne lods sbb inc aaa jl push lea sub mov notb mov and jg xchg ljmp mov bound jmp das lret std repz or push nop push inc ds cwtl mov pop xor fildll xchg (bad) push sbb cwtl jmp cmp addr16 (bad) je xchg aam aas xor (bad) push mov (bad) hlt mov or inc push mov dec loopne movsb leave add pop add mov xchg xchg inc sahf retw xor xchg lods dec mov inc mov imul jnp push das push in inc sti lods push sub movsb out (bad) mulb adc or and jae mov mov inc cmp sub or adc daa jge cmp test adc dec rolb into lods adc dec (bad) lds inc inc and inc cmp adc cltd jb jp fwait pop pusha (bad) icebp inc test push leave enter ds mov dec push aad (bad) sti iret imul and dec or adc jnp cld ficompl sbb dec dec cld int3 cwtl cmpsl (bad) jb xchg pop cmpsb add add rolb pop popf inc xchg adc sbb lahf cwtl sbb xchg ja adc push mov ret pop add pop leave inc or mov loop pop bound jmp push fstpt sub mov or ja push inc sbb mov rol lcall jl in push fdivrs cmc xlat (bad) aas pop ret popf into ficomp add jg iret sbb lds inc stos fistpl adc push les sub shrb mov daa push xchg sub nop pop bnd adc xor push ret sar jne dec xchg repz adc push ret dec xor popf test mov or cmp ljmp add lock lods cwtl add mov mov sub dec pusha (bad) dec lods sub push push (bad) leave fldt inc sub (bad) or outsb arpl aas xchg or stos inc dec pop loope loopne out inc dec negl jle lret xor inc idivb inc sbb lret movsb lds inc cmp xchg test adc lahf das (bad) xor in fidivl add or ret mov mov test mov adc scas testl mov pop movsl inc aaa inc xchg mov and inc fcompl test cld or push pusha add xchg pop xor xor inc inc cs loope mov jo sbbl sub mov jge xchg out and jle add jecxz xor push inc cmpsl test pop jns in inc hlt outsl mov add int xchg aam mov inc mov add out xor fiadd outsl addb fwait add and cmpsl and inc (bad) stc push aas jge outsb les mov fs push mov sti xchg and ret pop incb movsl inc pushf inc cmp loope ss and mov inc ret aam xchg test pop jno inc jne dec jns (bad) ficoml mov dec inc fs pop cmpsb sub (bad) ljmp sbb push push int3 bound mov hlt jo xchg pusha in clc in cmp inc inc push jmp cmc add mov push push out jl pop addr16 (bad) out int3 xchg sarb inc mov push mov push fcomps iret inc pop pop mov inc mov les mov aad sbb orl pusha xlat rorb mov popa ret test xor jl mov pushf or xchg xor ret inc push lock cmovp sahf insb sub inc or (bad) jbe shrl fstpt lock clc addr16 jno out call insl negl add jo je stc xchg xchg mov and cmp cmp mov mov shlb lret pop in mov std xor pop (bad) sarl sahf out pop scas mov fs addl jo mov pop (bad) aaa dec inc jbe pop movsl pop incb mov push push jno test mov aam sub add lcall push arpl or popl dec (bad) jae fs xlat test dec rcrl je jb mov dec mov fs lret int aas inc inc pusha out leave jns sbb ljmp pusha fs aas or or ret popf adc dec jl fld dec push pop cmp sti adc lcall mov dec adc jnp mov popa outsl sbb add icebp (bad) lret jmp ds decb mov mov xchg in incb shr inc clc (bad) jne out xlat hlt loope lret push imul mov enter (bad) fisttp ja (bad) outsb cmp (bad) dec test cmp andb fwait (bad) jae test rclb icebp push gs mov pop jg cmp je sub les in sbb std or inc jmp add insl mov mov inc test sub add ds enter pop repz xchg (bad) mulb inc push out loop and aad fnop in adc dec xchg pop inc mov xchg pop lods inc fdivs mov movsl jecxz pop mov jb inc sub (bad) jecxz or outsl push out stos push mov or mov cmp lcall cmp xor dec adc xor aaa into orl (bad) fnstcw loopne loope ds scas and xchg sbb jne push scas in inc push add mov pop adcl test loop push xorb inc mov out xor mov lret es popa pusha adc pop xchg (bad) push sub or add insb xchg jo je fiaddl mov stc sub mov ds push fwait cwtl cmpsb inc fucomp sub outsb push daa pop test push push dec sbbb iret popf es or fadds (bad) aad out xor sbb cmpsb mov sub ret std xor int cmp xchg pop in xor orl movsl jg cmc inc jno into push xchg movsb and dec mov mov fucomp sbb movsb push cmp movsl inc jo or pushf lcall lea movsb loopne dec das pop mov inc push or add inc fisubr inc inc lods mov mov adc or das adc dec mov sub dec sarl xchg ja push addl les daa daa jnp dec lahf push mov inc or loope dec mov pusha in int3 add dec xor adc dec pop or jmp dec xorl cmp add das divb jecxz xor (bad) aad mov inc es xor xor add imul lret xchg repz repnz or xchg push cmc and ret mov in or jp mov pop in adc std inc aaa add fiadd addr16 jmp (bad) (bad) jo dec pushf call aam pop iret push add addr16 cmp xchg (bad) mov out pop out sub inc xor scas push inc cmp cmp push (bad) sti lcall lods inc out mov inc aas jno sub dec pop xchg fldt (bad) pusha lds push mov push push gs or dec and xor push push aad movl gs dec sub cmp scas popf dec cs incb dec pushf icebp and packssdw (bad) into mov loopne push scas sti pop (bad) add arpl xor mov mov int (bad) xor lea call fidiv ret mov enter insl out mov ljmp sub stos dec mov ret mov cmp dec and xor mov pop sub adc mov enter ret sbb and and cld insb adc popf lock ja test loope icebp xchg icebp fbstp dec inc adc cwtl mov pop jae push (bad) lcall std or xchg leave sub xchg enter mov (bad) rorb into lds arpl dec insl and adc jg loop mov cmp clc (bad) pop cmp xlat mov outsl jbe pop xchg outsb xchg add ffreep jg stos cli jecxz and cmp arpl pop imul fdivr or aam lock fdivrs jno,pn pop mulb jnp push mov int3 cwtl sti or sub jno movsb dec clc insl jle stos add mov jp mov sbb inc (bad) (bad) pop test (bad) xor loopne and sbb pop (bad) in jno add loop insl fdivs inc sbb cmp adc jmp fisttpll cmpsb lds add ret adc xchg (bad) jl clc push cmp aad jecxz jmp arpl fldenv hlt je cmp push fist lcall inc stos adc sub dec out sub test roll (bad) jns jmp sub pop mov lcall cmp dec xchg rorb es sbbb cmp dec rcll sbb and mov mov jl push hlt push in cwtl inc imul pop in in enter inc lods dec ja xor (bad) push jp push jmp movsb sub push and lods cmpb pop cmpsb pop (bad) sbb inc xchg aad cmpl mov aam lahf sbb jmp leave (bad) int3 sbb je and jae xchg inc mov in inc push aam jle xlat push insb inc pop or sub mov dec in mov gs fldt inc test mov aaa ficompl xchg sbb test andl cmp add inc adc cmp popf (bad) mov leave xchg adc dec cs int3 mov mov lret and inc xchg adc cmp fcoms sarb adc cltd sub mov dec fs cmp or cmp cmp popf sbb mov dec (bad) aas xchg push leave jns dec inc rcll psadbw adc push js setle ljmp mov pop push (bad) cltd out mov ficompl fildl mov (bad) sbb xchg ljmp lods and push (bad) lahf xor xor ret aam dec dec add xchg mov (bad) cwtl push push jns inc or adc iret stc dec (bad) ret loop inc inc pop adc pop out dec inc sbb test sub cmp int fbstp inc dec ss js ja inc xchg mov inc mov cmp pop (bad) out dec inc xchg xchg jae push mov (bad) les loopne (bad) adc and lock sbb sbb xchg inc sbb lahf mov cs clc lods inc mul ret fisubrl nop xor sub jmp sub aam jne repz sbb outsb dec jp imul add xchg inc dec xchg pop cmpsl pop cmp inc push mov ret aaa fisubl stos inc cmp mov test jle repz popf lea adcl cwtl ret out in stos stc lods mov sti inc (bad) sub mov push push not scas inc xchg push mov dec pop sbb mov push pop lods faddl jae (bad) pop pop push jbe push hlt dec je dec mov push imul jg cmp ret out mov push sbb (bad) or or mov fwait inc xchg loop cmp lea hlt fisubl cmpl sti shll popa and mov mov cmp popa inc mov into imul pop fdivs inc loopne xchg mov data16 mov sub cmpsl add lods enter jl add movsb movsb mov mov pop lahf bound test fsubr daa dec popf aas xchg sub aam or (bad) negl xchg inc into jecxz jmp pop daa pop je shl stos add aas xchg fiaddl int and cmpsb fcomip jnp xchg cmp fstps mov cmp push mov pop inc sub dec xchg mov fwait mov cwtl (bad) rcl lahf jbe cmp or frstor jp jge push (bad) xchg lea ss mov push mov insb pushf cs dec inc sar pop inc aaa jnp rcl cs aas fisubl hlt repz cmp ret stos dec arpl adc mov lret xchg xchg push cmpsl pusha icebp sbb push mov out das in or (bad) push js add adc pop (bad) mov inc jmp in cmpsl xchg add and xchg xor imul daa push mov int cmp jmp and cmpsl fidivrl push addr16 stos je popf mov out insl pop lahf fisubr sub sub ret lea adc inc inc (bad) lods cmp adc iret push push fmuls mov xlat cmp out aam xchg push jnp dec aad out fnstcw cmp pop dec mov fmulp pop dec and inc sub inc xorl (bad) mov mov cmpsb in push hlt dec imul inc sub or mov sbb sub dec mov outsb lds movsl jecxz das (bad) (bad) cli hlt popf dec inc jae mov lds int3 xchg or mov mov lret rcll push push inc jae (bad) or xor sbbl je dec adc push mov inc imul add outsb fistp add mov push lea mull cmpsl push sub pop push inc lret pusha aas push int3 jne aad roll pop mov rorb aad push mov dec stos nop ja sbb or clc sub cmpsb lret int3 cmp mov cwtl pop aaa jo jo,pt inc sub ds cmc push xchg mov movb adc cwtl ret into into add es dec sub js inc mov pop lock cmpsl jge sub es (bad) pop cmp dec mov cmpsb dec enter sub xor inc cwtl dec mov ja icebp and xchg (bad) scas add clc in and xchg xchg mov mov inc push adc xor stos jo fmul cwtl jb fcmovnbe test jbe mov add push test hlt sti stos popa cmp jl fistpll or sub push mov scas push dec insl (bad) test sub shll xchg std in inc stc sbb xchg jge add out mov jle cmp (bad) fucomip ret or daa fimul pop pop jae decb xor dec push pop or push popa lret push sbb pushf inc rcrl jg pop xlat sbb and es sub mov jge inc push cmp sub sahf scas add fdivl (bad) leave push pop dec add inc fdivs jg dec adc in mov inc dec or push js mov or mov inc jne pop jo mov inc and pop cwtl insb (bad) fcoml sahf and inc dec loopne lock enter dec pop jnp add add jecxz ljmp inc int3 ja add sbb lret lea xor hlt xchg fcoms push mov int xchg fwait xor xor and fs mov mov test add out imul xor and jge ffree loopne cmc das and ljmp add jecxz (bad) lods ja add mov jle adc dec inc jb add xchg or and stos ret fcompl add in sbb rcll (bad) les daa pusha push mov mov fisttpl (bad) pop lock xor lods ret ss jle push ret mov pop insb add pop inc xor sahf jl jmp repz (bad) xor pop xchg mov sub insb lahf fildl or cltd imul fisubr stc cmp push add pushf add fnstsw or and cmpsb decl inc fldl2e xchg mov std xor pop mov shlb mov sub loope jae inc dec xor cmp mov fmuls jns sti stos inc fwait inc rcrb out (bad) jae cmc add enter insl div pop add add lcall inc popa and in loop ret mov daa adc jae stos mov or lret cbtw dec lahf hlt out dec movsl repz jne and je mov adc and dec jle mov dec sub fwait insl test dec lcall loop pop add xor faddp int fistpll pop dec push popa ret and pushf gs ret outsl pop clc push (bad) andl lea inc or cmp and cs sub aam adc sti sub cld inc stos lea dec (bad) jno inc push ljmp inc add nop test scas or pushw ficompl add add imul and pop inc push aas out add mov inc pop push xchg repz popf inc fs add or cmp xchg dec mov test jge inc (bad) jo into es xchg jnp xchg (bad) incb inc pop xor sub inc sub ret push xchg (bad) outsb pop test shlb in inc xlat call sahf es aaa cltd jle push popf cmp dec mov arpl addr16 jle jnp dec cli or inc std mov outsb mov (bad) dec mov mov jbe loopne les pop and mov sub jle or push xchg push fisubrl fldt mov fnop repz xor dec lret test pop jno inc aam sbb inc (bad) je ret sub xor or mov push shll fsubr adc (bad) jecxz inc int jne adcl add xlat fmuls inc stos ljmp mov add dec into sbb pop inc ret push xchg push (bad) pushl inc mov xor jo xchg movq mov adc pop jmp and scas push or orl cmp dec dec push sti in push mov ret les outsl jle dec mov test push mov pop out sbb dec push or lcall mov mov inc aam xor aas inc push das jmp addl mov frstor inc roll dec fsubr ja jns loope jp inc xor shl sbbl inc (bad) scas mov fs pop aad sub add adc inc dec int in aas inc inc push lods imul adc test daa cmp int3 cmp sub lret adc inc fidivrl cld cwtl or sti push subl inc dec rclb faddp insb aaa mov xchg push cmp inc sbb test and pop inc xchg outsl push mov loopne push sahf aaa jecxz sub jne inc fprem inc and (bad) sub xor xchg not nop push mov bound or mov inc xchg mov jo jl cmpsl push (bad) push add mov inc lcall fiaddl rcll push into and pop test cmp pop test add pop (bad) movsl mov iret mov in cli ja (bad) stos inc mov xchg xchg lods xchg dec dec mov adc cmp pop cwtl and inc incb pop jmp out inc fs add popf out inc dec ret xor orl adc fs add mov test pop inc loop xchg jns in add leave fiaddl ficom xor ret inc cmc arpl outsl sbb jae jmp jmp movsl push push insl mov inc push fiadd iret scas or jmp push loop decb jl xor inc cmpsb inc fidiv cs mov add mov sbbl xor dec or xchg testb dec sub cmp inc inc mov fs mov pusha pop push pop sbbl insb fucom push pop xchg pop sbb jo dec or pop inc lods ret xlat push xor das mov sub int push gs pop sub ljmp out push mov mov or addl shrw addl xor pop pop sub xchg adc popf jb hlt push lea sub mov inc lahf pop insb cwtl lods cld sbbl adc push cwtl xor or fcoms mov je push mov ja fs gs mov dec in or inc push icebp std jl or insl cmp sub sti xorb pop push xchg mov jg stos pop lret cvttps2pi sti inc inc adc pop or popa add mov mov insl ja movl js cwtl ret xchg jo enter xor xchg push ret call (bad) mov lods or push out int fisubr inc pop ljmp (bad) in push inc dec push in orps jb jae jg and ja jle je or das add cld pop out sbb fdivl (bad) frstor gs inc xor jnp lds ficom enter stos mov mov dec cli fwait lea dec pusha mov nop sub dec mov movsl mov xor daa xchg ret mov cmpsl std insb pop sbbl push mov cmp outsb inc jbe jb lods xor pop dec mov sbb mov lcall (bad) pop xor repz jbe (bad) and mov inc and lods pop imul (bad) or or inc jecxz mov xchg rcl outsl mov add das ret jo jp and inc xchg cs iret mov decb loope mov stos pop bound sbb fisubrl mov frstor jbe inc adc xor mov cld jmp adc inc sbb fucomi dec sub mov jne mov xchg push das cwtl inc mov dec cli or or dec enter lret jmp hlt adc fcomip inc out fildl jb insb mov inc jno mov mov sub jb,pt sub xor leave dec enter cld repz xchg ret imul pushf icebp dec sub dec in and out stos (bad) mov xor stc (bad) fisttpl push add stc iret ljmp test mov hlt cmp adc push ficompl int3 jno cmp jecxz jae dec sbb jae shlb arpl inc rorb xchg adc or imul inc cs out scas xlat aad jae sub pop jecxz mov leave or pop imul xlat hlt dec lret mov (bad) and decb ja push xor es push rcl jecxz mov xor inc and stos push ret push shrb shll rclw add xor cltd (bad) test in push outsb int cwtl sub jb aas addr16 ds out fwait xchg daa fwait inc mov sarb xchg mov mov sti xchg adc lods in aas mov (bad) mov add cmpl sub dec dec int lds inc inc pop adc jo dec jns imul mov notb push jnp xchg xchg pop lret jp mov xchg popa jle pop imull inc incl repnz push ret mov clc inc mov inc or sahf dec cs push fbstp rep movsb mov lret xchg jmp movsl lahf fisttpll mov cmp enter cmp pop inc je pop mov and inc data16 loopne dec xchg dec enter fisttp sub add inc call jmp pop push scas mov xor pop or hlt pop mov jb fadds lods jns push mov arpl aam (bad) pop dec mov popf test sbb (bad) inc mov lds incl cmp ret flds daa rolb shl pop push pop dec pop fwait addr16 and inc push loop or xor adc sbb cmp mov fwait rcll jo xor fdiv (bad) mov aaa ds xor cmp fnsave lods mov repz dec dec pop insl fwait gs cmp xchg mov lret inc cmpsl mov mov mov gs inc gs push pop xlat mov inc (bad) dec mov xchg outsl add mov (bad) adc cld imul push (bad) or into push sbb ljmp pop (bad) push jbe add aad xchg andb or cmp xchg add mov inc xchg or pop inc cmp lcall mov lods cmc dec mov jecxz sti loop aas push xor icebp (bad) std push lret mov pop add inc lds inc add ret xlat flds pop push daa pop cmp add fdivrs imul and (bad) fcomip cmp arpl jecxz iret mov xchg adc ficompl pop lahf lods mov jo pusha (bad) xchg fwait (bad) loop sub pop test sbb dec mov int3 fldl cmp inc push jnp jp adc sub insb xchg das jmp popa test imul repnz sbb jecxz subl loope and add (bad) and dec push (bad) lods push mov jle xor inc jns adc sbb or push out addr16 stos sti xchg inc aas lret and adc push adc dec notb (bad) div inc and xchg inc arpl mov push jns and dec lcall inc add stc loope sti js jle hlt push popa iret andl loop sub push sbb sbb xor cmc mov enter repz adc (bad) dec data16 in dec add addr16 test pusha dec add jg fs dec repz or inc data16 daa fiadd mov and cmp sbbl inc lahf and lock sbbl incb (bad) adc and addl in sub ret imul jnp inc push xor xchg cmp dec cmp (bad) mov add adc push arpl jbe inc pop mov pop xchg mov (bad) lea xchg inc adc cmpsl inc xor nop into (bad) out lock mov sub pop and pop jno jb lret out push imul iret xchg inc or insl mov push dec (bad) aas xchg stos lds sbb cmp lcall pop adc mov jnp or cmp ret mov inc outsl and mov inc push das jbe repnz inc and fcoms cmp sbb jns sub daa cmp push repz (bad) addr16 and mov jo das mov pushf or mov adc xor inc mov mov jle popa push mov mov add cld or aaa notb inc xor inc add mov imul incl jo sub xor jne flds inc mov sub dec lret fsubrl push inc js insl or aaa fidivl xchg fiaddl roll push add addr16 negl pop cmpsb adc lcall lods pop adc gs inc add mov lret pusha mov mov inc pop ds mov test adc mov inc mov or sub cmp xchg out xchg hlt add cli roll xor and movsl cmpsb push sub adc pushf enter lahf xchg and out pop out lret dec mov les jae cmp ret push sahf jecxz dec inc sahf (bad) out sub stc pop add rcl ret cmp divl repz (bad) popa (bad) jb ds fwait insl jne adc push or sbb sahf mov sbb in and push das out mov fmuls ss xchg xor xor inc decb push sub pushf and (bad) icebp cmpsl out lret imul xor sbb clc inc sub dec (bad) ret mov xlat push (bad) sub mov rclb dec pusha jbe add das cmpsb inc (bad) sub jae sbb adc inc xchg aad pop aas mov pushf inc xor pusha out js mov fwait push and mov xor and jl mov lds aad inc dec pop mov add stc xchg int3 pop cmp cmp mov dec push fcomps mov lods add pop movsl mov push ljmp gs out popf cmc stc sub cli or (bad) repz popf repnz mov fisttpll mov leave fwait cmp dec gs mov mov sbb nop int dec sbb fnstenv push inc mov aas movsl adc adc data16 mov popa (bad) out adc sub adc leave inc stc mov icebp into inc cmp inc sbb ss shlb add mov inc pop test or push repz loop insb repz (bad) xor outsl ljmp scas rclb jecxz xchg outsl push icebp test adc adc mov dec mov dec sbb jmp rolb adc inc insb mov mov fs repnz and test pop enter inc xor imul mov add scas xor test jmp cmp add rolb adc jge and push mov push sbb imul xchg aaa inc mov loop fstps clc jbe xchg shrl lret ja inc mov xchg inc into fbstp xor cmpsl add aam jmp mov xchg dec xchg cmpsb std les cmp adc and sub arpl lods inc cltd or dec mov xor dec adcl jge mov dec adcb add loopw inc fnclex inc pop lcall mov int loopne xchg (bad) js xchg sub jo std mov dec mov call sbb add stos inc inc mov and dec jge (bad) imul cmp mov adc mov xchg into jp mov inc imul fcomps cmp push ret lods and dec inc jle popa adc incl (bad) mov (bad) das sahf data16 mov adc in (bad) fmuls pop mov pop adc add mov lret pop roll push ja imul push inc or fadd leave std fwait stos mov adc stos loopne inc ja repnz adc jb or (bad) pop in mov shll movsl xchg pop gs sbb mov fiadd add aam icebp outsl lret or inc incl xlat mov repz mov in insl xor ret fiadd jns dec jge ja inc jo data16 and std inc adc inc adc jb (bad) jbe cltd dec ficoml pop test add int xchg xchg dec call fmull (bad) insl inc das lret ljmp inc jmp dec cli xchg xor ds xor jnp inc dec sub jb add in and sbb andl dec sbb adc cwtl pushf inc inc std fild mov add xor jl sbb cmpsl mov pop add mov addr16 inc fnsave pause pop call mov out sub fldcw sti cmp ja xchg adc stos lock xor cli sbb pop pusha jno loop inc int3 mov rorl push ret adc (bad) ljmp mov ljmp add out mov push or mov repz les mov inc pusha ret fs lods fiaddl data16 ljmp add mov sbb inc rolb cwtl mov (bad) jle or mov into leave inc adc lock xor (bad) (bad) hlt out cmp fs dec mov add pop dec inc cmp mov xchg inc les push push adc or sub push sahf (bad) sub adc fmull xchg movsl pop shlb (bad) jle roll cli sbb push in mov cld fs xlat add and inc sub rolb push dec push xor int3 jge pop fsts aam movsl jmp rcrl call ret clc push arpl aam xchg nop out jno pop andl fs jge test popa pop mov sbbl inc pushf mov jno fisubrl and push inc adc std enter sets sub arpl jae roll adc inc lods fbld add (bad) mov lret fmull ss aam inc sbb add mov arpl pop insb shrb (bad) xchg sbb xor enter or pop cmp and sbb jae fsubrs mov xchg sbb mov rcrb (bad) jb push xchg inc xchg sbb jmp and loopne popa and inc push cmp ret add outsl sbb xor push inc loop out or xor test test adc sbb mov jge inc sbb gs inc dec mov aaa bound inc mov loop push popa rolw (bad) mov cs pop mov inc ljmp inc push pop and push inc dec or hlt push dec mov sarb ret add inc push icebp mov pop xor inc dec push js jb add push ljmp bound xor pop mov add adc (bad) and ret insl into out pop clc cli adc rcrl sahf inc xor mov or ljmp rorl iret rolb xor ret lds mov sub push das inc mov mov jbe leave ret stos inc out jno adc pop add xchg rorl in ja mov lahf cmp arpl mov mov stos aad clc xor imul pop jge sbb sub or inc inc adc inc sar pop add mov xchg out jl cmp mov aad lret or daa or lea mov pop jecxz jne mov sub data16 mov adc sbb cmp jmp and add or adc imul inc pop (bad) fstl pusha iret inc mov ds repz mov cli mov or (bad) cmpsl mov outsl sbb mov and pop dec inc scas jne shr and ret push xor mov mov clc adc dec (bad) sub dec iret mov imul jns inc repz test add inc inc push sbb adc jmp xchg push bound xchg xchg inc je ror sbb inc out rcll incl imul push lds js sub pop (bad) cmpsb jae stc or popf hlt in into cmp loopne lret mov or cmp inc lret imul push cmp mov in push icebp shll mov inc pop inc mov sub dec lods pop daa test loope insl (bad) fdivrs pop aad clc dec add push rcrl imul inc and cli dec out movsl add mov lret dec add cwtl xor movsb inc push jno dec mov jmp in pusha mull pop dec sub inc xor movsb push cmp test out cmc inc sub movsl rorb test mov out lock das and pop inc cli mov jnp in inc xchg cmp xor jecxz adc mov jle pop (bad) (bad) outsl out mov jno arpl push sbb sti pop mov rcll lret arpl fadds push and push or sahf adc or stc in in jae mov arpl sbb push gs xchg cs sbb ret dec push in adc jno add mov test dec xchg rorl faddl fs inc add inc push jbe ljmp push push sub push arpl pop ret fstpt inc cs aaa push jbe push fnstenv inc int3 faddl add incb jae cmpsl jp mov lret or sub push add pop ret jmp pop je inc mov ss cmp inc dec fild daa inc cmp mov push cwtl dec xchg dec (bad) into out cmpl jno aad dec or imul int dec idiv jmp (bad) (bad) (bad) cltd jecxz cmpsl inc pop inc mov sahf inc mov test mov adc dec lds xchg mov ret fidivrl inc cld jmp dec pop mov lea pop mov call fild sbb cmp rcrb sub rorl cld jb add sti sbb stos fucomp sbb pop int3 add out fs xor lahf mov dec or les mov push dec stos xor cmp jmp (bad) sub fcomi dec scas inc mov (bad) xlat in loop bnd xchg (bad) and sbb (bad) roll lcall inc dec jge pop jns aam pop popa aas push jl jg xlat out repnz lods in add and push pusha fwait xchg arpl shr adc out jg inc sbb lds xor pop push rolb inc les pushf (bad) addr16 das inc mov std jne inc mov xchg cmpsl test fst das jo mov push inc mov idivl and cmp cmp ffreep pusha icebp test jno (bad) and sbb push inc adc imul inc xchg adc addl ret pop in cs out inc mov enterw call mov mov popa push mov lret je rcll mov cmpsl jns inc (bad) lods or sub push js,pn outsb xor sub add sarb xchg jo jnp jl (bad) imul add and jae (bad) arpl mov inc and push faddl sub nop xor lahf jno mov out mov lods inc loop inc divl sub and out imul adc sbb mov popa lahf inc or loope cmpsb sbb mov xor loope push jmp jp cmc fmul xchg roll cld or mov imul test add lcall xor mov add xor inc jae les xchg roll fcompl cmp cmpsl add mov dec xlat scas aad pop cwtl pop push mov sub cli inc and inc pop cmp xor sbb inc int3 mov pop jmp adcl cmp loopne inc and inc insl push or xchg mov mov or in jns lcall mov push mov mov and jecxz loope fwait shll sti push dec jl stc cmp aas scas pop inc lods out mov in decb rcrl (bad) mov adcl add mov loope jg cmpsb arpl inc cmp pop out leave das shrb pop outsb aaa sti pop xchg into sti cmpsl dec mov dec xor pop adcl xchg xlat leave out push daa out cmpsl xchg dec inc ret mov inc sub lcall in mov push inc inc jno cmpsl call pop pushf mov ds pop outsl and pop pop sub cwtl in inc sbb push fildll jge mov sbb mov jo mov sub jle ret sub xchg add icebp add repz stc inc cmp or call xchg xchg push arpl inc pop mov fwait movsb loop add ljmp lret sub pop insl push xchg (bad) adc xchg sub sahf inc mov add aam mov adc out aad sbb sub push jne insl (bad) xor ret add inc push fild cmp lcall pop push or cld dec mov (bad) mov sti stos dec mov stc mov inc add or xlat call sbb pop outsl pop aad inc rclb stos cmpsl ss lahf inc fdivrs xchg imul inc sbb adc jne adc inc (bad) fimull pusha lock out inc out call (bad) dec mov inc xchg push jno pop in jns xchg fdivrl mov push sbb out mov push ds lock inc jmp sbb mov clc jno insl js dec jo lds jmp jns xlat sbb push loop push sbb inc cmc mov pushf rcll xor push push mov mov mov fmul push inc les and xchg inc pop mov (bad) (bad) jae aaa inc mov fmul (bad) or inc aad and xor imul stc repz add icebp add in adc inc fsubrs mov push jmp and jns (bad) jmp icebp inc mov sbb xor cmp fildl hlt (bad) sub addr16 insl rorl std push ja mov mov sar outsb add dec lret shll jl rcrb inc ret popa mov lcall dec add jns inc in and pop jb fild (bad) cmp inc cmp jbe jno sarb add cld lock jne stos aad jl inc out loope cmp enter pop push (bad) pop or inc sbb fimull rclb stc inc (bad) xor and lret repz inc inc add push pop push ja inc push xchg (bad) jb imul cmpsl jge mov nop lcall mov inc add push fdivr sbb add (bad) pop pop aas ljmp mov pop ret (bad) xor push sub jecxz mov jmp sahf mov repnz mov loop push mov jge xchg cmp cmp push dec xchg (bad) mov mov into mov fldenv popl cmp xchg in sbb lahf mov daa mov pusha sub out dec pusha dec fstpl sbb repnz pop cmp xor fisubrl in sub lds loop,pt mov jae cld js jle mov outsb dec popf jo test mov dec mov dec mov ret xlat dec ja lods xor sub add xchg push movsb pop sbb mov scas mov test push mov mov mov sub xor ljmp sub nop outsb ds mov addl sub outsb push rcl inc sub pushf repz dec aad aas dec iret arpl add sbb pop sub dec push dec or cwtl or dec pop mov push sub (bad) xor cmp or xor jg and sub std orl arpl xchg sub mov in xchg int mov dec dec cmp sbb cmp xchg int3 and or test push adc call aaa mov shll dec mull adc jo nop push lock dec lret fidivrl inc jns (bad) xor outsl adc pop and lods (bad) inc (bad) mov stc aas mov cmp lcall mov mov mov f2xm1 push and mov pop popf or add xor pop or cmp jnp pusha dec jns mov xor add cwtl xchg pop sub pop or aas xchg adc lds push je pop xlat and xor xor cmpb pushf imul lds mov ret add and inc ret mov repnz mov imul cs jg inc call xchg add int3 push push xchg sti subl pop pop int3 leave or xchg mov movsb es loope (bad) repnz shl mov sbb sub cmp add and popf push (bad) pop punpckhbw popa add sahf shll movsl fcomip in push mov mov pushf jns pushf inc fsubr repnz push test aas sti sbb and inc adc sub cmp stos aas cmc aad sbb add je movsl out cmp repnz xor push lcall ret aad pop mov stc cmp sub out je inc sahf add out inc dec xchg addr16 inc add fidivl push call sub and or inc int3 or xchg flds es add cmp mov imul jge scas add (bad) push inc lcall enter nop sub pop cmpsb cmp push adc mov gs add jo lret sbb clc jno push inc sub out adc mov in lcall subl aam mov loopne mov pop xchg sahf pusha push das cmpl push clc inc loopne xor aam or add nop jns dec movsb inc inc push pop out xchg cmpsb in inc sbb loope popa or mov int mov sbb inc mov push imul frstor dec inc mov inc mov dec jbe push add inc scas out jge sti (bad) mov iret jg sbb (bad) dec inc nop cmpsl addl mov inc ss jae cmpsb sahf fistp icebp inc xor stc fisubl push inc or sahf (bad) xlat inc jb sub xchg dec xchg dec adc sbb inc mov pop mov sarb sbb sub sub (bad) jno loopne pop inc xor fistl addr16 lea inc mov stos fdivrs xchg or adc push inc jmp sbb in mov sub mov arpl stos push adc out xchg push dec add or mov sete pop popa dec mov stos cmp nop in xchg adc fdivl sbb push xchg sub xchg mov lret push mov sarl add mov sub lock or int3 cmpsl cs shrb (bad) mov loope inc add and pop mov leave pop fstpt enter add cmp dec mov cmp (bad) mov lret sbb cmpb inc (bad) push popf in imul mov icebp and jae push inc push xchg outsb xlat rorl in mov inc lods or add lds push inc aad enter sarl xor cmpsl add andb mov outsb pop push inc jno push js aam and dec sbb mov scas add inc pop push subb mov mov lcall pop inc mov inc mov popf scas mov cmp or ljmp or sub mov sbb pop mov lock test sbb lods push stos insl sub mov mov sbb rcll jae rcl outsb (bad) push cmp adc pop in enter das icebp ret pusha aaa or and cltd inc jecxz pusha movsl and mov dec push cli inc rclb xchg fistp inc arpl mov pop xor cmp inc and mov shll inc js int notl xor lods xor cmp adc (bad) std jne mov imul push inc in add add jo cwtl push pop ror inc popf fild and je aas fisttpl cmp sti cmp movsb outsl sub inc cwtl nop xor push inc xor js std jmp outsb and pop xchg cmp dec mov or out push adc clc mov jo ja into sysenter inc test lret and ds out adc std aas movsb add inc sub sbb mov and fildl pop int3 sub clc int3 mov lret push ds shrl and adc jmp sbb sahf push jle sub xor jl cmpsl push popf cli pop dec flds rcll rol mov xchg dec insl js mov inc mov add test jg les pop loope sbb es pop push std hlt sbb mov ljmp push stos fwait or add mov lcall ljmpw lock xor mov jle jbe push mov aaa or mov leave mov shrl pop pop or add xchg icebp or out dec test orl add (bad) cld mov lds lea test pushf xor mov pop push pop push mov dec xchg xor jmp pop inc xchg das addb pop inc cwtl adc sub pop mov out les fnsave idivb pop push mov lock aam sub sbb cmp (bad) notb (bad) popf out sbb sub mov std (bad) mov mov inc mov add iret mull in xchg cmp xor fucom cltd xor xchg add add int3 clc inc cmp scas xchg imulb aaa into jg dec leave jmp cwtl (bad) mov (bad) sbb inc out pushf lods mov sbb inc insl push stc mov or jo jbe push mov popa push scas dec mov adc std inc gs jo mov jno int dec test lds stc inc push and inc call push daa popf inc scas fsubr pop in ja cmpsl daa sbb jl xchg aam inc add ja add inc jnp and and mov addr16 adc jns jle jae cmpsl dec or pop lods loope imul and cmp and les int mov inc inc mov cmpsb adc pop clc lods repz shr adc roll cltd inc sub out pop imul cmp clc out cs jg,pt dec test push or mov popa shr jb xchg cltd aam cmc (bad) mov lods inc iret data16 dec sub cltd in out add push xchg mov cmp fsubp arpl mov outsb jecxz jle sub cld popa sub popa push cmp mov push cli and sbb fmuls in jno pop icebp inc sbb and (bad) mov fxch jecxz cwtl in mov inc enter (bad) xor mov inc adc ljmp movsb xlat xchg scas inc mov test (bad) cmp push fnsave xchg dec lcall jl add loope cmpsl nop je and cmp movsl mov dec and inc repz xor (bad) cmp add and push jnp sbb leave cld lea jae stos lcall xchg push popa inc ret loopne es fs cld inc jmp dec aad push xchg xor dec inc mov xchg adc inc bound sub or cmpsb cli push repz or jo outsb mov sbb add fbld add (bad) jno sbb into sbb outsl push adc ficoml mov nop sbb cmp bound jp jle ret dec fcomp out lcall xor mov mov dec inc or js neg xchg push lahf cmp inc lcall inc mov jno push pushf or repz xor xor inc je cmp sbb pop dec out inc movsl lahf dec and or add dec pushf or mov jns aas pop enter jge inc in mov faddl xchg mov (bad) sbb outsl inc frstor jecxz cmp sub lahf stos jp and repnz pushf mov leave inc les mov jae push sbb jo add scas xchg sub and decl es add bound pop pop mov nop xchg mov jge push jle fmul (bad) je ret lods lcall es xor rorb adc ret (bad) (bad) mov inc mov mov stos jo push ret cwtl out mov lcall leave fidivrl int pop imul add ja js push cmpsb std ret addr16 (bad) imul jne push lahf jnp mov mov lea lret push incb pop jne ret pop aaa or cmpsb cld cwtl mov mov and cmp fimull fild cmp mov adc test cmp ret mov pop fbld stc paddq dec push sarb (bad) inc add jecxz push jbe scas xor adc mov and mov dec inc sub xchg ret pop bnd adc pop inc push xor pop iret jbe xor mov nop sub or add jecxz jo sub sub ljmp push xchg inc fs push mov pop inc jecxz adc dec sbb fisubr adc int jmp ret dec clc mov nop mov fstpl mov mov (bad) outsl ja mov push mov xorl in in (bad) jae outsb dec outsb xchg test and repz rol mov inc cmp mov or jge pushf (bad) cs (bad) aad mov sbb inc ds fbstp jecxz fcoms or lods and int3 movnti in fwait and ja jnp inc add ror mov inc ret cmc mov mov daa repz ret cmp and aad inc jbe sub movsb pop xchg push (bad) sub dec dec enter (bad) ss icebp xor xchg pop lds iret push push testb push test (bad) or jo xor je popf out loop ret rcl mov sti lods into lock int outsl sbb add in add (bad) (bad) pop or or cmp mov ret sti inc add push arpl inc sub or dec push ja mov push add out jbe and inc outsl mov (bad) xor and loope jo or dec andl lock adc cmp stos mov mov aaa fildl or jmp cwtl (bad) ljmp scas jnp dec movsb scas in movb sub add idivb push fistl jae leave lahf mov insl add add call jo inc xor mov shll add sub sbb (bad) push push dec add jns xor cmc jne mov movsl jo xchg (bad) mov inc sub xchg daa loopne inc mov cli pop pop out inc ds and dec pop mov inc shlb mov dec cmp repnz std out mov pop xor lea cmp dec jo xor inc cwtl cmp movsb lret leave pop inc inc gs je (bad) or inc cltd mov ret sbb or inc rcll cmp insb movsb lret cltd and and inc repnz (bad) subl popl insb out hlt mov and inc int add or dec not ds mov faddl mov movsl inc sbb dec lods push inc push mov xor aaa (bad) ljmp inc in jne nop or sbbb and jmp mov movsl fwait addr16 inc stc imul xor xor jge mov rorl adcl rol inc sbb add cmc jge mov mov push fimull rolb aad lret mov stc jp cmovae in add enter add gs aaa sti addl adc test xor push push sub xor cmp mov es rcll adc hlt jnp fwait push push jbe dec push inc dec je jo les xor mov daa (bad) push movsb add loopne dec inc aas push dec and jae add jg mov dec pop outsl fisttpl or (bad) das fistp inc or pop xor adc adc stos flds pop int3 sbb into push or adc cmp mov xorl pop mov or lea pop adc cmp xor inc inc rolb sub adc lahf xchg (bad) out sahf dec js jl inc lret mov jo sti sub ret je mov aas inc inc sub jle imul xchg xchg xchg jmp xorl jbe popf test (bad) xchg push inc xchg repz and and dec mov lock push jb cmp scas inc push xor sbb mov jmp inc in xor cmp lret or clc dec xchg inc push xchg icebp or mov inc and rcrl inc pop or and insb mov push push shl mov inc and or dec push pop in cld pop sub rcr xor repz lcall mov jno mov in aas cmpsl inc add pusha sti push lods mov rolb sti adc mov inc sahf xchg adc (bad) or jno cmp sbb notl rcr lock dec fsubs std frstor rclb mov push scas add (bad) hlt dec pop mov pop mov adc inc mov loope fwait (bad) ja arpl jbe xchg or dec mov into jb add and sub push or mov call adc mov out xor jbe inc inc nop ss repnz testb divl mov bound rolb repnz push and sarl adc push jno ds sbb dec ljmp mov incb xor inc adc mov inc add or outsb jno inc ret xchg inc inc mov popf divb xchg xor cs cmpsl cli leave mov mov (bad) sbb inc in test aaa mov lahf add movsb add dec lret stc push sub push inc test pop cmp movsb mov push pop inc sub shlb scas jp xchg pop xchg dec test xchg cmpsl into xor jmp inc lock faddl inc loop or lds inc pop scas xor xor xchg sti dec mov xchg xchg mov mov sahf rolb push (bad) cmp sbb inc inc adcl test add daa mov add insl push loope jnp or fmull mov ret pop iret mov sbb push into inc xchg inc pop push cmp adcl arpl fdivrs push pop andl cmp in add (bad) enter (bad) dec mov jle pop inc aaa dec pop insb add sub fldl xchg mov dec jp mov add inc stc lret mov mov in int3 notb aaa cmp les cmovne and aam add fnstenv adc jne les and cli stos push xchg out inc jns popf or out aad inc nop sti shlb add mov jl inc adc sub icebp outsl xchg add mov decb dec test sub push test sti jg nop inc mov xor dec (bad) into inc test ret outsb xor rolb je xchg or add push sahf or xchg ljmp cmpsb adc cwtl or (bad) cmp out das jecxz test push popa inc or pop cmp push addr16 adc inc lret mov fnstcw pop in push fwait mov cmp mov lods xchg cmp xchg pop jl inc (bad) cld out pop ret xlat add incl inc imul test gs sub arpl in mov popl movsb (bad) (bad) mov xchg inc leave push sarl imul inc iret clc in cs jne lock adc inc push jmp inc pop lret mov fwait outsl push mov in inc sbb pusha mov popf imul jle int js mov icebp mov pop into mov xor inc pop mov dec jae and inc lahf mov leave push repnz nopl jecxz mov xchg dec dec add test fist pop sti ja cmc or subb fistpll test inc cmp ds ret inc add add int3 sbb scas push ss ja adc dec sub push rcrl jnp inc dec mov pop test mov inc cmp pop lret mov inc and pop jecxz test mov sub inc (bad) sub test mov adc dec xchg mov lahf hlt int3 inc ja,pn pop pushf and push xchg jnp inc icebp mov dec or xchg and je in mov or int mov and mov sti aad outsb mov roll gs lods lds jnp out adc fildl rolb jecxz hlt push xchg iret loopne out nop mov inc dec pop cmovnp dec and or dec xchg mov push cmp add aad jmp cwtl and push sbb (bad) mov jo inc icebp xlat mov sub cmp and add pusha adc (bad) dec cmpsb hlt inc dec dec jo add mov dec jbe mov adc lea ljmp xor test dec bound dec xlat lods inc popf mov inc nop pop add test stc dec scas sbb ds std lods mov pop mov mov jae dec mov loope add xor aad mov cmp push push xchg std dec add inc cltd hlt mov inc add xchg inc cmp pop gs mov mov lret ret cmp pusha sub push incl aam out repz lahf aaa sarb adc inc inc pop jecxz jae cltd xchg xchg adc dec je test mov incl push cmp cli jecxz roll or test mov rolb pop enter movsl cwtl cmp inc inc (bad) sahf orl mov pusha inc adc inc iret jbe aaa lret ret lods sahf xor mov add cmp pop dec xchg fcompl test push pop cwtl mov mov icebp jbe mov push mov sbb dec mov jno (bad) fdivrs mov mov daa pop in add add mov repz inc rolb jae mov push dec (bad) mov ja icebp ret leave sbb mov mov mov mov xlat call ljmp jl adc mov fiadd pop push push mov out add aad fild jg pop inc nop mov pop xor cwtl jnp fsubl ret out in mov jge pushf inc add sarb daa cmp rolb inc int mov cltd inc inc sahf pop (bad) push rcll aaa sub repz repz push in (bad) push inc lods xchg mov pop mov repnz cmp sub scas scas xor mov mov daa push inc dec add mov inc or repnz inc pop es aas sbb dec push aam xor jnp sub mov or adc (bad) mul int3 shr dec xor fwait sahf lret push imul mov adc add jo mov ja stc xchg pop inc lea out adc (bad) push ret orl andps sub cli and sub fcmovb loop mov jp push enter or les cmp fs xchg lret adc and aas inc repnz imul cmp pop cwtl cmpsb ret sub cmp jecxz xchg mov stos scas das ljmp sub dec inc popa stos outsb cld sbb inc mov cmpl xchg push outsl sub mov shll pop xchg int3 pushf inc mov arpl insl in cmpsb popa outsl sub sahf cwtl ficoml add clc fwait scas dec into leave sbb and stos dec into movsl insl pop adc cs jnp add into sub lret pop adc cmp test nop (bad) in and mov mov js mov lea bsf cwtl scas sti inc stos shlb xchg jmp fsts and jo add xor cmp add mov pop cmp sub cmpsb std or mov jae cwtl lret push mov cmpsb pop dec mov pop das iret lret (bad) dec sbb jae cmp rorl adc sub pop fcomps fistp xchg test pop add sub divb sub lret das lods cmp add roll (bad) in imul sahf dec out adc (bad) pop dec fsubrs out dec stos jb xchg jp xchg vmovdqu cmpsl sub mov xor pop imul insb mov mov mov ss ret aad stos cmp sub jmp fs icebp gs pop mov (bad) inc xor mov (bad) mov cmp ret add inc fs xor test xchg lret rep jmp movsb sbb stos arpl movsl test push adc lods or ficompl add fiadd pop inc xchg cmc cltd orl mov adc call pop out daa and dec jae inc (bad) (bad) and imul push xor std into fidiv int3 adc cmp sub outsl xchg push dec cmp jns dec rolb mov jnp rcll xchg push mov mov add sub push mov xchg pop decb arpl cli rorl stos into rcrl (bad) adc das (bad) jne icebp ret test jmp outsl sub mov or adc movsl mov dec ret movsb push fnop mov (bad) fldl out (bad) dec (bad) iret inc sub push scas inc push cwtl xor xor cmp xor sysenter iret jae sbb push ret sub daa adc or add add jge outsl fwait xorl in (bad) cmc leave fdivrs lret arpl dec cmp push in inc in out and and test jbe mov mov inc jmp mov fiadd pop xchg les inc mov add pop movb or das xchg mov cli and sub mov fiadd nop add jnp fadd cmp dec sahf jmp (bad) call scas mov and in or jl cs (bad) fdivrs sbb push inc rcrl ds scas sar or xchg jge sti out into lock inc bound (bad) xchg cmp mov fdivrl jno test adc (bad) ja dec fwait rol flds pop xchg (bad) out sahf movl dec jb push aas mov cld test inc sub xor bound xchg insb pushf dec mov mov dec cmp cmp jge mov test (bad) es inc mov (bad) add and nop popf das std rolb arpl test mov jecxz (bad) mov xor fcoms sbb mov add unpckhps data16 xchg arpl les mov ja inc jae insb jns ljmp sbb icebp jbe or xchg cli or cmc push inc jo xchg inc js cmp scas mov xor popa dec ret mov sarl (bad) push pushf pop dec add dec inc pop sbbl sub jge test cmp adc push insb mov mov jb repz push mov xor jp call or jle cltd dec lea inc xchg call push cmpsb inc pop (bad) push inc (bad) (bad) inc or js and roll dec jo adc es xor and repnz ret psubusw dec dec movsl mov stos and adc sbb hlt mov inc jl lret rcrb iret push adc mov inc (bad) out fnop dec in cltd mov cli addl inc fs mov inc enter add fnsave std inc mov cld push cmp cmpsl sub inc test sbb das mulb mov pop add out xchg push data16 test xchg js push cmc ss icebp shlb inc inc ret inc xchg jb popf xchg jnp loope adc cli outsb aas fbld inc push sbb in repz in inc push dec popf arpl and xor push loopne jae cmp inc fs push inc pop xor imul fldl inc jg pushf mov pop xor dec mov mov mov sbb push test loopne jns mov std aad cmp fisttpl flds push dec adc mov mov pop mov test mov cmc iret jecxz or jmp out sbb into testl dec push popa ss sbb mov cwtl lds in sarl inc je popa out in push mov ficom inc fwait push dec add adc pop push stos inc cmp test fldl2e insl in sub jae into inc pop cwtl pop push shll dec pop mov cmc adc mov and add xor xor jmp push push pop inc (bad) (bad) fdivrs outsb mov pop xor popa out add jmp cmc push in outsb inc scas test enter jbe je test fwait sub pop lret hlt shrd and pop xlat in arpl inc out repz aaa loopne movsb ss xchg xor add inc pushf mov inc mov mov pop push add adc (bad) out xor mov xchg daa lcall push mov jb push mov jae pop clc movsb pop inc int3 sbb aaa xor dec mov lret inc movsl or xor sub lret in lea and xor mov (bad) fsubr ret add add sbb out dec ret mov subb pop repz add mov xor mov lea dec aad add cmpl sbb int3 sub jns adc lds dec je jecxz jle push sub pop sti adc jnp cmp push sub jmp repz xchg sub ret in jl pushf rclb shl mov cli push loop scas idivb cmp cmc rolb (bad) push adc xchg inc scas pop ljmp add std add call icebp mov dec sbb pop inc adc and inc pushf mov stos jmp mov pop pop cmpsl sub into mov mov fild clc cmpsl mov in add adc and inc fsubrs fldt aam add std sti xor mov out test repz inc in iret sub and ss mov fisttpll or push inc mov push push fwait clc mov mov out inc jl jle imul mov or mov dec arpl test jge jne std xchg lahf jno aad repnz fiadd movsl arpl test xchg mov adc inc xor cmp lods sub sub rclb pop daa ss jge inc rcrl dec or out or in and dec mov xor xlat dec les push flds outsb add cmp mov fsts int xchg xlat and ret repz loope inc movsb inc ds cwtl imul xchg xor hlt and scas mov ror sub nop (bad) aas ret dec fildl (bad) aam stos mov mov dec xor scas lea arpl sub xchg inc (bad) xorl and push xor insl adc adc fbstp cmp cmp or lret in sarb int inc push push and xor iret fs int3 mov cmpsb setb addl std jecxz js aas xor inc cmpsb push adc jne test sbb xchg xchg mov lods sub adc shrl jp mov inc ror test cmp push sbb cmp popf outsl cltd nop stc jl xor lds insb add fcmove mov pop orb jns add loopne sub movsl sub inc xchg aaa cs outsb mov gs push fmull xor inc shrb jge push jmp mov notl mov in inc lret popf lcall inc stc mov lret leave fucomi push mov push inc mov xchg das inc mov dec (bad) jle insl jmp inc sub xchg or lock (bad) ret out pop inc xor ret je neg add push xor mov test fldl sub mov in xor adc dec xchg roll ret jo and lahf or jg lds in xor add leave repz inc lea sub inc or jnp inc ret and xchg dec out push mov ret mov daa cmp test xor add xchg insl pop mov pusha mov addl je shll cmp and inc mov imul std adc xlat into and hlt (bad) cmpsb mov adc pop mov mov inc add xchg sub mov jnp jle mov and adc xchg imul fiaddl scas and push (bad) push jno aam inc add mov inc fistl and sub or test cmpsb push inc aad pop inc loopne icebp lcall xor adc sarl mov inc (bad) loop mov adc loopne adc loope mov out imul pop pop push jnp lods js cmp in loopne std aad xchg dec add insb (bad) xchg add and into inc inc arpl sub mov jo push xchg addr16 cs mov sub out adc inc loop xor outsl inc scas popa mov inc mov incl fwait mov cli add dec ds or add sti in dec add inc sbbl les jb (bad) enter jne das mov dec (bad) fiadd psrlq jns and inc push in test push shlb jge repnz mov aaa xchg mov cmp std pop cs (bad) push xchg movsb inc scas add mov fs xchg pop imul dec fadds dec rolb in add in das iret dec addl jl inc dec cmc arpl rorl sub cmp insl inc pop hlt jno mov adc daa pop mov out xchg inc sub (bad) scas add bswap dec test push fcoms pop mov xor test add pusha jno xchg mov mov repz xchg hlt shll push or outsl imul inc and jmp les ret or sub xor shrl mov sub (bad) or aad push lret ret int fimul into fbstp push rclb and push sub jno dec fsubs das cmpsb and shrl adc lahf pop jb ret lock add jnp iret xlat and aas or pop jmp (bad) cmpsb pop rcl sahf lods cld cmp inc push test mov sub jbe ficompl pop outsl inc test imul mov rcrl jae xchg jns dec adc pop add lret lock add xlat loop das ret mov xchg rcll test inc arpl pop push mov movsb sub pushl sbb dec inc and outsl sbb sti and out sub jbe add lcall fisubrl push mov sub sub imul inc jns jg push lods inc cwtl cld (bad) sarb pop mov inc pop sahf es ljmp or inc sub lahf sub sbb jp push xchg sbb push pop add jb inc stos outsb push push inc test mov fcomip sbb (bad) xor (bad) or and aaa sub mov add fwait lret mov jp movsb xorl pop inc jmp lret ljmp mov mov cli mov dec mov mov or outsl xchg or cmp dec test xor aad jle inc sbb sub pusha jmp sti pop push rcr or add ret je inc add adc cmpsb inc fstpt xadd js sbb repz scas dec push and loope push popa shlb dec insl fcomps repnz sbb mov cmc rcll pop fldt sub xlat push int3 xor lcall je dec xor pusha lea or lods out xor or mov mov ret ja lahf in es jecxz adc sbb call inc pushf insb stc bound mov and loope sahf inc xchg jo int3 adc test shlb pop cmp mov nop dec ret inc insb cwtl fnstcw pop gs jbe mov ljmp jg lea jle aad incb pop cmp movsb xor inc cli cwtl pop or add (bad) xor lods push sub sub inc adc push fisubr push inc sub jp scas movsl push mov mov leave inc movsl dec sbb sub ret insb fldenv cmpsb fstp sub mov lea xchg push xchg lahf or inc cmp inc xchg rorb add enter pop inc imul and xchg fucomp pop sbb ret mov push xor jecxz pop js adc adc loopne lds icebp xchg pop inc inc pop lods push cwtl mulb add clc dec scas xchg dec popf push inc jb and scas xor movsb addl adc addb test scas dec dec rolb sahf dec or sbb xchg sbb repz in pop outsl or mov fsubs and and jae push add push dec inc aaa mov dec sbb mov jae clc sub inc inc (bad) imul xor loop mov pushf mov inc and add imul stos adc adc jne outsb mov dec add inc outsl xor (bad) aas xor pop sbb or pusha xor mov xor roll xchg aam xor xor sti test lea cmp jo inc call stos jle push cmpsb lcall inc push adc shrl shrl inc or add adc adc (bad) xor lret mov mov in and fwait dec push icebp push push repz std sbb xor xor inc mov pop push pusha jno inc loopne jns cmp popa in sbb aam push mov push dec popf push (bad) scas mov or pop imul jp cmp dec enter mov nop mov push xchg mov push or repz adc xor push sbb ret pushf push sahf fnop stos aas sub dec xor out jo in inc (bad) imul sub out mov xchg les iret into lods jle into jmp sub dec or std not shrb inc and repz push inc (bad) sub and ret les imul call add pop iret mov jno push sub test out xor jg inc enter jle arpl inc sub jae inc ret push pop jl popf (bad) lock push scas fs fisubr fist cltd and mov andl jle stos addps mov mov dec sub and stos shrl int3 das test mov mov xchg into pop add mov ret add in xchg or mov gs push stos fidivrl jge push (bad) andl fldcw mov sbb lock bound enter les mov dec and sub xchg add pop fmul push or movsb jg push xchg push addr16 movb nop mov in sahf aas inc pop fldenv pushf xchg fisttpll xchg or insl ret xchg sarl jle aas enter push add bound xor fsubrl push into dec cwtl jecxz mov lret aaa cmp inc jge xor bound out push fdiv jno inc jns in rclb repz sub movsb inc arpl in add pop fwait inc mov xchg cmpsb test push inc rcrl loop add fs dec fldcw inc mov shr mov adc mov jle xchg cltd inc sub jle pop push sbb repnz sbb lock popf sub inc jbe dec xor daa pop lods scas aad lcall ljmp ret or fisttp sbb mov scas rep push inc sbb sub xor jo inc dec lods jecxz xchg push jb jnp mov (bad) xchg aas xor cltd inc jmp std cmp inc jecxz adcb pop outsb mov or cli or les add add add sarl cld push mov out lock ret rcrl lahf push adc xchg fldl daa inc and loopne inc addr16 dec je test jg mov fs imul call outsb mov arpl push das cmp inc push les cs or push cmp inc test dec jg int3 fstpl fiaddl or cmp je addl fwait and stc in pop pop pop dec mov push adc lods xchg and outsl cmp sub push bound addr16 push push dec sbb call es int xchg test nop in in inc inc mov mov outsb inc add into test pop fisubr push (bad) sbb loope (bad) fisubl inc aam insl ds sub xor lcall xchg addb fucomp jbe jge in lret aam rorl sub mov inc push ret iret cmp js jb mov loope cmp movsl test out (bad) jno and and mov push xor dec push dec xlat pop (bad) lods imul mov inc cmp cs mov insl xchg test lea push inc je mov stc jnp pop lret mov imul flds cmp pop insl inc sub sbbl out xor mov sub and jns (bad) loopne pop jg push push imul dec fadd loop add ret push pusha movsb in mov leave fistpll out xor into ret mov dec sub cmpsw mov rorl andl add jge inc out lcall adc inc arpl mov sub inc stos sbb push and dec mov fsubs rorl ret int rorb sbb jp ret mov lock popa xchg mov push outsb inc add pop mov cli hlt cmp jo inc inc sub (bad) push (bad) sbb in inc shrl testl sub pop (bad) adcl add inc push fwait mov lea and mov jb inc (bad) jl cmc push sub dec clc mov stc inc stos cld scas mov movsl or insl outsl pop pop aas dec sbb int3 cmp ds push sub xor add xchg xlat test movsb xor sub mov shrl mov leave test fiadd aas nop cmp or pop movl fnstsw jo jae pop mov cmp mov cmpsl outsl cmp push fisttpl sub lds (bad) mov mov fsubrs adc loope ds jg mov and nop jecxz xchg push push stc paddsw mov xor pop rol out daa and pushf cld pop out sbb shrl cmp data16 adc pop (bad) into adc lods xchg sub mov imull jnp add sub mov inc add adc mov hlt adc pmaddwd call xchg add test mov inc inc loope cmc sahf out add inc push inc (bad) pop pop mov test cmpsb pusha pop jae push cmp rorb out mov cmp inc mov mov xor inc push out push pop das popf inc cmp pop imul pusha and jl jmp cmpsb into sub bound dec jns pushw ret js shlb cwtl inc jp out mov add inc (bad) xor inc ds iret xor subb fwait jb cmp lds pusha cmp aas out mov in inc xchg sti adc mov add gs fldt lahf sarl in adc repnz inc mov test cmp add sub (bad) loop (bad) call dec sub mov cld push fwait dec inc fiaddl cmp mov jno nop fsubs decb push stc cmovae sub icebp sbb mov mov imul and push xlat test adc in jb lea in scas pop sub sub sbbl aam xchg mov pop push add adc jle loope xchg adc inc jmp aaa int cmpsb (bad) mov xchg jo push xchg cmp out xchg icebp mov popa mov xchg scas inc add mov lahf in std push outsb js sti push cltd imul fcoms ret add repz inc mov mov lret mov sub out push stc inc imul mov flds xchg (bad) lcall or fsubs nop repnz xchg inc aam add jo sbb sub add cld aaa sbb dec inc jns lret lret fisub mov into inc (bad) sbb enter out ret xor mov jmp push jae jecxz mov pop inc mov sub push sub dec pusha test mov mov xlat pushl mov inc pop mov xchg js adc cmc les cmp ret inc add cwtl mov push mov mov dec dec pusha outsl inc push das xchg cmp xchg mov mov xor pop cmp inc dec popf enter mov pop sti jno lret mov ret pop adc add gs pop (bad) aas inc mov mov mov mov mov aaa out adc (bad) cmovae arpl cmp gs loopne dec sub push dec inc aas sub mov adc nop cli push adc aaa insl mov cmp inc inc mov sub or cltd scas xor bound mov xor out inc mov fs or inc pop adc jno inc mov add cli sbb sub mov hlt inc adc movsb mov cmp or inc mov xchg test sbb push mov pop test jle lahf mov js jae cmp ds cmc (bad) add inc jl jnp mov jmp and push out xor daa data16 cld mov add xlat clc push insb lods mov unpcklps add push cmp (bad) xchg inc mov fs scas jne push shlb ret xor (bad) xlat inc cmp jo fdivs inc xchg gs and loop pop mov jl bound and inc insb pop sub lock (bad) push inc pop xchg inc pop lahf imul das js lods push inc mov das dec mov push je and popa fimull sbb dec inc ret push dec lret pop adc imul std addr16 js fldl add ficoml popa dec jp jl fnstsw pop xor xor inc push cmp (bad) lahf inc mov dec mov mov fiaddl ret add mov sub aam or popl sub push jmp mov add mov je imull repz jnp pop (bad) dec mov sub das lock inc push mov cltd in mov push xor ret out pop lds inc xor (bad) andnps pop inc push dec push js sti mov clc jb inc xor inc das cld ret pushf mov push add inc sbb lcall dec xchg repz cmpsl push jb xlat lahf inc pop xor mov dec lret push inc push outsb (bad) mov xchg out xor (bad) nop ret incl sbb js pusha (bad) push xchg push nop popf mov ret leave mov call cmp rol mov sub or add and push cmc or sbb sbb (bad) scas inc pop lock fs notb cli pushw imul stos pop movsl popa out dec (bad) (bad) int3 or shrb and ret hlt pop and aad pop mov and and fwait lret test cmp lea popf call inc mov pop sub xor bound mov or push mov inc ljmp push push dec push out daa or mov cmp jb mov inc sbb das pushf je ja inc pop stos mov icebp adc inc push out rcr mov mov jno push jns lods pop lods push decb mov into repz ss mov fstps or pop jno jl ret dec aam rcll mov imul push xchg push (bad) rcll inc jne mov cld add sahf loopne inc movsb pop test mov fisubr hlt xor leave inc pop daa js pop sbb addr16 insb push xchg jmp and adc lds inc les iret inc das sahf xor lock aas cmc mov add and arpl mov fcomip dec push pop inc inc dec push mov or ret inc sub dec cmp mov fsubrs add inc push ret fldt in lahf mov clc ret add aad repnz es imul flds movd (bad) cmp sub sti ret lea adc stc movsl lret add test sub inc mov mov les inc ljmp inc fistp or test mov rcll lahf aaa push cmp inc fbstp xchg imul xor outsb clc rorb adc push mov cmc pop mov in adc in into cmpl inc rcll xor inc imul mov in inc inc sbb sarl mov std mov clc fwait mov push push scas ss jae xor pop test mov mov xchg (bad) int inc repnz inc xchg pop mov jecxz (bad) es sbb sbb add sbb inc cmp mov mov mov fidivrl inc or mov or jmp mov xchg rolb ret pop push sbb or pop insb (bad) dec mov scas mov mov dec nop xor cmpsl push cmp jp int jns das call mov cmc xor jno cli fwait xchg inc push mov inc (bad) lods lds cmp insb imul gs lret lcall mov or loop repnz jbe lock xor adc gs push and rcr into dec int3 aam dec mov xor push push fistp ret repnz ror jns ja jmp push xor mov cltd icebp ret mov (bad) roll pop or loopne call inc mov int3 mov inc mov stc cmp xchg adc mov pushl cwtl jge daa jb aaa ja ljmp rolb mov mov adc shrl cmc ss aas in cmp js push imul push clc and inc and dec sbb or sub xor inc out idivl dec cwtl rorb imulb cmp cmp pop out movsb sub inc mov push cmpsl or inc ss mov mov and mov out adc inc adc lret xchg push (bad) mov dec push lock pop es xchg and add mov ret push jbe push mov inc xchg addl mov inc pushf mov pop mov std inc or in int jg fwait mov xchg inc mov ret out jno jl inc adc pop xchg mov (bad) sar orl sub inc sub movsb ds mov push pop inc push inc fbld xor loop sbb fcompl out push inc nop push sbb leave or mov sub or sub fmull mov jno xor cmp test xor lds mov inc enter lods mov in fs or aaa sbb mov and je jno dec add xchg pop stc adc add stos inc aad cmp in popf aad sbb mov outsl lea pop xchg dec jl sub dec jmp mov dec test add ret ss or ficom jb scas xchg out pop in ljmp sub js arpl mov mov add icebp roll ret incl pusha movsb inc pop movsl sub inc mov mov dec sub test repz inc jecxz std daa fs mov ret or int inc adc dec inc stc mov adcl mov in pop (bad) mov (bad) stc push add inc out add stos fnstcw dec xchg cmp mov in pop test fistl jle les sub xor add fnstenv das inc inc xor jns repz and mov adc das xor mov mov xchg pop lret push lock add cmp ret push xor mov roll push dec sub mov std jae dec loopne mov jo dec xchg into dec mov mov inc xchg addr16 addb outsb popf xor jo in xor add aad dec je pop les out inc stos xchg out push pop je mov mov dec cmp ret jns int3 mov push sub ss xchg sahf jp rorl (bad) cmp addr16 std xor lret push inc sti inc sub scas popa mov adc lods (bad) dec dec mov nop lds mov push fmuls pushf cld add je mov pop stos push pop dec mov inc pop psraw pop inc xchg out enter sbb pop mov jb inc loopne xchg adc sub fbld or je add xchg popa add mov push daa pop sarl pop rcrb sub xor cmp jle cmp cmp xor aas fiaddl fild stos cld daa stos xchg dec ret pop aas fldl scas lock ds xchg push or sti pop and es popl mov dec aaa cltd pop dec lret xor in cmp pop ja shr (bad) (bad) lea push hlt xor cmpsb add aaa inc fiadd (bad) popf mov jb out mov pop stc xchg ret ret (bad) je fs inc jae scas mov xor jne or jge sbb sbb outsl push in cmp in push dec imul xorl jmp sbb inc (bad) push (bad) (bad) pop and (bad) stc jge ss popa sub pop jecxz (bad) dec jnp fildl inc push xlat inc lea inc es sbb stos push std dec pop loopne (bad) xor sub mov push sub (bad) mov inc mov mov popf je or aas mov clc test (bad) gs xchg add pusha test mov pop xor aas mov nop inc push xchg fldcw push pop sub adc and cld add mov movb add lods xchg sub inc arpl jl (bad) rclb inc outsb (bad) loopne rcl adc out xor inc lcall inc push and xor popf aad loopne inc dec mov lds cltd lahf jbe mov cld or sbb jge and inc aaa fnstenv xor push (bad) push push in add inc cmp cmp bound es test push mov aad add inc sbb (bad) pop and jge cs xchg stos or and cmp push mov mov lret scas popf cmp push rcll mov inc mov or push cmc pop jl into add inc lret adc pop xor dec in rol inc push das out add and dec inc ret mov pop xor out mov inc jo xchg rdmsr adc test ljmp sti mov lret cmp inc xchg cli mov mov jae daa inc pop cs jae popa inc sub into ja mov negl fnstsw and jnp mov roll mov ror leave rcrb stos adc imul pop repnz (bad) push mov pusha push mov nop mov xchg cld inc cmpsl sarb push push mov ret xchg mov adc jl icebp test sar mov push fdivrs aas mov and and mov or sti push cmpsl dec into add add int aaa out cmp sub (bad) loopne and push jo dec pop pop rolb sbb aam mov test popa sub mov push nop mov cmpsb sti out pop sub jl jmp mov stos or mov imul popf rcrl sub inc and mov fisubr push jno call enter dec dec sahf movsb push test js adc jle xchg push je repnz add in sbb stos and mov inc adc pop xor test inc pop stos cltd addr16 xlat in aaa daa jl leave dec mov and push mov test mov mov dec ret movsl mov inc es jns lea aaa popf xor test mov fistpl repz arpl mov in rcrb push inc cltd in mov pushf loop xchg or mov xor and jo int jecxz xor cwtl sub outsl fdivrs data16 push pop inc sub movsl inc inc cmpsb lahf mov inc addr16 clc add je dec dec inc jle mov xchg out dec add xchg mov aam jne mov movsb dec lock das (bad) fimull mov jl inc movsl cli sub in lock rcrb mov mov in sarl sub inc mov addl jno imul add adc ret inc jle loope out shl push cmp jns mov imul pop mov fsubp push inc out inc rcll xor inc dec and inc mov or and jmp push push repz cmpsb xchg repz adc (bad) pop lds dec jb loop stos inc push inc mov daa cmp lcall inc sbb or jae push add rorb (bad) push ret cwtl mov fwait in sbb fdivs call pop push lods stos mov sbb ret jbe jno sahf addl out mov insl stos sbb ret mov push xchg xchg out gs dec jns test dec mov adc dec call add xchg inc dec fisubl enter and xor and mov dec (bad) (bad) mov inc jp or popa mov rsqrtps inc arpl push push inc sbb jo (bad) sarl or addb inc push test bound push adc inc sbb cmp sub (bad) pop push xchg dec xchg jb inc pop inc decb inc pusha dec pop imulb and cmpsl in xchg icebp repz pop inc test cmp xchg fs mov into mov or lahf movsb jmp test (bad) in inc idivl into mov rclb cmp push and ret push iret cmc push popa add (bad) jmp call add add cmpsb jmp inc mov jno push rolb cs sub pop sbb inc call adc sub pop mov dec ret imul xor xchg jl dec popa adc movsl mov mov fnstcw mov gs inc mov sub push dec ja outsl sub fild test ss inc push cmp imul cmpsb (bad) repz dec je in push jae fwait jl pop xor inc dec ds or adc add outsb ss data16 pop es stos mov jp pop lds int clc bound pop icebp or xchg ret mov xor fs dec inc push shlb push jb sub xchg aad push inc ret and rclb pop pop pusha jp add jecxz or and xor mov repz (bad) fiadd fdivs test enter pop push aam pop or xchg and mov sub dec sbb or in ret (bad) imul xchg pusha fwait push or repz mov out push jp dec jecxz pushf movsl (bad) xchg sub xlat inc lahf xor popa lods out aam sbb add and xor out pop push movd lods mov xor mov jecxz fs inc (bad) (bad) lret mov or outsb inc sbb sahf out xor (bad) in inc push data16 dec mov inc out (bad) pop ljmp test inc add insl jb fdivr mov fimull push and ret subl outsl data16 pop push xor dec mov xchg sub xchg dec test jb push insb (bad) mov data16 pop pop lods int3 jg inc daa cmpsl dec mov inc call mov jno fldt and add lock popa (bad) cmc inc fisubl cmp jle in xchg sbb push xchg mov sub cli and pop jae sti xchg sub insl jecxz lods lahf mov mov mov iret in out jnp sub aam adc imul nop bound lods add paddw inc and push adc pop stc aas push sub inc sub inc setne rorl dec cmp leave ret sub inc mov inc test push pop divl dec (bad) dec rol adc xchg dec inc addr16 int3 cltd jnp sbb fistl push push aaa add test sbb jmp add fisub inc xchg das sbb cld or dec xchg mov fs add nop mov sub mov cli mov aad adc test add pop pop xor inc rorb xchg and lcall pop dec inc outsl add jge inc mov insb hlt mov inc inc aas adc int3 sbb jae push dec repnz dec jge pop (bad) or and iret add shll inc inc outsl mov push imul repnz xchg addr16 aas pusha inc jbe pusha icebp inc cmp icebp pop fs push icebp mov dec popf lea push in dec jns jne pop push insl sbb sbb out cmpsb loope rcll into mov mov cmp insb sbb mov or adc and push in call fist xchg mov sub xchg inc mov sub cmp test ffreep pop push push sub loopne lret leave stc ret xchg into fisub or inc mov ficompl mov inc dec shlb fwait jmp shrl fldt lret insl test popa mov imul stos enter push sub (bad) roll dec out and sub (bad) jns jmp int3 push and gs and decb inc lds leave ret sbb es or mov cmp loope (bad) cmc (bad) iret iret in adc xchg ss push negl dec rorl lods xlat and cmp cld jo push ljmp mov into int3 lds jge test jmp idiv or dec lods into pop mov or clc scas push loopne inc loope jecxz mov outsb pushf sub xchg mul push xchg mov call sbb inc fadds outsl or add popa imul mov pop xlat dec cltd inc aaa (bad) mov loope inc aad sahf xchg gs push sbb mov jmp pop inc fcomps rolb adc mov pop sahf (bad) fucomp movsl lds (bad) cmp (bad) mov push push arpl inc andl stos cwtl subl scas pop sub mov imul mov icebp mov lret adc xor fsubr mov icebp xor push nop sub pop or push cmp mov adc aaa repz ds mov notl cmp int3 (bad) repnz push sbb addr16 rclb out xor xlat adc cmp (bad) add outsl sub dec sub mov addr16 xor mov lret xchg daa ljmp lret sahf mov push pop leave fist add inc mov mov ret sbb inc das dec adc (bad) push sub mov xor mov dec cltd (bad) pop sbb das cmp dec pushf adc push sbb xchg ret dec (bad) mov dec imul gs test and cmp dec pop fbstp jmp fdivs push dec sar lret pop xchg bound xchg dec push sti pop push stc lret fisubr xchg inc imul inc fst xorl shll inc jg jae lods mov and sbb xchg and loop roll pop orl sub out adc xchg adc sub fdivrs jl lahf into icebp pop out aas push sahf out xchg out mov pop fnstenv les lret aam fxch out push shll cltd lcall xchg mov mov mov jmp lcall xor mov jp push push xor mov dec negl push pop sub xchg insl cwtl sbb mov and add addl test or mov stos stos dec jl xor adcb test mov inc mov and adc sbb imul call dec repnz fisttpl pop cmp mov sub dec ljmp add sub mov into dec and fbld cmp jmp and mov add cmpsl and mov cs popa fsubrs gs jecxz in out mov repz add test dec xor inc push in or pop mov fsubrs push je fwait mov (bad) xlat mov inc pcmpgtb aam pop push mov inc sbb inc popa fstl sub sbb addl mov out inc (bad) out adc loop inc lock subl xor nop mov inc push jo lcall fdivs dec pop insl jle inc cmp or outsl (bad) fwait mov inc addr16 dec stc pop pop sbb and jb cld and aaa in popa sbb loope xchg add push mov dec pop adc push push or dec cmpsl xchg add loop inc outsb imul mov sti and inc push jge rcr movsb sbb cli fwait lcall push mov xor dec in lret rcl add dec pushf pop inc (bad) jecxz push out inc mulb in sub or push ficompl decl sbb push psrld cmpsl jle loope in inc inc lods push and sub int3 rcrl mov out inc enter jle inc mov out dec popa pop in adc scas add repz jns jno mov call jns shll sbb in dec sub inc and and or aam inc mov and sub ds fnstcw sub xor dec cs inc sub inc lahf cmpsb adc pop lret rcll push mov xor and push xchg sbb pop or add dec inc jecxz hlt or or mov inc (bad) fdivrs xor fwait (bad) pop stos mov inc hlt sbb iret jbe rorl pop out dec fnsave inc mov das call or ds dec cmp pop mov cmp (bad) das movsb pusha aaa imul inc lahf push push fistpl cmp sbb dec mov dec jge (bad) push add inc mov pop test mov into pop inc xchg jl mov push mov mov bound cmp inc fnstsw in inc loopne cmp lods cltd (bad) lea push cmp or stos fwait mov (bad) outsb and popa ret jae inc inc add or (bad) fs xchg mov dec jae and pop lods ret dec cltd rclb jle push insb cmp sbb add das inc (bad) jg sub movsl mov stos jae fwait outsl int dec inc mov imul jo shll and rcrb jne outsl and push inc andl jmp push test xchg jne pop sub xlat bound hlt xchg adc shlb adc sub pop xlat mov je cmp (bad) test aad mov mov fcompl popa cmp push xor rorl inc (bad) dec pop fmul jne addr16 cmpl inc rcrl imulb inc outsl lods add arpl lcall inc inc pop push xor popf fidivr aas orb sub insl icebp or or mov inc int3 dec push xlat mov (bad) mul mov and dec test sub rcrb mov loopne inc popa and int sub push dec push outsb mulb jl cwtl lret inc ss mov jae shll aaa rcrl leave pop pushf inc xchg adc xchg inc (bad) imul out ss mov test dec aas sahf rcrb jb bnd imul pop aad mov mov push cwtl inc push cld or frstor sbb out out push aas cmp div cs dec and inc jne andl dec mov sbb mov and add mov icebp mov test iret (bad) mov sub (bad) cmpsl inc jb les inc std dec or sahf (bad) sbb mov sarb mov loope push out push cli inc test pop and mov inc pop dec pop ljmp test pop jae sbb ret mov rolb mov adc cld or xchg pop faddp cmp xchg xchg cmc push hlt lock repz fildll daa sbb ja ret or push (bad) ficompl xchg ljmp mov push mov sbb xor popa mov pop or fadds mov xor loope dec aam pop sahf fadd je sub aas add xchg xor xchg fildll cmc cmp fucom xchg in (bad) jno mov xor ds inc leave cmp xchg mov cmpsb mov dec sbb and clc lea jnp movsb fwait lods pusha pop scas push mov pop xchg cmp inc mov mov lds stos adc aas and or jmp addr16 mov xchg jbe jecxz out pop xlat movsl inc push aam dec jge xor cs jg push mov (bad) (bad) cltd mov lock sbb add sub pop pop mov sub jle in add dec mov add mov cmp ja stos cmpsb xor in xor pop or das into aad int sbb mov inc push insb fisttp sbb cmp push adc loop loop es arpl and js dec dec inc movsl jno sub dec pop sbb dec fisttp lds inc jmp xchg daa (bad) mov outsl add out xchg xor xchg icebp pop cmpb inc fsubrs mov mov pop test shrl cmpl sti cmp add mov dec (bad) dec sbbb mov arpl iret in rolb data16 hlt and (bad) cmc adc leave scas aas cmpsb xor or cltd (bad) mov push data16 xchg add cmp mov scas mov daa fucomi inc cmpl pop inc dec sub adc roll or pop daa or inc ljmp mov xchg and inc sbb je in and loope mov and stc inc (bad) es arpl aas in inc (bad) test inc loopne cmp cwtl inc fsubl out loop fdivs pop imul push aas ret fisubr xor ss inc jmp cmp mov add adc xchg outsl fimull stc repnz xor dec sbb (bad) in push arpl and ret cmpsb fildll mov ret aas push out loopne sbb mov nop dec adc fildl dec cmpsl lods mov je inc mov js aas add pusha les and add enter mov cmpsb daa rcrl or outsb adc add das inc inc test jo inc inc (bad) cmp push enter aam cmp add xchg test sbb pop sbb add ror add pop add hlt xchg sub ja stos dec (bad) push jge ja mov out mov jge mov mov dec in cmc jnp nop cmpsb cmc sbb dec js rorl mov or iret xor repz aad out lret xchg ja sub inc arpl adc cmc inc push lods cmp push mulb fnstcw mov inc sbb pop andb insb dec sub push jecxz outsl mov pusha ss pop aad ds and test adc mov in dec mov lcall or xchg mov insl clc mov les mov movsb mov pop mov aas ret inc roll inc aad mov gs cwtl dec jnp sbb shrl test jnp and add dec sbb cmp pop lods fbld sbb sbb cli dec popf fldl pop push mov (bad) je pop out adc lret add or push push cmp push add sub adc inc shrl fsub push sub xor mov inc std testl and sbb mov mov dec sahf sbb xchg mov adcb hlt sti das mov add pop jns int3 ds push ficompl das cld inc sti stos arpl test sbb sub mov fildll data16 fwait stos push pop movb pop stos add inc ret add jecxz lret stos gs enter adc inc dec mov fistp ret mov mov fdivrs xor adc lret sub add add cmp (bad) sub std xor lds mov sbb sub (bad) push rcll aad dec jg test jno cltd add lea pop inc cltd in add ret xchg xchg push inc mov fdivr xchg xchg inc xchg imul cmp cmp pop push aaa xor mov inc incl and cmpsb aaa leave bound dec mov mov inc or or pop inc xchg add decb nop hlt les inc loopne inc enter fmull cwtl sub inc and xchg pop lods mov pop adc adc cwtl test inc push pop or inc dec sub or inc rcr call add xchg dec mov outsb mov pop movsl pop cs aaa in cmp out ljmp push hlt in loopne in (bad) mov leave pop out inc and in test mov aad les push (bad) ja rclb sbb dec cmpl xchg nop rorl lret push lcall repz (bad) push xor mov jp push add sub dec emms and mov inc movsb test lret int3 jns mov idivl das inc adc xchg aad inc das fild jl pop inc int3 cwtl test pop xchg mov das xchg mov push or sub hlt jmp fdivrl sbb inc and xor outsb ja scas out stos stc or inc test xchg lret xchg xor fisttp inc mov and inc daa cmp lds addr16 call mov sub cmpsb (bad) jecxz inc inc jmp cwtl fnstcw jle and out out ja mov push cld dec pop mov mov sbb push mov (bad) into lsl pop inc inc jmp test inc add pop sub repz xchg daa add mov inc jecxz or stc xlat out pushf pop cld call lds bound jne inc idivl inc rorb divb repz arpl and jns or mov xor sub pushf clc mov pop xchg sub (bad) xor fdivr xchg inc fnstcw xor ja popl inc dec decl pop inc (bad) out pop cmc dec xor lock stos ljmp mov cwtl fdivs sub dec js (bad) loope push std stc mov and push pop loopne push (bad) repnz adc sbb sahf jbe jns shll and xor mov xor (bad) loop call xor shl insl pshufw gs pop inc jnp push inc inc sbb rol test rorl (bad) cmp adc cmpsl mov cmpsl adc imul pcmpeqb mov in fcmovb out leave xor dec pop add ds or xchg xchg ret and lods inc fsubrs pushf jle add popa pop sahf xchg (bad) dec test dec outsb xor mov js pop ja repz rclb and pop loopne scas push repnz push fildll cld ret aad dec push pusha incb clc push mov or push xlat nop (bad) fildl adc int3 pop lods push loop jecxz pop pop icebp fldcw mov fcom xor scas inc lret (bad) sbb (bad) popf sbb mov jl (bad) or test daa mull push leave push repnz repz inc loope pop mov mov push imul aad dec fist cmp xchg and fnstenv sbb sbb enter sub inc mov mov push pop std in je insl ret add mov add sahf inc pcmpeqw lods rolb int mov test enter popf mov int ret ret mov cmp jb dec xchg imul inc fist addr16 insb xchg stos incb aas orb arpl (bad) aad or (bad) xor (bad) and pop aaa scas ja inc dec repnz in sahf das es inc enter shlb add ss inc cli loope push aaa dec faddp push ffree lods and loop adc xchg jb sahf xchg imul jp outsb lret test mov push pop mov sbb mov inc mov xchg mov sbb cld mov xor (bad) or ljmp hlt push bound adc jecxz xchg fwait ljmp inc flds adc inc (bad) push mov ss roll cmp xchg pop mov cmp jge addr16 test add inc not or gs add mov push test cltd xor loopne cmp and mov mov pop sbb inc insb add inc data16 inc (bad) push pop insb push pop push dec outsl (bad) jecxz push adc repnz jge push jmp mov inc sbb jge into dec stc lcall repnz jg mov cmpsl (bad) jns inc push loop jb ret repz mov xchg dec idivl mov cmpsl xor inc bsf (bad) popa inc test pop pop adc popa int3 outsl fwait inc push xor jbe mov test jno adc push add jg notl mov or adc jp inc pusha pop je stc push mov jp inc arpl inc and mov inc mov xor ret xor popa (bad) (bad) push or arpl jge jo sub cltd rorl inc in subl inc xor xor mov mov fstpl adc ss pop out jb in shll call inc scas push stos and leave fidivl jnp stc inc inc stos add add sbb lcall jae mov lret cmp mov mov mov sub test iret jns fmul jbe int dec in push dec mov push sbb or arpl add push push addr16 sub mov jno outsl push incb int3 sbb addr16 outsl push pop or lds pop or lcall pop jge inc xor mov cld inc sbb insb xchg jo test dec xchg and fildl mov add dec xchg adc push (bad) icebp sub adc les das inc (bad) push pop dec inc daa jle xchg lret xchg (bad) xor xchg das sti pop inc mov std jge dec (bad) mov jnp push add cmp (bad) daa or jno inc or (bad) cmp sbb jo jecxz jmp cs lea icebp aaa push rorb outsb jge mov mov lock fldl add popa mov adc mov daa pop mov (bad) int3 cltd sbb aas dec clc or jbe (bad) aaa sub bnd (bad) mov xchg mov in inc pop insl dec nop iret jbe aas repz stos cli lods cmp xchg mov mov repz inc or int pop lahf mov and xor iret inc pusha cltd sub cmpsb test dec push cli or jns inc add outsl add bound pusha aas add pushf test sbb cmp adc inc push jle pop xor or xlat outsl (bad) jbe inc cs jbe inc dec xor es sbb adc aad loopne addl aad xchg aad in cmp out cmc push mov repz jno jno push jp sub xchg adc in dec testb inc sar pop push cmpsl mov pop xor adc dec mov ret int3 out das inc dec jg enter lret mov push inc inc arpl loop or push imul xchg mov pop sahf xchg ret inc call pop ret out cmpsb push mov (bad) cld dec enter xor scas cli outsl xor mov cmp mov mov add sbb test fcmove ds adc aad and lret mov dec sahf ja jbe mov push out or sub cmp cmp inc fisubr fdivl sub daa cmp sub loop (bad) ljmp push clc pushf sti inc xor jae inc mov aad mov bound shlb xor bound sub mov xchg das lret pop inc movsb pop xchg mov inc ret cmp sub ja lahf test jg repz (bad) je and push in inc mov adc fiadd fwait lea cs inc out and cmp or inc int3 cmp jae loopne shl les mov cmp test mov aaa xchg lea imul mov add jb lret mov jl jmp divb jl xchg outsl (bad) cld xchg add xchg xlat xchg adc inc mov xchg inc inc (bad) and cmp pop inc cmp out lea push bound adc add or inc lods and aad dec adc adc aas lcall dec pop adc xor sub (bad) jecxz and lds inc lret enter je inc xlat or mov mov add push popa std sbb mov das or pop inc or pop jb inc inc lods xlat jge add bound xchg test xchg dec and (bad) push (bad) std enter rorb xchg movsb cltd sbb dec jnp loop and add inc imul push push andb std fwait sub inc out xchg or lea mov cltd loop sbb arpl inc pop dec mov adc pop es dec jl push fwait dec popf mov cmp cmpsb sti imul mov jmp aam in dec dec aad sbb sub or es add push jbe cmpsb (bad) push xor or sarl fisub inc xor fmull repz jbe inc outsl imul push aam loope jmp add or dec mov mov xchg imul ljmp or (bad) jo testb stos lcall cld mov ret dec pop pop and dec ucomiss lahf xchg mov xchg push std inc loopne xor mov popf out jno ret rorl jle inc scas stos pop mov push fistp ficompl cmp lret push (bad) dec jl adc jecxz pop push out repnz inc addr16 imul mov insb movsl fidivrl cmp dec dec pop outsb sbb inc test add or and mov jne dec pop jmp loopne cli adc out jae lods aaa cmp adc xor add jle adcl mov adc mov test pop mov inc jecxz into inc idivl jp mov fimull dec xchg aad flds icebp imul or inc lea and fwait in mov mov push fidiv sarl jo test les xlat jo inc adc dec cs loopne mov das push xchg rclb movsl pop lea pop std imul add mov sti insl mov dec and imul push sti inc in xor mov loop popf mov jmp sbb loope and xchg rcrb mov ret outsb xlat aad xor sti or cli sub jnp jecxz mov outsl rolb push rcrl inc xor or and rclb in test sbb push mov js into sub dec test mov pop loop push adc inc xor mov lcall pop sub cmp dec dec sub sub imul push mov jb xchg sub xchg sarb dec ds aad mov inc xor mov outsl mov iret and mov adc dec push imul push rcl lock inc aam sub inc xor into lock cmp mov out pop dec cmp test xchg gs push dec push sbb jno xchg push in (bad) rcrb pop sub mov inc mov stos les imul mov bound dec outsb in push das cs loope cmp sub clc aas out sti pop cld rcll or das cmc stos inc jo popf mov js arpl aam cmp cmp ror ret push iret mov mov jge aad sub dec dec mov add lret or push pop sbb or sub jo fimull mov pop in inc popf mov mov mov cmpl into mov lcall es pusha push lock ret fwait inc sub popa inc and cmpsb dec inc stos adc fldt or jmp sub mov lds xor roll pop xchg push rcl imul outsb add cmc setl xchg (bad) fiaddl mov and mov pusha icebp jmp push push inc and push (bad) push aaa repnz cld inc ret dec xchg and lds xchg repz (bad) pop aas mov jp xchg push inc mov hlt sub int3 jge xchg lcall cmp in mov jae mov dec inc fild cmp add inc int3 push rol (bad) fldl imulb mov inc jecxz xchg or mov popa aas adc jo cli (bad) xor mov aam jae push xchg pushl mov xor push inc and add leavew pop xlat add adc sub in mov jg cmpsb inc imul inc fild xchg and jns xor pop inc sbb cmp lea lret pop (bad) mov add loop mov mov dec sbb dec inc dec jle out jne mov pusha mov dec add outsb mov cmc dec out jp (bad) ds (bad) cmp cmp push inc imul mov pop add clc pop inc add adc push dec jbe mov push inc sub xchg je and dec ret sti nop aad sub rcr inc incb das or and sub ja xchg adc sbb dec inc jbe lcall jo jae inc (bad) into cltd or jbe mov in inc int je shll or rcrl stos jmp pop add outsl scas xchg lahf jecxz inc aas sub cmp push adc loopne dec inc jmp sti xchg inc mov dec insb mov push push xchg rorb sub mov test mov inc pop dec pop xor sti insb cmp dec xor dec repz addl push xchg dec dec divl add mov inc dec fwait cltd xchg movsb add jo or lods adc inc (bad) aad incl add (bad) ret pop dec in lcall ret jle cltd mov (bad) (bad) dec aad mov les (bad) mov insl in add push ret ret shl or jle test les jl stos arpl out jbe sbb daa cmp lea inc mov ret cmp iret cmc arpl dec lret pop mov int aam xor addl inc fwait adc and je ret xchg adc inc sbb mov (bad) shll mov xchg jle mov mov cmpsl mov xorb xchg inc repz lret sbb sbb dec sti or ret mov inc pusha xlat outsb scas repz daa popf pusha xor push cli sti push jg dec xchg inc nop mov mov mov outsl clc lods ret mov add dec fwait testl push in sbb lret sbbl inc movsl mov scas jbe pusha push xchg or dec mov inc lods stc lods mov mov jmp sbb lock adc fsubr pop mov ja,pn jge mov (bad) adc push stos in push xor sarl inc daa andl aad jo xchg push bnd pusha pop test add enter mov push mov fisttpll cli xchg inc xor fcmove cmp pop xchg inc negl push pop (bad) icebp sbb outsl jae (bad) fucomi dec repnz divl add cwtl mov jmp push or imul lds subb dec xchg inc cmp mov or andb mov popf in in cs mov and xor add and jb dec cmp out mov sub dec add xor lods add adc pop (bad) jmp mov jg nop inc fcmovb sbb add aas push pop mov mov inc push outsb or mov dec nop push test (bad) inc sbb or lahf fldt mov lods jmp enter xchg pusha sarl fsubr cmpsl mov add in jno push cmp outsl aas test cmp pop neg inc jle ret xor int scas andl push push dec cmp repz xchg push out (bad) ret ja lds cwtl into fisubr push jge outsb mov repz jge sbb (bad) mov dec jmp push sbb dec mov jge es cmp dec rcl iret addr16 xor stos sub and leave xlat push mov not pop roll lods inc test dec cmp (bad) cmpsl and sub xchg mov scas das (bad) int3 repnz lret (bad) (bad) iret adc xchg addl ds fcomps cmp add lahf jb sub xor cltd addr16 xchg inc daa rcl mov aas xor or mov push call inc mov insl or cmp sub or jo xchg test jb push jg adc (bad) jp lea (bad) push cmp insb sub xchg data16 push lods test dec dec mov push stos rcl push inc dec mov rolb arpl sub sarb clc das xor or clc daa push mov xorb add testb ss cltd shrl mov jo adc sbb mov rorb mov xchg lock jo xchg sbb jg hlt add mov aas gs dec xchg sub insb add dec push (bad) addr16 or decb push add sub xchg or dec iret dec xchg inc dec pop mov sub int3 data16 cmp sub cmc pop es sub cmp stos push cltd mov scas dec inc fst out loope imul push push xchg xchg push fimull insb aas mov sub fildll jge inc (bad) push repnz inc out outsl (bad) sub dec add xor xor or inc mov mov loopne fwait sub mov inc loope pusha inc jmp sbb jle inc fcom ja into dec xchg aam adc lcall push outsl mov (bad) and cmc push cmpsb and fcoms and cmp rolb cmpsl sti inc and sub pushf mov pushf jecxz mov jnp daa mov xchg icebp lds int3 inc mov jbe dec dec pop fwait cltd mov popf in in push js movsb cmpsl inc ficom sub orl (bad) pop inc ret mov adc sub mov xchg mov push add xchg mov push sub in xor mov ficom je mov rclb sub pop mov loopne insl or inc adc das inc xchg mov dec inc int3 push rclb pop sub jno xor out popa inc xchg push fsubr dec rcr jp in xchg lock je icebp jmp jno sub imul cwtl add lret inc shr mov add push push bound ret rep cwtl sbb pop pop and lock sti xor arpl (bad) in xor xchg aaa inc andl dec mov pop jecxz ret mulb orl dec ret in test push scas pop sub inc inc data16 stc xchg adc inc lahf push (bad) lods hlt (bad) xor out popa xrelease xchg or push les mov mov inc mov aaa add popa divb add adc imul inc dec fwait mov dec int3 addr16 cs in sub inc dec clc int pop dec repz cli inc cmp sbb pop nop mov inc mov xchg bnd push int3 cld jb lahf mov and sub hlt stos mov jb sub fldpi rolb jp sub mov test jmp inc pop cs xor in aam lret sar inc sbb mov in and inc arpl dec inc sub inc mov xchg call jle (bad) xlat push pop adc test dec sbb push inc mov popa push jno cld push out add cmp mov inc fstpl popa jb inc scas ret pop pop xchg stc mov outsl lods rcl roll push and fiadd arpl test push jo hlt fisttpl or xor inc je sbb jnp adc inc imull sub and imul inc enter pop insl arpl test mov cmp dec mov jno mov iret aad fwait add inc sbb jmp pop fwait mov dec mov xor adc ret jecxz (bad) xor pop aad mov xlat sub les mov ret fbld push sbb jno mov ds adc fiadd mov mull push cmp lahf dec jbe xlat adc sub into das inc push mov aas rol dec jo gs xchg pop ficoml out xchg jg mov ss jmp insb mov inc pop push cmp mov mov push lea inc add mov cmp add int3 jg inc mov push out daa aas rcr sahf xor inc add (bad) aaa adc idivb cli inc push mov jb and les sub push aaa fidiv aas lea leave and (bad) sub arpl inc push mov imul dec mov cmp or push clc cmp inc sbb mov cli push pop fwait inc outsl dec rcr fwait mov push cmpsl adc incl inc push and movsl mov outsl xlat xchg or sub jmp mov cli inc mov pop dec cltd inc or outsl xchg cmpsl or inc mov (bad) (bad) icebp repz jge adc (bad) cmc mov ljmp nop lods or jle dec mov cmpsb push shl int3 test or inc jg xchg push mov cld mov sbb ret push sub js xchg iret aam test and jae pop pop push and inc insb mov shr push inc jg imul push push bsf cli and (bad) pusha inc loope jecxz out add out inc push pushf or inc pop mov imul iret movsb fs imul (bad) data16 jl in mov mov push jns pop test lods inc aam test push or rcrl nop fcmovnbe xlat daa xor pop addr16 pushf cltd xor dec xor add dec call jmp aas add insl xchg xor dec mov add out xchg ret and dec outsb mov arpl sub mov push xchg sub ret sbb (bad) inc mov sbb adc mov cmp or cltd push stos inc sub inc test ret rol inc inc dec jp in icebp mov push inc push popa cltd mov decb (bad) fiadd xor push dec mov dec into (bad) add dec mov mov stos bound dec outsl jae in cmc call test jo lcall xor add and fidivrl push cmp (bad) mov inc jmp and push jae dec daa cmp dec add and loop cmpsl sub icebp aad cmpsl and or sub xlat aas das stc ret lahf dec into int3 cs scas xor push inc inc xor outsl mov cmove cli aas lcall lock dec shrl xchg jno rcrl lods call mov add inc sarb ficoml adc test clc mov out xchg out xchg xchg addb push insb inc cmp negl inc fisttpll pop and adc sub jne iret cmp inc inc pop or cltd fwait addr16 inc sbb in mov enter testb test aaa inc inc dec add fwait inc (bad) fildll sub in out mov mov and jle inc xor out ret std orl fwait push ss lock rolb mov mov outsl jmp pop jo jp dec fs gs je xor data16 or add inc sbb xchg cmpsl mov or ror jo mov clc pusha lret inc ret mov adc mov jo roll (bad) jae (bad) hlt xor cs dec stos lods mov dec cmp sub jg aaa adc jbe or out inc (bad) out inc inc jle pop pusha dec and inc rol or sbb inc xchg dec push les add icebp roll (bad) jno les pop mov lret popa xchg outsb inc mov mov inc jl lcall loop stc pop adc sti sbb roll repz fs in push jge (bad) out jb mov sti cwtl lods (bad) sarl adc pop inc aam sub cmp sub xchg andb std jb rcll in loope dec fidivrl xor sub sbb xchg jns cmpsl dec daa data16 jmp inc ret xchg mov test jecxz rcrb lahf cmp mov mov popf mov inc ss mov or inc sub out or lods mov pop out pop inc cmp mov xor xchg xor fild repz lds jl ret inc and jnp cld enter scas and clc int3 mov nop push push jle nop inc push icebp add sub xchg jg frstor out in imul push cmp inc xor and imulb (bad) xor add push inc mov fimull pusha rorl scas xchg mov repnz push and in inc jmp inc jb popa or fcompl pop inc lods or int3 dec mov and add (bad) hlt inc ja orb cld xchg inc data16 sub sbbl mov mov mov mov dec repz sub cmp xor faddl sahf sub or xor (bad) cwtl iret aad fmuls xor (bad) xor push push (bad) add decb xlat sub mov mov dec lods movsb dec repnz fld cmc dec fisubl pop inc ret pushf lock insb (bad) loop aad sub inc xchg jbe lcall jge push out jb lret mov ja fiaddl pop imul hlt jo inc loopne in pop push inc lods in adc es mov dec mov mov inc rolb mov js inc jmp aaa dec ds mov pop jmp cmp jnp push (bad) in push pop sub mov sbb and rcll jge in ret stc insb insl pop imul inc scas dec sbb test loope and add push mov mov lock jmp mov in dec jl mov imul shlb inc lret inc add arpl dec insl xlat mov or dec mov dec mov xchg cmp inc push fisttpll out pop inc dec pop pcmpeqd mov std inc inc sar cli or cs aas lods cmp in inc popa movsb mov mov sub clc push or dec mov sti cmp push pop pushl and ret test sub mov xorl cwtl repz imul jnp mov les pop jno arpl (bad) sub xor mov test clc add repz (bad) xor fisubl or inc cmp adc pop daa push lret cmpsb inc or in popa lea fisttpll sbb xchg and push iret adcl jno jle mov sbb popa or inc insl mov rorb (bad) push sarl into lcall movsl mov fadds inc stos xchg xor imul push inc jno lret cmpsl jle xlat jb ret or jo or lock sbb inc jg pop call cltd dec mov fxch and inc es pop arpl sbb rolb mov ret xchg mov mov jmp inc out outsl pop adc sbb inc mov lret xor aas ret inc stc dec lret add and sar xchg push and mov (bad) out std push xor pop push or loopne mov dec fdiv hlt pop push adc add push pop xor pop scas inc (bad) pusha mov inc addr16 jo (bad) lcall in mov mov das dec add test cmp test jbe mov les sub les shlb aaa ffreep out sub mov push cs adc (bad) xor cmp cmp dec dec sti jno jecxz,pn push xchg ljmp int inc adc xor cmp inc inc mov in ja or xchg les push mov fbld negb lea rcrl scas hlt cmp xchg jle loopne mov dec inc xchg jecxz jmp (bad) push inc and cmp push (bad) mov out or push outsl push sbb pushf dec sahf inc insb jmp push out jb lret pusha cs or pop jns xlat stc cmp (bad) leave aas adc jmp ret loopne dec lea out testl loopne push dec js push aaa sbb and cmpsl in leave inc add ss jno jl test aaa sbb xlat push dec enter jecxz frstor dec jl fiadd jmp inc addr16 cmp ret movsb push mov flds clc dec lock les sub cmpsl sti movsb inc adc ret jecxz iret dec inc test jns addb fsubrs dec or adc mov and inc stc (bad) mov xchg push daa or pop scas push arpl and mov (bad) insb add jae ret xor pop xchg push pop movsl pop in lds scas out faddl cmp pop jb jp fistl sti les hlt lahf in imul pop mov inc loop add add fwait push inc in mov lcall add mov cmp js (bad) repz gs mov sub xor xorl jae jle push inc push cmpsb ss enter jbe add (bad) pop dec in xchg dec icebp mov insb jge pusha sarl sbbl movsb lock cmc or inc cmpsl sahf scas adc cltd adc ds inc (bad) inc fwait in mov rcll sub lds out sbb mov dec jbe push jno mov add push popl xchg nop sti leave lods stc mov lods aaa adc arpl xor rcll outsl jne loopne lcall add cmp pop repz sbb dec jae aad out mov xchg pushf imul sub sbb mov inc clc insl push add and arpl lahf (bad) adc outsl (bad) in inc mov and pop cwtl lahf cmp sub xor adc stos and movsb lahf rcrl movsb test push leave inc shrb mul jg fadd or add fcmove int dec lea (bad) shrl stos fimul or xorl cld fdivl outsl inc fs sub test fdivrs out bound sbb nop xor and add push into lock sub inc aas inc (bad) iret add add je push pop mov cltd adc or in adc icebp jbe push sub sub pop cltd lret jb sbb ljmp mov int3 outsl cmp movsl dec jb mov (bad) lock mov fs cmpsb sti scas daa int push or and push push mov adc or sbb cmp push xor insb pop mov jbe mov rcrl mov adc xchg xchg negl iret xchg xor xor xchg jp xchg cmp push int add jmp aaa aas lret lea mov out movsb into add shrl pop push pop and pop daa add mov stos loope and sub xor ds movb pusha jo dec inc cmp inc (bad) dec arpl lock fwait sbb jo mov shrl add push pop xchg in push sti inc roll add inc and lret popa xor sub ret popf push xor adc dec rol imul pop or jge inc stos rorl mov aad addr16 mov mov sbb pop jns xchg push shr inc pop stos sub (bad) mov pop loop jp mov call daa mov incb jae sub std jbe test dec test or (bad) mov xor adc (bad) movsb stos pop lods inc jbe inc pop cltd aaa push mov ret repnz ficompl ljmp scas icebp mov clc lods jns sar lret mov sbb xchg (bad) in fild call int test inc shll mov aas lods push sbb jmp lret mov or jno lock mov xchg jg inc cmp push movsl xchg into fwait mov mov push outsl jl cwtl inc sbb or sbb into mov scas inc pop hlt jb sbb push cmp jge pop out adc cmpsb fldt fs mov dec rolb inc push add inc aaa mov push outsb aaa sahf pop jg bound in cmp in inc subl insb sarb xor fnstcw or mov jmp arpl sahf xchg pop push push daa sub adc and in daa pop rcr inc mov mov jbe (bad) mov inc inc xchg mov fsubrl int cwtl mov rolb and insl pop loopne mov inc xor (bad) cmc push xorl cmpsb xchg jb add aad inc inc mov sbb mov mov mov inc in popa stc xchg jno add loopne xor call insl adc push testl push in sub inc pop lock int3 inc xor ret lcall inc test and repz xchg scas jno stos test pop test push stos les xor mov inc lcall jge out lcall pushf xorl add ljmp push push scas jae jle fisubrl sti js xor mov jle outsl jns mov addl insb mov xchg and cwtl ss cmp frstor or (bad) jne mov leave xchg xor sub inc lea cmp daa xor mov xchg repnz lret cltd xchg cmp push cmpsb push mov call mov in mov inc ret shlb mov fistpl icebp adc cld jnp adc and cmp insb and and outsl add (bad) sbb pop (bad) mov or xor inc gs add inc repnz inc fbstp adc or xchg jae sub movsb test sub dec idivb ret aad mov dec mov add shll (bad) sub (bad) xor xor jb or ficomp out test in jmp icebp inc adc jmp or sub (bad) inc sub push push add ja adc mov loope mov scas in (bad) jb cmp sbb imul jl push movsl imul dec popf into inc bound sub mov ficompl or push in in jno fwait sbb mov lods and add (bad) movsb retw cltd mov cmp movsl sub insb loope stos xchg test cs popf hlt mov aas or int3 xchg pop mov jge inc fisubrl cmpsb mov mov add mov cs loop mov andl outsl push loope inc mov cmc add mov inc xlat scas rcrb call andl jnp ret mov mov (bad) pop ja sub pop nop add push or or outsb inc mulb sbb popl push jns sbb inc mov xor xchg lods pop pop push mov add push into psubb or xlat pop jmp sub jo mov ficomp (bad) rorl jmp testl mov loop arpl inc xchg call ffree pop outsl cwtl push int3 (bad) jmp add dec inc fidivl lea add mov push enter (bad) mov jl xor out xor mov add stos add inc add cmp loope dec inc mov and nop xchg inc out aaa arpl idivb inc sbb scas imul mov sti cmp pop push out clc mov jb push and adc or in cmp xor and imul mov sub add dec jb inc xchg aaa mov mov cld fwait imul cmpsw mov in repnz loopne cmc outsl push cld hlt add scas inc mov xchg dec cs arpl sub or dec fwait out cmpsl std pop xor push pop inc add ret ljmp in xor stc push idiv sbb pop pop push mov (bad) or and mov enter outsb jg inc faddl adc mov mov mov mov dec aad divl pop stc xchg mov lahf push pop ret lds or (bad) mov (bad) pop arpl push add fwait arpl imul int es mov ret (bad) mov mov inc pushf fimull leave inc add lcall xchg out ss pop jmp inc fiadd sbb movsl inc arpl jge ficompl cmpsl mov pop push and mov fwait mov push jecxz hlt cmp sbb xor dec and inc ret sahf sub loop lret inc addl pop in inc clc adc je sbb and mov jge ss iret and push mov xchg add and inc dec xchg sub cs (bad) lock mov mov sub pop inc jg dec push dec dec cmp mov fs sub adc inc stc xor aad adc sbb test pop xchg outsb das bound cli jnp sbb xlat fisubrl inc bound mov pop xor in std ret fcom sbb mov fistp mov mov inc or dec clc push inc xor pushf mov sbb out xor negb lret adc mov sbb lds jmp aam sub xchg ret cwtl scas ss clc dec (bad) sub into xchg cmp push xchg icebp jns imull sbb dec jne push sbb pusha sarb and sub push rcrl sub mov sub cmp ror jae xchg js adc data16 ret mov mov fdivrl push pusha lock xchg lock xlat inc (bad) sti stos jmp incl inc pusha lcall inc (bad) and cld inc or (bad) divl mov jo fucomp pop push mov lds dec xchg xchg pop jns fwait out push inc xor add rolb andl fucomi dec popa aas addb adc adc ljmp call pop inc arpl push add inc fldt xor xchg pop insb inc xchg inc sbbb inc loopne inc add and fbld mov inc sbb jmp inc mov dec adc add push test mov mov mov mov dec leave xchg inc arpl sbb out push push in sbb xchg mov cmpsl push push xor outsb negb imul das sub xor mov sub dec outsl sub inc add dec add jne sbb jbe add sbb cwtl andb mov inc stc and mov cmp jnp daa inc rolb int arpl xchg lcall cmp sti daa or mov pop lret sahf mov lcall jmp sub rorl jg not les xor pop dec mov mov aaa fwait inc pushf out jl out dec inc jmp pusha lahf shlb cmp push xchg negl mov lods or pop inc sbb mov dec std cmpsl xor cwtl aaa cmp pop loop pop add sbb movb jle or add jae mov rolb les inc lret sbb dec jl pop aas inc gs repz mov dec cmp add ja push pop insl leave inc push mov push pop bound jl xchg ss adc inc js adc lock pusha mov push out stc push rcll or cld (bad) adc aad enter push scas mov cs icebp mov sbb push test enter test mov aas cltd iret inc in js xchg xor and sbb adc popa sbb mov popa adc out and or push fs (bad) adcl inc xchg push push fisubl inc mov push loopne and inc jno bnd mov and cmp scas arpl das add dec xor arpl scas add inc push push cmp sti ljmp xorl push dec pop dec xor jecxz mov dec adc idivb fcomps jbe andl xor test rcrb mov pop fcmovnb or pop (bad) sbb leave lahf in sub xor sub fisttpl repnz inc (bad) and shll push fbld lret inc xor js and add popa lahf gs popf push aas xchg cmp (bad) and add rclb xor pop ja lret sbb cmp insb fstps adc negl loop jecxz iret outsl loopne hlt inc ljmp fadds pusha fs fstpt inc cmp push pop lahf add lds insl and cmp scas jns pushf or and push (bad) push iret and add mov cmp adc inc ret fcomi repz xchg (bad) cli cmpsb cmpl adc add and dec cld dec xchg xor data16 in mov les add xchg pop cs (bad) mov add sbb mov sub push stc xchg sub pop cmpsb outsl dec outsl dec push or push pextrw cmp cmp ret mov xor inc movsl jae adc adc sub in enter loop aas dec idiv roll sbb scas sahf mov pop call pusha in push int3 out xchg insl push xchg int3 loopne jmp ror dec adc bound mull cmpsl jmp sbb xchg cmp push add lret xchg sub test pop pusha hlt or xchg lret fildll cmpsl mov rolb cmp aas lret mov cs cwtl aad mov clc push cmp adcl rolb or mov data16 jmp inc fldt or jns aas inc out mov lods out mov dec test rcll push pop lock mov mov sub push xchg imul (bad) out push loop stos inc fildll lcall inc dec out push div pop push pusha in xor leave lock std push call inc pop mov push mov mov inc and out ds push sbb inc test fmull jp inc dec js mov test dec enter (bad) xor adc das mov xchg push fiadd mov subb dec cmp cmp adc dec push cs push sub push sahf and sub mov mov sbb inc fcmove sbb inc call sbb mov inc fimull push arpl add pop jb dec inc cmp test dec adc add mov xrelease sub inc inc mov push movsb xchg sub repz mov (bad) xor repnz outsl fdivrs add loopne sub ret xchg xor or sbb dec push ret jp pop jbe inc iret outsl cmc ss out mov cwtl dec pop mov ja mov in mov inc inc pop in (bad) pop fidivrl fimul (bad) hlt nop mov sarl fdivrs rcr dec test stos pop sub and movl or jno (bad) int3 xor loopne add incb into stc lods mov inc pop or cmp cltd xchg pushf dec sbbl inc jl sub clc jne sarb int3 into mov sub mov ljmp lods dec cmpsl sbb out mov scas out and mov imul adcl aad jnp pushf jle pavgb pop bound xor stos (bad) xlat sub and pop adc sub pusha mov loopne add lock cmp xchg push inc xor fmul movzbl dec inc cmc dec dec jno shl fisttpll std enter insb and mov scas add lea add es dec inc iret sti lret bnd xor sub iret adc inc mov movsl sarb cli cltd jmp push xor outsb rorb pop inc cmpsl call sbb inc sub xchg stos and mov imul sub push arpl mov lock jg pop add mov push mov xchg dec (bad) cli jo mov scas outsb rclb or pop arpl cmp mov push test cltd (bad) pushf xor pop inc jbe add lods mov push mov inc cmp rcrb ss jecxz cmp aas aad into (bad) int xor cmp mov xor leave pushf pop cld std cmp mov dec add dec adc setne out int push mov pop sub or and into add dec sub mov loope pusha sti pop ficoml mov mov clc insl cltd in dec rcll movsb movsb sub sub lds sahf (bad) lret fucomi cmp and fcoml mov repz sahf mov jns sub sbb enter jo int3 inc pushf inc dec in pop inc ret faddp or repz add cmpsl popf (bad) ss js pop int mov fisttpl iret xchg cmpsb mov mov js out addr16 fs mov and clc insb sbbl inc lret jne inc and jp inc loopne test add dec and movsl out mov rcll xor pop pop pushl (bad) dec jnp mov adc pop andnps xchg fild inc ret aam shrb cli lcall mov imul lcall jmp fildl loop jmp sub icebp cmp xor dec inc mov pop push inc mov mov pop data16 jae xchg icebp repz push cmpsl je adc cmp addr16 mov sub ret inc add or inc and outsl and cwtl mov adc into mov cli rcl cs xchg mov add test adc (bad) pop xchg cmp inc frstpm(287 add (bad) or lret jbe ss and ret or shld mov inc push test pop adc out xchg mov push in ret inc jmp stos aas fisubrl jae mov or mov jbe inc or in stos ja push jg mov int3 in xchg jmp push mov push pop mov and int3 mov and sub insl inc mov cwtl sub ror mov inc push or aaa cmc inc popf add sub arpl push lret sahf inc addr16 out ljmp dec sub xchg bound jmp out cwtl rol (bad) setle adc sub inc mov lahf test mov shld mov lods call mov jmp bound in jge xchg cmpsl cltd cmp roll mov cld dec mov (bad) negl ret xchg dec sti outsb xlat inc cwtl int3 or repz inc jmp fsubrs mov cmp inc in std pop aam (bad) dec pop lret sti inc mov es sahf out (bad) push sub dec dec lock shll dec sbb test dec mov mov lret push add sub popa lock add cwtl or clc int3 inc addl and mov xor mov daa mov push fistp mov fadds fild in aaa outsl dec sub pop add (bad) mov dec xchg dec enter add add xchg (bad) and popf jp ss push (bad) push xchg sub sub and imul sbb mov insb inc or or dec dec repz or arpl dec dec inc enter dec sub add in js jg inc idiv (bad) into aad jae,pt sub les jp add dec adc fnstsw pushf (bad) decl cltd ret ret stc orl fadds pushf negb gs pop push mov add xchg (bad) lods dec add push stc add test cmc push jno mov cld sahf decb sbb sbb jb sbb sub jg stos sub aaa jbe xchg and icebp imul lock pop sub incl nop jmp inc mov mov dec insb add loop outsl test popf shr jbe cmpsl sbb push adc in push fwait sub movb push test cli ret inc jecxz pop in push jmp pop sub pop jecxz push mov (bad) in pop inc sarb xchg xchg dec fs xchg jp ficoml fstl jb add mov or push sub mov pushf stc sti add inc nop inc stos aad insb lret or jae mov lret int3 and mov xor stos mov jmp fidivr aaa testb sub pop stos insl sahf sar in add aad iret pop fcom inc mov jno xchg xchg mov jo jo rcrb jmp sub xorb (bad) mov cld out jmp jo es ss adc push xchg (bad) cmp mov mov inc lcall loop mov and push add inc fisubl sub inc mov data16 pop mov arpl ret sub inc xor movb ss (bad) mov std dec inc xchg das jl mov rolb push dec nop sub fldl2e dec mov adc dec mov stc insl rcll lods sbb add xchg das enter or inc or xlat jnp xor insb pop fwait dec push push mov je out lret (bad) adc (bad) repnz shl inc adc sahf add popf xchg mov sbb push add ret (bad) call push (bad) (bad) mov mov rolb dec cmp fisttpll jo or pop insl out inc jmp (bad) adc aaa cli (bad) clc cmp mov rclb mov fadds and sahf push rcrl add or inc ja cltd or cwtl inc adc jae enter jle push cmp nop push adc addr16 and inc aam pushf xlat int and fucom inc mov incb add mov xorb push out jnp cli sbb ds xlat or das and mov mov repnz test pop jo sbb ljmp inc mov inc es dec push adc sbb pop fsubrp std mov (bad) fmuls dec lods inc pop xor add int3 aaa lret cmp mov add and add mov adc les cmp rorl std push fimull ror add pushf pop mov fadd mov inc loop xlat in popa and mov dec sbb and adc fildl cmp inc fsubl and jmp mov dec in lcall in clc inc sub jo cltd inc mov in (bad) dec cmp ret cli sarl inc out jb pop fidivl imul jno test xchg sbb cmp adc inc sub mov pop arpl push int out test sub sub push or mov mov jnp nop das push dec and les and outsb push sbb arpl je inc repnz daa lods andw jg popa push lret mov in movsl and push cwtl adc fistl dec or or cltd flds test pop sub dec inc lcall dec sti repnz and inc call jo mov movsb add andl push andl data16 push sub fadds shrl adc popf fild xchg (bad) xchg stc inc mov sbb push gs ret add std out mov pop push divl sbb mov mov iret jmp ss scas lret rcl setno daa outsb sti mov mov push cmp lahf lahf and inc movsb dec sbb jnp fisubl xor inc mov test scas fsub mov lret or ja call leave bound sbb or in dec out ss pop popa dec int push sti mov mov (bad) cmp mov mov lahf add pop jno and jmp push test inc or xor jg dec push std dec sbb cmp lret out movsl add aad gs adc (bad) into cli inc and push xor push dec out sbb (bad) fnstsw lret int3 ret loopne out adc std lret add sub inc out mov xor mov mov arpl (bad) dec loopne dec int3 cmp cmp cmp add cmc into ret js rorl pop xchg aas xchg push faddl sbb push and into lcall (bad) mov arpl mov aad xchg mov mov mov scas and dec sub sarl sub jno push rcll cltd outsb xlat je movl mov mov insb dec push sub dec mov (bad) jge adc loope in sub mov push stos add (bad) das ret mov out xchg jecxz and sub daa icebp xchg mov seto je push jp inc insl cmp adc or mov ja jae enter aaa dec imul (bad) fildl dec push shrl (bad) jo test out dec or ficomp mov sub pop dec jb sti pop sub mov mov jns test test jle shr mov adc push test cltd jecxz jnp and jb xlat mov jno fmuls pop clc jg in and push inc lret sbb add xlat imul sub jg mov inc sbb in pop cmpsl cwtl push ror sbb (bad) shll int (bad) stc mov jecxz cli aas mov sub mov iret cmp (bad) icebp (bad) movsl pop jp jl popa sub loopne clc dec inc sub iret fwait and and mov mov inc rclb pop shll loopne outsl cmpsb movsb mov lcall and cmp dec xchg push sbb cmp arpl popf mov dec int lcall inc ljmp inc jle cs cmp sub in inc (bad) xor jg inc aad jb mov cmp popf test add sbb xor adc add subl xchg lret movsb aam lret in fbstp cmp push add aad ss cmp xor push hlt pop mov ret lret (bad) aas jae xchg mov push repz jmp pop push push pop add cmpsl inc mov shll incb and push push xchg ds xchg mov xor pusha adc je push xlat mov push ret (bad) pop inc mov test or mov cld andl maskmovq addb (bad) jmp rol mov decl cltd dec fsts repz gs (bad) push mov dec push mov jl jmp jg push ret lods sbb imul sahf stos pusha je movb jge hlt push shlb mov mov (bad) jp and dec and das ret inc mov inc in enter dec jne dec insb js adc hlt add (bad) push ret mov pop imul and fdivl inc notl test roll fsubrs inc out divb stc gs adc inc and inc cmpl pop push (bad) in add dec imul jae and jge popa jae (bad) or dec ss cltd jno rclb or je xor inc sbbl inc mov mov movsb pop outsl (bad) out push adc dec fucomi mov les clc sbb push adc inc pop and pusha lds inc aam inc leave test clc cmpb aaa adc sbb dec xlat pop sub test push fmuls xor insb stos xchg inc mov (bad) dec ret add adc cmp add push orl sub jbe mov push xor jno test loopne mov movsl popa jp rorb push or add inc inc push lea addr16 inc shrl inc roll (bad) xor das mov mov icebp mov or insb ret nop stos enter sub les mov dec lcall add sub stos loop movsb fstps std mov mov sbb mov addr16 into push fimul inc mov lods mov aas xchg ficoml jmp lcall imul imull insl cwtl sti mov and out push jmp sbb sbb test inc mov or jnp dec insb cmp add stos imul jecxz inc inc call out add pop loope push jns pop add (bad) xor inc dec test cmpsb aas push inc ffreep jns mov repz or fcomi add lahf inc jae je pop inc xchg sarl aaa sti mov mov pop add add int3 sbb push inc sub ja mov jne popf pop stos mov adc inc out inc in jge dec inc cmc inc (bad) test sbb roll xchg and shr inc cmpsb das rcll push popa gs (bad) sar add dec xchg mov inc outsb jecxz pop dec pop cmp xor mov inc (bad) out iret scas lock (bad) add notl xchg inc call sub pop jge adc outsl inc mov (bad) add leave push daa inc xor imul inc jle jae adcl (bad) sub push rcrb mov cmp push or sarb lds cmp add mov out mov sar inc inc xchg mov cmpsl ret andl loop icebp inc aam insl je bound adc mov pop inc jae push inc dec aad rolb pop pusha outsb arpl into testb pop push mov addl xchg rcrl dec mov popa scas push push int3 aam pop push inc lea ret jb popf repnz or stos cmp fxch hlt iret dec movl pop add sti popa in lds xchg inc jae imul test dec jge js scas and dec into aaa cmpsb dec popa std inc ret inc lret add mov push lods out (bad) mov sub cld or pop insb pop sbb cwtl sub stos push mov test dec fcoml push (bad) hlt loope jecxz outsl iret divb jmp inc pop xchg jecxz push out idivl mov int pop jmp cmp jb mov jo fs inc mov std pop or and xor push push sub cmp inc mov les imulb or leave sahf inc pop cwtl insb hlt jno mulb sub mov jp cmpsb cmp push jae push inc inc rolb (bad) subb lds cs xor arpl daa pop sub mov sub int3 xchg pop inc mov jmp push (bad) and or mov push lea xchg je lret or sub mov in call aam test dec cmc fdivl bound inc inc incb and lcall xchg loopne test dec adc sbb push sarl add sub rolb add mov dec inc pop mov loopne (bad) sbb inc or jg clc push shrb pushf cmp xor add sub stc cmp popa scas int3 xor out jp lret idivl sub jmp rol mov mov lret ljmp (bad) mov add sub inc inc sub jmp js sahf dec cmpsb jb and xor addr16 sub lcall rorb sub or rol arpl cmp in mov xchg mov gs mov xchg out fsubs sbb das push inc push movsl lock mov ror je in cwtl ret iret xchg xor push pop add and data16 xchg inc iret and and outsl or or and inc arpl dec adc insl and xor and mov sub inc xchg inc sarb ja cmp ds (bad) leave pop jno,pn xchg and inc cwtl sub cmp mov inc sbb fisttpl pusha push push ret sub and inc (bad) sub inc push imull jns lods fwait test ret mov xor mov fiadd pop jae xor movsl and mov das push and xchg add loope dec fisttpll out dec xchg fistpll jge xchg mov mov xor shrl pop test lock dec mov inc out sub push ficoml inc xor xor inc (bad) mov mov add push mov xlat cmpsb ret jne imul mov xchg and (bad) out push dec mov jge sbb cwtl dec pop jg inc cmp bound add popa insb (bad) dec outsb jecxz out sub (bad) lock dec jne cwtl push jae mov adc cs out js inc cmp mov dec jl sahf pop inc inc adc test movsb in (bad) mov xchg dec pop sub jne and imul dec cmp insl out jle aas inc inc cld (bad) mov repnz mov sbb pop scas mov sbb add (bad) mov adc in out and lcall popa push cmp or (bad) daa ret push push sbb (bad) mov inc add das mov popf and mov inc cli jmp fistpl inc mov test fstpl jae loope into xlat and dec dec mov iret (bad) jne inc nop enter add pop lret jp xchg sub dec add nop inc xchg jae (bad) sbb je ja (bad) incb sub pop or (bad) and push mov mov mov jmp push xchg inc or mov movb testb cmp inc ds dec rorl sub mov ret mov xchg ret or cwtl mov inc out dec jnp,pn mov cltd mov adc mov aas xor xchg xchg sbb push or popf or movsb dec into push sub sub scas (bad) lcall shl fcomi inc pop (bad) mov aad stos pop inc stos adc cld lds cld add push aas inc add ret fistp mov arpl mov push cmp out lahf add push xor mov fiaddl mov cmp dec mov inc cmp jg dec mov jnp xor xchg negl xchg int3 sub mov ret mov pop pushf frstor into stc subb mov (bad) xor mov iret mov lods int3 adc push popa outsl (bad) jp ljmp syscall inc mov jmp mov enter subl xchg in push push mov mov mov jo xchg rcll inc or loope mov mov push dec mov cmpsl inc iret adc aaa lock mov inc inc pop jle out push daa outsb daa mov add out lcall fiaddl mov jge inc mov mov (bad) int3 ss inc sbb sub or adc cmp incb test into pop dec cmpsl data16 mov jmp lcall jb repz push mov dec dec sti sub mov mov push adcl inc and cmpsl into std out xlat add cld add mov iret xchg push stc arpl dec addr16 cli inc decl or fwait aas ret rcr add cmp sub fcmovb mov jmp push or in cltd adc add xor mov mov mov xchg leave cmpsl sub mov (bad) ja cwtl jge jb xchg test lret mov push push test mov stos iret pushf inc sbb xchg push test insl and and jnp cld mov mov mov int3 cwtl (bad) lds es stos cmp adc inc cli ret lahf cmp or stos jnp loopne mov cli das or stc add mov push inc pop dec sub inc sbb push adc inc jnp xchg iret jl aad xchg sbb daa rolb add mov scas jbe test xor xlat sbb add leave inc jle outsl xchg jo mov sbb jg or push pop inc inc loopne pusha in test fsubrs inc and lock es mov jecxz inc mov sbb push cmpsl push mulps mov jo push mov cwtl loop mov mov jge mov test inc je mov jae subl out mov inc pop fstpl lret inc fiaddl cmp xor xchg jae popf inc pavgw rolb inc xchg jl aad adc inc jns push leave jno sub mov dec clc arpl (bad) inc cmp in pop imul fidivl jo jae dec pop movsl sti cli cwtl push out adcl inc inc xchg xchg stos enter out pop popa push push loop inc xor jae push sbb iret pusha fs inc lods fcomps sbb and incl adc outsl and inc cmp mov stc jl fstpt pop out sub cmp jecxz cld pop fcom inc movsb push jecxz xchg sub inc inc inc jl pushf imul jmp (bad) mov inc adc fsubrs cs enter cmp ret and ds stc (bad) cld jns int3 mov not jmp dec shrb push icebp sahf jmp add stos xor push add pusha mov jae mov pop incl repnz push jb int3 sub ja,pn mov insl inc xchg mov inc mov ss push hlt sti push inc pop jne mov mov jns inc mov xor lock mov pusha inc add xchg int mov daa mov xchg pop jnp bound mov xor imul test xchg adc inc pop aam gs mov inc dec insl lret push daa mov inc sub and das stc sbb movsb jno lahf loop add xor enter cmp mov inc popa repz orb inc dec movsw and insl push adc hlt inc bound dec pusha push jmp mov jbe jb push cs addr16 test mov jmp dec lods adc push jae scas push gs jo inc sti adc mov dec inc enter adc outsb jmp int3 cmp jge rclb (bad) mov mov icebp call fwait mov in clc popf sub cwtl cli adc cmpsl mov pop repnz xchg dec gs sub push mov aam cmp ror mov jmp dec push cs pop add jno adc leave aaa scas mov push movsl lds mov roll inc push je imul insl ja imul pop bound inc or lds dec mov ret bound xchg shrl test sbb cli inc imul sub push dec pop push dec xchg fs dec and xor cld adc fildll and add xchg cmc idivb les xchg dec sub pop lds sub xchg mov into bound inc das mov je stos out adc roll push lods lret or out fimull push jge cmp cltd insl or mov mov inc int3 and ret sbb xor and data16 xchg negb cmc dec lret aas dec pop jnp pop mov mov jg sub lcall mov mov jl xorb cli inc (bad) mov or fisttpl sub ljmp popl jno pop or mov movsl cs add inc (bad) jle xchg or or lods add jl mov hlt js fsubp push inc add xchg or inc mov pandn int3 negl xor addr16 stos mov and pop cli not jnp adc xor inc outsl aad (bad) movsb mov das sbb cmp mov mov jecxz jmp fsubrs and dec mov inc mov xchg sahf ret cmpl and clc ret inc clc lock imul xchg jno dec dec stc mov cmc mov adc push cs lret aam inc adc inc ss out repz popa sbb cli arpl inc push or push dec add dec into xchg cmpsl and lds popa dec stos lret sub test xor dec cltd pop es mov inc pop jne loop jge pop xor cmp inc mov test jne jns jl add dec shlb leave popa (bad) jae ret mov int popa call inc cli sbb dec outsb jge mov and dec pushf sahf mov jecxz xor xchg sub mov outsb rclb addl icebp adc push in jle xchg pop pop push outsl jmp inc add mov pop inc das data16 (bad) test popf ds repnz or xor and dec push rep inc les into or dec (bad) dec xchg push cmpsl jmp xchg cmpsb push sub repz cltd cmp loope xor inc inc loop inc sub dec inc sahf repnz dec or fiaddl test into faddp xchg add cld cwtl (bad) out xlat inc lds popf int3 xor adc arpl ja mov push mov inc sub add mov xorl cmp ret xor inc mov dec les lahf jno dec stos dec inc ja into ret adc pop fildl imul pushl test repz inc aad int3 mov out dec sbb or adc jno repnz push imul fcmove sub jg dec mov dec pop stos cmpb aaa inc adc and or xchg sub mov jo roll inc or mov add cmc js rorl stos lret mov lds xchg sub mov add push outsb cmp inc sbb roll sub out cmpsb int3 leave pushf lret sub stos jns idivl movsl dec popf lcall arpl cmc stos sbb stos dec jb shll dec jecxz add shll imul xchg dec mov dec outsb push lret imul mov cmpsb lahf push inc stos mov or lahf xor adc inc pushf cmpsl adc mov gs sbb inc lock adcl repz test fsubs push jae pop sti scas out das ret and ret inc dec mull fild aad outsb sbb enter xchg xchg or sub lds sbb loop mov sahf in jg adc cmp sub sahf or imul mov inc push mov repnz push pop stos push outsb and xchg mov out sarl mov pop xchg inc (bad) xor mov (bad) leave xchg inc jae scas jbe in loop ret cs in jo test cmp cmpsb sahf xchg adc push repz (bad) dec mov movsl pop dec mov pop call inc (bad) xchg mov sbb hlt insl repnz nop inc dec push shll adc sbb stos pop or xor out inc leave sbb lahf sti imul int3 ret cmp inc add dec push das rcll test mov addr16 jmp aaa in (bad) xor idivb cmp shlb mov int3 mov mov dec hlt out xor fistpll cmp add gs or addr16 mov mov cmp and jno stos lcall add icebp jnp pop and jl and mov lret sbb dec adc mov sbb call pop pop lret incb outsb inc mov adc sub jne mov push decl inc (bad) jns dec xchg lods mov in pop or mov xor xor rcl (bad) (bad) sarl ret ds mov inc fs aas and lret push ret pop dec cs (bad) xor vpshlq dec push xchg stos fldl2e inc jb push je xchg ret ja loop sub (bad) leave aad in scas inc jnp popa or add sbb inc xor cmpsb jg cmp popf rclb test sbb icebp out mov in add or fwait push rolb pop insb rolb pop or jle cwtl mov bswap and mov xlat sub and popf inc iret ss xor xor dec pushf dec stos pop imul mov mov repnz sbb jne jbe ret test fiaddl sti mov dec mov mov cmp sub popf call xchg push aad ret out cmc inc in lret cmp push jecxz loop test cltd push insl and ljmp cmovae xchg adc mov xchg xor les iret inc cmp fisttpll pop xchg je pop lret in (bad) mov jo jne mov shlb inc inc push push xchg clc xchg call push das mov loop mov inc jl imul xorl inc push xchg lcall cwtl mov jmp (bad) push sub cmp enter rcll inc (bad) xlat lea scas mov adc ret xor xchg pop mov in clc mov sbb cmp imul jno in cmp sbb jp lds pop int imul mov icebp push sub in in adc sbb and ret out or mov mov mov mov mov add cld mov mov ret ljmp pop push push les mov dec xchg lret jo add xor and cmp mov mov cs cld or inc pop mov ljmp cmp iret mov dec mov outsb out cmpsl jmp and cwtl sub pop sarb rorl das sub (bad) fcompl stos add add mov fdiv mov lcall enter mov mov sbb and and lods dec or add add icebp inc xchg imul sub sbb dec ljmp mov inc jmp mov hlt lds mov ret roll (bad) iret andb lcall xor fmuls cmp imul outsl loope push pop mov jge add rclb aas inc lcall xor sub sbb xor or cmp fs arpl sub jb mov xchg (bad) xchg and cmc add mov popa sub cmp popf arpl sbb scas xchg verr pushf incb pop mov fildl pop in add (bad) faddl out loopne add movl imul aaa mov stos jnp pop push jl aas rcll ret sub cli push clc inc cmpsl jns pop les xlat sbb or push inc scas es loopne dec inc xchg xchg pop ficomp mov adc icebp inc sub leave aas loope mov (bad) cli or push pop aad inc imul xor popf insl hlt loope inc sub inc sarb jbe inc add int3 sbb (bad) mov push push dec add adc mov lret push outsl (bad) mov repnz dec in inc loopne cmp out mov (bad) dec imulb sbb add cmpsl loope sbb xchg cwtl shr aaa and idivl xor pop ljmp popa lret xorl dec iret adc add xchg dec daa mov (bad) lret (bad) mov pop movl aas (bad) lcall mov push inc dec frstor add mov xchg sbb test jnp aam orl lcall or sbb mov mov sarb mov cmp dec pusha (bad) (bad) test incl push roll adc inc mov fmuls cmp pusha adc cmp sbb nop push ret out insl xchg inc push sub bound adcl pop push adc aas and and mov inc sahf push repnz and dec movsl adc or jge lds scas aaa inc (bad) pop aad orb mov pop (bad) push push imul inc rclb mov fldl2e call inc adc inc dec mov scas mov mov hlt nop add shll inc pop jmp outsl fxam jp add xchg xchg jge cmp xor sub movsl int3 cltd fstpt pmuludq pop or dec inc and xchg sti push inc jl es mov push sbb cmp (bad) push dec sti jecxz mov mov stos xor push mov bound mov outsl xchg dec mov outsb xchg push sub add jge call cmp sub loope out lcall jnp pop into dec pop fistpll sub xor lret pop mov popf loop andl mov fsubl (bad) fmulp add sub jp shlb pop or lock (bad) (bad) jmp pop (bad) aaa stos sub outsw mov xor inc dec push shrb gs mov rorl repz into lock hlt push pop (bad) inc xchg fildll outsb (bad) cmc dec out adc sub xlat inc loope jnp push aad clc push sbb iret sub popf cmp xor fwait mov adc out jle outsl fistpll call inc loop xchg inc sub insb das mov pop std out std and dec lea test icebp test xchg sub mov jl test inc (bad) cmp dec push imul and xor int xchg int3 cmp jg push mov push std push pop out and lea jb dec insb push mov mov cmp stos aad dec pop fildll pop lock xchg cmp jae jnp dec mov pop push dec mov stos push in ljmp adc outsl cmp cwtl xchg (bad) and in xor inc inc out into outsl lock dec stc in lret pop and jle sub stos shrb or stos cmp cli inc jno dec sahf sub in stos pause and mov ret jb sahf fnop add sbb push xchg (bad) testb pop adc (bad) push add and jecxz es testb loopne push ds loope cmpsb std fnop pop cli aam sub outsb jecxz add pop es out xchg subl jns add pusha xlat sbb fnsave out xchg push push lret dec xchg sbb xchg and inc fwait pop add or rorb push adc (bad) or cmp xor stc mov loopne pop push mov xchg cmpsb into mov pop push jb (bad) xchg ret mov adc xor xor (bad) pop loopne push out int3 or dec push mov or fstpl xchg iret aas xchg sbb inc les add aaa movsl dec cli jb lcall adcl loop push inc stos xchg xchg (bad) mov or shlb or and sub inc out test sub push scas cld dec and ret ss sub imul lea les fiaddl addr16 push sub sub enter in mov adc mov (bad) negb imul lock (bad) stc cmp fstl pop aad add pop lock aas push add aad repz int3 mov rcll lahf sbb aam out xchg xchg add (bad) icebp test int3 and sub mov inc add jnp add and or ja lret jg icebp jmp in stos insl mov stos pop fsubp dec xor aaa sub dec mov cmp fdivrs or mov dec shrl and dec push sub add sbb adc or popf loop aam cs add out imul sbb incl int3 dec mov faddp fs sub dec mov jg into je cmp stos js lds adc pop jge dec lods push jg out arpl clc fsubp mov mov sbb lret xor std movsb aas sub inc sub inc push jle xchg out inc out (bad) and in jecxz pushf popa test dec and mov sub jp and jae xchg inc mov jno jnp xor out push push insb or xchg outsb sub nop repnz (bad) jo out add jae lret dec or ret fldt in mov std mov fwait decb inc dec sahf xor arpl sub inc sbb into notl dec sbb jbe inc mov push push pop adc imul inc sahf push cwtl mov inc loopne stos mov cmpsb and into popa cltd mov or jl xlat mov add rolb fldt jno cltd jmp inc xlat mov add subl fistl (bad) push clc imul aaa ss arpl mov repz (bad) jb jno movsb addl test fnstsw jne mov xchg sbb fs mov das mov push pusha repnz pusha cmpl push push cmp dec and stos lds das inc negb in es test lret push inc scas xor or push lods rclb dec pushf adc cmpsl jle repz fbstp mov add aaa fs push loope lods mov pusha mov mov jl xor fldl out sub sub mov inc lods (bad) scas xchg in mov push popa fmull jg je outsb add nop shrl lods mov add inc mov inc aam (bad) ds test xor (bad) and add xchg dec adc adc (bad) mov add inc mov gs sarl lret stos sbb subl ret jae xchg repz mov push pop adc sbb mov and add adc pop test inc mov push lret or sbb xor fcmovne xor push push cmp movsb xor pop jnp lret (bad) fwait sub jecxz bts cld mov mov push in ja or sti imul out cmp adc js cld enter mov sbb add cmpsl cmp sahf inc or fimul popa jg subl std out mov push inc call xchg into clc inc (bad) fbld stos inc cli sahf inc push push add arpl outsl adc xchg movsl mov xorl jl mov cld ret sysexit jbe jl mov fdivrp fldcw in (bad) cmc mov aam sbb pop sbb test inc mov (bad) push into xor es out mov inc push ret push push aas inc pop sub movsb in pop mov jmp mov and sub push push imul dec test add in aaa test call test and xchg cmp or jb mov mov xchg icebp dec xor lock mov (bad) mov mov stos lahf xchg sahf aad sub jo (bad) push push sbb aas daa inc (bad) int3 mov and inc loopne out adc mov stc sbb vmread movsb jmp sub insb jb scas inc mov ret ret adc and arpl sahf ret jne clc and xor mov jecxz jne insb mov gs lret cmp push xor inc cmp push jecxz xchg dec aaa (bad) loope (bad) adc sub divl sub and inc out ja cmp dec inc (bad) and movb sub sbb rolb outsl test cwtl int3 inc dec mov dec rcrb stc in addl xchg mov shrl cmp ror xchg sub inc pushf dec insl dec cwtl sub push sarl shll dec xchg push in xchg sub adc lret mov out int3 fdivs je sub add dec push lret sub cmp ss jmp dec dec cwtl scas rclb xchg inc arpl push das add mov (bad) dec sub sbb arpl stos mov jl pop test inc push ljmp test xor js lds inc fistl push cltd inc loop add (bad) cmpb adcl push sbb icebp mov jne xchg adc adc ljmp xchg sarb (bad) addl addr16 stc jmp repnz jae cmp jl jb mov dec addr16 ds clc (bad) pusha or inc int mov jne pop dec cs sbb xchg stc lea test and mov cmp loop mov cmpsl sub aas clc cmpsb (bad) hlt xchg jp mov jg les jae outsb xor in dec mov cmovae dec ja xchg push adc push in pop adc xchg xchg addr16 cmp dec or jns fwait shrb dec adc lret jcxz inc arpl sub test push xchg bound repz inc lea aaa add stos fsubl jmp test stos inc inc repnz cmp pop outsl hlt dec outsl mov add and loopne jnp sub iret aas cmp push push fcmove fistp repz xchg test adc push in out cmp movsl xchg push sub das jp jne into push mov inc fsubrs test (bad) xchg ds sub out mov ss push and ret xchg ret imul pop pop sbb adc loop dec or push or jecxz addl add inc adc mov incl test push jne and add mov ret sahf (bad) sub pop test mov inc ret mov add adc cli dec jecxz iret push xchg mov pop adc ja stos xchg push popf mov xlat inc insl roll ficomp imul cmp inc cmp jmp addr16 mov cmc xchg and xor mov es (bad) ret push mov jp andl push and aad or stos inc dec stc or adc mov mov imul call ljmp lcall pop dec inc sub pop sahf cmpsb mov out out popa (bad) fsubr mov imull inc call fidiv addl mov or mov inc icebp xchg insl movsb lahf ret lods mov mov or in js dec push dec daa pop ret and std push or pop ret negl lret das or fstl dec mov push pop sub or fstl loopne imul nop in inc sbb in mov xchg ds add imul test sub mov push test ds out imul cs cmc xchg gs test mov loop cmp insl inc clc push cmp pushf xchg ret hlt lock and push inc das sbb cmp lahf mov imul clc inc or adc cmc xor std pop sub sarl pop lea inc dec jmp push xor (bad) add hlt xor and inc jg xchg jb add inc lods imul pusha xchg pop test mov jnp sbb cmp and inc call rclb add push ficomp inc dec jle mov ret mov mov (bad) xor jmp je adc shll xor mov inc pop ds jne addl fiadd popa inc outsl mov and xchg sub aaa mov aaa das dec pushf test in add sbb daa scas and ss les (bad) aaa sub dec out inc inc dec rcl add jle lcall test and mov dec insl mov lahf fcmovb test add jl jae fnsave inc cmp enter sbb int les inc fs dec mov ja push mov int nop insl leave inc mov lods test mov cs jb mov lock add fisub addr16 mov inc pop xor outsl std sbb push push cmp (bad) dec push xchg xchg inc inc jno jo inc jle or jge pop xchg imul push sbb icebp hlt scas lret sub pop mov cwtl push (bad) stos aam jae into and pushl (bad) popa mov lds jle scas fscale (bad) repz mov in and sti dec sub push add movsl ret enter push aam popa xchg sub lods rclb rol add adc test sbbl outsb mov inc sti stc lods xor outsl push js push shrl inc aad cmp repnz push mov xor inc xchg std xchg and lret bound (bad) mov rcll popa inc xchg cmc ds into xor adcl pusha dec out je jnp jbe aas xchg cmpsl fdivp pop cltd sub jne popf std pop inc cmp mov push mov (bad) fsubrp (bad) xchg or mov in cli inc pcmpeqb or dec add test popf test inc inc subl add mov xchg fildl pop sub inc fwait dec cld pop push in inc push pushf inc call outsl mov xor fs push aam repnz inc (bad) enter add scas addr16 sbb dec iret imulb cmp jecxz and mov loopne out push das pop imul mov lret cmp fwait stos (bad) push js add aad cmp dec cltd jns sahf adc in mov inc adc lods pop dec movsb lds push movsl icebp dec push aas gs enter mov add ret inc pop mov repz and push or mov call pop push inc add aad cmp lret sub xchg mov loop arpl repnz mov lods cli ret dec mov ret xchg repz mov dec cs xchg mov cmp std int addb adc ret pop shll leave pop stos into aaa movsl inc jge (bad) icebp arpl sub mov and ss inc (bad) cs push pop insb lods inc mov mov jb and pop in movsb pop shld fwait lret (bad) push movsl inc fimull popf dec adc loop fcomi sub push test out fdivrl push push dec sub xchg mov add mov adcl inc stos sbb sub adc xchg mov bound jmp out fild outsl and aaa sub adc jns and xchg sbb (bad) sub (bad) jae dec mov and xor jp mov iret xlat push push ljmp mov insl cmp push arpl inc xchg pop jo dec pusha mov movsb and xchg int mov shr std sub dec lea lds ss sbb xchg ret push mov and repnz sbb push cmpsl inc int fucomi dec push adcl inc ret cmc movsl addl sub cmp jno mov jnp scas les mov push lahf cmp mov test xchg shll jge xor mov push hlt out ret dec fimull inc ja mov sub repz dec dec movb dec sub pop mov cld fiaddl push or mov andl popa sbb lret xor adc ja daa and cmp roll ljmp ficoml ss mov mov mov and roll mov testl ficoml push xchg into (bad) or je dec push hlt xor call fdivr adc push adc jno push pop shlb into fist cltd dec dec sub lahf sahf inc (bad) dec and jne mov inc fistp ficom repz cli or out mov xor loop inc stos jmp fldt push scas inc sub mov cmp lcall sub lds dec dec js gs pop adc push repz outsl fdivs jno mov ja mov jb pushl test dec add mov outsb fstpl stos ret push mov fsubs jnp mov adc adc jb or out adc mov ret dec shll (bad) jmp cld movl mov dec gs push xor dec xchg cmp mov push popf and stos inc and hlt inc xor inc cmp test inc xchg xchg nop dec jns xchg mov loopne or xchg sub (bad) xor mov sahf push pop xor cmp or mov inc push sub cmp inc mov xchg and xchg ret push add push test pop inc ror push into stc xor andl cld loop cli popf xlat repz jae fwait jnp inc xchg inc push shrl ja add scas out outsl test and add sbb std int3 pop icebp push mov cmc jp loop pop aam xor sub and xchg in movsb jae int3 insl inc jae cmp inc and add les inc (bad) mov and xchg stos loopne jl xor add inc jecxz cmp cmp inc xchg pop xchg or cmp rol ret cmp inc enter xchg fldcw ss int cs mov push inc (bad) pop lret std adc adc sahf fcoms xor dec inc xor pop loopne inc cmc sbb cmp push flds into (bad) dec (bad) adc sbb dec dec insb mov or lea sti lock sbb xchg ret jl dec sub push cmp imul outsb and inc mov loope dec push push test cs jp pop imul push xchg or fsubrs loope inc push out les sti cmp xchg and dec cli add negl daa popa inc (bad) mov je inc cmp xor stos addr16 shll rorb enter pop in fwait pop inc pop int3 and imul jne popf ja adc sub inc and mov inc (bad) hlt negb jne ljmp inc test mov dec pusha jae adc dec iret and sub stc pop dec mov movsb (bad) (bad) inc rclb add fs jb xchg jnp cli jo mov (bad) jg ss mov push sub cli fwait clc dec gs xor les in loop test push adc push stos (bad) pop add in cmpl push jecxz mov fcoms push xlat inc push leave jnp in jo mov pop add and inc aas test mov dec mov (bad) fidiv mov inc lcall adc mov or xor sbb and lea push push push inc jae xor fs mov and gs xchg push test pusha or pushf sub inc push jae xchg lahf inc and cli inc inc or in inc mov cld rclb push pop lods cmp popa outsb push sbb loope add push sahf inc cmp cmp sub or inc push lret dec inc movsb movsl mov and push inc stos xor mov (bad) pushl inc or inc adc push insl cmpsb test rcrl mov inc jecxz and lds inc movsb mov mov add add cld cmp das push rcrb inc add jecxz jnp push push mov and sub jmp jp std mov out (bad) mov arpl sti daa (bad) jno sahf sbb and rcll aas dec inc cmp push sti mov jno fildl outsl hlt mov stc dec inc jl icebp mov mov or inc cmp pusha inc push pop mov scas inc xchg test jnp push mov mov dec sbb in inc roll sbb in js ret mov cld or push mov lcall pop pop jo and cmp jg js leave fsubl cmp inc hlt repz test lret push pushl inc leave pop addl xchg mov test add jmp inc inc (bad) add inc fcoms setge decl add aas test fadd sbb push sbb inc lcall pop (bad) mov push cmpsl insl imul std xchg inc or dec jle dec pop xorl sub pop adc inc (bad) repnz repz inc xchg push sbb orl mov inc dec jns push jp mov inc (bad) sahf cmpsb out (bad) lock loop (bad) jnp rol and inc out popf fimul ds es imul in xchg fildl dec mov in jle xchg and jp pop imul mov pop xor mov and add pop xchg xorl mov inc test push cmp les adc jecxz mov jp test outsl test fsubs adc inc imul out mov and jmp mov mov mov mov mov inc or sbb jbe ret sti jg addl nop fmul scas rorb jge addr16 push xor add gs les test mov dec inc dec mov int3 push inc or add popa mov dec jne test xchg pushf bound arpl add push mov dec xchg jmp aaa retw insb sbb rolb pusha daa mov add dec cmp fwait hlt jnp add je test std scas dec test jecxz dec in fimull cltd mov dec fsubrl pop in fs imul jno cmp or nop jle popf adc les mov adc and xchg das loope mov inc sahf popa ret mov cli repz insl jmp imul and jno leave jmp cvtps2pi cmp loopne sti ljmp cmc hlt sub call push fldl jl subb jmp (bad) xor les (bad) cmp jbe jno inc sub fadds inc shrb shll lahf mov (bad) and sbb push push movsb inc fadds jns roll jg cwtl pop insl scas lods adcl add outsl push pop push inc mov inc divl inc icebp stc clc mov push ret sbb inc xchg add inc mov cmc scas adc pop inc stc xor fcomip inc sbb xchg xchg or inc cmp pop jg loope sti or push scas mov test and pusha inc or mov imul leave jle test mov in into fisubl int3 sti (bad) imul clc mov mov cmp ljmp inc xor cmc push imul lods scas mov in divb cs add inc daa fwait inc or push repz enter adc xor scas jmp dec out pop xchg pusha fs in xor arpl aas mov movsl pop xor inc cs mov jge mov lret negb daa inc cmc cmp xor inc insb sub xor fldenv jl dec enter sarb jecxz icebp std call inc add push pop cmpsb test sub mov lea jg aam bound dec loop jno int aaa cmp ss mov inc cld push (bad) fs (bad) out clc inc or jge (bad) mov loopne dec ret xorl out xchg jae jmp inc dec test pop pusha testw mov inc (bad) adc adc cmp jecxz push inc jbe dec fs imul ja dec (bad) test pop icebp lcall call test fnstenv insb orl cs push je pop adc data16 xor movsl aad jae mov pop xchg aad dec arpl or fiaddl cmp push fsubl jle cmp or in hlt mov dec mov icebp jmp sub imul add and negl hlt xchg cmp gs push dec mov sahf dec inc jmp ret out adc loopne test mov mov fimull inc and add mov dec scas jb out pushf pop test adc jno dec out cmpsl mov xor xor cmp imul inc dec sbb push into inc aaa or ss stos mov push push cmp aaa out insl pop aas fbstp jl mov dec ret or inc fist sub xchg add mov test pop push add mov lret sbb push or push jge flds int3 mov add pop sub (bad) rclb loope add inc push stos cmp xor ficoml out (bad) movsb dec cld fisttp stos cmp jns pop push outsl in sbb cmp or or inc or out inc jg enter mov mov sahf cwtl lea pop jmp fwait aaa enter jo sbb mov inc fnstsw or push jae stos cmp inc addr16 sarl shl sub mov mov jge dec jle pop or insb pop push es adc dec jmp ret inc inc adc sub jl mov sbb inc lods push add dec lds fisub daa add outsl testb sub stos lahf icebp mov scas push cmp mov sub push hlt push lret adc iret and inc test xchg scas repz dec and push mov jns mov and mov add dec fsubrs inc ret mov cmp (bad) jle ss lret and xchg mov in push test add pushf or mov fsubrl push inc mov add adc sub push psrlq mov sbb mov inc les inc ljmp rolb fsubp push cmp cli ss jne pop incb hlt fnclex sti push xchg cwtl jecxz sub pop fimull pop mov data16 and test mov inc rcll inc push lret inc sub dec ret cwtl fldt in xchg xchg popa mov lods ds out popa mov inc push dec cmp pop pop inc lahf cli jmp lock cwtl lea fbld stos gs and and mov dec mov shr inc xchg arpl add rorl int stc jl dec outsl stos sbb push jb or (bad) popf (bad) mov mov (bad) les mov lret sbb ss insb mov inc or sub popa cwtl push es add sbb sub xchg out push inc sub shlb pusha mov pop orl out icebp test in sub sbb sbb mov sub ret daa pop fmul pop ret imul sarl imul sub jp xor mov mov adc jmp pop fisubrl sbb inc fldl aas mov xor push inc mov loopne mov dec es pop inc xchg js and pop jae pop inc addl pusha inc fdivrs xlat cmp xor ds jo add (bad) jno jae sbb cld pop out sbb jle inc lahf fstpt mov scas (bad) jbe sub xlat repz shl sbb in inc and insb aam loop andl in inc jle cmp ja insb mov inc dec xor and arpl loopne jle lods ficom pop addr16 or inc mul mull cmp sbb jg aam cld outsb push (bad) mov dec addb push pop push dec mov adc pop das ss inc outsb push mov outsl call inc test mov push jle adc movsb and iret popa jno das out mov mov xchg into fildll (bad) ret xor int3 inc push and (bad) repz inc dec in lret call jg fdivr jg mov roll mov jb jnp mov inc out loop stc jns sub inc nop int push popa roll inc add aas jmp adc mov xor movsl ret jo add js lock in jg mov aam xor movb scas rcll arpl jmp xchg inc dec movsb and repz test (bad) arpl push inc call iret cld add fwait lret out add xchg das push movsb add cmp xor into (bad) jno xor xchg aam fstpt xlat cmpsl sbb fwait shrl jb mov sub inc dec sahf add add in scas and mov (bad) mov out inc and ss mov cmpl mov out inc jo outsb pop (bad) loope das inc stc imul jl add (bad) inc jp sbb aas jb inc pop dec pop sbb fdivs test rolb pop mov ja ljmp lcall mov xor jns and sbb daa add test inc and lcall ret mov jne or dec sub les inc iret xchg xchg sub inc testl mov (bad) lds add call pop pop mov rolb aad or jg push jbe inc aas push stos imul xchg add cmpsb inc dec int3 push jne adc pushf xor or scas cmp push (bad) into dec sub sub in daa movsb pop add mov stc add inc idivl repz add xchg jnp jg jnp icebp dec insl mov add adc cmp cwtl (bad) into inc or sbb mov inc cmp jle ret and mov ljmp (bad) push data16 dec imul ficompl test mov movsl daa adc add sub rorl xor fwait movsb cltd cmpl jno inc (bad) imul xor jno lcall popa jne inc cs xlat insb cwtl cmpsl pop pop add je rorl and inc push mov push inc (bad) iret push daa push outsl xchg jae ret xchg scas inc sbb mov xor jl fcompl rorl fcomps icebp push push outsb fnsave adc xor add adc sbb lcall jae rorb adc xchg jg adc dec test neg dec sub xchg mov fndisi(8087 imul lock vandnps jo popf or sbb pusha daa inc or aad xor jecxz push orl or lea and repz pop orl roll xchg inc pop (bad) insb push jbe ds mov sbb std mov jo jecxz rolb (bad) ljmp mov adc (bad) mov inc inc mov pop xor ret inc pop addr16 pop lret and jb push orb inc adc ljmp inc dec (bad) arpl mov (bad) inc mov fisubl sbb andb cmp orl out fisttpl cmp cltd or pop stos sahf xchg loop ret jno push push inc les cmp push adcl jp in mov ljmp icebp testb mov decl call sbb shrl add and imul mov mov out jne jnp sub fldl cmp xchg mov repnz data16 push xchg add clc in ret outsb (bad) or sbb inc sub mov mov insb lea pop add xor push pop out lahf (bad) roll or in push sbb lcall vsqrtps xchg xchg mov xchg sbb add mov dec inc and jge adc mov in pop sti insl push pop data16 lock jb jbe inc sarb sahf inc popa ljmp out test inc pop push clc add call xchg and jge push cmovae push addr16 flds movsl aas dec mov inc mov fistl lret dec mov mov pop add inc add lods jle pusha jmp sub (bad) (bad) hlt dec and sub fwait sti push cmp stos inc scas jbe mov or fdiv or push mov leave flds lcall push cmp dec inc aas or xchg inc xchg es aas gs fadds repnz cld jecxz sarl inc xor cmp imul dec add jno mov scas into icebp cltd fcmove aad test add loopne dec add loop and mov ljmp xchg inc jno sarb add ret sub stos push cmp add xchg dec push xchg sti in test cltd jb sbb (bad) daa mov xchg or lods cmp push lds xchg leave mov sbb inc into aad push dec icebp cld cmp int3 xlat push and xor jg (bad) push xlat add iret sub lcall mov push add fldcw test repnz pop jecxz ret jnp xchg call jo pop cmp push icebp seto mov clts mov add lea enter cli mov aas cmp arpl adc mov dec (bad) add fldl xor fwait push sub (bad) enter dec xchg scas jne stos mov int3 das and xchg mov or shll sbb sub pop add xchg bound dec push call add adc xchg fucomp pop mov ror test into add sub inc out pusha ret or jp into lock lret clc inc daa fldcw cltd inc stc add dec cmp mov push popa into stc loope xor mov dec push jae dec test insl adc incl frstor rcll mov lahf arpl jbe sub outsb xlat fistp push push mov mov pusha outsl push inc test xorl sub cli ds (bad) fmuls sahf xor mov cli lret das push lds jmp fs out sub push sub push add fisttpl xchg lret movl je,pn sub or jmp jne test add stos pop pop jmp pop add or (bad) aaa sub das inc cwtl jb js mov (bad) dec inc push mov mov pop inc pop mov or ficom aas and popf or inc lds mov add clc fldt loopne dec and lahf ret popf ret stos loope and dec movsl (bad) xchg inc jae jl test ret in lahf push in xlat loope jecxz push pusha outsb pop arpl (bad) xorb jge pop jnp in adc mov in out pop and adc aad and test pop sbb lods mov xchg dec pop push (bad) in iret sub push cmpsl in jno push in inc push jne (bad) mov sbb outsb lods sbb les mov enter scas or sbb push push sub rorl call testl test or jb and xchg mov popf dec (bad) pop outsb enter lret out jge fldcw xchg inc cli push push stos and mov inc loop jo lds cwtl lods addr16 xor scas and mov ds push popf inc std push bnd daa out das add jle sub xor mov add (bad) xchg inc mov cmpsl xchg int3 cwtl arpl in gs (bad) adc inc and js pop jb xchg fiadd mov cmpsb xchg in jno fxch leave fsubr addr16 lea movsb xor pop or push inc push stos stc or imul loop jg fiadd mov lahf cltd stos mov push lods jecxz pusha inc inc mov pop lahf sub inc scas fldl sbb shlb mov mov add or xchg in cld cmp push aaa dec popf fisub roll lret in inc mov fldl inc lods push fdivl rcll pop mov adc push mov mov dec adc inc dec test movsl add test idiv cmp lahf and push nop xor pop xor adc mov ret or pop sti sub pop in inc data16 faddl mov in cmp jae addr16 in das mov scas push addr16 add and xchg ret xchg push xchg and jbe jnp btc pop inc jbe (bad) lea mov mov popa inc test outsb cmc push inc dec mov insl mov pop lods sub xchg mov cmp rolb in xchg mov lock sub push stos sub aas repz push in mov cmpsl jnp fwait pop das dec sub movsb inc dec jne fdivs (bad) inc ss int rcl mov or maxsd mov fwait adc sub in je mov shrb cltd inc arpl insb rolb (bad) push mov int stos (bad) leave mov ja inc push lret pop mov xchg test fisttpll push cwtl mov pop sbb shrb or stos sbb loope repz adc mov cmc sub loop xchg and add jle jmp into aad (bad) loop lahf jmp dec dec loopne cmp or mov out fild pop adc sbb adc insl icebp cmovo mov outsb xchg add aas push hlt inc or adc cld sub in out lods sub rol loope ss inc dec aaa js dec mov pop jae add lahf arpl std inc jb xchg aad test or add adc inc or ret loope nopl pop or cmp jbe mov test push mov data16 in pop int3 mov push movsl mov jl insl inc cmp jg repnz imul arpl (bad) mov push aas push mov push fmuls cmp xchg loop adc in mov ja insb icebp jae (bad) out mov mov and xor rcrb cmp xchg cmp add inc in lock scas inc mov adc xor addl out fstl xor dec out call in add rcll jmp mov les hlt mov test or and in inc jmp push push inc inc je inc push leave mov xlat inc push lock stos enter sahf movsl pushf cltd sub push hlt jge add adc (bad) fcomip into add inc (bad) cmpsb sti je (bad) xchg sub jns orl loop insb push fs push int3 jmp inc outsl addr16 push addl mov push daa dec mov lahf in mov adc fldenv iret adc imull sti xor xor lock (bad) and cmp bound popa inc addl loop repnz xchg push in inc test aad mov sbb outsl sub pushf push or in das popf add fwait cmp es cmp inc (bad) pop sub dec loopne mov xchg outsl outsb add dec cmp mov inc das push xchg or ret mov push xor inc movl inc cmp in xor mov movsb cld mov sti lock decb ffreep (bad) xor dec cmp in jecxz cmp mov pop adc std dec ret mov mov mov sahf repnz out pop fisttpll stos aas mov (bad) sbb inc bound inc ret inc push mov mov stc sub inc mov xlat mov adc push inc test inc sbb outsb mov cltd push lret pop fmuls mov lahf les adc ret and cmp je mov lds lods stc stos jmp idivb arpl int fisttpl cwtl adc ja popa push pop xchg jno adcl mov je sub inc test mov and out (bad) jg fmull inc xor inc inc jle push daa pop lods fadds or cltd and popa jb sbb pop lods popa jbe shrb xchg and es jnp gs lahf out pop call xchg adc lret adc mov bound fidivr sbbl push clc xchg rclb flds inc popfw jle aad mov stos push inc loopne addr16 cltd mov adc xchg movsl jg mov movzbl insb andl roll mov and arpl add fcmovne (bad) mov push dec xchg and pop movsb sbb ss add inc enter out adc data16 cmp insl frstor inc out add cmp fnstcw xor cs adc fwait es and mov dec in push push xor scas xor dec (bad) insb cmp push lea sub add leave aad jo inc fild cmp xor mov loope mov inc (bad) sbb lds gs xchg xchg inc mov je sub fwait pop mov imul (bad) (bad) addl daa sub mov scas push jp cli and xchg dec inc adc adc xchg mov xor inc mov push imul in jno aad arpl (bad) aaa int and inc cmp cmp popf aas imul int3 jle sbb pop out xor or jmp xor lods add ret jo ds jbe xchg adc mov lods inc fisubrl sub push or jge adc je ret (bad) jl iret xchg and (bad) arpl and out frstor inc in clc sbb and mov push jge or ja (bad) cld mov lods xor rolb cltd dec xchg jae int3 sub push pop mov inc xor cmp hlt test repz jmp xchg icebp add dec xchg dec sahf test fs jo inc cltd int fdivr cmp test aam mov ret pop mov dec xor dec dec xor fiaddl popa xor mov imul mov aam jb (bad) lea ficoml pushf mov adc pop std inc lahf pop or mov movsb inc add (bad) inc into (bad) aad jbe sahf (bad) sbb xchg imul jb pop push sub scas jge inc jnp scas test mov out mov xchg inc out cmp rcll in pop (bad) push aas lcall pop ljmp jmp addr16 push adc incl (bad) mov xor lods fisttp and xchg scas iret imul xchg bound aam popf pop dec cltd sub lahf arpl push gs lock or add and pop std dec add das lret xchg ret pop fisttpl jb ja aaa inc test sbb outsb push bound inc sub pop jae mov mov push push push mov inc int3 fidiv mov inc (bad) mov repz test (bad) mov insl mov (bad) lret das pop xchg add inc inc mov out dec addb lret das mov in cmp ror adc inc jne xchg or insb outsb outsl xor adc notl add inc test rclb cs sub xchg movnti push mov push mov test pop lea scas xchg imul xchg adc ds test xor imul les mov xor aas add mov imul mov mov xchg jp inc rcr xor insl icebp pop jmp add pop mov xlat push adc add push es mov arpl mov sub add addl jnp in jp xor aaa out fs and jo mov call or cli mov out cwtl lcall test call mov sub mov mov and xchg nop in or jns mov jo and xchg mov cld and out inc mov cmp bound mov insb inc stos jmp mov sub dec jae lret fxch inc add call cmpsb out sarl sbb mov pushf push pop or movl inc bound fadds or mov add inc adc push das jo scas mov out mov arpl jle pop pusha add (bad) jb inc mov movsl xor lret add or mov dec pop fbld cmp inc cli jmp add and in inc or sahf and mov arpl mov cmp sub push and jno repz cmp add enter push inc popa arpl (bad) push into inc loop or out jbe push scas inc cld pop sbb mov dec inc pop inc scas xor stos adc xchg push sub dec (bad) cmovae cs (bad) int3 inc stos pop pusha jp sti mulb cmc subl xor fwait lds popa in adc (bad) push inc add jb inc xchg scas mov jno jmp out in add mov xchg pop jl loop sub add xor enter cmp mov pop adc (bad) mov mov push sub frstor mov outsl fadds xchg and imul fs nop adc lret add add lcall hlt popf aas cwtl inc movsb inc pop adc dec inc add cld adc push scas sbb mov dec inc enter sub hlt mov cmp jno cmp negl gs jge cmp push roll je into lock cmp xlat xor leave pop out mov adc fcoms sub add xchg cld or mov mov stos jb dec mov test out lock test sub pop into xor add push jmp inc gs sbb mov leave (bad) lret (bad) dec sub stos dec jecxz and mov fs sub cwtl or pusha dec imul jecxz adc xchg xor inc (bad) pop clc in rclb jmp in pop pusha test jecxz insl inc mov mov das xor push arpl inc mov lds mov push loop fwait (bad) pop push (bad) inc inc incl enter mov push push dec jmp dec inc mov data16 inc mov pop add inc mov (bad) sti leave outsb mov pusha sub js dec inc or test dec pop or repz lcall out inc aad sub popf jmp mov test mov push stos ja push push sarl lret xchg rcll (bad) (bad) xor pop cltd repnz pop inc push or popa dec clc xchg bound push lods xchg ret mov push aas mov xchg aaa push push add inc jno enter add sti lds movsl outsb inc pop repz aad in xor sbb inc les test loope and cld mov imul mov bnd push push outsl jge,pt jns push mov pop ret mov mov xchg pop fsub jae or add sbb iret inc imul sub xchg inc add (bad) dec icebp adc xchg test lret jg daa sahf jb mov out je test xor mov push push lock dec xchg push in stos es sar (bad) into dec (bad) rorb dec mov lahf and faddl fs add insb jge int3 (bad) shl aas adcl inc pop pushf sub sahf mov mov xor les ss adc int3 xchg mov int3 cmp pushf mov sbb push and xchg push enter inc popf xor sbb sarl inc mov mov mov inc in cli aas add inc sub sbb jecxz dec rorl lret add rcll dec iret or cmp jmp (bad) sbb mov xchg mov aad ss mov mov mov and pop pop inc mov xor arpl sub jecxz sti nop xchg xor inc psadbw scas mov (bad) sub push fimull clc inc sar int3 and sub pop icebp decl test add ret xchg out sbb xlat stos aaa push pop loop jecxz ret pop pop nop into inc xchg xchg dec sub xor push cmpl mov mov mov ret (bad) (bad) clc dec jecxz jae push inc xchg cmc (bad) cmpsb out jge mov daa add inc (bad) rolb inc incb (bad) rcll and pop (bad) xor dec ss pop inc pop leave clc andl int xor xor push jnp ljmp in outsb add lret inc xor xchg pop mov sbb inc jecxz adc xor sub mov inc in in sbb add mov push hlt add dec add and cmpsl inc repz js adc inc decb xor sub aaa fcomps out daa sti xchg fwait pop sub fisttp cmp mov pop sbb mov std adc inc mov push rolb je pop and or xchg fdivrs in icebp outsl mov jp jge cmc push lock test (bad) daa out add repnz movsl inc pop xchg and ret xlat int xor sub in xchg js dec jo fistpl out and repnz inc loop ds adc jle inc inc jge push loop or lea jne stc push call pop sahf push pop sbb add mov test aad mov pop mov mov dec jle mov fwait repz mov sub orl int arpl mov incb xor add cmc cwtl insl and pop js sbbl bound popa loop rorl addr16 add ds pop cmp out mov (bad) xor cld sub mov mov js dec scas push adc xor cmp push push clc xchg sbb dec jno mov dec inc xchg and aaa mov clc in (bad) std dec mul ret and adc push jne cmp shl orb mov add cmp bound jae add xchg inc inc mov nop xchg sub std loopne ret enter in inc inc push cmp mov add xor mov shlb inc sub fldenv lret xchg hlt mov lcall arpl into or pushf mov sub je jnp outsb add pushf fwait cmpsl stc inc in (bad) mov outsl mov stos int3 or (bad) ficoml or xchg inc movsb mov sub dec pop clc dec inc call add lret and fild mov add add loopne sti pop add sub cli lock ret xchg aas dec jmp cld push gs test fldt outsb cmp and push cmc popf ficoml mov into pop sbb pop aaa dec add jp cltd inc pop (bad) jle inc scas leave ret bound (bad) dec dec push insb add pushf cmp push popa inc sti or fisubrl int sbb jge outsl lods push dec and sarl (bad) gs ret inc (bad) fnsave movsl lahf popf dec imul repz sarb sahf sbb fidiv mov inc inc jg fnstenv inc aas xchg pop adc xchg outsb popa scas add inc xor and dec leave sbb (bad) std insb inc add dec or jae aas dec inc push out jp adc loopne ret mov stc les mov decb addr16 cltd data16 iret inc repnz inc fdivr outsb mov rorl cmp and dec inc inc cltd fwait mov mov movl aaa aaa add pushf mov mov sub fucomi dec mov push movsl and mov movsl cli cmp sbb xor add out les test pop or incb (bad) ja inc mov (bad) test sub adc jge inc rolb and (bad) xor push mov insl or inc daa push in add cmp xchg inc cs xlat mov inc icebp aam aas cmp stc jb insl sbb cs sti popf in (bad) xor popl xchg into and mov ret jne call inc ja (bad) out inc inc xor ss jl dec mov arpl shlb adc lock inc mov movsb aas add ret push and and mov pop mov inc das cmp fisttpl pop enter fiaddl es pop ljmp push cmp inc push sbb add mov adc pop push loop sti repnz call mov shrl (bad) imul ret inc imul inc pop push repz cli push lret fsubp ret lods dec fs xor inc add scas aad cwtl inc aaa jmp mov inc add rcll test pinsrw push (bad) inc or imul cmp inc xchg cmp scas sbb mov sbb js fcomps inc push (bad) dec sub inc leave adc shll and xor dec pop stc and out mov cwtl lods dec addl mov fiaddl xor xchg insb lods movsb sti or loope pop mov inc xor jae out xchg icebp and leave fwait mov sahf pop pop dec in cmp fbld subl lahf inc in lods fsubrs xchg fs mov jns cmp sar (bad) push jns repz jl sbb pop xor test sbb dec cmp adcl je cmp xchg inc (bad) jo jnp mov push popa dec cmp inc scas aad mov movsl or inc jne jmp out sahf fldenv mov xchg ljmp nop movsb and adc lds das jne sub jno push dec add inc and and ds outsl sbb and repz aaa xchg inc (bad) cmp dec push in xor pop sub mov dec pop cmp out inc ret mov and dec xor inc scas mov pop mov xchg (bad) ja xor arpl fistpll test pop push btc push aad paddb ficompl dec mov mov stos jb jmp idiv push loop aam fnop scas inc inc mov ret inc cld shl test mov int3 pop cmp out sub jo pop jle pop (bad) flds push or loop push dec movsb sub or test push aam cmp bound stos pop lahf fcoms lret mov xchg mov subl xchg lahf pop dec sub loopne fdivs hlt fwait mov cmpsl mov jo (bad) sti xchg test sub add cmp ret in stos cmp addr16 loope rcrl dec mov inc pushf xor xchg xchg in mov add dec add pop arpl loop mov dec push and ret xor getsec int3 adc sub jg divl sbb jns pop inc imul popa xchg inc ljmp pop inc sarb cwtl add mov cs imul push push insl out test sbb xchg shrl xchg outsb and mov mov sub dec lcall mov add in add arpl or lcall cli xchg xor xor in push icebp mov dec bound or insl dec mov mov jae mov xchg out cmpsb dec imul aad sbb add cwtl sbb fiaddl ficomp dec and dec inc inc stos lods mov aam js fwait cmpsb cmpsb dec lds xor push inc mov pop fisttpll jmp jo xor xchg inc (bad) xor jne mov pop fcmove insb jmp adc pop mov xchg rorb xor daa jle outsb scas les cmp mov rclb add sbb ret lods mov inc out mov movsb mov jecxz ljmp fsubr inc jl je rcr dec sbb xchg ret cmpsl xor pop adc jbe xlat mov inc sar repz lahf push mov dec dec or and js frstor addl mov sbb repz push cli orb xor fdivl cld push sbb push xchg xchg lock dec pop dec push push repz cwtl xchg scas dec popa test add das push inc sbb fnstsw fsubr std or jp inc or test add mov mov sahf or fwait lahf mov sbb test mov rclb lret lds fbstp (bad) jle push test push sbb scas test inc cmpsb movl push jae lcall lds or cmp test int scas insl mov call ret sbb js loopne jp das das mov sti xor dec cmc inc fstl outsl jno andl insl jbe jmp inc rol jg mov pop loop dec mov out inc repnz push mov movsb xlat add mov bound aaa pusha inc test cmp inc dec mov jp sahf movsl add and mov bound (bad) fstpl scas and jp and mov jno inc sub jb sbb inc repnz (bad) sahf scas test ret push add pop scas jecxz or sub or xor cltd inc mov pop push xor std mov popa mov dec out push cli mov cmp negl mov or loop and inc inc push dec push pop dec rorb mov cmpl add fdivrs insb addl xchg xor cmpsb inc mov mov xor jae inc xchg repz jns mov cmpsl xchg dec xor hlt mov addb jb mov sbb rcrl xchg push sub inc lea push push xchg inc inc stos jle repnz ror or sub das inc sti push aaa andl movb add push jp mov (bad) dec cmc mov test (bad) fsubrl xor push or (bad) leave in adc outsb loop,pn dec mov mov in sbb rorl jg fldl mov sub mov loope aaa inc xchg in mov cli ds shrl inc mov or or fwait xor gs inc lcall dec sub jno jl (bad) fistpl dec andl adc ret jecxz push xchg int3 mov sub movsl or pop pop jge inc adcl add nop das lahf lcall jbe sub out ret cmp bound mov mov out add sub push inc sub daa mov dec mov loop sbb insb js xchg in (bad) add dec pop enter negl cmp pop incb (bad) out (bad) rorl movnti add inc xor add push xchg (bad) fwait cmp addr16 stos xor sub shl jecxz cmpsl pop and lods (bad) xor mov and adc jb (bad) jae xor xchg pop int3 outsl sbb dec inc addr16 popa sub pusha pop in inc sti pop dec pop xor jecxz sbb std imul cwtl adc cmp out fild fidivr addb insl xchg xchg mov xchg (bad) cmp int3 jl cmp mov cmc repz sbb jg cltd pop jmp enter arpl pop dec jp adc mov and ffreep loop and adc mov or int dec jge sub pop insb xlat popf sti jge inc cmp pop mov sarl lret inc int3 xor dec (bad) insl scas imul inc pop enter inc mov and clc insl and movl popf icebp pop dec scas ret ret xchg sbb inc dec cmp sbb mov and pusha push mov sub cwtl int testl mov cltd cmc xchg daa add sub rolb pop nop push push test pusha movsb sbb fbstp icebp faddl das jne ret add pop dec pop outsl add and gs jecxz xor push pop inc fwait clc inc stc push js xor or aaa int pop sbb int3 out (bad) stos dec add outsb xchg add lret mov daa addr16 js xchg (bad) hlt in imul mov movsl and sub and repnz inc test (bad) movsb xor mov push dec cltd inc fistl push sub cmp insl xor gs inc mov in rorl cmc mov xor (bad) into (bad) mov sbb push push ss jbe xor stos cmp xchg icebp lahf add inc in pop sub scas cmp mov popa jmp inc sbb das lret std push sahf inc mov out outsl lcall xchg in sbb movl or aaa inc lods dec pop lret ret mov inc push mov inc test xor inc or jns in (bad) mov fsubrl icebp inc in inc adcb cmpsb test arpl dec outsl push inc (bad) out cmp cmp inc and test inc inc xchg or inc push pop iret les jo inc dec mov gs lods stos cmp les mov enter adc inc push (bad) jne mov mov push mov xchg and cli sbb sub mov dec test fnstcw jno push (bad) jae out push ret xchg stc das cmp sub mov mov xor mov insb lret das fldl mov icebp setne add sbb jns xchg pop fmul push daa aas jns inc sbb jae add fmuls bound cmpsl push pop and adc dec inc das mov lea test mov inc mov pop pop pop outsb out or jmp inc dec lret icebp inc pop push add testb stos test lret fdiv and pop sub repnz shlb pop insl scas test lret cmp mov mov adc add push sbbl lcall add add jbe jnp jns mov inc jo jp mov mov imul mov add icebp je inc pop mov (bad) je ja jg or inc pop mov push xlat testl mov repnz imul adc cmc xchg ret add sbb bound push xorb sub rolb mov mov cmp or jns xchg mov lahf int test cmp dec sub mov jo andl pusha mov add mov rcll pop dec cmp inc xchg rorb movl into repz popf adc add xor push out push les pop push jae add push lods adc push aaa mov insb sbb arpl inc or lea xor inc xor pop test inc sti pop add insl jle cmp jbe ficomp add jb dec ret ret and jp push ficompl int pop test sub cmp cld (bad) pop data16 adc scas mov cmpsb (bad) lahf jmp in fadds test mov inc lahf lds test or inc sbb in addb dec xor push add das out test fisttpl mov mulb jle addl or mov inc inc leave push push loope push sub das inc aaa ds ljmp jge out gs ficomp jns aad push pop jmp loop into (bad) testb das fidivrl inc mov xchg rolb fsubrl out movsb insb (bad) pop popa mov jecxz push push aas inc jge outsl or cmp outsl shl std mov loope (bad) jbe mov xor enter adc cmp fstl hlt push inc adc or andl push jnp pop xchg jmp adcl adc fisubrl aaa push imul xor rol mov les inc dec lea outsl imul mov dec imul cltd fistl xor sbb jo pop adc xor (bad) loopne xchg movsl loopne out sub jmp aam jecxz mov push inc add xor pop push push push pop dec inc jns (bad) jp dec andl jmp inc inc mov xor jae sub (bad) cltd push pop dec pusha sti ljmp imul call inc add rcrb dec lock fstps ret pop jne out or scas mov xchg jmp pop and jbe jnp mov pop aam dec pop jns inc and jmp inc mov jl mov gs std mov and cmp add fwait inc loopne dec sub fbld inc cs adc push mov lock in add aad das dec sbb inc jae mov icebp out ss pop data16 adc ljmp mov sbb push add ficomp inc stos shr push scas ljmp and mov jle mov dec aas mov push stos push ljmp adc or mov fidiv push xor or pop sbb mov push xchg push or lret pop cwtl add add imull push movsb outsb loope inc rorb ret pop or xor push push (bad) push lods add arpl sub clc inc lcall dec stc rclb dec add sub out mov test pop les push cmp sub repnz mov into sahf jle subl pop addr16 sbb inc dec fild mov insl pop jo loop mov dec (bad) outsl sub out and cld inc (bad) cmp dec pop mov xor dec push stos xchg jecxz aas pop imul push add mov repnz jecxz sbb and add arpl push inc ret mov mov andl pusha in sbb addr16 js ret sub inc push (bad) cmpsl inc jbe ss mov sbbl stos imul fmul inc fstpt lret inc cmp inc and mov push dec lcall sub loopne,pt into inc dec mov fxch pop movsb push cld in adc jae mov add jg inc push loop xor add and sarl pop mov inc adc dec pop lcall cwtl dec lods push ret mov loop push pusha sbb add test scas pop push dec dec jecxz test loop rcrl push popf lahf inc sub aam inc add inc add test dec mov adc fcomps pop (bad) sub test sub cmc test xchg les lret add (bad) mov mov pop inc mov cmp xchg sub cmp inc jo mov cmpsb sub mov in xchg stos arpl or popf cld dec push jl daa xchg xchg add pop and pop sub xor jg mov aas mov xor jo jg dec adc dec stos pop sbb imul push push pop out jp lret or mov cmpsb nop lret push inc call aam inc lods jne mov pop or dec (bad) fcmovb ficom xchg lock push ret mov jae outsl sub (bad) mov dec sti dec adc shrb cwtl arpl hlt je dec dec lret fbld movsl push rcrl in aas leave dec jmp test sub pop (bad) xchg stos or mov pop mov add sub scas inc dec push xchg int3 inc mov jle je mov dec push in push xor insl ror xchg add mov push mov (bad) jb fs pop sub out cmp repz (bad) xchg pop sub fsubl dec xor lea cmp dec out out repz or dec add movsb push and mov insb mov sar push jne sub or lret adc dec sbb out sub dec rclb outsb inc stos scas jnp aaa (bad) or dec (bad) (bad) cli jb sub push inc pop (bad) or call jl jbe sbb ret data16 int addr16 jecxz push inc std (bad) mov rcl adc icebp fild jns mov push out mov inc mov add xchg sbb enter fisub push sbb inc roll int3 mov sbb jmp mov mov orb roll (bad) fucomp pop mov dec jnp xor arpl (bad) mov repnz xchg sahf cmpsl mov inc ficom mov push mov inc add popf test aaa lods out gs xchg mov pushf (bad) jae ret scas sahf or push jnp inc out inc es push cmp flds inc (bad) incb push (bad) fisubrl dec stos xchg scas add decb movsb inc and dec into jbe push or les add xchg in xor insb pop sbb sub stos inc fs mov jge cmpsb jnp or push push mov cmp cmpl sub outsl jp xchg orl mov aad into (bad) xor (bad) mov int3 inc dec rorb fdivs stc repnz mov dec movsb rolb stos rcll int fcmovb jne add pop clc sbb popl out jmp adc fstpt mov ds jae inc les push dec push leave xchg jo cmp dec push lret inc loopne dec inc test xchg mov dec inc inc lea hlt inc jmp sub jecxz daa push mov aas push push cmp pop insb pop imul lret mov jbe imul fwait jno add loopne sub and fildl imul sahf inc xchg adc je and cld in mov call movsb dec in mov or jnp mov mov inc push jbe aam rorl push sbb cwtl aam fadds imul pop stos cld imul cltd dec sbb jg imul sub xchg jmp int3 fistp loop mov push mov (bad) out pop out push push sub fwait or arpl (bad) (bad) jb addr16 sbb bound pusha lods lcall in aaa aas imul dec jl pop mov (bad) add mov stos push fiaddl insb cs ja call xchg roll adc imul xor mov sbb ja fbstp dec leave ficom sar imul dec cmp push ror or mov cltd jg xchg das add dec xor in mov imul add pop pop out mov dec inc lret into or dec pop adc inc scas stos push mov mov jno shll xchg mov inc adc sti and dec adc pop rorl or cld dec orb mov loopne in or or (bad) cld jno jle mov repnz and hlt add mov push iret out ficomp icebp xor fcomps popa inc (bad) out sub rolb adc push push jg pop cli cmp inc add mov sub inc sub bnd pop enter or lret inc mov sub inc inc mov or push addr16 xchg pushf push mov jle push inc or ja mov push jnp or xchg jae leave (bad) push inc outsl shrb (bad) cmp sbb pop (bad) xlat in sti mov push mulps pop dec jp scas cmp sbb and jo popl in sub fnstenv std xor inc cmp in cmpsb add stos mov out les mov (bad) mov inc pop insb push sbb das lret inc pop push adc aaa mov roll cmpsb aas push outsl mov cmp sti xchg loope jge call movsb rclb fisubrl or inc push pusha (bad) aad pop arpl jmp and push add jge dec andnps into push mov jns push popa lcall imul repz outsb push data16 push sbb aas dec pop sub pop pusha and xor push movsb inc ds mov jns and add xchg pop pusha sub scas hlt pop mov int push mov xchg inc roll into mov jl or mov cmp jb inc cmp sti pop mov inc repz push xor call add pop repnz adcl inc dec adc pop adc or pop imul arpl push sub ror stos ret xchg cmp test insb inc stos inc lcall or adc mov jb xchg jge mov faddp (bad) push jmp add ss les in pop cltd test movsl in add jnp pop into mov popf cmp aas xlat sbb dec popf pop inc sub cmpsl pop jecxz dec xor lods dec sbb mov and sub lret ret stc dec cmp (bad) test adc xchg outsl das pslld sub loopne xchg dec or jb int outsl inc (bad) leave xchg xchg mov sub mov mov xchg incl ljmp sbb aad lahf popl pop shlb mov aam sar inc in add xor mov mov rorl inc clc dec pop dec lahf lds push les mov mov xchg adc sbb inc jecxz mov mov mov push leave xchg sub js mov inc nop stos cmp in push push mov cmp xor aam jmp into pop sub shlb (bad) dec cltd fwait mov pop aad xchg mov loopne pop (bad) jmp dec jecxz int and repz stos daa push sti xor or push test mov cmp inc add xchg mov push ret cmpsl fimull (bad) mov aad loop jecxz pusha push add cmpsl scas xchg inc cmpsl mov cmp fist push mov cmp repz add outsl jne lods inc lock repz jg mov adc mov add ret lds inc inc shlb or cld (bad) fwait jg repz xor mov adc adc inc aaa repz add ror sbb push outsl push cmc inc sbb stos mov dec mov sub inc addr16 mov dec mov push into and gs mov xor jp add stc inc or jb repnz data16 call mov daa jge adc jno addr16 aam inc xchg push aas scas ss jg inc jne and xchg inc pop (bad) (bad) cmp cltd mov pop mov pop outsl and (bad) imul adc into stc shr xor ficompl sub data16 inc or mov dec sbb mov inc sub roll mov inc enter into lret inc clc int3 fildll repz inc stc in ja xchg mov push add out and aam or aaa dec dec pop aad popa lret push int3 js fldcw test lock xor pop sbb inc adc jg bound and add pop mov push into test or pop sub ficoml loopne or rorb jl mov (bad) xor pop and cmp addr16 adc sub cmc in repnz in push rclb stos cmp std add sbb push jle sub adc sti loopne std fistpl aas fcompl out mov xchg mov mov sub xchg dec sub add push (bad) jbe xor adc int3 pop pop fisttpl push mov mov or pop addr16 mov mov dec test adc jle (bad) or push outsl push pop int fs mov mov sub in sahf dec in test xchg add inc cmp mov jb and inc in bound add push jbe mov add adc xlat imul sub mov rorl inc (bad) iret push stos pop loopne aas movsl adc sub out mov in mov (bad) add jmp mov adc movsb insl in inc jmp pop enter or sub inc je pop test inc and sahf scas sub cmpsl ja add ret pop or cmp ss data16 cmp lret mov add cmp or decl sub outsl cli ljmp bound pop imul jg mov sub inc mov cmpsb jmp inc dec jno insb pop je scas sti ret (bad) and (bad) rcrl dec in adc inc and mov adc xor sbb imull xor shrl lret adc jecxz fbld inc sarb movsl pop lahf inc xchg ja dec xchg jo or pop sbb bound mov in mov dec and or das xchg add dec mov (bad) fnstsw shlb cmp arpl xchg and mov xchg clc xchg inc cmpsl popf (bad) xchg das mov aas mov push sbb adc and inc repnz mov mov xchg daa xchg (bad) ret cld dec dec fwait push lods fbstp in xchg inc outsb inc popa pop push pop imul lahf es mov orl xchg dec arpl adc pop add fwait jbe jl pop les push pop lods inc push inc arpl iret mov (bad) jae sub xor (bad) ret inc pop in and sarb mov mov pop jno mov iret sub orb popa (bad) xlat inc shrb icebp repz pop outsb jbe jmp pop cmp sahf lods stos mov inc fcoml sub imul lcall dec js jno test mov (bad) mov dec sub adc xchg cmp mov inc loope into pop jbe fiaddl sub mov sbb pop fsub sub (bad) cmc fwait adc and inc mov adc inc (bad) sti lock mov pop nop int3 mov dec ret lods test adcb mov loop push outsb inc ret (bad) out mov mov bound popa push add sub insl inc mov out jne jno dec xor ss pop in (bad) lock inc in dec jno pushf ret mov test in cld mov pop incb pop sbb push lods mov mov iret dec mov out xchg mov daa leave idiv ret jns andl adc out call sarl fwait mov add xor cli dec test lea cmpsb dec addr16 add jle xorl or inc cltd sarb jns adc dec sbb pop sub pop inc sub lods call arpl dec loopne xor pop (bad) repnz jmp fildll js mov into mov and mov scas std dec sub fwait lret mov lret fadds int3 repz fisttpll pop in int3 and das pop andb add inc lret push dec mov inc in hlt std sbb xchg mov arpl add clc and (bad) or mov lcall mov test sbb dec jge sbb into pushf sub fidiv imul ljmp mov shl mov mov push xor std scas insb cmp ja mov inc addr16 cmp push and (bad) rcrb xchg mov test dec into add in mov jmp or repz das test rorl in cli repz cmpsb cmpsl sbb imul out aaa xor jns xchg push shl cmp ret pop dec in inc mov lods mov int3 push gs xchg fimul jno push fcmovnu (bad) pop sub jbe dec cld mov aam neg dec sub lret aas test mov loop nop cld dec movsl mov push loop and movsb add inc stos xchg rcll mov sub xlat lds (bad) xor xor bound and mov clc test out adcl xor xchg lea aas push push lret pop hlt mov jg jge inc fcom and sti arpl pop cmp movsl mov cmc test mov cs push inc and ret incb aad dec lcall nop push mov popa push sub mov (bad) fild mov in push icebp ret pop add and xchg (bad) lret ficompl mov sub sti dec pop mov mov pop (bad) pop in stos inc dec mov xor jbe aam insb jg xchg mov clc and xchg xor jp aas jae in lahf dec jnp jb mov or cmp mov inc or movsb and pop cmp ja mov mov dec clc cmp dec dec cmc das scas push xor gs hlt and dec mov push js mov cs mov lret fmul xlat inc xchg jne sub xchg (bad) shll xchg mov add mul adc adc mov mov pusha jno jmp add push inc mov push fwait push subl dec and xor roll dec jns imul mov pop das xor push pushf dec inc movsl or pop jne sub push jnp sbb mov jle into jecxz inc mov repnz sub dec jmp and jmp ds cmp inc or cmp pop ficompl sbb inc les mov inc pop lods xchg fadd inc fstl dec shrb outsl fadds xchg xchg sarl push inc lret push imul adc sub push fbstp cmc jle ret cmc push mov push pusha mov aad dec sbb or mov cmp std jp cld int or dec pop lahf out imul adc sub rorb subb mov cwtl adc ds les arpl inc mov mov add ss push dec cwtl sub in and push add cmp stc in les orl cmp lret mov jbe fildl jmp mov stc add je imul in mov jg test pop std in mov rclb out pop loop loope std cmc lret scas push gs mov ja pop dec mov pop icebp sub (bad) call add popa int3 jne imul inc pop sub cs lods aad into inc mov test mov xor pop xchg inc ljmp add mov movsl dec repz sahf mov stos cwtl mov xchg (bad) int fsts lret push xor cltd jg stos repnz ja iret ret add ret iret inc or or cmp ss sbb or in push jae cmp outsl push out mov xchg fdivrl sti mov ret jmp dec ret icebp cmpsl loop pop inc dec push lds out out push sub into nop adcb aas loopne fisubrl sbb sub cmp (bad) mov popa fld inc loop (bad) cmp sbb or or xlat (bad) fadds mov mov inc stos lea clc sbb out stc (bad) aad mov jmp roll pop fsubl movq ss out outsb sub sbb inc cmpsb movsb xor sbb mov stc cli mov jecxz stos push ror and lock mov (bad) repz mov push fisttp out aad push pop sub mov push clc dec dec pop inc mov dec sarl fdivs std ret fidivrl cmpb test enter inc gs (bad) fisub inc rolb inc out pop dec dec mov or add jecxz sahf repz imul mov or scas add and inc xor sbb inc mov sbb xchg add pop jb inc or xchg mov imul cmp inc xchg add iret add jmp xor les push daa push push cwtl out add movl sub fsubrs insl inc cmpsb mov inc and scas xchg or shll outsl mov inc ret push (bad) sub push inc xchg mulb in jb ret int (bad) cwtl inc xor scas (bad) dec push lds and dec push xor imul stc inc jmp insb fstps dec cmpsb mov out mov das pop inc call cmc gs pop or jecxz push pop jae repz inc idivl std inc arpl fisttpl or daa fsubrp push xor js pop adc rcrb inc scas mov push mov jge sub dec pop fldt inc repnz inc push pop inc xor add xor mov jbe inc cwtl test in jb aad fadds fwait push cs aaa xchg inc mov stc jnp mov (bad) call mov xor inc or mov fldt (bad) cmp (bad) (bad) aad pop sahf jmp subl rcl ret out add mov enter lock or push xlat (bad) jnp out inc fimull test add mov xchg push mov sbb cmp inc dec in je mov loop js enter push push mov popa imul pushf test fsubs push sarl adc icebp inc dec int rcll pop hlt add inc outsl das dec in pop gs call pop xlat es push fs adc insl setae rorl aas adc sbb mov push cli and jno mov nop xchg cmpsb and push add arpl and clc adc sbb dec jge cltd fiaddl sub adc ffreep push hlt push pop or mov mov sbb pop (bad) movl mov (bad) out in ret outsl mov int sti aaa push jne in arpl scas pop push mov inc and and addr16 sub int3 loop ret xchg (bad) dec cld cmp insl or inc push xor push xchg inc data16 jno imul xchg push jo jg ret cmp fwait pop scas dec mov ja pop mov push xchg pushf rolb (bad) icebp add cmpsb sti rolb push inc xor aad sub addr16 ds das sub and aaa jo mov (bad) dec mov inc (bad) push adc cmp jecxz sub (bad) pop inc sahf stos mov jno mov mov jno ljmp xor dec pop and inc cmp outsb ret and push imul mov loop (bad) repz dec stc pop inc inc mov bound movsl imul shrb cmp outsl cmp ret inc dec out inc ret gs jle adcl fnsave sahf cmp pop aaa xchg js insb (bad) je scas cmp xchg mov jle fsubr adc cmpsb popf ret loope imul push imul adc push addl scas xchg xor mov inc jmp pop test (bad) pop test xor cmp mov sarl cmpsl mov (bad) jae sbb jns pop lds add pop loope ret loopne sub xor inc mov push fiaddl xor inc xor pop sub test adc pop inc fst sub push fimull mov or push out int3 jle imul das enter push inc icebp jle aad test xchg shll cmpl pushl scas ss inc mov jl (bad) cmp fildll outsb into stc fsubr dec inc pushf push push (bad) je aas sbb ret stc bound jae adc in pop and arpl sub dec sahf ds mov fs lds push pop mov cmpsb test sub sub stos loopne fcoml lea sti cmp movsl test mov inc or pushf dec dec shll lcall mov mov aas pop aad loope lea add pop cmpsb mov lret inc sub inc xlat mov xchg xor pop jb aas fs fistp (bad) or and sarb repz xlat sahf mov or xchg sub mov cmp mov xchg or mov push dec movsl dec out mov mov mov xor inc test xor in js sub xchg les fldenv outsl sub and bound pop sub jae inc stos jmp push scas testl imul roll push std and fwait mov jb mov das mov inc mov arpl bound int jae and lcall loop pop insl pusha inc dec test ja mov sti mov xor gs gs or adcl mov test ja (bad) ljmp push mov sbb in mov adc lcall adc push dec pop inc jae pop ljmp inc int3 (bad) mov mov pop hlt or insl xor sbb lock ja cli loop pop sub daa ret test pop xchg iret pop push cs mov scas push movsb inc loopne inc test lods lret int3 inc pop movsl pop in push push shrb pop or pusha and add in xchg mov add dec lea pop enter inc jl push sub sarb addr16 enter adc repz dec outsl les xchg xor inc test comiss inc fldl dec js jl jecxz daa (bad) inc xchg je dec out (bad) mov fstpt ljmp sbb and out aad cmovp pop or sub test clc xor inc lcall insl repz inc jp rcll (bad) xchg mov xor dec jl or xchg adc inc push xchg pop inc jns pop xor push cltd jbe (bad) (bad) adc or les bound dec std ret daa sbb lahf test out inc pop xchg adc loop inc push mov xchg scas jmp mov inc pop jo cmp (bad) or mov popw iret fnop mov xor sbb sbb or inc push arpl sbb lahf iret pop inc mov fldenv seta dec jns je fistp scas icebp inc mov adc dec outsl ss cmp adc inc loopne loope out or out js inc fnop in sub aas cmp dec (bad) ss inc xor and popa outsl inc daa push dec jae mov cmp xor inc or ret subl sub loop cmp inc jo add dec into mov cmp lahf movsb push bound or mov aas cltd mulb rcr mov sub jbe rcll mov mov ficompl mov ja es jle rclb neg cmp mov mov mov pop gs push cmp scas xor add add daa mov inc movsb jecxz gs insb xchg push lds in and and jg imul sbbl inc push sarb mov inc test add add mov adc fmuls sbb fnstcw adc push inc outsl daa mov inc inc add and mov push test loopne test push pushf imul xchg mov out dec lcall lahf cwtl push jge enter pop arpl rcrb out mov jg cmp ficoml add and fcompl mov aaa jae add mov sub cld fadds das mov adc cmp std lret or adc inc mov sahf cmp inc inc add scas int3 or jmp dec mov cmpsl push movsl adcl adc dec cltd push xchg mov icebp or test mov sbb jo loop mov jmp insl pop inc add enter or gs push push lods in inc dec add xchg (bad) clc push mov shll movsl mov cmp cmp cld (bad) int lods ds int3 jg xlat imul les sub das lret shll cmc xlat mov xchg mov inc inc cmp loope sbb (bad) inc ljmp push mov js int push mov cmc inc bound pop aad push xlat cmp add imulb scas mov mov dec push into aaa mov inc in pop enter jno outsl icebp hlt fbld jne or dec jl inc dec mov mov es jmp les fisttpl lahf aas add inc popf mov or dec inc repnz or pop pusha xchg hlt add cmpsb aas addb push xchg imul das adc xchg in inc (bad) iret fnsave sbb mov inc inc pop sarl out int inc std push (bad) outsl xchg xor push jno xor bound cmp in lock aam push sub subl jle jmp inc fnstenv cmp or xlat push vpsllq mov mov aad les sarb inc dec cmp mov sbb clc dec jns mov or sub popa xchg xchg mov add sub ja inc cmp (bad) xor pop sahf imul pop sbb sub int adc cmc and shrl es testl inc cs push xor cli mov dec mov and jge cs push aad cmp jg jge (bad) movsb pop fidiv notb mov call mov inc pusha ret inc push jno mov inc mov pop mov ja add add jmp and cld or inc mov push aaa cmpsb jmp movsb xor jle and mov mov lahf cmp test xchg nop jo xor push je cmpsb pop inc enter (bad) push daa jnp int scas sahf out call into fucomip xlat pop inc imul mov arpl (bad) cs xor icebp mov xor xor sbb mov dec jmp mov add xchg (bad) inc push js jle add aad shr repnz inc jo cmpsl push mov mov and inc movl and cmp out cmpsb sti punpckldq test arpl mov out rcll mov gs ficom xlat inc gs lods pop in rcl inc nop inc movsb mov fimull mov std mov ss sub fmuls jne xchg fsubrl mov lahf cmp arpl mov jle enter aad jns rclb (bad) ljmp adcb andl (bad) xor (bad) mov inc adc bound insl js sti fwait leave add std out ret movsl lcall push inc das lds and push aas mov cltd pop cmp sti inc out pop rolb fisttpl loope fisttp push add (bad) cmp push lds and bound lds or dec es push aad int xorl push xchg cltd pop cmc and mov js dec fsubl inc sbb shrl cmp cmp hlt cmpsl pop adc xchg mov or lcall sub insl inc and sbb lret push cmp pushf stos mov aam jmp lcall jae dec mov clc sbb outsb xor aaa and test pushf dec stc push lahf int push cld xor push aam enter sub cmp inc or and and pop cwtl (bad) cmc rcrl add dec (bad) aaa push xor pop rol jb ds add sub push xchg dec xchg push les add aaa lret stos pop sti nop frstor sbb push add pop fcmovbe add rolb lods dec outsl push lret push jbe xlat sbb mov loope cmpsb add (bad) cwtl and sub xchg mov mov mov mov (bad) sbb ss stc popa push lahf aas jae repnz add mov dec push (bad) push inc push lret fnop loope fisub push xor out ljmp pusha in sbb pop pop mov inc movsb rcrb xor dec in fsub add enter dec sbb inc mov data16 inc inc push cwtl sub shlb aaa rcrb test push loopne xchg pop inc enter pop movb int3 fst add repz pop outsl call stc fidivl adc daa call sahf pop cmpsb jecxz adc cmc jo aad inc and mov mov inc pop popf xor jl jecxz rclb jno pusha jp and movsl pop leave inc (bad) scas push imul test test or fucomp lock cmp lahf dec adcl jge dec inc test imul mov push adc ret jecxz mov mov cmp mov and mov dec js notl mov sti inc add ret mov insl fcomps adc add fidivl ret mov mov jb dec rcll mov cmp dec mov stos push adc sti ljmp push dec pop xchg sbb mov ds imul fmuls xchg mov fldcw adc and add dec inc pop or mov cs mov mov or inc and es pusha xchg fsubs push mov fcomip or inc dec and in adc jo cltd lret faddl out (bad) xchg scas loope push aaa lea ret mov inc movsb daa in and repnz jbe and popa fldt mov lahf inc push sbb divl and inc sahf test sub inc mov ret add dec inc std outsl lret aad arpl sub add xor push adc xchg adc in or adc fldenv dec imul pop imul cmp xchg xor cmp repnz cmp dec or rcrb outsl sti pop add inc lcall add jb cmp cmp fxch sbb fstpt loopne inc dec outsb inc mov sub dec inc cmpsl popa fiadd inc pop xchg sub xchg clc dec push in bound mov test repnz pop in lret sub dec (bad) xor mov cmpsl rcll mov sbb push sub pop lods and inc mov sub add mov addr16 repz inc add ret icebp sub mov push mov aas test and xchg lds out rol sub pop inc testl lock xor iret pop sbb or fcmovb mov mov cld sub inc add (bad) xor pop (bad) movb xchg inc ja lcall movsl jg imul mov xor shlb ret stos jp fiadd xchg xor rolb divl jge cmp push je popf inc pop or add aam shll dec testb insb sub (bad) (bad) mov hlt cld insl jo mov dec cmp stc inc sub loop mov push xchg push mov dec sbb sbbl rcrl xchg clc inc lea iret dec aad icebp xor repz inc jae mov push add loopne xchg (bad) aad ret xor pop inc test jp inc add mov sub (bad) push ficomp cmpsb lret add icebp xor sbb jnp jle rcl in dec dec pop push jecxz cmc push and or inc inc xchg jb mov jno inc mov jecxz pop adc popf sub mov inc push xchg movsb add scas mull mov orl loopne inc mov jmp inc (bad) fsub (bad) and dec add insb mov pusha mov ret mov add xor jp cltd out out fnstcw rcrb gs dec push pop ljmp pop inc or dec push push loope pop lock mov mov sti arpl inc xchg mov ret sub jmp mov aad shll bound dec lea xor loope repnz dec jbe cmc das fmull sbb aas cltd jecxz or addr16 jno ret mov insl lret (bad) roll pop or ret mov std pop sub stos jb js add test adc out jg inc stos ret cwtl mov lret push mov inc adc sbb sub (bad) xchg mov inc loop xor cmp stos cmc push adc outsl jnp in inc stc jmp icebp push fs test pop sbb sbb test push mov inc sbb mov dec incl std pop push sub inc mov out jmp scas (bad) mov fistpl dec lods pop hlt nop xchg add push fistpl jp insb jnp push fsubr out dec mov push popa add cmp popf adc divl daa and ret lea inc mov test inc (bad) push sti push movb (bad) (bad) adc sahf add (bad) sub bound rclb icebp push aad roll xchg ds push sub cs xchg ret pop (bad) cmp or scas add dec cli sbb lock mov adc lods inc cmp imull (bad) (bad) dec repz inc data16 sbb mov mov mov push ss mov js ret and inc or aam mov arpl dec sarl inc xchg loopne rcrb cs pop add pop push bound push es jmp sar aas scas dec popf cmpsl pushf or test push xchg pop add cmp xchg outsl mov mov sbb movsl dec mov jg push fcompl das lahf rorb cmp mov lcall inc ret and adc push xchg mov push sub dec les sub dec dec inc mov negl sub sbb mov scas dec (bad) xor lret pop adc lock fnstsw shrl pop bound jne sub push outsl fisttp sahf xchg inc ss or pop into mov xchg xchg xor clc and add inc cmpsl jmp jecxz out inc pop adc cmp repz (bad) popf jecxz lcall inc xor aam and add (bad) mov jmp add xchg inc jo sub pusha (bad) outsl imul fbld icebp incb or and jp inc sbb shlb xchg addl mov ret mov sub inc cmp inc rolb cmp inc push mov (bad) aad aad test ret ss es test fisttpl xor dec mov inc mov push mov inc pop dec mov mov sub cmc fiaddl pop stc xchg addl aaa mov cmp xlat pop daa or jnp in ret push loop xchg xchg stos mov pop stos mov ret dec jnp cli jo int3 arpl pushf jecxz add xchg aam mov mov lcall (bad) inc hlt jb and mov push mov jbe out inc int3 cmp xor add insl pop or mov inc mov xchg fiadd cmpsl in inc sbb gs mov enter xchg scas out out ret inc inc push lret inc std push into pop fild arpl je sub rorl nop inc inc fisub cwtl subl arpl into inc fistpll shll jo pop sub adc or sbb mov bound rcrb cmp mov (bad) dec sub pop fnop adc inc cltd repnz mov adc xor push insl jnp sbb pop inc sub xor in repnz mov movsl adc xchg mov lcall cmp lahf cld imul mov orb mov lcall mov xlat jge fdivl cmp xchg fs jae fsts insl inc addl ds lock lret cmpl jo xor cmc push inc add pushf pop or and ret push xchg or jnp dec lahf mov dec push adc cltd jnp inc adc jecxz sbb popf movsl pop popa scas lods arpl inc inc xchg and inc sub xor jo mov mov stc mov cmp ret dec dec jae xor cmp xor hlt les mov dec cli out loope lods fildl adc repz xlat mov add out int3 clc and mov je dec xchg dec cltd fiaddl data16 adc cwtl sub out arpl enter dec sub out cmp stos mov cmp or jb mov inc movl (bad) jns inc fiaddl mov stos clc fstpt mov fwait outsb in bound sti jl dec (bad) push fdivs sbb inc add cmpsl sub xchg add jnp insb inc jmp push mov and into lock xchg inc loopne dec cmp fwait push hlt pop or in dec (bad) push push fs jno jo movsb arpl adc lods add pop in (bad) sti outsl pop in inc mov mov dec jo or cmp (bad) lock pop jmp mov add dec sbb sbb xchg xor andl add cmp jge dec ror mov mov or xor lods add les sti pop or nop test dec jne daa fs loop mov outsl imul push push push inc arpl add cwtl xchg adc xchg inc fidiv and imul inc mov xchg fwait adc test hlt sbb mov lds aam pop jno jge ret hlt cmp inc pop mov in inc mov out mov add adc xor pop jnp jg aam sbb inc push outsl js jle cmp dec (bad) dec std inc adc sub jne jno insb in lea sub add push sub mov sub aaa sbb sahf inc aad les popa clc cmpl (bad) out das enter dec inc les in xor jecxz dec mov and sarl fiadd push sbb xchg adc stos lock adc mov mov fsubs inc in sbb add sbb mov lock flds push dec sbb imul add (bad) hlt lret mov and dec movsl push mov push jns add sbb sbb pop dec jmp out ds ret mov mov insl dec cmp xor sbb fsubr dec (bad) loopne jno scas insb les cwtl outsb das out inc and adc sub and sbb sahf inc pop ds sarl movsb mov mov in mov andl push jne les mov das fwait sub cmp clc inc cwtl inc lea add outsb cmp pop dec cmp ret push (bad) jne insl add dec mov bound pop dec dec pop rclb push out andb inc test stos fs subl sbb mov xchg or xchg dec dec mov dec cld dec addr16 repnz fidivr sbb fcmovnb aam inc dec scas sub cwtl jecxz js outsl mov add mov pop gs inc jmp jle inc lret dec lock push pop insl cmp inc sbb mov cmpsb cltd in inc sub add es jmp fxch and jecxz inc jmp stos pop movsl pop mov loope inc mov ret lds dec push (bad) dec mov (bad) cmc and ss in add nop inc ds int adc mov sub popf pop cmpsl popl fistp adc push xchg imul mov sub ja fcompl imul addr16 sub add leave (bad) test xchg xor mov sub nopl xchg cmp pop mov fisub outsb xchg bound pop push cli lret fistpl fistl sbb shlb mov jecxz lahf test mov pop lock inc sbb addl inc xchg test (bad) sub nop sbb fdivl lret aas mov or push jno pop popf mov aas (bad) jno xor mov jl push pop mov into arpl sbb mov pop (bad) sub inc fistl pop inc roll out test sub daa mov mov loop add popa sbb push arpl dec dec add cmpsb inc ret push fldt cmp rclb (bad) cmp xor scas out fimul test es subl mov push mov stos mov outsl xlat dec int mov out inc inc scas pop imulb scas or fbld push rolb (bad) aas (bad) jge in inc aaa add (bad) (bad) cmp addr16 icebp dec fildl push leave xchg movd sub repz add pop int3 or inc jae (bad) icebp out inc add pop (bad) fmuls cmp inc cwtl mov and push repnz insl aad push lock xor xchg gs pop ret add sahf sub aam loopne mov or in add daa or cs xchg add rorb sub popf inc adc icebp jo push push pusha aaa sub ret nop push and xlat std dec mov leave inc jecxz adc and xor mov mov mov pop dec pushf int3 mov aaa psllq mov inc mov pop mov jo (bad) dec flds push xchg fiadd arpl dec ss fwait pop clc xchg inc inc lea fwait inc repnz xor inc cmp rcr lods pop sub xor (bad) iret sbb mov in cmpsl lods imul sbb adc pop mov sbb xchg inc das rcrl imul push bound mov mov scas cwtl inc mov les xor je jbe inc mov push das push jp icebp cli or mov (bad) xor inc ljmp xchg mov idivb stos cmpl add in jp adc push xchg outsl les inc sahf cmp sub mov jno iret pop pop bound dec ret sbb dec sbb jo jns and sub dec fwait pop mov lea push mov inc mov cmp std push inc movsb jmp lahf fadd dec sub mov data16 testl cmpsl popa xchg (bad) int3 out (bad) fwait les mov mov sbb adc jg fsts mov xchg fptan rorl setnp (bad) mov fbld das sbb repz sbb repz push sub bts in rcr xchg cmp mov mov dec js and dec push jb ret push inc subl mov das xchg stos or push pop imul bound cmp mov mov mov in leave inc mov push dec sub movsb inc nop dec popf mov or or into dec nop stos dec push movsl (bad) cmp daa lahf imul gs loop jge dec lods cwtl scas imul inc aaa jb add lret enter inc insb and into inc test lock ret dec sbb cvtpi2ps pop mov mov jne int enter int3 scas fistp subl rorb aad fstl fcmovnb mov sub sub stos lahf and inc negl repz (bad) int cmp sbb mov xor pop mov and jae fcompl cmp push or pop std pop cmp jmp mov inc jae out ds xor fild push out sahf mov pop pop xchg pop pop push stos xor out lcall cltd in pop xchg xor insb cmc iret cmp pop adc dec sti xchg hlt inc mov mov cwtl rcrb les mov mov cmp mov into test push addl repz xchg movsb shll add imul adc lea shlb push imul add imul jecxz dec scas add dec (bad) cmp pop xchg (bad) repz adc sarb mov scas jb (bad) outsl cmc dec iret jbe sub int jb lcall add and xchg adc shl sbb cmc inc inc xor stos data16 lods cltd or jae test xlat mov shr mov mov or cltd stos rorl aaa in pop mov pop xor xchg inc (bad) out cmp dec stc pushf cltd sti inc iret daa add sub push out push inc xchg imul (bad) ja rcll daa dec imul push (bad) sbb (bad) loopne or cwtl ret jmp inc hlt and xor test repz mov lock dec adc push (bad) cmp test adc sub mov sub pusha je dec mov sub inc sbb js jg inc inc sub adc dec les inc xor addr16 mov popa leave xor jne les and jno xchg sub and pop xor and outsl xor ja pop leave les cmp and inc repnz ret scas divb pop cltd rorl in cs pop inc popf sbb int rclb (bad) lcall loopne stc fmul inc movsl fisubrl mov test adc add mov inc (bad) int3 cmp push loopne push mov inc mov sbb xchg inc jmp out faddl and jbe pop enter cmp mov ljmp push lea add imulb jo into mov adc inc xchg inc dec mov adcl lret or (bad) adc adc dec mov mov add push or jge lods mov clc jno sbb (bad) pop sub push in imul icebp lahf ds dec inc and aad sub pop aas jno mov daa mov pop mov inc mov pop fldl outsb dec or or adc repnz popf inc jb (bad) push arpl inc fdivr pop and int xor (bad) push dec or bound mov inc push mov lret adc sbb xchg add loope and xor sarb inc pusha mov pop xchg stc andl stos pop push sub push sbb (bad) (bad) xchg and pop xchg sarl lods sbb push push mov inc pop clc shll sub cmp cmp test (bad) xor mov inc lea push jns cmp in mov ljmp loope xor loope nop lds sub (bad) lock xor cs push fiadd mov jo jae out fndisi(8087 inc mov gs rolb fisttpl xor mov mov or in mov inc pop sub movb es outsl lret faddl mov jno and cmpsl gs jbe mov je add add aaa xor mov fistp mov and mov fcomi aaa inc dec push push (bad) in add dec xlat fdivrs inc psraw lods dec jno jecxz ret (bad) (bad) jmp add cmp dec pop xor fnsave fsubr add xchg rcll inc es lret inc clts push inc fidivl mov xchg sbb add out push inc test mov scas fidivl in jno (bad) jae outsl inc call aam push sbb inc pop mov mov ret sbb xchg pushf punpcklbw sbb or es or dec mov jle mov cmc push jnp in inc test lea jno lret jp add cmpsb jno pushf test (bad) (bad) mov shr daa xchg popa andb adc inc ret inc add lods pop imul push incl adcl lock out jo test shlb std dec aaa cmp les xchg inc adc add inc inc push fisub push (bad) jno rol repnz cmc pop mov fcomi add jnp les xchg inc push jb jo loopw je pop inc mov cwtl insb xor mov add sub dec jmp lahf outsl add inc sahf rcl aam mov push andl cwtl test (bad) enter inc lock pop mov or es fmul fiadd jge,pt dec cmp popa jle ss pop insl jle jg inc xchg xor shll cs pop mov pop push xor add push loope jmp inc add and out inc std sub push or arpl xor fsubs lcall dec bound sbb cmpsl test mov test movsb imul fucomip push in mov inc mov push lcall inc fcompl mov xchg xchg pushf or ret lret adc cmp (bad) inc rcll imull lock scas and lcall shll add push (bad) mov inc cli aad ret cmp mov sub sbb in mov js test sti loop push xchg cmp loop aas cmp pop arpl cmp pop icebp out imul loopne inc mov jge (bad) xor inc bound xchg mov add jne inc mov outsb dec divb jb and jecxz lret pop (bad) xor mov dec ret repnz push xchg dec mov or push iret mov cmpb clc cmp xchg mov adc lret sub or out inc outsb andnps jb jo mov lods in popa push xchg push push dec push in inc add xor gs sbbb (bad) dec cmpsl add fiaddl test ljmp add aad ret dec popf add lods jnp jb insb inc cmp das adc fsubr popf dec cmpsl push int mov dec pop pop call (bad) xlat rolb ret vshufps xor lahf inc aas mov cmp ret jne mov adc ja scas push dec pusha inc cs inc out mov fiadd and and out adc lods mov (bad) push fistpl outsl pop das inc inc jp loope aad shl repz inc (bad) into fbld mov jb inc mov mov ret pusha add lret pop imul jb push dec and jle dec xorl sub mov jl mov and cmp icebp aad ret xor mov dec push mov ret out popa js xor fistpl push jae xchg mov jg retw das inc cmp (bad) mov xor fldcw cmp xor mov sahf inc xor jecxz popf daa icebp push inc push out rorb inc rolb and loopne dec stos fwait inc stc inc lds mov dec in push push (bad) outsb ret pushl pop cmc jo dec and push dec loopne ret dec mov repnz sbb popa inc movsl xchg sarl ss rclb inc sub add addr16 xchg inc jb mov inc data16 xchg push js pop inc outsl mov or sub aad into in and (bad) jle int3 sbb cmc cmp incb (bad) fs ss dec xchg push jge arpl lods sti inc (bad) int sbb bound insl incl jae dec lea xor xchg jb inc out call pop gs inc and in push adc xchg ret add and cld dec fstps (bad) repnz imul fsubrl mov fwait push ljmp xor sub cmc lds pop sub jnp push mov lcall or xor into adc sub inc sub xor (bad) mov je sub or sub ret mov lcall sub xchg add (bad) aam mov arpl pop add add dec rcrb movsl lock in lds es mov add or rol loopne jmp mov movsb sahf sarl fwait hlt into pop test fs xchg mov jb xlat sub ja ljmp xor pop push cmp jo mov loop int xlat out sub cmp add mov in dec lds sbb xlat pop jns js cmp dec stos lods cmp lahf mov xchg std imulb cmp inc ret outsl dec stos (bad) push cmp sub pushf cmp mov mov les cmp mov push inc stos movsl (bad) sbb or sub cwtl or xchg add mov dec and scas out ja lcall inc clc mov push sbb std test mov pusha push mov mov and std pusha push xor (bad) xchg sub and mov data16 aaa lret adc add xor ret mov in jle pop out lcall mov outsb test test xor fcomps aad mov and out addl fildll pop xor icebp cmp daa jae jg inc adcb jl or or xchg popa sbb or or jns jb push xchg dec sbb stos movsl out (bad) pop or aas fldcw imul adc shll int adc insl xchg (bad) push adc dec test pop loop push and xor sbb cs pop fist mov (bad) sub cmpsb out pop push lds push rcl int3 fisubl push rcll sub cmp lret adc sub and imul jns shll fisubl and cltd cmp aam add dec dec js popa ror and mov in or sahf inc push inc ljmp cmpsb inc lods adc sbb pop jne imul insl push repz cmp cmpsb jecxz pop popa arpl pop jg jns add (bad) sub or aaa mov mov push dec insb in fsubs mov xor mov inc push stos (bad) mov addb data16 fdivrp icebp ret add (bad) cmpsb inc loop fdivrs movb arpl push out dec push sbb or jl or dec sbb pop pop xor andnps xchg jecxz loope mov xchg rclb lock add cmp sub aas dec jno popa flds lahf jl repz fimull daa popa or mov jp or mov or inc mov out fcoml in dec dec leave out push loop adc in clc adc mov mov pop call iret bound lahf movsl mov out mov push roll hlt xor push jl (bad) jne loope lock xchg imul add repz push mov xorl insl push inc cmpsl sti push push lea jno xorb add or and adc mov mov std pop and fisubl xor sub in sbb pop adc adc test call popa shlb sub enter jno movsb and and nop std test inc push mov mov inc inc push jns push fimull adc add add ret imul pushl and stc cs mov adc pop cwtl sar push pop add xor ret ret loopne xchg push inc xchg fldpi (bad) jne movsb sub inc jo adc ret popa sub outsl inc (bad) push ficom jmp xor xchg out push inc xor ret ljmp lret or sbb (bad) hlt dec push inc (bad) xor mov pop popf and dec jl dec pop (bad) test inc mov fistp push inc push loop pop jmp mov pop ret jge movsl rorb mov mov inc lods push (bad) je in ja (bad) cli add pop jae repnz or jmp subl fmull push inc lods push sbb fistp pop or les je rclb clc test lcall ret inc sub jbe push inc je jl xchg loope mov aam fild aaa sbb imul loope mov mov and addb ret pop mov icebp inc mov repnz push cmpl add fistpll dec inc push ret lds jp mov inc fimull mov inc sbb cld jle rclb pop push push inc scas negl or les and pop dec inc fiadd popa xor cmp jl dec test rcll inc or inc mov sbb jecxz inc lods pushf mov inc or sbb push xchg repnz mov insl inc push imul int3 push or int cwtl cli xor (bad) ss out inc addr16 ds dec sub aas cmpsl (bad) jbe and (bad) out je rorl in mov into dec cli or dec lds loope es push imul mov cs xchg lds mov decl adc loop sub ss int3 push add ret adc xor (bad) (bad) fcoml cmc ret lods inc mov icebp ja out js xchg and into addr16 sub cmp inc add xchg mov sahf cli jecxz stc mov lret cmpsl loopne mov add and push aad fcoml lds push movl or fiaddl rcll int3 (bad) push sahf dec pop dec cmp mov mov mov (bad) dec std sti mov jnp das addb andl mov jmp sub pop call cmp and enter aam testb push push adc push std (bad) xchg mov adc push arpl inc jmp jmp stos add pop sub xchg push and ja lret jmp sub jns xchg das pop fcomi jg,pt sarl sub sbb xchg jo outsl xchg ret xorl mov xchg jb loop lods cmp les lret mov insl push rorl in ja stos pop xor loop dec fcmovb push cmp push inc mov inc loop lret dec sbb ja inc sarb mov inc es outsb dec jp lods mov sub test lret (bad) sarb sbb repz sub je lock in or ret cli or add rorl es test xor bound jne lret sub leave push imul add insb xchg inc js,pn outsb out jl inc jb inc arpl and xchg and push inc aaa inc dec (bad) das push push inc jnp aas xor in adc cmp mov dec adcl and inc mov and inc ss sub xor push pop pop push push jle xchg mov sahf gs lods cwtl loop push jle cmp (bad) dec les shll ret arpl add push je dec je sbb xchg scas cmp push add sbb sub scas jg jnp sbb mov adc loopne into mov adc rcrl inc fcoml (bad) pop test jae xchg cld (bad) cmp int3 repnz xchg mov out or mov adc gs and lcall cltd adc fdiv bound loop jmp cmp into dec pop cltd sub insb adc pop divb or mov jno xor dec in test ret fwait repnz inc ret mov negb mov mov lods inc (bad) dec push stc mov mov icebp fild jo inc sti (bad) jo sbb mov inc aad adc stos out ja aaa push (bad) ss sbb movsl dec cltd rcrb cmpsl sub xchg ret arpl fwait sti dec ret add sbb fst int3 daa into cltd lcall xchg mov push push dec add and jle inc mov xor xor addr16 orb fldt mov inc or fwait sbb in add mov rcr push or loope inc or mov add push pop lods and and jnp outsb jg push inc xchg or cmp sub and cld mov jne and shl ja mov xor je push rol andb pop inc pusha movl mov sti sub push xor jb sub pop inc dec pop dec pop insb movsb mov stos incl sub rorb xlat cmp cli orl push push jae dec ja in sahf inc adc cltd lods lcall (bad) jl inc inc push idivl rcl inc cli int mov fmuls dec xor enter mov pop cs jne mov dec inc pop xchg or cmp jg es mov sub xorb pop xor sbb hlt xor mov jb and mov es daa scas testb outsb xchg xchg cmpsb mov shl dec push inc xor (bad) fsubr pop outsb jl (bad) loopne jge mov add jb xor repz lret add mov (bad) mov pop lock test les dec imulb loop xchg or imul push adc loop inc mov loop xchg (bad) mov jne imul shrl push push pop ret ret dec ret jo out dec fwait jp pop sub loop cld inc cld imul scas mov and pop loop roll lret fildl add dec in outsb (bad) or mov or mov push ds popf out dec cmpsl push jb jns mov loopne xor daa dec jle xchg mov lock aas xchg adc mov test lea inc ret mov es inc cmpsl and sti cld popa mov int fcompl or loope jno adc cmp stos sbb add mov gs cmp and inc ds sbb pop push imul or test push dec jo pop cmp mov dec pop xchg hlt xor mov inc dec (bad) sub and cld dec pop addr16 repnz sub rcl xor mov lret stc sub fsubrs dec outsl push ds inc mov frstor inc sbb sahf pop test sbb out jle or dec nop inc stos mov xlat jnp,pt testl stos mov jb arpl ja adc stc (bad) push push movsl insl mov icebp lcall mov cmpsb cmc daa repnz mov aas push cs jmp jno pop std inc mov fcomps inc mov inc push inc das and aas mov test sub mov fwait add rorl fwait stos inc xchg ret push rcl add loop rorl xchg fsubs dec imul inc jmp pop and outsl into outsl mov in sub rclb xchg push inc jg adc adc add mov std inc insb insl loopne xchg andl or pop and es pop sub inc shlb (bad) cmc lock enter inc daa das pop adc stc lds mov xchg in test and ret lods rclb fwait pop cld addl pop cmp arpl xor jo movb adc mov mov dec fwait call repnz mov outsl inc inc lds loope jbe push out in daa rorl jmp sbb cltd cmovae mov or inc xchg cmpb or scas xchg daa mov adc repnz hlt pop ljmp dec enter rcr dec stos adcl in push loopne hlt in push or push loop push mov mov mov mov rorl push loope pop lret rol ffree cwtl sahf inc inc arpl cmpsb (bad) fidivrl push pop mov and inc repz xchg pop call lods mull push lret or dec push lahf push adc xlat mov dec mov dec mov inc rol xchg pop das inc mov add lret fisttpll (bad) cmp jne leave mov sbb and fwait std pop inc daa cmp dec in jmp popa popf and add pop cmp inc mov xor xor inc gs mov inc or (bad) push inc aas out inc pop push jo jbe inc jecxz stc pop fmuls cld mov dec outsl ss rorl push jae int mov push fcomps xchg lock inc pushf mov push inc cld add and mov fcomps cs lds pop mov xor daa xchg in stc pushf sub inc loope fcomps push aad mov mov mov adc sub cwtl in sub cmc pop xchg gs nop loope push cmpl out mov adc repnz adcl cli xchg inc dec jo cmpsb push aam inc pop fcoms insl roll out xor fwait mov mov bound inc mov or imul jno pop inc push sahf gs or xchg sub push cmp xchg mov mov shll add in xor adc iret imul test add scas lock dec jge nop lret adc lds es and mov jecxz fwait test mov mov int3 cmp aad lret fstpt or dec pop jge sub push nop inc (bad) das xchg mov xor mov push pop insb lods sub pop or inc cwtl push fwait dec inc cmp mov aas cltd not inc repnz jnp cmp iret mov les cli mov (bad) and cmp pop fisttpll and shll and inc inc test pop sub and aaa insl repz xor adc mov dec jge cmpsb ds push inc imulb sbb dec std hlt call mov dec lods xlat inc dec pop repnz pop movsb jns movsl inc imul cld lods pop loopne repz dec data16 push xor inc shl push cmovb negb inc test or outsb fstl jne inc push out mov stos lea ja insl movsb dec mov add arpl add in push adc add sub aas inc xor pop popa jnp sbb xor and out movsb imul inc sub daa (bad) rclb lea ret mov jle cwtl lret add test dec mov jle jb fcomps in adc iret jb or inc push rorl push adc or sub inc or lcall push push cmp cmp xchg dec inc xchg stos in push outsb dec popa les sbb dec push push loopne pop adc bound stc inc loop push rep and dec sbb xchg mov cmc test gs inc jmp faddl cli mov mov cmp lds out (bad) adc rorb mov jbe (bad) or push sub lods les push (bad) mov test (bad) push xor xor add mov sub inc mov jno and xchg inc sbb (bad) cld icebp cmpsl ljmp and xchg ds xor sub inc lock icebp add lret cmp adc aam movsb add push add jo dec push mov in mov loope outsb xchg int3 mov addr16 xor xchg rorb inc jne mov jle aad jno mov push sbb out loop inc push xchg xor inc mov ret mov sahf mov jmp xchg fimul hlt xor push jp ret xchg popf dec push xor dec inc enter imul add popf add imul inc xchg rolb pop (bad) sbb xor inc out test sub inc fidivrl (bad) (bad) movsb add xor sahf rcll insl out mov jmp repnz es or mov cmp push imull fwait xchg inc dec js cld (bad) and add lcall adc imul bound cmp rorb jnp inc mov popf sub ljmp shl subb cmc iret pop mov jmp inc outsb jg inc inc push sbb inc push xor pop insl add mov lret mov mov mov push inc mov inc jmp hlt push dec push pop cmpsl xor pop xchg (bad) imul out adc enter and adc jns popf enter add mov adc jne xor mov adc or inc jns sahf in (bad) ret inc decb popa outsl mov dec sti inc xchg adc jle outsl repz push in js out repz inc mov mov push repz outsl or ffreep inc dec sbb out movsl push fwait xchg or mov jle clc inc mov xlat dec xchg mov inc jg aas mov inc shr mov inc or pop inc enter loop lods xlat dec mov (bad) in or arpl decl outsl sbb mov lcall daa aad sbb hlt inc add inc inc push mov mov push inc out jae dec jns call mov les jg dec sbb ja aaa loope aaa adc repz pop ret bound push adc ret inc mov popa or cmp es sub rclb jmp inc repnz push cmp inc (bad) dec adc pop and ret xor inc dec movsl inc pushf sub fstpl push adc cld dec call jp add into imulb orl mov jno bound stos into mov int add mov sbb in dec cmpsb sub inc xchg dec inc sti push dec fnstsw mov jl scas (bad) aas sub inc (bad) add (bad) jmp mov inc stos pop fcmovnb ret pop (bad) fsubrl cmp outsl add jge dec xor push stc cmp (bad) adc pop inc inc xor sub sbb push mov cwtl push out mov dec pusha push sub aas inc dec pop int3 imul dec xchg dec pop pop cwtl sub jbe and and xor rcrb int3 push ja (bad) addr16 imul std (bad) inc mov mov inc sub xchg mov or inc inc test pushf popf stos inc pop xchg add or push ss or jae enter fwait and add push sbb push inc int3 sub insb aaa flds inc and loop add dec pop cmpsl (bad) es add mov outsl push lret cmp xor dec push test inc mov scas stos mov mov rcrb push mov leave dec jb inc fwait je je ret outsl jno pop inc bound les and inc (bad) outsl sub pop imul fild leave cmp dec sbb lods fdivrs inc test fwait lret and cli xlat ret movsb imul mov inc mov adc frstor cmp mov les inc sub js pop movsl mov mov rcrl inc int3 xor adc incb fcoms push rcrb ret das pop (bad) lock xor mov pop inc push rcl adc mov push xchg jo gs test les jmp inc fsubrl sbb (bad) out hlt in jmp add fs into mov inc xchg push shl jmp xor xlat aad imul inc ret pop xchg (bad) ficomp pop call fcmovne inc aaa or shrb adc (bad) jmp xchg rcll imul xchg sub lock inc xchg stos enter int3 jae mov clc push popf cmp out out sahf (bad) daa lods mov pop dec ss std inc xchg xchg je jno ret popa arpl rcl in dec insb cld xchg mov push add inc sbb test mov add hlt jo jne dec cli jne cmp cmp xchg sbb xchg mov adc push aas gs xor fimul xorl push pop jae xorl fnstcw inc cli movsl dec leave pop outsl xor inc xchg sub inc mov pushf pop jmp sub adc sub inc pop xor push inc add jecxz inc cmp fistl cwtl lahf push ret inc popa mov cmpsl leave add or andl cmp sub mov andl dec pop sahf cmpsb out dec (bad) xlat incb sbb sub or push pop pop sub out jb dec mov mov mov aad rorl jecxz mov imul xchg mov xchg scas cmc out jae mov jle enterw and sub mov xor inc cmpsb jecxz mov inc jb les pop sarl (bad) negb mov mov or sub outsb dec xchg lcall aas dec dec fdiv ret push mov and sbb mov push push and xor inc movsl ja (bad) popa push imul pop clc inc push cwtl jge inc loopne add dec insl stc inc inc push pop in cmp inc dec mov (bad) aam mov shrb cmc pop sbb jae popa pop into mov jl dec push pop pushf sub in (bad) and roll mov sub cmp sub addb lock xor enter xchg addr16 (bad) lock cmp inc rcl inc lret mov sub or xor inc das clc dec xor pop in pop fisubrl xchg pop jne inc outsb push or cmp fistl pop fldl xor jmp out jg gs push xchg movsb aam out in cmp inc imul testb xor ret stos shl pop sub cltd inc mov and enter jl insb ret mov aas fidiv js pusha add popf add je push adc jp mov mov xor mov cld cmp add outsl inc mov pop jl mov sbb stc or inc adcl adc or inc in popa sbb or and repnz addl push sbb sbb or mov inc cmpsl cltd gs enter jne fs adc popa inc test mov mov sub in inc loop add into push roll roll cltd in jae pop inc (bad) cli sbb lea or repz fcomps test cmp mov dec lods pop add xor adc lret ds mov sbbl and insb add loop push aad add insl adc orb pusha adc xchg add pop inc outsb (bad) or mov dec (bad) mov (bad) loopne js out xor add cmp bound jle sub xchg or inc dec sbb lret dec xor mov pop fwait xor inc rorl idivl cmp mov push (bad) clc mov jno inc add loop (bad) add mov inc push fiadd sahf lcall mov lcall iret xchg repz int3 sub lcall (bad) imul add sub mov sahf sbb fbld (bad) mov ss les int3 sbb jg pop mov push add rorb sub sbb cli pop jnp rolb mov mov arpl aaa xchg pop into dec add pop dec popf mov sbb inc push (bad) jne pop jnp mov pusha mov mov repnz mov xchg jmp pop outsl cli aaa dec call sbb or push cmp adc xor push sti int (bad) inc sub or xchg dec repnz jp (bad) jge dec jae imul pop xor inc mov sti repz add cmp pop xor sub jge sbb push cs sbb cmpsl jo push es cmpsl (bad) lock mov stos fsubl add cmpsl sub add mov sub ror sbb stos mov ss sahf std inc cli jg stos add mov add pop inc push pop aam aam jmp cmp pop dec sub push dec imulb (bad) xor inc lea mov inc push add mov inc jmp xlat and pop outsl xor cmp mov and (bad) (bad) cld sub (bad) push pop lea jp and dec (bad) enter sbb jo lds adc and mov or sub xor addb ljmp mov (bad) dec (bad) mov dec pop pop mov in xchg inc mov jae test sbb mov xor inc xchg lock lcall adc rol push sub je std inc call (bad) and mov jo or ss jge mov add sbb (bad) fiadd inc adc enter mov dec mov roll lret incl xor xchg adc inc sub jae bound ja fwait repnz stos pop lcall fwait xor inc lds das sbb cmp push push sbb fwait stos mov bound pop into test insl pop mov mov lds shlb mov cmpsb push inc pusha mov out xor addb pop dec mov jmp lahf mov jne loop mov xor push movlhps add rcrl inc sbb mov cmp inc add push scas xchg xchg fcmovnu mov cltd add sub push or mov cli pop push fwait imul or xor loop cmp addb jb mov out in fsubr sbb pop or mov stos jns mov jecxz lcall jg add mov dec xchg je shl daa enter icebp leave mov fadds push mov or arpl sub (bad) push add (bad) addb inc and lahf dec stos ja cmp mov mov addl lds arpl sub test mov aaa lret outsb mov mov cmp arpl ljmp ds inc xor int cmp lret movb add cmp pop dec inc xchg lret cltd mov mov repz xor add fndisi(8087 or pop sub sbb xchg adc inc fsub xor dec mov push (bad) jb loope cmp mov dec cmc inc bound or sub cmp add xchg sub sbb mov inc jle cwtl loop xor movsb jo mov mov gs mov ret ljmp inc adc in test pop mov xchg and and jmp (bad) inc inc cmp icebp pop ljmp mov inc jp mov ret lcall icebp sbb cwtl cmp dec ret mov dec cmp arpl and dec sahf cltd cs or scas fucomp push imul mov loop mov aas roll mov (bad) mov cmp jecxz insb movsb aas inc cmpsb mov jae testl lahf das sub pop in and and sub movsl dec and sahf adc ret adc scas add mov (bad) mov inc pop cmpsl call push mov outsb rcrb dec ljmp jl in je cltd outsl inc cli lcall inc jmp lahf xor fmul inc sti leave faddl loope jne jno test (bad) inc cmpsl insl cmp adc cmp pop lds dec imul add fidivrl dec and mov or mov cmpsl and adc add push dec inc sti loop sub and xor pusha cmp add dec mov movsb mov or pusha lds xor cmp jl outsl inc inc js mov stos inc mov mov push push icebp inc mov sti fwait pop mov inc or inc sahf gs sti jo jne sbbl jge dec pop (bad) jecxz sti cwtl dec jb jbe test add adcl ds cmp mov inc ret inc outsb (bad) cmp ja out fldt (bad) (bad) out cmp xchg or loopne jecxz or lret mov dec adc popa call cwtl jge shrl stos ror mov sub xlat mov sahf fucomi mov and jne in rcll sti cmp pop mov jno jmp outsl inc popf pop repz lret stos or gs out lock and push (bad) cltd inc inc int push jns mov jo jmp sbbl inc cmp jecxz jmp mov popf inc mov movl loope pop pop xchg out inc jno mov clc fdivrs pop mov inc ret dec sub pop lret sub icebp je sub and or je les add inc mov mov add dec into add fwait xchg cmp cwtl sar adc add dec or cmc lods decl and adc pop lds dec sub xor cmp cli sbb inc cmp fadds stos xchg cmp dec inc stos pop fnop sti movsb fistpll dec sub cmp cmp fst fstpt ds (bad) dec xchg into mov jg push xchg lahf and pop or xor stos dec xchg push in cmpsl mov pop mov xchg aas and jg lret lahf xor dec ffreep int3 rol scas pop clc mov mov (bad) (bad) adc mov lods mov scas xor arpl adc push or xor push mov loopne cli in jbe dec int pop ljmp push in xchg ret flds cmp rol fistl sbb lret ret dec stos xor push xchg and mov push dec sub cwtl inc int3 jg xchg inc stos ficompl rclb mov and sub into xchg sub xchg scas xor pop incb cmp mov sbb insb xchg inc in inc add icebp xchg call add xor pop pop int3 or inc fistpl (bad) rorl (bad) repz inc dec test mov dec ds ret fmul inc int3 (bad) mov pop fwait (bad) jb mov push loope xchg inc dec push add sti xor cmp cli dec mov (bad) dec inc movsb arpl and subl cwtl movsl insl fucomi cs jb roll adc mov add dec mov jg mov adc jp repz out inc int mov imul jno dec lcall jae sub and mov shrl outsl mov jecxz lret pop jmp aas dec sbb inc sbb insl dec lret outsb imul push in cmp sbb test mov or ret cltd dec pop inc mov cs mov mov int jae fs jne lcall jb idivl (bad) mov call push and rcl shl cs lds test xor inc xchg (bad) (bad) out mov cmp pop pop cmpsb aas xchg andl in into xor sbb push rcll mov lods add push inc or outsb test repz push mov arpl xchg roll imull push sahf mov xor sub into out roll and out adc inc ja xchg inc in jb loop add inc cmp insl or (bad) ret les daa insl ret fucomi cmp sub xor inc adcl outsb ja fucomi mov inc inc inc fnstenv adc js push outsb inc lods pop sub imul adc popf cli fiadd jg,pt sbbb scas mov lock (bad) loope pusha sub rolb sub inc lea xor cli cmp aas and int3 and je int mov inc mov dec mov or sbb lds loopne inc push mov rcl xor lods pop cmp xchg dec lret push inc lcall rolb xor adc aas push push jno sbbl jae addr16 jp sbb and mov (bad) push push lock mov push sarb adc daa cmp cmpl cmp push mov scas imul out fucomip arpl sbb arpl push scas pop loop add adc stc inc imul (bad) push push sti adc sahf dec inc cmp std ss inc incb pop jo enter mov lcall mov into std inc jne sub dec loope shr jecxz sar mov dec add icebp cmpsb cld ja ds push inc data16 (bad) mov xchg push dec (bad) (bad) lds icebp lret test adc mov mov inc test sub and jae enter out repz pop loop pop lcall mov dec popf repz mov cmp das popl adc sub jle bnd shl inc lods (bad) dec or and cmpsb mov (bad) out inc loope pop scas xor inc xor push xlat fldl popf (bad) jge inc iret xchg sti mov xchg jge loope inc mov add cmc push popf push cwtl outsl adc outsb push jg dec mov dec xchg pop stos xor cmp xchg enter jns cltd inc in inc ficoml lret in rcrl push pop push das sahf loopne test xchg cmpsl test sub xchg (bad) fist fmul inc fnstenv jg (bad) fucomp inc add push inc jae test outsl xchg imul mov jae inc mov dec add popf inc xorl jns pop push inc call and xor xor mov loope aam cmp pop mov arpl xor scas sarb je lods js es sub in sub inc ja jmp pop or xchg cmpsb fisub ss repz jp sub mov shll and xor xchg mov cmc outsl xor dec outsb jge cwtl (bad) repnz jp push mov into add mov xchg inc ret add push gs outsl sub das and inc popa add sbb xchg dec out insl pop xchg int inc xchg cmp dec mov (bad) push push inc jg pop lcall cmpsb inc outsl jne leave cmp push pop xor and (bad) or out (bad) out sub adc mov aas jo stos (bad) fstpl mov push push gs mov jae xchg dec push out push mov movsb cld std ret jp inc clc insb jge push push pop aam sbb (bad) les cmp mov inc sub rcr dec scas add fwait dec inc mov fsub adc imul adc sbb inc ja push orb xor inc hlt mov inc (bad) mov lret jb sahf mov push sub xchg pop loop fldl movsl cmc jne fsubrs imulb fildll sbb pop xchg das (bad) (bad) dec ret mov add cmpsb jg xchg ret loopne jecxz jae int3 xlat fcmovnbe out dec pushf mov push call fldcw dec rclb inc sub test ret mov sub lret out inc outsl fnsave iret sbb push jno fwait cli sub stc in movsb loopne cmpsl jno pusha xor cmp cmp out cmovae cmp inc adc jo add dec jg imul (bad) sub sbb jne pop movsb pop jne test fild ret (bad) outsb jg jno sub loop dec xchg inc popf dec cwtl insl xchg outsb dec ja sbb xchg mov sti sbb jmp icebp mov test mov add aas jl inc dec ja jno add imul push add pop lahf mov aam or cs inc cltd les push (bad) cmp or cmp add inc into mov rcrb jbe inc xchg mov mov aaa inc push outsb push stos loope test ret icebp sub or fcos (bad) fcmovb sub dec inc idiv data16 and insl and add stos jg xchg xchg and mov stos jnp or mov shll sub int3 in loop and cmp or sbb adc and mov (bad) mov fmul mov into cli mov or into lret xor dec sub int3 outsl (bad) cmp push mov inc lret (bad) jnp or arpl clc xchg cmpsb sub add inc push xchg (bad) dec and lret bound push dec pop aaa jmp mov je push mov (bad) scas or (bad) sub xchg xor ret daa mov pop mov loope rorb into stos lods cmp gs std ja xchg xlat (bad) jne jecxz jge enter mov ds jo jmp fnsave cmp dec mov or inc dec stos subb adc or cmp stos dec mov mov jne out inc (bad) xor cltd mov and inc jge push pop push ds push jnp int3 loopne jge jno adc inc sbb es jns dec frstor inc mov lret cs mov push icebp aad ja (bad) rclb sub or mov stc ja rcrl sub adc stos lret fidivl sbb les fild pop inc mov sub add inc sub fbstp xor jo cmp movsb push mov mov mov push (bad) int and (bad) jo inc or add gs cltd stc sub aam test stos xor int3 pop test fistpl stos in dec or popa int3 cmp push xor mov add pop jg,pt ror mov movsb iret std js pop jge cmpsl dec les in mov pop jmp aad cmp lret mov mov sbb adc push dec sub mov cmpsl or add lea addr16 jg jae dec cmp negl sub out shll inc aaa fiadd jno int3 xor scas sti sbbb sub inc jp shrl (bad) jae sub repnz push mov rcl int inc sbb (bad) lods mov pop inc push xor sub inc fwait rorl push cmpsb loopne sub aam jo xchg cmp ja lods mov int3 mov inc hlt jb loopne push xchg mov and mov pop in mov inc gs roll adc push lock loope aad fsubrp fildl sub imul or jbe lea jl je rorb dec push mov or jns sti mov add outsb inc gs cmp push ja pause sti inc or push sarl ret xchg subl add lods push stos icebp xchg pop and ret cld or jb mov neg fistl out dec (bad) stc mov push stos jecxz dec jne xchg repnz dec sbb mov mov repz fstpt jl and add stos jae pop inc dec outsl push inc imul pop inc mov pop cmp call push (bad) std inc subl das addb insl rolb ja xor inc (bad) imul dec sub mov adc repnz jmp inc inc and insb add inc call jp add cmc cmovae pop aas movsl mov sub (bad) scas rolb test popa ret jne call and mov sbb xlat sub xor xchg dec push int mov leave push pop dec in inc fisttp lcall mov lret dec sub std std imul (bad) cmp mov test stos out call jo mov cld lock sub mov inc sbb xchg popa jge pusha repnz inc int xor inc pushf mov sarb (bad) std je fs fidivrl ja repnz mov dec sbb ds pop int3 in mov cmp scas sub testl mov mov lret aas stc lret cli or int3 pusha fadd lret mov mov or loop add adc outsl sub pop ljmp iret (bad) mov pop mov mull jmp imul js imul inc scas mov aad jmp fisttpl into mov fimul ds sub cmp xchg inc adc xchg add out js mov jno add and mov aaa outsb cwtl shll lods xchg push cwtl pop xchg (bad) ss push sub xchg dec fwait pop sub jge dec test push outsl mov dec sbb inc cmp lret shrb into lea and int cmp fwait decl cltd pop in pop mov lret mov or add inc (bad) adc lahf dec into ret xchg cltd inc ret mov mov jmp pushf sbb mov dec cmpsl jg mov pop test sbb ss std jo inc add ffree popf lahf fistpl gs outsl imul dec sub imul repnz test mov pop sub mov mov mov test xchg inc bound xor sub jnp push jg loop jmp mov and lcall data16 dec inc xchg xchg sbb out and jg int3 in js inc mov inc divl push sti into add push (bad) jne sub mov dec xor fist add cmp xor mov xchg addr16 test push fdivl jmp mov push pop lds imul aas jge pop lret nop jno adcl cmp sahf int3 jmp mov sub stos cmp das inc or inc inc test xchg dec add push popf dec aaa mov pop aas mov jbe,pt push stos mov and dec xor adc dec popa add aad mov add jl mov inc lods jp inc dec and mov cld cmp push arpl out sub dec jo mov roll add cmp sbb mov cwtl aad dec stc subb xchg mov mov and call mov ljmp push movsb inc mov xchg ficompl mov or mov xchg call icebp cwtl cmpsl out cmpsl lods jbe inc rol push ja rorb sub cmp lcall pop xor test xchg and mov (bad) push outsl shl in inc loope int add cmp dec jge jl cs iret ss push xchg inc std xor add jo in inc lods push test cmpsl pop test mov and insb rorb std jbe ret fstpl jns jl (bad) pop in add leave insl repz movsb out pop and adc inc pop pop inc pop lds mov jmp xor cwtl add in out outsl xor inc dec push sub push repz inc lock mov loopne cmpsb xor jns mov fwait sub dec and inc and cltd add mov cwtl pop mov xchg movb in pop movsl and inc andl ret or mov sbb inc push xor insb cmp mov mov call push adc outsl movsl rorl (bad) into iret mov fildl ficompl inc pop mov dec sub (bad) ds bound mov test adc cld test inc push icebp xor inc mov dec jnp add dec (bad) in pop or xorb inc cs aas or adc inc jbe pop pop insb shrl jge std push dec mov aaa outsl inc rcrb rclb in lahf and jecxz bound ret out pop mov push pop cwtl inc adc sarb jno xchg aam int3 sub pop cmp inc cmc sarl xor cmp inc sub jmp lds bound adc outsl push (bad) mov std stc (bad) sahf into jbe and aam std test inc inc cmpsl rep dec inc es ja cmp add repnz add adc test mov jae les push xchg sti sub sbb insb add enter or test ljmp dec into stos lock jbe inc loop push rorl mov lahf xchg lods lret push stc mov inc ss (bad) ja pop xchg (bad) jnp pop push ret vmovdqu in outsb or cli dec das inc xorl cli mov out mov inc fwait (bad) push sahf das xchg inc jge stc jb adc add mov jno mov cmpsl pop dec inc test pop pop mov inc arpl ret adcb inc cmp in into inc xlat sub jp jmp pop loop xor inc xchg cmovg push dec ret inc pop (bad) jo pop dec cmpsb sti lahf mov jg mov push jmp fldt inc fcmove xchg pop pop sbb mov test lea push inc mov shlb jo dec jle jno repz jl rcrl (bad) lahf loopne push inc lea lock jo xor sub ret and pop inc jecxz lock stos (bad) js sub push popl inc push lret sbb push xchg xor inc out push cwtl mov pop (bad) jno es xchg and xchg outsl orb arpl in mov add mov rorb inc out je inc clc xor xchg push adc shll and in cmp inc int jb es inc mov ds daa inc cmp pop outsl loope leave pushf push aas mov mov aam inc jmp jmp mov mov push push add and dec xchg gs ret mov inc mov mov push pop jle dec je enter ret outsb inc inc mov xchg inc mov (bad) bound inc inc lock lods sub dec mov lret or inc (bad) mov stos ret ret xchg je movsl push inc push inc bound inc addb mov lret fmull inc (bad) ret cmpsb push push pop push ja test add loop xor adc add out cld pop inc xchg psadbw jbe cmpsb inc inc sti shll out pop mov (bad) ds dec xchg inc (bad) jne ret out mov jns push pop loope sub adc push or dec or or mov xor cwtl or repnz jo xchg add or loop movsl pop jo fcoms cmp mov rcrb test aas dec cmp pop hlt rclb movl aaa mov mov adc xor insl test aam lret dec mov xor mov inc (bad) xor dec inc cltd pop stos call or mov sbb inc or outsb sarl sbb stc jnp into and and ret add inc sbb outsb ss lock aas ret fwait enter inc movsw insb js or movsb fiaddl dec lea mov lret ljmp pop fwait add jl test ret outsl push scas push iret aaa enter mov ljmp dec pop lcall sub cmp fisubl sbb xchg cmp pop dec inc cmp incb jno jnp (bad) inc jbe insl ja mov rcrl lds repnz in jo or adc push and inc sub add sub lret (bad) mov cltd jmp sub add xchg mov pop je loopne cmp movl mov das jns sub (bad) push fisubrl dec repnz xchg movsb jbe lock mov test cmp and addl out jle xchg imul stos pop popf daa (bad) repz jle pushf (bad) lock int3 stc sbb addb shrl and sbb lods pop loope push jb stos inc adc pop push repnz sti and inc pop imul xor inc in clc push icebp jnp movsl mov mov push sbb inc jp xchg dec inc ret inc ljmp addr16 push cltd (bad) dec jbe sub dec in inc adc cmp sub and mov (bad) cltd aas mov es adc loope inc loop sti (bad) cld jae xchg stos add repz sbb and mov jg add mov jmp aad push or aas inc dec add popf cmp es ret xchg daa dec lea mov inc push sub jmp push mov out jae inc pop sub loope jmp xor arpl push mov mov les push mov jg fbld fldcw xlat jp sub push mov mov repz push in popa cmp aam int3 xchg outsb sub pop es mov cmc sub sahf into aad jno loope xlat dec dec mov dec dec and add mov ljmp cmpsb pusha jg iret cmc xchg dec int3 sub dec inc stos mov sub or pop pop aam mov cwtl sub notl mov lea cmp lcall int mov push sti movsl jb inc push mov test lds xchg mov popf mull arpl sub pop in fistp frstor in call pop sub and jb shl ret cmp fwait mov jle fadds jo jno sti imul xor mov inc fs clc fwait call (bad) fsubrs and es movsl xchg cltd sbb inc fs mov inc xlat mov push cld imul (bad) push add fsubrl inc decl xchg cmp jnp inc mov xor mov dec lods inc lret xchg inc aam inc loopne fs lahf ret sub lret (bad) aaa xor cmp cmpsb fldcw dec and les adc dec pop sub and jle std dec lea repz inc test test jne push inc jnp stos cli (bad) push test rclb outsl shl sti jno sub pop and out std pop dec mov cmp pop lahf mov push (bad) in pop mov inc pushf xchg adc add mov inc stos inc cmp push das jno (bad) mov (bad) sub jnp push arpl pop inc (bad) cld imul (bad) adc push (bad) cwtl (bad) popa xchg mov inc out jl es mov ret sbb movsl incl daa jle (bad) shrl push mov repnz arpl inc cmp nop add lods cwtl repz mov loope xchg iret inc ds lret fdivl cmp aam pusha pop loop push xorb dec mov ret jmp dec cmp and pusha mov inc xor dec pop fild js jle fs loope xchg je and popf xor dec inc shrl add pop stc and in and inc cmp inc cwtl inc or pop scas iret push xchg cmpsb lret inc mov ja inc aad jge or dec pop std push in ss xchg pushf push dec jge or insl inc xor lock or mov inc push xchg cmpsl inc mov add stos mov ret fbld lds xchg inc jge jmp xor push (bad) jecxz aas movsb cld jle es jecxz lret lods cmpsl in int3 add cmpsb inc adcb lahf addr16 jns (bad) sti nop es add xchg out in sbb mov xchg rorb test pop cs or jecxz adc test inc ja jne and jns adc repnz test xchg inc popa scas in hlt xor dec mov test leave mov cmpsb adc sbb push jno lret xchg cltd inc or mov and loopne push push movl pop or stc cmp push inc mov jnp add mov out lds xor or mov sbb out aam xchg mov (bad) int xchg xor and test fsubp popa fwait leave xchg cltd out add xor inc dec sbb popf cli mov inc lds push icebp mov dec cmp andl enter jle dec jb ret inc leave (bad) mul icebp add imul sahf aad inc and bound ret movsb popa jle (bad) jno ds mov jno in mov adc xchg sub stos cli (bad) (bad) xor or push inc mov xchg ja (bad) dec sahf bnd mov movsl jb add movsl inc mov mov adc add adc xchg and ret jno dec mov cld and imul jbe imul or mov cwtl (bad) jmp bnd mov (bad) inc add add mov xchg adc cmp int3 dec addl mov (bad) xor lret (bad) dec movsl xchg inc push cmp rclb ret (bad) lahf push dec fsubr sbb pop cmp xchg push push rcrl js jecxz aad lods fiadd inc sbb aas inc dec repnz loope ret inc add fsubrl xchg push movsl sbb sub push push pushf lock inc ss xchg push jae push (bad) adc sbb inc test pusha jae mov lret inc pop pusha sbb (bad) sbb std push adc mov pushf pusha sub dec cmp cwtl test push jp out push ret lock into (bad) and inc (bad) mov test and fcmovb std rorb sub out xlat es jge roll or dec pop pop sub std sahf dec jp mov push in pop pop into or inc push cmc push jg sbb mov sahf inc push dec add pop inc sub jb sbb push pop fadds sbb jo xor cld xor mov cwtl pop dec pop cmp and inc jno bound in inc mov mov push imul cmp repnz repz push inc sahf fist sub jo jle sbb jbe push adc cs pop xchg fiadd fbstp sub mov repz mov sbb out push cmp ret inc pushf test mov or pop std dec testb scas or fsubrl jge mov adc xchg jl rolb (bad) inc cwtl dec push cmp sub cmp pop mov lds add ljmp rcrl inc outsb out and xor fs add or push xchg dec sbb int mov stc int3 mov push stos pusha cmp (bad) out (bad) jb (bad) sub xchg mov lea inc sbbl ror xor pop push popf fwait jecxz hlt mov mov cs lock mov repz ret jbe stos mov cli stos xor pusha addr16 sub cmp rcrl inc inc (bad) scas (bad) mov and outsb sti inc adc andl in xchg add dec lret mov push cmpsl xchg push dec xchg mov cs and mov dec clc ret mov sub jns cld inc sub push inc push sbb add or scas es stos push xor (bad) aam mov cmp repz in jmp ljmp push jb dec mov pop xchg arpl and jbe xor dec sbb mov push sti scas mov daa lcall loope ss inc mov cltd adc test jecxz aas push outsl pop xor das sahf push imull dec mov les sub in push inc ss hlt jl loopne loop xchg xchg mov cld pushf sub push adc push shr push test aad and dec dec xchg sahf lret (bad) push cwtl dec or vpsignb sub outsb (bad) loop adc cwtl or cld inc or repnz jg andb out jmp fwait (bad) mov mov ljmp jae,pt int cwtl and stos movl and pusha inc loopne subl lahf vsqrtsd nop mov and popf clc int push sarl add jb cmp cmc outsl xor dec inc pop cmp add out add add dec xchg jb arpl movsb sti mov cwtl lods xor stos cmp lret jb mov jge inc mov cld out add inc aam mov shrl fstps inc aas mov imul lock (bad) adc dec inc jo cmp enter push (bad) jnp,pt lgs popa rcrl das cmp mov sub mov xlat dec int3 jg or in and add cltd mov xchg sarl cwtl nop js pop insl cmp pmaddwd inc sahf (bad) out lret sbb pop aaa xchg (bad) dec mov repz jb mov das stos dec in cmpsb jg arpl iret or and sbb xchg pop call adc fdivl js imul decl inc (bad) mov add push push ret push cli or inc daa push in sbb test je arpl pop ljmp xor pop xor pop stos inc cmpsl dec mov into and jbe iret pop pop sub mov inc push inc mov xchg fst dec xchg sub test incb cmpsl xchg (bad) push inc divb dec mov test icebp xor adc inc mov hlt or inc loopne lret and leave sti popl xchg jmp push in dec js movsb pop movsl push out mov mov mov int3 sti into sbb sub jo aas into jecxz pop adcb xor and cmp mov mov stos mov mov dec push pop and add (bad) clc dec ret fisttpll inc dec and dec gs mov arpl jnp iret mov test inc mov sub repz or add rcll fidivrl mov pop mov in inc xchg (bad) and and pop push std jns xchg popf mov repnz arpl aaa xchg mov lret and cmp mov js push add std dec nop and pop jo or fisttpl rcrl imul (bad) ror sbb mov imul dec lahf xchg or fildll dec (bad) fwait jge fcomps dec xchg test mov in cmpsl ds pop dec mov ss sbb or arpl push insl idivb icebp push repz int3 stc dec cmp ficompl imul repz fwait (bad) imul fnsave dec inc movsl testl cmp fisttpll mov inc addr16 inc psrld out mov test pop sub icebp mov pop fisub or xor sbb or inc insl pop push inc adc or out inc mov fwait cmpsb jns incb cmc mull hlt shll xor sub es inc mov mov dec xor je les mov inc ss (bad) jecxz in std rolb jmp and xchg inc clc (bad) or popf scas add dec jp sub jmp dec out inc mov ss aad rclb dec pop pop jmp sub ret push mov stos ret sub xor sub ret add xchg jecxz sti inc mov cmp gs push xor call inc leave lret loopne incb mov inc push xchg dec xor adc ror cmp add mov pop jno lcall cmp lahf jecxz inc pop addl cmp add jmp lret ret out push rcll mov inc xor mov enter popa fs pop mov xchg xor repnz adc lea cwtl mov pop inc add cmp mov add jae jnp sub inc mov xor or fldl loop cwtl sahf jge jl xor arpl inc enter sbb movsl pushf shrb cmpl cli mov (bad) cwtl test sbb inc lods popf pop mov cmpl enter (bad) mov test ret sub imul adc cs mov (bad) mov dec mov mov dec (bad) adc ret push orb inc dec mov je sbb inc sbb mov pop dec test inc les test les out (bad) jne add fsubl inc dec mov inc sub rclb mov mov jns cmp popf sub pop outsb add mov add outsl push sti addl mov jmp pop cmp push pop arpl xchg insl fadds dec jno popa in lret (bad) mov aaa inc cmp mov sti in inc cmp jbe xor aad fdivr dec jo jmp push insb pop inc lds pop xor sbbb imul add push fildll push push gs rolb out add jecxz mov mov addb imul cmpsb ret pop or mov dec (bad) fucomip cmp mov insl repz jbe insl inc inc jle pop arpl and ret or dec push pop scas pop sbb push ficoml clc adc sbb popa pop mov out fistl in sahf and (bad) dec push dec lret and mov mov rcll pushf sarl in sbb aad ss xor dec ret jg inc or cld js cmpsb dec popf inc gs mov mov push inc lret jp ffree mov arpl lea jo out flds mov insl scas rolb push dec stc push popa in sbb test and test mov and inc fwait add cmpsb aas shll dec fbld cmc out push xor (bad) and mov push mov pop xor enter std add inc loop push fwait cs push hlt and cmp sbb outsb xor cmp movsb clc (bad) leave fwait xchg pop or aam push jae lods push add das rclb mov test into xchg jmp adc pop cmpsb fwait test imul push mov adc or (bad) out fdiv add add jno arpl cld sub fucomp movsb xor mov jns push push in fmuls imul dec lods sub jg push std (bad) cld and stos mov mov pop adc cltd or push cltd dec test add mov push inc out lahf push cmp sub inc aaa mov or sub stos push mov stos dec add pop pushf inc (bad) fisubl adc loope push scas pop ret or ret ljmp dec xor sysenter pop outsb inc orl inc bound mov rclb sbb and shlb push cmpsl jecxz (bad) push push jnp and cmp cmc lock aas cmp out xchg loopne add jecxz push dec cmp jne int cmp or neg inc and jno in jo iret jne leave mov xor jg stos sbb inc mov mov addr16 mov lods sbb sub adc in cmp xlat in pop and jne inc mov mov jno push dec cmp addl mov sub pop push inc mov jnp (bad) mov cmp lds add (bad) mov and jge stos sti roll jecxz mov sub addr16 inc je pop sti ljmp or mov sti add addr16 xor mov aaa mov in sbb jge jl adc mov (bad) inc repnz iret stos loopne rcll dec inc mov insb stc lcall imul sub shll into push ret imul sbb scas jecxz std mov and das sbb into mov mov add and sarb cwtl mov or dec in outsb sbb inc stos nop adc es fs fsts push (bad) push popf (bad) icebp dec mov mov add es dec leave or pushl xchg loop into mov inc ret push add mov dec mov mov ss inc into negb fwait push rcll push pop or inc cmpsl pop movsl stc dec cmp es xor bound xchg xlat or inc and repz pop imul jge xor cli mov and aad int3 aad inc fmuls pop mov mov xchg and cmp hlt dec lea ss ret push mov mov cwtl fiadd mov inc cmpsb fisubrl insb jmp subb or lret fsubl out xchg xchg out (bad) push inc mov mov or cmovae cmpsb ret (bad) cmp cmc (bad) inc jns dec mov int sbbb xor xor inc mov sub (bad) test dec or orps push sbb jge cmc push lahf dec mov add sbb fmuls inc jecxz cmp jnp pop sbb es cmp jns xchg pop pop (bad) push inc shlb pop adc push sbb ja adc std inc cs mov pop dec push inc sbb cli xor dec mov pop xor popf enter push das fild imul pop adc xchg adc inc imul add sub xchg lods add jecxz shrb jo int pop lret cmpsl pop inc outsl clc and hlt jno je jge icebp jns repnz add (bad) fistl dec daa push push dec clc enter inc lret xchg out outsb xchg inc cmpsl fwait jmp mov mov dec fwait aaa sbb inc mov fucomp xor and popa mov data16 mov cmpsb fs mov jmp ret mov popf cmpsb fldt mov faddl into adc push jecxz aaa inc jae jmp pushw add popa push sub stos inc jb shrb xlat call dec test shrb insb push imul dec fisttpll insl jb adc cmp lea add (bad) mov sub jnp adcl sti cltd inc (bad) cwtl mov xchg xor in push xchg mov (bad) and inc sarl mov andl inc ret cmp pop scas xchg mov jb repnz pop movsb insl cltd pop dec jg sub (bad) inc or (bad) (bad) mov out sub pop mov dec (bad) dec sub je pop mov test adc lods dec fildll in inc push inc popa inc (bad) aas stos mov pop mov push inc push popf add repz jb insl mov dec xchg bound ret cmp cmp pop inc (bad) xlat mov xor dec xchg cmp cmp add push fwait xor test imul test in mov dec push mov test mov aaa dec cld out inc in mov aas inc cld (bad) mov lds cmp or lds ss inc xchg lods ret div inc pusha mov push bound fbld fmul cmp test and loopne nop inc cli gs mov jae mov adc xor dec pop popf aas mov (bad) ja or movsb jg je ret sbb mov lcall mov add cmc arpl js mov ret leave inc cmp outsl sbb (bad) inc xchg out shrl jnp mov repz inc mov (bad) dec int3 test or pop movsl or (bad) idivl sub and and pop dec std mov stos inc enter mov sub and adc into arpl inc daa (bad) pop ja mov jb inc jmp add addl test lcall xchg ret sub jle xchg dec mov cmp (bad) sbb jb adc cmp dec push jnp div or movsb sub stos ret add das test mov sub xchg insl and inc push cmp aam pop jno mov rcrb cmpsl push jge or clc arpl xchg arpl add sub add lcall jecxz subl popf and test jge sti adc aad into dec cmp into sbb jge ret pop test inc xchg xor mov mov int3 inc ret (bad) (bad) cmp mov add add das add out insl fwait jp arpl cmc pop sub rorb ss loop and xor mov mov rclb sub inc dec sub mov sti xor leave mov sub dec push mov dec inc sahf or (bad) or hlt inc dec jnp scas aas lret lea stos sub mov lods (bad) xor mov gs jg and pop xor mov push nop push aam (bad) ficompl inc mov xorl mov xor aam lahf das xchg jl shlb pop xor mov jmp dec das push bound out cmp xor scas xchg (bad) dec pushf add cmp xchg xor mov sti or movsb addb push cmpl arpl cmpsl xor cmc and jmp mov cmp inc jg out daa sbb nop faddl int3 cmp inc das sahf pop addr16 jae mov (bad) rol add push fimull movsb je fs pusha fild push push lock add inc fiaddl pop (bad) and ja xor push int3 mov inc pop loope ja lret (bad) xchg jecxz fistpl (bad) aad std inc add add xchg or lods xchg sub negl cmp sbb pusha add mov inc push inc fs ficoml sti push push andb add xor std xor fs add popa pop test dec ja pop out imul bound mov fldcw dec and jae lcall mov jmp adc fstps je inc leave ret movsl daa mov inc (bad) jle xchg dec jae sahf push cmp xchg xchg inc imul addb dec (bad) lret push jge mov repz xchg pop das popa pop and jns fmuls jecxz push inc inc incl jae out push stos push fisubl pavgw sub push inc push test sbb inc pop jecxz xchg cli and push (bad) out imul cltd ja call imul inc and fwait dec and dec stc test push clc cmp adc hlt ds xchg clc inc insl jle js xor push test and inc imul xchg imul inc xchg (bad) int (bad) dec das add sti mov repz pop loop sub mov sahf inc jp xchg jmp or js add pusha push andl std inc add and popf repnz or jmp ret mov push mov fild jno pop mov test outsb mov lods rep add popf cmc icebp pop and mov mov inc rcr out pushf inc pop pop add pop jne sub cmpsl adc xor dec cltd (bad) mov mov lds adc or sub pushf inc push dec das mov xor icebp (bad) jmp add xor push cwtl push loope mov loopne ret testl dec idivb and jecxz lds lret icebp int inc into add iret dec pop or (bad) mov jnp jno jl xchg mov lret repz out je test cwtl mov mov xchg lcall and push imul dec pop sub into clc inc xor cmp dec bswap cmpsb lds push add pop pop cmc sbb jmp loope sbb popf and lret push and mov pop inc fclex sti lods sub aaa fmuls pop or sub cwtl or insb mov xchg out int jae mov cwtl jle sti jno lret iret in jno fidivrl inc xchg (bad) dec mov dec lds lods dec mov ret fist stos xor sbb dec test dec xchg cwtl roll inc push stos xlat loop (bad) mov mov push loop sub je,pt iret jo lret inc push clc imul loopne jle repz sub dec mov dec xlat jg sbb stc and push pop dec fcomps ret fidivrl inc sub mov (bad) test scas mov nop cmp xchg inc repnz xor add pop pusha insb test imul inc adc sub or sbb (bad) cmpsb jle out dec mov fwait out dec dec cli mov in adc (bad) xlat movsb mov inc lret and add mov xchg jb cmpsb inc mov adc pop call sub inc fsubrs inc sbb add cmpsl mov fmuls mov icebp inc sub popf jle sti lret or lcall or pop push dec pop (bad) ljmp pop push add testb hlt jo out ja mov push mov mov clc sub cmp sbbl pop lods add sti inc js xor jae repnz sub lods movsb (bad) in sarb ret or mov xchg (bad) cmp in sub mov xor xor insl xchg jecxz adc (bad) rcrb call (bad) scas xchg mov (bad) sub insb es into pop fimul jnp loope cmp (bad) in subl stc xor dec adc roll inc jbe in inc xchg inc pcmpgtw jb sub dec insb mov lods (bad) cltd inc enter jecxz or sub mov (bad) mov cmp mov inc inc cmp jg add jae das mov and ss je mov dec mov mov push fcomps repnz outsl cld cmc popf les jo lret xchg mov pushw in mov addr16 inc mov in loopne xor jmp inc jbe and lea mov jmp pop inc push xor jle sub xor (bad) test inc pop insl and rcrb jb push icebp add mov fmul sbb decb lea fcoml incl fidivrl mov in out dec adc adcb dec inc pop in repnz or popa lar cmpsb cltd imul pop jl (bad) adc mov push fsts inc movsl (bad) push (bad) les roll stos xor out dec push xchg leave lds loope mov mov mov leave arpl add dec sub pop mov pop (bad) aaa jp xchg loop insb je outsb testb gs fs int3 inc in fcom xchg mov cmp jnp pshufw inc cs out jns test xchg jmp xchg dec repz test dec orl (bad) fadds adc xchg mov test mov sub inc inc rolb aam sbb cmpsb xchg adc pop push int in jecxz mov mov loopne dec sti lret mov fsub mov cmp jl mov inc mov jnp js test dec nop rcll xor mov test or sbb loopne incl sti push andl sahf xchg dec inc pop outsb xchg adc jns fldl or testb test sub pop inc sub gs loopne dec fucom xlat rclb cmp mov or adc jnp push pushf inc inc xor fwait inc xor cmc xchg repnz mov mov xchg cltd xchg test mov or mov pop outsl pop imul loop and jecxz lds movsb jge pop stos or cltd stos fldt cmp in inc sbb popa push inc and jne mov xor pushf adc cld or inc cmp jge cmpb imull inc pushf xor inc push pushw push mov mov pop cmpsl sbb inc nop xchg xchg mov icebp fild jle out hlt lock out push inc mov arpl stos add mov ret inc sub cmp add insb adc push dec into aad or sti dec jmp or addl jbe aam int3 add cmp test push xchg ret lret out mov int3 shlb xchg xor movsl and pop jl sub dec cmp push call mov adc push in and or jno dec sti cmpsl lea (bad) inc popf test mov daa xchg xor and jmp xor inc test push out movl lret cmp clc inc lods pop call add push scas loop test (bad) out mov mov mov enter cltd ljmp push inc pop or sbb cmp hlt fmull inc push mov sub andb push lods xchg (bad) mov adcl test int3 or mov orl cltd or cmp imul add adc add mov imul push sarb jmp mov daa mov ljmp inc pop jp rclb xchg add lock mov dec pushf aad mov inc adc mov pusha push push jo mov jle ret rol sti ljmp fiadd (bad) sbb mov inc inc mov push xlat inc sbb mov add arpl pusha test pop dec daa sti cmp mov xor sti or sbb cmc push adc fs repnz out fcomi bound sbb shrl adc lods sub scas inc fisttpll xchg outsb xor test inc or out je fsubrl lcall or dec icebp jae (bad) jmp and stos cld test lret jnp sti ret jg les adc mov sbb repz in push pop mov dec es int3 je (bad) loopne (bad) incb fldcw stc cwtl mov ss inc arpl adc dec inc pop mov sbb stos sti xchg mov xor and cwtl mov cmc fiaddl int3 ja jmp repz out icebp mov repnz adc les lock sti imul mov rorb out push jne cli xor lods xor das inc lock adc ror add fistpl sub arpl ret daa iret (bad) imul jge xchg add push ret scas (bad) and mov push jb sub scas pop gs repnz (bad) rcl dec jge mov out inc das sbb push dec and jecxz mov cld mov sbb mov or push push sub fs fcomps and mov cmp ret popa popa xchg outsl enter ss sub pusha adc xchg push inc xchg add aas iret fwait inc inc out pop aad (bad) and fisttp mov dec aaa cltd inc cs pop dec out push pop inc inc mov xchg arpl std push test jle or lds mov (bad) fisubl insl out add in cmp push xor or inc mov mov test mov je sbb jne dec stc mov inc fisubrl nop into (bad) sub fwait lahf mov (bad) aad lods jnp mov repz push inc imul pop jmp adc and dec xchg in jns xor icebp adc ret (bad) jl movsb imul fsubrl repz adc into mov mov movsl (bad) jecxz pop adc push inc addr16 mov enter mov bound outsl pop push or imul add xchg mov xchg loop jbe fild (bad) push (bad) iret fcmovnb mov (bad) sub stos fmuls mov imul (bad) cmp inc scas xor jmp (bad) ss mov lock lods dec push jb pop rclb xchg shll jmp fwait movb sarb es sub mov lods adc (bad) jno or mov rorl mov pop push push inc sub add cmp in jns jge and (bad) dec mov mov stos movsb jnp fcomi or scas jmp mov push mov ret pop aas mov repnz pop mov aam mov adc pop aaa insl scas mov push fwait sub dec add movsl mov and fisub and test xlat or cmp mov cli xchg or lret adc int mov lock sti add gs fstpt inc dec adc fnop insb add repz ljmp mov test loope and imul ret aam add jnp stc sbb xor lds mov inc cmc scas rcrb inc add adc dec push test aaa fcmovnu mov fcomps xchg and test ja cwtl lahf jae in loop mov lock dec call push sub sbbl push add push push fildl push pop mov add sti add inc scas imull gs cs sub pop sub adc inc cmpsl cmpsb inc cmp cmp cmp mov out mov lret dec push rolb push jne imul xchg add aas sti mov jb inc imul leave inc mov inc shlb inc jg aam les lds sbb lret mov or pop add jl inc sbb mov push fadds (bad) lret and inc sub movsl jb fimul (bad) mov push mov (bad) gs xchg ficompl pop xchg sbb jg cmp jnp dec xchg fs popf data16 xchg icebp pushf das sbb push addr16 xor dec push out sub divb inc sub xchg jmp mov mov push mov adc pop sub pop inc sbb aas icebp push popa and lea stc mov subl jecxz xchg call js pop inc mov mov cmp aas sub scas daa lock adc mov mov je mov leave inc lahf cs test sbb xchg mov mov (bad) inc adcl dec adc and das call imul xor scas or or (bad) (bad) jno push mov mov daa cmp sub inc imul push pop stos mov sub add arpl je mov add mov aas cmp imul fiaddl inc out (bad) push mov lea and or jecxz inc mov mov sub dec adcl sti loope and sti sbb les jle ret dec cltd sub jne inc sarb add inc mov sub cli repz loop inc mov sub adc pop aas cmp xchg jns sub xor fdivs hlt xor jecxz dec int3 mov adc out movl and lret inc mov pushf sub add into push dec xchg (bad) mov inc push daa frstor sbb inc mov lahf push pop jge xchg adc add cmp fsubs mov insl and hlt das sbb inc or sub (bad) mov mov sahf dec in inc jo popf and arpl push nop jmp cmpsl inc mov out adc xchg inc ret xor xchg jp cmpsb cli cmp xorb mov out ss pop (bad) sbb jno dec mov inc pop (bad) repnz cmp aad sub mov cmp rcr in xchg mov push ret add (bad) aas lods sbb rcr out cmc inc jmp sbb inc push push pop insb sar mov and jae (bad) push ret das cmovae mov movsb sub cltd idivl push lcall sub aaa xor testb lock das inc push pop imul jno roll jb fild inc inc rol lcall mov mov inc cmpsl adc mov and into jp and xchg jns repz outsl and jno cmp mov mov xor mov mov in lahf fmul lods sar imul rorl dec inc in mov movsl sub loop les jb cwtl push lahf rol das jg xor cld inc push dec cmp insl cmp fmul push mov mov aaa push dec push mov dec inc mov stos inc xchg xchg icebp jecxz xchg loop adc dec lods cmp push or xor sti dec sub adc push rcll ss cmc jg,pn and outsl sub mov or (bad) fdivrl sub add inc xorl arpl sub and scas mov cmovbe push lods push push insl pop fsubrs dec dec cmc and hlt push jmp cmp movsb insl inc fild pop push das sahf xor mov clc inc ja test repz sub fwait jmp push loopne icebp cli mov pushf bswap ja xor lahf mov push mov pop pushw jno ljmp out (bad) pop (bad) xor (bad) into inc (bad) call sub xor popf test inc out repnz int dec jp inc xchg mov in movq ret clc cmp outsl ret rolb icebp inc mov push add add mov ljmp test nop jae es repz sub mov test mov inc xchg mov dec fild dec adc mulb mov cmp pop mov inc gs lret das inc ret or xchg mov cmp (bad) mov ret sub xor push inc ss leave andl inc jnp push xchg pusha mov rcrl inc cli shll pop leave jne bound xchg les and mov ret jge mov pop mov cmp sahf and ret dec xor es xor aaa lods pop mov sti (bad) xchg ret les xchg cwtl xchg fimul lods repnz jmp and inc adcl push inc xor pop enter push sub jnp xor cmp mov inc mov mov aad dec icebp mov and sub loope jge jge mov and fwait pop pop lds imul mov adc inc cmpsb (bad) (bad) outsb xlat jae sbb cmp push push test add add inc sub inc test push test push mov mov pop cmp xchg inc inc mov sub popf (bad) xor aam jecxz mov scas stc imul inc ret aam enter inc add pop mov sti adc inc cli pop push push adc push lods push xor sub sub les imul gs ja insl push fs in jge sub es outsl xchg (bad) jne sub (bad) js sub aas loopne shr cwtl sub movsb mov mov push mov rorb sbb rolb or jmp mov ret push clc inc or xor fwait cltd xor add fs movsb ret pop xchg push dec push stos lock push (bad) out sub mov or inc lret xchg jl xor mov (bad) xor lods in (bad) rcr mov add push pop sub insb inc push mov daa rcr push adc cwtl xor add fisubl fcmovnu insl icebp loop fwait add push daa sub iret mov dec jg repnz cmp aas and inc (bad) adc stos mov jne pop cmc repnz movb test loope dec into push sub add lock mov les repz lods dec das sub sbb xor xor repnz pop mov shrl or aas out cs inc mov sub test lret pop in scas xor flds or insl sub and (bad) mov and cmpsb lds inc and dec popa or pushf jl fucomip mov xor cmp inc xor pop and mov std mov adc mov sbb cmp xor inc adc scas jae stos pop (bad) int3 push push aad cmpsb aas cmp dec mov (bad) mov stos xchg pop (bad) sarb or sub sub mov cmp les inc cmp mov and cli mov xchg sub insl ja dec dec stos je roll in dec icebp push jle sbb icebp cmp (bad) xchg lret jo xchg mov fist add adc jae push ja dec pop mov mov and jmp std out mov jne and idivb call sub or mov ficoml aam and sub scas ja jecxz incb aad cltd imul sti imul push lahf push into sub (bad) jle sti in sbb add sub jb aas sbb and mov loopne jno push shrb popf repnz xor stos stos mov fldt pop int3 or push (bad) adc sarb rcr scas mov ret (bad) mov (bad) jb pop jg cmc cld pusha insb clc cmp loope sbb or push xchg adc jmp sbb mov cmpb cmp sbb jmp push or and jo xchg push mov xlat into dec mov mov inc or push (bad) sub mov daa inc pop mov setbe mov xor dec shrl xor data16 or jbe mov xchg imull cmp and cmp pushf inc stos ffreep pop or inc xchg mov mov popf addr16 js lret cmc sub incl or jl sbb pop shl stos popa mov add pop fisubr xchg inc ja fdivs scas (bad) repz mov jns inc das fwait imul inc sub pop xrelease punpckldq cmp xchg inc aaa add pop repz add jge sbb or (bad) xor xor test pop sub push ja xchg (bad) push bound lcall pop push inc xchg add outsl ret pop and aam (bad) imulb jb xor jno adc add roll lods sbb lods ds mov test or mov je sub xor dec inc cwtl ret or bound inc mov cmp xchg inc ljmp mov xchg das jo mov jge test adc (bad) sti cmp xor ja dec cmp inc push pop outsl jge iret inc push test jl pusha inc add mov aas dec in inc mov in push inc das mov xchg sti nop pop pop push jle divl inc into or test fcmovnb add jge je and outsl rcrb inc das add xchg lcall ret cmp pop xor insb xchg repz pop dec inc sbb int3 cwtl in jne or aas repnz out dec inc outsl addl gs mov and sub scas out iret inc dec xor arpl repz (bad) dec loope push cs inc ds std xchg clc mov ret sti xlat mov call mov mov jg rorl sti sub cmp pop inc das xchg jbe loopne sahf les incb imul ret dec div cmp lea inc inc add icebp jmp mov out stc or cmp leave ss dec inc inc and pop outsb in inc xlat jp cmpsb ret xor insb xlat inc or ud2 ja rolb loop fcmovbe xchg ret loope inc nop mov pop adc repnz cmc inc lods clc dec iret xor int3 or cld and pushf incb lcall xchg scas sar aaa outsb dec loop add xchg mov orl jmp xlat inc or test popf inc mov or ret xchg scas inc jbe sti loop push adc (bad) jb in add pop lret test mov adc cmp mov mov mov inc adc leave cld sub jb or out addr16 add inc dec pushf call in inc xchg mov dec cmp mov aas incl sub sbb outsb and ret nop cmp and setne xchg lock sbb jle push inc add out lahf (bad) adc jae mov push das stc pop enter add mov and test xor push inc inc xor adc ljmp outsl out inc or lcall outsb inc xchg xchg insl jle movsb stc vcvtpd2dq shll jl pop into js mov adc insb inc inc test out or fsub fisubl add das mov mov rclb push lcall push aaa push add icebp mov sub int3 rep cmp jnp dec inc push stc xor into mov je push pop fcomp int3 ljmp call fadd push push pop pop jecxz adc push add lahf xchg and mov es icebp ret and (bad) jnp jecxz inc ja fsubp (bad) sahf ret (bad) cs xchg andl cmpsl dec ret daa push jae ret sub std hlt dec jo mov aas je mov pop or aas dec lea xchg fsubrs sub mov pop fiadd pop insb popa arpl mov dec cmp fnsave in lahf hlt xchg into out lds adc imul jecxz mov repz push mov stos cmp call insl inc xchg (bad) (bad) xchg arpl lahf dec out mov movsb jae int3 mov stc jmp sub je imul cltd mov mov jno adc cltd cmp bound test aas push inc test clc sahf xlat adc jno xchg or inc outsb in pop inc push in mov aam and jne lret fisttpll jle ret inc shll mov push sub or sbbl cld push push mov fsubl lret dec xchg pop push dec iret scas and xor push in xlat dec pop outsl push dec lods dec and inc cmc mov pusha daa adc push stos inc out movsb adc inc push lcall loopne test ret lods fcomip inc ret xor and mov inc push sub outsl adcl adc mov push dec mov sbb mov lds aad push jecxz subl inc cmp jmp xor das into (bad) jecxz daa movb mov das inc cmp mov pop sub jns push inc mov pop mov fadds (bad) mov mov inc sbb cmp (bad) or insb jns sbb fdivl enter dec cmp scas jne in inc mov ja mov loop aas add shrl cmp ljmp mov push dec lods inc fidivr inc add mov sbb lcall cmp (bad) push daa pop pushf int dec jb imul lret xor dec (bad) out aam and outsl lahf inc aaa mov ret push inc cs xchg ret mov mov dec adc aaa vcvtpd2dq (bad) sbb fwait pushf dec loopne dec inc xchg adc pop and jne dec jmp add pop and and xor les mov sbb inc mov inc aam pop mov xchg aas cmpsb jo mov jge inc shl mov in push sahf inc fwait aas lods imul adc ret mov roll push scas jge addr16 (bad) pop sbb (bad) xor ret (bad) leave mov inc adc cmp inc pop cmp movsl stc pop fwait dec repz mov mov dec mov add insb scas jl lock xchg inc or in mov jb mov dec inc loope inc addr16 fisttpl out xchg adc test lock fistp inc test roll add add mov push (bad) dec mov fcoms mov dec or push add jmp stos dec and fdivr sbb push mov mov xchg pop jle mov pop inc or xchg movl adc jmp (bad) out or pop xor movsl push adc inc les jne mov je jge dec jno inc repz xchg fldl hlt adc inc cmpl mov es rcrl push roll push mov cmpsl mov inc cltd xchg inc sqrtps push cmp push inc adc orl out push pop call mov inc int sub push out xchg mov or inc inc stos pop sub cli dec int3 jnp test add (bad) loop (bad) or and push int fnstcw std mov sbb insl inc arpl sub add inc xlat inc in in sbb lods jae jp xor enter inc test pop xchg dec int loopne loop (bad) jo xchg mov push icebp add stc jle pop ljmp outsl rclb mov in ret in fwait in mov sub mov in (bad) and cli fcmovne ficompl mov fldl cmp pushf loop jo mov jno xlat addr16 add addr16 cltd in xchg mov adc test adc icebp push mov ds inc cltd mov or repz and jl pop inc cmp mov lock inc or sbb cmp loope lret dec je addl mov inc pop inc lahf xchg js inc inc mov pusha in aam add dec rolb and jecxz rcrb roll cmpsb cli dec mov push sbbl fdivl nop cmp ds add xor or xor int xor cli sub test ljmp cmpsb out add xchg inc mov enter adc jle inc sbb jmp xor adc (bad) or loop icebp dec jne ret rcr inc inc jp shrd cld sub mov xor rclb arpl dec repz stos push push jbe add das ss std mov pop aad into sti cmp mov xchg jg push inc jb leave in enter pop ljmp inc inc lcall data16 mov mov and sub clc or mov adc mov xchg inc stc inc imulb outsl fs add push inc ret xor inc jecxz je or mov push ss daa inc inc pop cmp loope mov fisubl xlat jecxz,pn jl and lahf es aam adc jno and cmp cmp sub fwait popl jl ja sbb aad pop fdivl iret inc fnsave jb xchg cmpsb dec push out xchg loop xchg push xchg adc mov rcll jo arpl mov sbb inc push push andl in bound sub std out pop inc jl and jb cmp adc call dec in cmp pop test mov pop jp inc add push fucomp or sub cmpl sarl pop insb nop and cmpsb dec in push cmc xchg cmp sub div push or inc add inc test push xchg jae faddl mov in fstpt push inc xchg jno ljmp lcall add inc stc jae xor in daa inc mov fwait ljmp ret mov dec jg sub cmp loop aam inc add cmp dec dec cmp sub sub sub gs push or xor movsb (bad) inc (bad) xchg inc popf aam mov pop lret jnp mov (bad) mov mov fimull inc ja test rol mov addr16 fldl movsb mov mov inc xor jnp outsb jmp jae repz xor dec pushf adc xor add pop push enter push outsl push xorb inc mov inc imull (bad) push jae loop xchg xchg mov mov dec mov (bad) jbe scas inc callw ret xor ds cmp movsb push fidivrl daa ds add icebp mov push cmpsb push inc adcl inc push imul xchg je mov dec lret sahf push jnp in sub addr16 jae inc inc pushf pop sbb adcl inc cltd leave fwait (bad) nop sti cmp jg pop decb cmp xorb and cmp cld enter das sbb inc inc sbb fbld stos inc insl clc cmp arpl push mov cmpb xor cs push mov push sbb inc dec mov cmp inc sbb test jnp push jle dec movsb loopne and jl (bad) call add or add inc sub mov fsubrl inc (bad) decb ljmp cmpb inc dec mov adc ljmp dec pusha inc push ret insb in rcrl push dec in ret ret mov dec (bad) mov xchg call mov pop lods and push dec xchg cli lret add imul or inc xorl ds stos popl and inc and movsl mov mov incl inc dec adc lods mov push movsl pop popa inc mov mov lock pop add insb add xor (bad) push hlt cltd sbb jae fldenv mov mov cwtl ret das push mov xchg in xchg xchg sbb xor xor mov push sub dec mov and shrl inc cmp mov sbb out lret cli dec ja pop loope xchg pop jecxz xchg inc cmc call inc insl outsb mov inc jp scas xchg iret xchg aam xchg cs cwtl je xor push or jae inc popf gs jo xor xchg jmp rorb je movsb fwait mov sbb (bad) iret xchg xorl add xchg test rorl push mov jge pop sbb jmp dec dec lret ja xor shrb cmpb in dec mov mov pop rcll stc push sub (bad) out out fwait and mov dec cmp inc push mov lcall inc movsbl aaa pushf inc or enter dec cmp adc in je xchg add xchg lret cwtl test pop xchg dec add mov sbb in pop cltd (bad) mov jle jmp mov inc jle outsl fsubrl mov add add pop adc pop ret pop push pop xorl xchg lea dec jns icebp lds leave es fistpl push inc sarl les icebp repz sub inc lds jns add rorb jmp xorl adc aas push pop push aas dec jae jnp out push push pop xor ds fcmovnb pop pop out inc inc adc push aad xor and xchg pop inc cltd sarb pusha push or cmp add mov int3 incb inc int movl add int3 cli mov push and mov aas inc rol popa dec jnp mov repnz push in inc and or mov dec iret out and fisttpl lds inc stos lods jnp inc gs inc jle cmpsl aas adcb jno clc inc int adc inc dec jae push in ds dec test loop cmp lcall into aaa popa sbbl mov add (bad) lcall sub nop test pop lcall dec mov enter fisubrl sbb mov mov mov add in das ret arpl lods shrl jge xor inc xchg inc ret mov mov mov fmul push add and negl xor xlat push call or fwait sti rolb cmp pop dec imul jae stos call sub std or or scas enter je cmp in push jg hlt pushf pop jge jle jnp dec mov cs hlt add aas imul push int3 cmc jae and sbb pop mov sub cmp pushf iret dec mov arpl push pop and xor or mov and lret pusha mov and or nop and lahf stos dec out scas add repz mov aaa daa cmp hlt mov pop jae cmp xlat fwait mov int mov test cmp popf push add xor pop ret mov stos stc shlb adc mov push into sbb push sarl test fist lods das test mov jae dec stc cmp add arpl gs jae sub icebp or fistpll jnp stos mov or roll (bad) push add xchg cltd add aad dec inc jle add add dec and repz (bad) lock pusha imul or movsl repnz dec push add (bad) into insb dec mov fidivl xor stc sbb fadds fidivl pop pop cmp fdiv cmp lret imul add xchg mov loopne dec fstpl sub loop addr16 repnz dec imul mov pop in aas inc xchg aaa pop inc sub push inc inc pop jo dec inc sub je inc mov in inc popf out mov sahf cmp lahf add or or imul sub jae inc loope int dec fildl inc mov xor xor jne pop enter cmp dec (bad) into movsb rolb mov int pop and dec or in inc mov push iret xor and or add sub mov jp insb insl push lods sbb rorl shl pop mov shl cs jb data16 xchg mov mov push enter jo mov loope jg cld push hlt xor dec push lret es (bad) jp sbb mov cmp pushf sbb fucom cmp adc sub lock xchg sarb scas pop inc fwait mov mov xchg aam push ds lahf aad cltd neg pop push pop sar (bad) (bad) push (bad) lods sub xor out push inc repz in std sub sahf inc inc xor fs push xor inc arpl orl add lret jnp push or popa xor es adc cmp cmp ss pop add inc (bad) in outsl xor push push pop xchg into aas daa dec iret push movmskps inc pop sbb dec cld loop out xchg pause dec mov inc das mov scas add shll inc push iret lea les pusha int insl xchg mov cltd fwait rclb xchg or pop jmp mov push mull sbb out sbb (bad) push daa dec in mov and cmp call mov inc xchg lahf popf ret inc dec and aaa outsb ret add test inc lods or xor xorb or push inc popf daa cmp std call dec push bound xchg (bad) mov add dec jnp cld (bad) incb ja scas or inc xchg or mov test mov push dec push jb imul jo fstl testb inc jbe cmc in mov pop cwtl std icebp je dec cli inc or and aad sub cmp mov loopne fisubrl inc push jge fisttp sarl push jl fcmovnb sbb adc popa cmp popf mov das (bad) fnstcw (bad) popf and sbb inc inc add rorb into nop sub add (bad) iret scas inc insb dec add inc rcl icebp push in adc (bad) cmp ret mov (bad) inc inc xchg push jmp loop andl pop ret popa push dec pop sbb push adc cmp inc mov sti lret mov push repnz add and leave jb andb jmp and inc dec push test push (bad) jle lock or adc push popa fwait sub dec lods mov xor mov popl or adc sub pop push (bad) inc push inc mov pop mov xchg and inc add inc push pop sbb inc test jmp shl push aam arpl jl dec cmp std ror lock lds inc jge xor ret popa andl and popl mov jge add movsb mov out mov sub aas pop push rorl or push push lret inc xchg jb test cli ds dec (bad) mov aad xchg mov popf push cwtl aas cmp push cmp jb in xlat rolb dec pop lret or inc pop ja mov fbld xchg (bad) mov aas into sbb sub jo pop and es loopne mov sub mov cmpsb cld cmp jae in out mov mov xor adc inc fwait cltd repnz pop push aad out push adc incb cmp lahf imul fmull call jo shrl stos in pop xchg push jmp and lret enter fcomip jb xchg inc fimul sub sub and fpatan mov into ret pop pop fs pop arpl mov push or and push iret fmull outsl aam int3 lds ja sbb (bad) mov shr in js mov incb in lret fs dec fsubrs fsubr dec inc es test shll pop (bad) fnstcw inc sbb fwait sub clc inc and xchg das fisubl sub push lea std sarl inc sbb mov sub aaa ds inc or cmp xchg std push jns inc aad inc int fisttpl xor shrb sbb repz jb imul xchg mov adc dec sahf xor mov inc (bad) pop jmp repz inc insl pop fimull repnz push scas fistpl inc inc subl out (bad) or cmp and dec xchg in xlat push nop movsb inc inc mov jg,pt xor stc inc mov xchg lock or stos pop imul cli inc xchg jb pop pop outsb sub fadds cmpsl mov inc sub js outsb add fmuls insl sti sbb leave ret shlb iret inc mov fdivr or inc pusha leave int std loopne xor fild faddl cmp out xor insl dec aam cmc dec ljmp jle mov xchg je or pop and insl inc xor je jg mov jo ljmp nop roll in daa and loope inc movsb xor imul xor or subl cmp into jp inc pop les das jecxz jns push mov ffree mov xor rorl inc lock and sbb add mov inc jmp repz lret jno ret sbb sbb or aas push jmp ret xchg movsl dec pushf pop lods aaa sub pop lds cmpsb icebp sbb lret aas jl inc mov (bad) xor and push jbe push push mov xchg dec push sahf xchg (bad) out (bad) mov (bad) add sbb std popf movsb fmuls jle pop inc inc jae add xchg mov push mov addr16 pop icebp add xchg sbb outsl add jnp,pt daa dec mov inc mov fs add mov inc or dec cwtl mov push inc (bad) pop and adc add and jge pop pop jb ljmp mov dec mov andl inc inc push pop or mov ja stos in add rclb inc push push daa cmp fsubs sbb dec jae sub cmpsl lock inc pushf adc nop push mov mov add push jge lret mov mov sbb stos or xchg pushf lock das xchg repz ss add jecxz push jge dec int inc push stc add xor inc jnp cmpsl xchg mov fstpl xor push sbb je mov ss cwtl push lock inc loopne mov nop dec arpl mov or cmpsb xchg dec loopne inc lds scas push inc add hlt mov aad mov scas ret ret mov push xor cltd (bad) xor push sbb xchg (bad) insb arpl dec push jns adc stos loope,pn cli adc mov outsl xor mov add cmp dec xor inc push or in inc mov inc cmp inc cli sbb add mov mov incl frstor bound sub xchg xchg roll cmpsb lahf mov repnz mov ret clc xchg movb das loopne inc sub ret ljmp pop pop sbb lock inc pop outsl lods cltd stos and mov pop popa inc adc test inc mov outsl lret inc repz adc int3 cmpsb mov imul scas clc sbb shrb aaa dec cmp dec movsl movsl mov cld loopne dec inc ja ds cmpsl dec sub faddl repz (bad) inc dec (bad) mov hlt cmp out (bad) arpl out sub push jl jp inc mov mov mov addr16 lea subl insb inc inc add mov in scas das xchg insb inc mov bound dec test stos lcall dec inc mov scas adc sub cs loope popa mov ds imul pusha lcall adc stos hlt cld das jno cmovns hlt push (bad) leave mov xor mov mov inc sub sbb addr16 out nop sub outsl adc mov jle js loopne xor mov enter jno idivl xchg xor push es aad sbb int popf ficom and jno cmp xor imul bound jg das movsl inc add inc push rol jecxz in jae cli cmp (bad) sub jns add cmc inc sbbl pop rcr notb inc mov mov xor dec mov xchg sbb jnp dec popf cltd in nop xchg push inc dec movsl movsb loopne adc daa cltd loope add in push pop adc pushf popa test shrb shll inc inc outsb xchg cld xlat insl jb push and or pop jb cs (bad) (bad) xlat lds mov mov mov test push jp dec cmp mov adc sub cmp mov mov mov rolb xor lds xor inc out pop data16 dec mov in or xor (bad) dec add movb (bad) cld dec pusha push cmpsb cwtl inc repnz fwait out pop pop nop jg add je int3 adc cmp imul repnz or push dec xchg xchg out inc cmp inc subl fist sub lds adcl sbb daa std addr16 jb adc push imul inc bound ret loope sub pop shl stos inc inc fstl mov stc ret shlb dec adc (bad) in add outsb imull movb sub cmp cld in jbe mov pop fistl sub mov adc pop sub andl adc pop sub inc or mov jl mov mov outsl in jg adc sub push inc sub adc leave daa rolb mov xchg dec outsl dec mov (bad) adc jno loop jp and pop sarb jge or cmc xchg jecxz loop mov inc or inc inc add aad fs mov addr16 daa mov jo ret ret outsl mov pop dec (bad) pop dec (bad) jno sbb inc jmp push iret subl mov cs pusha das insb rolb fwait repz add mov mov add cmp sahf mov jp pop sbb (bad) stos ss cmp dec mov jecxz es and orl in stos movb inc int3 sub inc fwait jbe popl jecxz gs inc mov aaa test sbb xchg dec rep incl sub jns popa aam movsl inc sbb jae daa mov iret push mov xor fidiv jae mov or push test push lahf insl inc (bad) push sbb add jle dec outsl stc ret ljmp arpl lds pop inc rcr and add neg cwtl enter add xchg xor inc arpl shlb outsl call inc or outsl aad outsb and nop loop push loopne pop (bad) cmpsb push mov outsb lret pop arpl cltd cld into inc dec icebp push cmpsl test xor inc mov aad out inc mov test andl inc inc sub jae sub iret mov xorl and add jne out or mov pusha mov (bad) jne pop mov test inc inc sbb pop test push cmc xchg bnd jp ljmp xlat xchg cmp mov or xchg mov jne cmp xchg mov mov push rorb sahf push daa out sbb int inc shrl mov sub jle ds sub xchg int or (bad) inc push cmp push aaa ret leave into int3 push testb cld (bad) cmc adc das jo pop popf xor mov xor aas and sbb xchg sub sbb fcoms push cmp clc cmp into dec sub dec dec sbb push dec mov add adc imul cmp push pop cmp dec lods mov loopne mov sbb aaa loopne dec fimul inc pop ljmp jo jno es add scas xor add mov xchg test jecxz inc or xchg sub clc adc movsb cmp das rcrl clc pmullw mov fsubrs or add inc inc fistpl clc mov int3 test dec push mov jecxz in add xchg fldenv dec lock mov repz mov jb rolb roll scas (bad) adc dec lcall loope int3 xor xor dec jmp mov sahf int3 lea inc les lahf cmp cmc (bad) or pop sti inc inc aas xchg stos mov pusha pop add nop dec dec sub bound add and int into leave fist mov mov push jb jecxz ret adc and stc paddusw add xor test sub mov adc dec imul rol lcall and fistpll push lds push lods int3 sub pushf repz add loopne pushf es cmc add into stos insl pop sbb sub push push or (bad) out mov push and lret into mov and (bad) stos push clc sub fs inc in sub pop aad les dec fisttp mov movsb sbb cmpsl mov call or fs lret mov dec gs inc mov dec or cmp popa xchg and push xchg sub int push sahf or cs into lock xchg sub stos pushf sub lds pop in sub sbb (bad) jo rcl pop bound xor (bad) scas xor test fwait fwait jl cltd int3 sub jmp addr16 inc scas or pop inc cmpsl sahf xchg or or push cmp xchg loop gs ljmp mov dec adc inc cmp sti inc paddusb push jo cmp in pop jge mov je mov imul aaa mov xchg adc int3 cmp pop mul and jb inc push jae out nop mov mov push stos mov adcl (bad) dec ret (bad) das jo mov scas (bad) ja adc lock addb (bad) pop xchg inc mov nop push mov add icebp cmpl mov aaa inc lds lret sbb aam adc es inc xor jb push jnp inc shrl ret cmp mov insl dec rclb inc push xchg in jae xchg push int3 movsl outsl mov ljmp mov shl inc mov dec xlat rorb mov lcall adc mov ret (bad) inc sub xchg leave inc mov or mov mov sti xlat lret cltd or mov pop or inc mov sub lret mov inc push addr16 xor shl ret pop xlat clc mov or outsl subb inc ret cmp ja push loop mov pusha imul inc sbb and in icebp dec inc pushf xchg (bad) pop dec jecxz push pop and mov ds std dec or loope jo es xchg sbb push inc xchg data16 iret xor out inc and mov push subb imul stc jl pop push dec jae jbe lcall (bad) xor fidiv jne push pop (bad) divb bound sti outsb xlat mov cs jbe pop jmp insb inc cmp aam stos aaa xchg add add push mov push inc cmp mov repnz inc cmpsl (bad) ds enter inc loop mov push pop scas push inc (bad) add in and and in arpl inc xor dec rcll pusha popf inc pop lahf lret scas leave mov mov insb rcll inc aas push xor xchg jae mov dec mov mov jb sbbl adc push popf cltd jecxz cwtl jmp inc fmuls sbb add push pop decl (bad) or dec call mov fcomp cwtl inc je mov inc inc roll xor xchg cld jae hlt inc es jne and xchg cmp stc or bound sub mov mov xchg das push addr16 leave dec enter clc xchg dec movsb sbb mov inc lea subb xchg add inc cs jo mov xor stos scas xchg jmp lods cli mov mov fdiv shll jnp mov nop xchg ret mov jecxz std add ds inc fucomp inc fcmovne cmp fild loop xchg sbb daa jmp push inc cltd rorb add repz cmp cli scas adc outsb push inc pop inc (bad) aad test rorl fistp fldcw push clc add dec dec jnp jno,pn inc push ret push pop cmc push xchg in dec dec test (bad) in pop mov xlat (bad) into lods dec sbb mov adc outsb fadds lods mov aas inc dec xchg pop out xor int stc xor xor mov mov mov add daa insl popa inc inc pusha xchg xchg movsl outsb mov je cli mov in xchg and or or sub pushf sub mov mov movsb pop test call ds mov mov lock and pop jo cld add rolb sbb lret (bad) pop imul push outsl mov jp jmp sti mov pop inc mov adc jbe,pt jle jge (bad) push data16 inc pop popa add fmuls loopne xchg cmc add inc ret stos rcl mov adc adc push jnp cwtl sub push sbb jno iret jo xor pop inc dec movsb mov psubb or imul inc jmp fstpl dec sub adc sub cld jnp into pop aad sbb jg pop jne sub (bad) and mov dec sti sub pop add inc into ret mov push ret mov sbb inc imul sbb movl into ja xchg jo int fild stos xor insl adc jmp dec lcall cltd (bad) mov outsb push pop bound invd popa stos add pushf je dec movl xor pop xor sbb out push (bad) mov movsl dec sub adc mov insl xchg cmp dec push subl fbstp fs pop mov pop xchg cmp mov or xchg fildll stos bound es ja fs ret add movsl lds mov jo ss sub daa inc out test add jmp pop push insl sti xchg lret jg ja sub xchg dec dec push adc cli jecxz (bad) aas xor cli xchg push fucomip ljmp cmp lock dec loopne or sub push scas ret fnstenv mov cli sub (bad) mulb jae xchg pop adc dec (bad) ss pop xor jecxz out lret adc icebp mov lock or mov and xor ret sarb fnstenv (bad) cmp sub push lcall lea or cmp push rorb rcrl sbb sub jecxz xchg xor or mov xor popa leave xor stos dec sub mov push jmp push aad dec test pop sbb test inc daa les inc pushf leave mov outsb hlt insl sbb (bad) and and xchg lods xor aaa cs inc jecxz movsl stos mov dec int3 push adc mov jmp add (bad) sbb sub int pop adc out outsl sub and stc mov mov mov addb daa cwtl sti js mov xchg inc pop sahf scas sub ret ficompl lretw jo enter je movsb inc inc push faddp xlat cmp lret jae sti mov mov jg xor repz inc popf int3 jns and nop fdivs and jb sbb jo inc pop mov xor cmp in mov and sbb dec mov (bad) rep cli add pop cmc jmp seto inc add dec lcall mov add or in test lret mov mov es ret mov imull inc adc in (bad) ja aas and mov push jae (bad) lret adc popl sbb (bad) mov or inc xchg push icebp adc sub mov into xor push xchg inc call loop and jae jno push movsb ret and (bad) je push inc cltd push fwait jecxz rclb (bad) movb test sub xchg test mov inc fmull ret cmp mov inc test xor ret or xor mov gs das in inc and xlat sub cmpsl mov xchg inc jnp ja les icebp mov sbb mov inc (bad) dec push push and int inc push push mov inc jnp imulb xchg xchg and mov sbb jmp inc pop imul dec stc push dec and or fldl inc jle xchg jno dec push inc mov dec (bad) popf daa push call les fcomps jnp ret xchg xor (bad) or pusha mov ret insl hlt pop inc lahf mov pop xchg push jns mov xchg and inc fnop mov das inc xor and lods repz movsb pop lods (bad) sub test imul daa inc stos movsb out cltd pushf (bad) mov pop fwait or into xchg aaa loope movsb sbb fistpl (bad) inc push mov scas das inc out stc sub lock and sub cwtl mov ficompl rcll lock enter (bad) mov cli dec mov lea sbb nop sub hlt cmpl mov mov pop (bad) iret sub inc gs push and add addl add gs dec sub aam jbe test fcmovne int3 imull push adc inc pop scas sub (bad) jae cmp push pop mov int pop pop clc lds pop dec cmp dec mov fadd test sbb adc out mov push adc fsubl dec lds xor mov and imul mov push ret push insl push inc ss xlat call jae std pop lret mov inc fmuls dec fdivl (bad) or aaa push movl scas fstpt enter jae icebp push fstps sbb popa mov and cmp or jnp mov in inc push mov inc xchg and inc shrb aad sahf je cmp sbb leave sahf loope out dec mov aaa mov dec icebp sub pop shll push push inc cmp lods jb mov dec jno jae push cltd add sbb loope inc jbe lcall out jp add or and pop mov or and loopne sub xor mov movsb push push rcll or aaa cmc addb pushf aas sub mov inc cmp add inc pop out rcll fcoms mov sub rolb inc jge in pop jne out inc iret xor inc inc push mov daa std daa jl add outsl or add jb xchg add aas out jo jns pop mov outsb sbb pusha and jno inc and fisubr mov inc push fs cmpsl xchg push xorb faddl or jle out push jne dec inc xor add pop fidiv jno dec jp cs sub ret hlt adc jmp inc inc dec fldcw insl xchg xchg and aad push scas jbe inc mov xor bound jmp mov inc test and pop dec dec push loopne cmpsb xchg push xchg or es inc adc roll movsl pusha xor scas xchg out dec push inc into int3 cmp dec pop cmpsb mov (bad) xor sub enter cmp jmp sbb out insb or aaa or fisttp xchg iret ret rolb vdivss cwtl in scas push sbb mov inc xchg or test iret add dec sbb and in imul and es xchg test les out add mov (bad) in xchg inc pop in inc divb xchg das lahf mov inc jns shll add lcall repz inc (bad) fcoms add and mov dec ret int mov sub fisttpl inc and je cltd repnz push pop mov cmp jb push sbb andl inc stos xlat in add dec pop roll sub lcall jns incl out inc pop pop push and jp pop std sub mov add es in repz inc push sahf int3 mov fiaddl aas push test push incb mov adc cli xor add scas jne shr sbb inc adc lds and inc mov add imul idiv dec in cmp pop sub pop lds arpl ds mov mov icebp or mov das push fninit jae fnstenv push fistl popa ja stos xchg inc int xor jne in jno scas mov cmp pop add das andl mov ds in xchg les jecxz mov adc jg pushf mov push xchg (bad) arpl lock ret ret movl inc daa mov ficomp int inc cli (bad) je test dec adc es jns rcll and xchg into pop sbb (bad) xor inc sbb lcall add int lods sub sub adc movsl push hlt push mov xor ret push (bad) ljmp fdivr es (bad) fldt xchg lods adc push movsl cmpsl loop in sbb test inc orl sti mov add push aad or into fnstsw inc mov scas ret mov loop push dec cltd inc or lret mov add lds jmp fcoml movsb add aam jno dec cmpsb pop xor lock mov icebp imul test sahf pop cltd lcall mov lret fcompl mov adc int stos cmp pop or addr16 jmp (bad) inc sub pop push push push pushf lea sub dec gs push lock lcall fldt pushf faddl imul int3 sub mov (bad) sbb mov cmp repz push xlat mov xor shr mov pop adc int3 mov mov int lcall pop scas sbb xor cmp mov inc (bad) sub cmp xor jae inc or mov stos fcompl icebp gs jg loope adc pop pushf ljmp cwtl mov push daa mov bound adc scas sbbl or xchg test dec (bad) cmp mov mov cmp or sub stos adc or cld lods xchg popf cmp addb jl mov (bad) and dec into mov sub mov inc in into into push sbb ljmp popf push and rcl clc sbb dec sub stos mov lret orb aaa and push fwait stos mov sub mov (bad) mov inc adc clc icebp lods sub add jecxz ljmp cmpb test dec cmp cs ror jg outsl fmuls xchg inc inc sub and cmp adc loope xor sahf dec jb cltd xchg sbb adc popa push xchg lret xchg mov idiv int3 int3 fadd add test dec fisttpll push cwtl enter cld pop inc cld stos ljmp aaa adc add pop test lods mov pop movsl pop lea ja (bad) mov call jb pop pusha adc xchg fcmovnb icebp cld in lock insl jle and push cwtl cli mov push jg jbe mov hlt add inc push iret adc jb inc mov xchg sub leave cmpsl jae cmp jo aas les push stos jne out ret xchg push cltd sbbb jge xchg pushf call int3 insl (bad) or mov inc pop push xchg rolb inc pop adc adcl sub push dec xor mov xor inc xor ds testl lods inc mov stc dec adc xchg fwait pop sbb arpl push push push fstpt pushl rcr mov add sahf xchg in es jns (bad) out mov adc lock xchg push gs inc sti and jns decb int inc repz mov sar stos jg sbb add mov inc push ror jb iret hlt and and pop jle xor pop cmpsl and mov push mov xchg popa lods fsubr dec dec push lcall mov mov aaa hlt adc mov mov insb lret out xchg inc mov mov xchg inc cmp cld or mov jne dec xchg stos or xchg out dec mov push or mov pop int3 pushf inc pop fldenv ljmp (bad) inc into (bad) sub outsb fldl int3 adc mov lds inc push (bad) sar js cmp jns cltd inc lock int and (bad) out loope cmp jbe jo dec jmp (bad) cli dec cld int xor sbb call dec xchg mov repz push pop sbb es pop fwait jb mov inc dec loopne push inc inc out push xor imul rcl mov or push cmp xor push adc mull arpl inc mov push push subl lret add and mov mov pusha pop push jge mov movsl test pop mov xor pop dec (bad) lahf pop (bad) dec lcall adc cwtl insl mov pop mov add fisttpll mov inc inc mov pop mov lret cmp xchg setno fldl or pop xchg insl mov das inc inc pop mov xchg cs dec inc sbb cmp scas mov repz shrl push xchg bound inc test rclb add cmp into push stc xchg sbb pop push sub idivl sub addb xchg cwtl push addr16 pushf sub push push repz rorl push rolb ret int3 push xchg ror mov pop add popf lret dec sub mov push jno popa inc adc mov adc std sub lock inc mov (bad) out dec mov jae stos popa in sub stc sbb lock mov in xchg outsb dec add dec sub xchg push (bad) xchg les (bad) push insb jmp negl out jnp int3 push fwait sub insb sbb push iret xchg mov cmp test or (bad) mov xchg mov lcall repz es call fs cmp xlat jbe pop loope push mov (bad) cld and jbe loopne rorb (bad) call int3 inc stos pop arpl dec inc cwtl push mov out sbb pop fdivrs cmp and xchg pusha ja (bad) in mov stos cld inc insl ret sti int loop aam arpl pushf cmpsl sub addl shll (bad) icebp mov push cld sub pop and stos movntq out mov sub into ret push imul dec push push leave xchg dec ljmp addl insl xchg pop sbb jge test cwtl (bad) inc mov in add add call in push ljmp sub sbb add pusha xor pop inc movsl out xlat or es inc xchg dec pusha jmp sbb mov cmpsb aas or adc pop popf inc in loope fbld mov or pop int or push xchg pop dec add test imul add (bad) clc inc sti je cmp scas add and inc add lret inc push iret aad (bad) lret mov (bad) pushf movb adc push clc sub inc dec inc inc inc mov mov inc loope and xchg inc mov cmpsb sti push inc arpl add andb ret xchg jmp adc jb scas mov jmp xor ds and jb mov sti sbb aad inc ljmp jge xchg or das xchg (bad) pushl and lea aad mov lahf shr (bad) mov ljmp popf xor ret jnp dec out cmp jmp or sti or inc push inc pop sub fsubr popa pop stos jmp std sbb outsl in pop mov addr16 or lock leave fstpl stc lods fnclex inc stos mov cmpsl movsl and sub aad sbb ss jns roll iret inc mov cmp call sahf stc (bad) (bad) sbb or xor into fidiv hlt jg in xchg ror xchg fild dec xor cmp mov cmc inc adc inc push mov fwait aas popl fcoml sub cmp jno mov mov pop ds lret cmp or iret jge rcrl adc aas stos cs decl push or fwait and pop in inc into ja xlat mov xchg xchg jno mov das sbb inc pop fdivs pop inc (bad) test and sti push inc outsl gs jp icebp xor push nop cli stos sub xchg dec inc pushf scas fnstsw fwait xchg iret je sahf stc xchg jae inc inc bound push jl push pop inc aas inc mov jmp inc xlat int rclb arpl repz stos sbb cmp testb ljmp inc xorl lock dec cltd jp inc loopne adc aaa cltd popf dec mov cmpsl sub mov sub (bad) aas repz or incb push scas xchg lock mov lcall pop shrl mull ja in lds inc mov sti out shrl xchg mulps (bad) mov test inc fnstenv aam lock lcall call (bad) out inc sahf pushf jns push incb push lods push pop aas mov push out cmp sub jl out push int sbb inc fwait xchg jg out mov cmpsb loopne dec xchg std ret pmaddwd dec cmpsl shlb inc and mov rolb inc int3 cmp cwtl std inc enter in pop loopne outsl mov ret cli mov movsb mov bound jp sub adc xlat and mov movsb add mov sbb scas in xor cmp lods clc cmp ret dec test rorb ja cld sbb ret addr16 ret push inc sbb roll sub imul or push inc insl scas lods loopne jo xchg hlt adc inc pop mov rcrl cmpsl imul cld call xchg popf dec inc mov jnp ds test mov pop and inc jnp ljmp fmull testb inc dec or lods dec js add mov rorb mov lcall lcall push pop inc push sbb (bad) mov sub mov test add jle shlb and fsubs dec sbbb inc mov out add inc (bad) rorl jb inc pusha mov sti ljmp mov adc fstpt or insl jnp add incb inc stc imul dec add inc pop jle movsl out xchg xor leave sbb cli lret mov push pop call dec jnp outsl cmovae xchg outsb sbb aad inc stos xor push mov inc out push xor fsubrl mov popf rcll addb ja adc test ret xchg and out and in inc (bad) push adc xchg pop es test xchg push sub xchg pop out xchg and imul cmp and movaps cld sub jmp jnp sbb int3 out pop cmp push call or ljmp divl popf push inc movb jl test in out nop (bad) cmc ret jb fistpl mov inc (bad) or or inc xlat xchg iret jns sahf cmpsl add testb sub aas sub loopne push xor fadds dec lock cmpsl inc and push iret fisubl jo std jb cmp roll inc jg shlb sub jmp mov inc js xchg int cld inc adc adcb add icebp jecxz pop push shlb jo imul addr16 lcall or stos inc push sti inc push lret jl pop or and mov popa je inc xor mov outsb imul sub jg ss cmp pop pusha fs pop (bad) push daa dec xchg jmp add add add rcrl push bnd inc data16 lea clc ret mov xchg cmpsb ljmp scas pushf insb fsubr sub and mov ret add push jecxz dec das pushf lahf add lock je (bad) or insb cwtl lods mov pop jnp jbe mov rolb mov test dec jno test adc inc mov xchg xchg aam pop xlat lods aad dec out notb test lods fiadd icebp push addr16 dec cmc sub mov pop mov movsl sub ret repnz mov rorl fyl2x mov xlat or adc inc push cmpsb push jbe push notl jg inc dec (bad) add dec inc out mov inc rcll aaa push dec xor dec in and mov inc aas dec mov pop push lret sbbl stc sub loopne stos int3 mov dec inc mov rolb popa pop and fcoml jno fnstsw xchg call sub or mov mov cmc cli ljmp mov mov xlat inc cs cmp sub xor in sub imul stc int jecxz inc in clc inc and sbb push inc push vmwrite cmp push xor jb jp jge jno fs scas cltd cmpsl outsb lods sbb (bad) int icebp in sbb (bad) ja and out mov mov inc sar imul leave mov adc bound loop mov and push loope popf xchg lret movsb rclb or and inc inc (bad) (bad) cld sbb fild xchg sub jg mulb test inc push scas xor jmp cmp push xchg xchg rorb xchg ret sub mov lret jp jo aam inc bound lahf fsubrl or and inc dec nop jae mov lret in inc or add ja inc inc mov and andl cmp int3 push ret in int int3 inc stc daa push adc inc gs dec pop mov add push (bad) jle sahf mov call jne aam movb ja,pn je lret ret pop xor out dec inc mov lods lock push shll iret fwait or test les dec add int (bad) roll in pop add mov mov xchg inc nopl mov inc sbb mov data16 xchg iret add into inc pop cmp pop test xchg nop push (bad) pause adc jp lcall popl inc jb pop mov inc push insl daa sbb leave xor fucomp inc outsb xor pop push inc (bad) or mov mov mov dec sub xchg (bad) push cmp mov inc (bad) cmp (bad) ret push pop jae dec sbb add dec das push jmp dec rcll sbb sub lock xchg stc cmp xor dec mov fwait mov les mov das dec jb sub cmp lds dec into xchg adc mov jg ljmp dec or sub push test repnz xchg fimull hlt inc jne flds (bad) data16 adc pop mov cmp push es dec into js add fldl xchg inc out cmc dec mov shll (bad) xor ret mov add or pop gs shll outsl out hlt cmp pop cmp das dec cld out jno xor add ss adc inc lock gs sub cmc jae xor sub lods jns and scas add mov sbb out inc dec movsl cld xor add sub add xor lcall inc push std (bad) sbb or lea out rcrl fwait add inc popf mov lods mov mov xchg faddl xlat push fwait xor shrl push jnp mov dec andl jno mov dec sbb adc xor cmp test push push outsb sar imul es mov cmp inc daa enter ljmp jge jecxz add xor test addl jns dec in xchg pop dec or testl rcrl inc push adc cwtl jecxz xchg dec cmpsl int3 jg xor lret and js hlt ljmp repz test inc xorb nop inc inc inc push cmp pop inc mov mov and dec pop data16 pop lahf mov push inc (bad) (bad) out dec and ret and subl repnz imul sbb test mov aas push inc imul popf lret cwtl pop cmpsb inc loope mov fldt mov orl sub ja sub dec push fiadd ret push out rolb mov mov mov cmc call dec pop inc add pop sub enter xchg dec inc (bad) mov loopne je int or loop sub cmpsb ds std add into inc push jnp ss int inc (bad) icebp mov mov outsl iret or inc or in leave mov add insl imul sub push aas adc jo inc jne jle scas js insb dec mov adc call mov push arpl cltd inc hlt mov (bad) fptan add push jo jno mov push jle shl dec fldt cmp pop fbld jmp mov and popf mov jae les sbb inc nop lods out sbb outsl jg imulb pop (bad) lcall cli xchg stos cmc mov sbb into repnz cmp sub por loop nop dec add adc ret (bad) repnz cli fsubrs in out adc popa sub scas mov jbe jo inc mov stos cmp jp,pt out mov mov ss jb in xor or fildll cs shrl mov rorl cmp mov je pop jo dec lret mov add jg enter cmp fistl test imul and push push subl rcll jle add clc pop and or add cwtl rorb mov neg push popf iret dec and sbb arpl sar mov fwait shl pop (bad) (bad) into fidivr sti push inc xor ret sbb test lea inc addr16 addl stos pop cs pop fistp cmp add jbe shrl addr16 xchg ja aad insb sub ds aas sti xchg mov mov (bad) sub repz enter cmpsl inc xchg cltd out or clc push aas dec sub pop jae sub mov xor inc push popa arpl cmp jl sub cs jmp jecxz xor enter out and movsb inc xchg cmpsb pop das or inc mov les (bad) pop cmp lret inc lds inc mov pop out lret outsb (bad) out imul sub cs inc incb clc push sbb mov mov pop inc jbe ret jns push dec in int jne bound scas ret and dec aaa cltd push cs push out mov and or repz mov add xor inc fsubr push ret push mov add inc sbb scas mov push es mov cmp adc arpl cmp stos inc inc call stos inc (bad) (bad) xor sar andl daa test out ret add cmp inc mov shlb inc push aam (bad) hlt dec loop aad ss loopne sub clc cld (bad) and add jmp and xchg xorl add pop xchg cmova dec pusha cmpsl out lds mov aam pop loopne mov dec push scas xchg jge dec clc pop or rcr mov icebp push in inc push xchg sbb add xor inc jae jg sub popf gs or mov out fiadd (bad) jb inc je js outsl push and gs xorl inc mov xor rorl outsb (bad) repnz inc js sub pop sub mov ror fsub cmp push sbb pop enter inc test sub jmp sbb pop lcall loop insb inc add popf and pop jae arpl push pop pop lea jne mov inc mov jecxz in dec test pop sbb and in imul dec (bad) je adc or push fdiv shrb inc dec xor out cbtw pop cmp (bad) mov ss jp lret pushf mov push je scas push and mov stc xor sti cmp mov aad sub sub inc push js aam in add inc push fs and cmp push outsb sbb dec push sti repz insl mov (bad) je or and mov pop loope cmp mov mov dec nop xchg not jg inc pop outsl insl xchg jmp jno adc fnstcw mov mov adc arpl fwait jb mov mov (bad) mov push aaa xchg inc mov jle ss cs mov inc mov in iret mov inc shl in push jl mov loop fwait lods and add mov pushf inc imul cmc movb hlt xor outsb xchg inc daa ljmp imul rcrb mov (bad) dec mov cltd out inc push jnp or xor jno movsb test clc mov inc mov leave dec sbb ret repz sub jmp and roll jge push movsl or and aas add fbld (bad) jmp dec push repnz jmp mov rcl mov mov popl hlt nop add jae inc jle xchg pusha les or sbb cwtl movsb addr16 fmull xor aam sub and aam lods or mov pop adc add sbb add mov jnp inc lock dec mov sahf addr16 imull mov lea xor fucomi sti cmc push cmp inc or inc sbb out mov cmp xor loope cmc pop scas aas push outsl mov inc cs out mov jnp addb (bad) lahf jl cmp mov and inc fwait lret stc (bad) inc cmp pop xor mov mov cmp xor xchg inc (bad) jbe imul imul mov (bad) es pop push dec fwait gs sbb cmp push into push (bad) jp lds xor inc inc cltd and repz jae jecxz test fsubl shr xchg inc imul push adc inc push repz sub and dec cmpsl mov shll xchg out adc jp mov sub ficompl and cmp mov ret stos cmp lods and mov cmp push push mov ds rcrl decl fcom nop hlt dec (bad) xor mov sbb or push out jne xchg sbb adc aas (bad) sbb rclb jg push sbb jno hlt aas push insl inc lods push sbb inc add mov int3 dec into pop sub enter (bad) lock (bad) pop xor test cmp sbb xchg aad fwait mov or push sahf xor inc jae mov pop xchg xor mov sbb push cmp push sub out int3 fsubr sar inc repnz and (bad) mov mov repz (bad) xor mov mov fstps leave pushf mov mov fcompl fwait repz dec aaa pop jnp push mov dec adc add adcl pop (bad) mov roll xchg cli idivl cltd push add outsb dec test (bad) mov repnz xor pop dec pop xchg inc jno push outsb sub icebp fildl loope jmp or dec movsb pusha dec push repz je adc push jl int in sub jge cmp leave mov dec dec adc mov out ret fdivrs pop dec mov push jg rolb loopne out add std enter das jo and push insl sub adc jl push inc sbb push int3 dec clc ja stos cmp imul inc lds pop push jge test out scas and rcrb out push pop jo jno nop push push sbb jnp,pn sbbl push push into out ret mov sbbl movsl lds push jg inc inc adc jno ja daa inc push out xlat mov mov push mov sti jg outsl ror xchg ljmp sbb movsb xor jmp scas mov enter call inc (bad) hlt cmp push cmp les mov mov repz dec mov fidivr push push inc adc orl dec inc mov cmp mov xlat aas sub mov in jle push fstps sub addl sbb and arpl jg ja add cwtl dec pop cli or sub stos imul addl inc cltd mov xchg fsubs dec int add mov (bad) out and mov mov aam sub xchg xchg jle icebp xchg dec inc and mov lcall sti leave pop push and aas mov arpl inc add xchg push push je lods dec in xor inc les loopne imul movsb ja outsl push into aaa inc in sbb aad xchg xchg xchg daa inc push ret inc mov sbb jne xchg jmp xor mov inc sbb scas fdivrl gs dec in add les les mov add std add cld (bad) in fistp (bad) push movsb les add outsl jae dec ja pop mov cmp jae nop out clc lods jns mov (bad) icebp fsubp scas pop enter jge inc sub lods xchg inc adc mov mov mov in loop xorl into adc inc mov rorb cmp jno (bad) stos inc inc mov rorb dec gs je sbb popa xchg jb sub cmp pop inc (bad) fmul push add push lahf gs mov inc adc lret cli shrb ljmp mov pop inc sti mov mov aad inc jle mov (bad) (bad) or jecxz sub mov imul lret mov cli (bad) mov pop lock sub test mov fistp jl push inc pop push lret dec dec mov dec sub bound sahf push aas cmpsl out xlat arpl xchg shl test mov out ret fcompl in inc incl outsb adc lea movsb inc lret mov ss inc (bad) out jae jp dec das fstps push data16 mov mov jp cli mov inc std jmp icebp fistl mov dec pop dec xchg addl fwait rcl dec ja (bad) mov sbb aas test lahf into notl add dec dec popa mov jne daa pop (bad) xchg jb sti push cmp add (bad) bound addr16 daa xor rorb cmp mov push mov adc inc pop rol xchg sub les std scas cltd mov movsb xor sub pop pusha or cmovno push (bad) scas popf out mov inc mov add inc int sbb mov mov xor jecxz inc inc sbb mov test sub push ss in mov sub mov fsubs cmp and loope call lods out cmc dec inc dec dec insl cltd push in sub mov push dec mov dec inc add daa mov sub out push inc jb mov (bad) inc sarb mov inc cmp jecxz stos test push push (bad) mov cmp jecxz enter ljmp or and xchg inc scas cmp fwait (bad) cli inc jne das inc adc cmp add dec jo lahf jb xchg xor mov out push stos jno in inc stos inc aad ss pop jecxz pop inc scas inc test int (bad) jmp inc (bad) je sbb mov pushf (bad) jo pop (bad) (bad) xlat popa test roll movb jp ret and dec leave jl dec cmp out xor push dec push fistpl andl and aaa cltd jbe mov inc mov js mov mov arpl xor xor pop xchg mov into std inc dec addr16 add sbbb sbb ss inc pop xor mov jmp bound addr16 cmpsl inc sti or stc ljmp mov mov sbb xchg and inc mov xchg jbe lret push scas add es movb call mov fcompl mov (bad) or and inc stc dec fs nop in inc inc cmp adc inc adc ret and enter mov inc jo (bad) enter inc xor adc inc adc cs shll rol (bad) and fwait stos push dec icebp mov pusha loope and mov nop inc jp sbb inc pop loope repnz jg leave pop repnz inc mov cli mov jge cwtl iret movb gs pop and lcall es jmp inc push xor dec sbb sarl mov push mov out dec mov popa leave mov add enter jns (bad) outsl mov inc (bad) call clc testb test xchg out dec inc sub add (bad) aas ja sub dec sbb movsl and pushf cmpb testl mov mov repz inc inc pushf mov sub scas dec sub or rclb inc fmull jb or push inc js jg mov jbe add pop incl sbb fwait fwait inc add pushf sub add loopne pop pop add add imul dec fstps inc rolw bound (bad) mov (bad) popa dec adc cli das push push push cmpsl mov jae jmp xchg pusha push mov fs into mov inc out push pop add movsb inc jle jp cmpsl repnz mull out sbb leave jp cmp mov in outsl or mov faddl shr xchg js push adc sarl in jno scas cmp inc pop je (bad) xor jns cmp add xchg bound bound rcrb jo xchg xchg add into sti xchg jns arpl ja shll push sub imul cmp jb hlt adc dec in jns rolb hlt push sub mov xchg jo dec adc out jne cmp jae stos cwtl js mov sbb daa stc xor jb dec and fcom ret mov sub scas lock fild fistpll shlb loop sub mov dec sub repnz rorb cmp popf (bad) jmp mov adc sub imul mov mov pop daa cli cltd pop add pop mov jb push pop movsl and or push push fisubl xor push jge iret sub pop xchg add fdivs xor xor inc (bad) frstor mov popf test push xchg adc push pop fmuls out or iret mov dec push sbb dec dec mov cli and out xchg jp cmp inc jg or pop bound inc mov pop inc (bad) xchg xchg movsb mov jmp repz aaa xor inc sub (bad) jle xchg sub sub xchg xor sub (bad) das nop inc push aaa dec js or dec fsubrs mov rcl push lods ja inc cmp test lret leave push out pop sahf andb cmp mov lret fwait dec js mov xlat sub push (bad) xor mov pop outsl adcl orl frstor push cltd jl push inc mov adc inc (bad) mov pusha test stc jb mov aad ljmp js xor daa dec std push sbb cmp xchg xor movl insb cwtl dec lods cmp lret cmp jecxz and (bad) aad inc sbb inc push adc nop inc mov in sub xchg cmpsb and movsb leave mov dec inc loopne add daa jl sti sub pop add test sbb inc jecxz mov ja movsb loopne sub jp outsb ret andl mov push ret sub fsts movsl fbstp sbb cmp inc cmp mov js pushf lock jno inc mov cmp jae xor dec jae test nop out sub aad cmpsl pop dec das dec pop mov test or inc push mov addr16 in jns jge lds mov movsb loop cmp aas arpl pop outsb (bad) ds adc test inc cmp es adc inc mov test outsl aad mov mov mov icebp adc cmc dec jl cmp lds lret mov jns loope inc cwtl in aad sti or shl and mov xchg dec mov xor xchg inc fcoms in cmp cltd sub loopne movsl icebp gs jae shlb mov pop aad ret pop cmp jno inc push dec inc cmp push push sbb mov fucomip xor inc shl and fmul adc dec out mov popa loope cmp jne cmpsb fwait or inc call movsl insl cwtl fldenv inc das dec xchg lret inc stc cmpb sbb pop mov inc sahf inc pop sub lret mov fdivr fdiv test inc in (bad) or inc xor cmp int3 ret sar insb lods stos sbb mov pop sbb outsb xor in pop cmp jecxz dec jp mov fild pop js dec pop adc or dec inc adc adc daa push push or dec or test inc mov xchg sahf mov test mov xchg inc in clc xor add popa add inc gs ljmp xlat push push mov gs inc ficoml sub or jno into rclb sbb into lock (bad) orl sbb mov inc mov add jae hlt popa jo xchg inc inc xor push mov mov sbb test jge cmc flds mov clc xchg dec aas pop inc loopne pop addl mov mov fiadd mov push mov es pop loopne pop ret aam mov imul jge inc jl addb adc (bad) mov inc (bad) cwtl adc leave inc push sbb sahf addl xchg rcl inc out and stos (bad) lea pop cld imul addr16 mov mov in sahf movnti jo adc xchg std push mov push push dec mov jnp sbb sbb lcall or cltd les popf add lcall xchg repz xor shl inc mov jb xor mov dec push in mov inc sbb clc or scas inc jne or jl fimul mov adc jnp jp repz xchg repz add inc adc int3 pop cmpsb add mov lds xor inc aas push insb repnz cmp fwait aam add std out xchg xor pop les hlt dec adc ljmp fstps sbb std mov icebp in jl mov push lods jne lds lret mov push inc and mov or jge inc jmp xchg dec push push xor mov mov inc rol lods lcall cmp cs adc mov das into dec mov popf cmp inc out mov scas fisubl cmp int adc js pop outsb xchg inc inc lret mov mov pavgw inc rcrb imul imul xchg fbld sarl or in scas inc (bad) sub sar cmp sub vaddps inc xchg lods icebp out or add loope stos inc pop faddp or arpl dec dec jne inc insl mov add or sub xlat repz sub adc lret mov addr16 pop push and les mov into jb (bad) dec clc mov shr aas dec ljmp stos dec lret imul ficompl cmpsl int3 cmp cs sub mov adc ja (bad) push mov mov xchg rolb mov mov negl lds in pop cmp pusha jnp add cmovnp rcll xor and lahf dec ficomp inc mov inc mov xchg push mov add cmp int3 arpl rcr cli (bad) jno sbb or and sti aad dec in sahf add arpl jp mov inc sub cmc cli inc test sub push out xchg fnstcw adc fstpl outsl into les sub aad dec or insl test sbb js mov push inc int xchg loop xchg cmpsl pop stc sbb inc lds test pop data16 rclb sub into stos push sarl inc out (bad) imul and xchg iret aad lahf xchg dec mov bnd arpl mov add inc inc push and ds fcoms sub mov push pop or stos mov incl insb pop in movsl sbb inc inc out ss test xchg inc pushf fcomp inc (bad) sbb loopne mov mov pop dec push lret xor lds jno daa inc mov mov adc aam test inc popf cltd lret fsubrl outsb repnz fwait lock xlat into fist mov imul xchg pop cmp (bad) push (bad) inc mov jns int sub outsb xchg inc and lea ret dec call pop paddd sbb sbb fisttpll mov cmp popa enter ret jns mov fldenv mov dec mov sub jae mov imul (bad) lcall pop cmp es and sub inc xchg xlat adc push mov flds mov add jl (bad) aaa sub jmp fwait in mov jp mov xorl xor inc in scas dec jnp out roll (bad) int ret aam outsl lea (bad) sub push inc cmp cmp sub sar loop mov inc pop push ja push mov inc add xor fucom clc xchg or mov xor ja adc sbb xchg inc sti imul pop lret (bad) sbb inc push and mov int3 imul mov sub push pop push je fisubl std add xor insb enter scas rolb popa int jmp (bad) das dec inc cmp mov cmp push or fnstcw cmc popa sbb aas jmp sti shlb inc je dec (bad) cld cmp outsl jb faddl jge (bad) hlt jne xor dec push cmp and lea inc ret add and addb loopne sub insl adc inc fistpl mov mov mov jbe sahf (bad) dec jb pop sub push cmpsb sti add rolb andl pop xchg mov test js dec jle (bad) out sub dec sub or cmp mov decl add (bad) lods out dec jecxz xor pop into jae into js mov mov stos dec cs (bad) xchg lock daa arpl fs pusha inc inc dec push ja jmp (bad) mov dec mov push dec mov insl ret jge inc mov mov out inc ss das xchg push mov adc adc fwait test lcall xchg inc and sub popl ret mov enter bound fsubrs sub inc sub sub xchg mov cmp xor sbb mov pusha test into mov pop fildll cmp into cmp add imul jecxz cs out js aad mov movsl call fstps mov add push (bad) mov xchg lret fildl and sbb bound sub inc xchg push sub xchg jecxz mov stos jp pop sbb lock hlt je inc test aam mov les mov leave lds aaa cmp dec mov add imul fisttpll das mov popf xor pop (bad) xchg out (bad) inc jp pop sbb popf pop sti lret mov inc mov push bound repnz push xor ffreep fistpl icebp push fiaddl push sbb stos cmpsl inc lret ds aaa test fsubs cmc mov test jecxz sbb sub outsl cs mov sahf inc xchg dec pop cltd push test jne jno roll fnsave push mov rcl shrl mov or bnd dec mov push inc jecxz int3 arpl xor repnz sub jns inc sar lock lods call dec outsl pop mov loope sbb movsl flds test xor stc jmp mov add lcall mov mov xor jne sbb pop dec out rol cwtl ret int mov push and mov mov inc (bad) call jl and push in popa inc je xchg xchg outsl addb push inc xchg adc add inc data16 cmp lret jo mov mov jg xchg roll arpl add sub ret cmpb call addr16 xchg dec mov dec aas jne inc mov mov mov xchg push stos cmp dec jbe jg jae jne repz movsl std inc pop jae test adc mov and xchg mov popf or pop (bad) fadds sar mov mov shlb iret push inc out sbb push mov dec jo cli cmp repnz fbstp outsb mov dec pop xor xor inc push mov test cs mov insl pop mov fdivl (bad) cmp jecxz jo xchg push ss icebp dec pmaddwd xor inc xor adc mov xor icebp fwait stos and pop loope jecxz push out xor mov and jg pop xchg mov pop push movb mov jge xchg sarb popf sub sbb ret out sahf pop or cmp push inc lds out popf scas outsb das dec mov fbld inc je loopne sti outsb xlat sbb or ja sub rcll mov mov mov imul jns or pop fildl push loop ret lcall jo inc shlb sbb ret rorl and mov xor lcall icebp dec inc cmpsl mov xor inc lods sub aam inc fidivrl pop push jo and sbb push mov pop push lret imul mov inc mov je movaps or sub shlb lahf jo (bad) dec fiadd inc xor inc outsl cmc sbb and mov addr16 pusha pop (bad) inc push xchg aaa bound andl iret push xchg scas inc cmc push jg movsl mov movsb divb mov push push lret popa inc xchg stc cmp dec pop in dec add push xchg and std dec pop fwait inc mov lock inc cmp pop xor sti imul sbb dec dec fcompl cld popl (bad) ret aam xchg add and outsl scas and inc cmc xchg rcl adc movsb out jae add daa loope push cmpsb ds scas inc cmp pushl and in xor pop fcomps outsb jg (bad) (bad) xchg push rcl in inc outsl (bad) lret inc push sub bound roll out dec pusha inc jmp loope dec or pop ret dec pop pop and (bad) dec or lcall mov sbb and daa add xor xor stos ficom xor sub jnp clc lods sbb push xchg push sbb aas (bad) xlat mov mov adc (bad) in dec mov stos mov dec je jne and lahf pop lahf and fsub mov mov (bad) xor pusha cs mov into jae idivb jecxz dec inc sub xabort cli aaa xlat or leave rclb lods (bad) fbld sbb stc pop sti dec stos mov adc rorb stc inc fmuls imul add inc pop sarb imul fsubrs movl fwait (bad) movsl dec mov or in mov dec cltd inc repnz insb pop sub mov push call mov mov inc mov lahf xchg cli stos push fwait mov inc ljmp nop mov (bad) std inc inc cmp xor dec sub mov in add mov mov (bad) ret pop jb scas jmp inc jl and xchg mov xchg pop out or cmp outsl xor inc rol in jns popl xchg adc mov je ret add adc push jno es jle adc out xchg nop sti leave arpl les ljmp int aad lea xchg jno pop pop xchg dec add mov cmp xchg sbb push inc sub sbb sub pop jbe cmpl jge inc imul and cld mov xchg shll lods fsubs lahf popa dec lret jb mov stos outsb mov or ds ret and cmp adc into or in push xchg fs std jle or push push add add faddl jno cmpsb roll (bad) or ret ds (bad) sub leave jne sbb lcall adcl xchg and lea jmp pop in outsl std imul xchg lcall cmp add mov add or mov jo inc (bad) sub ljmp scas rcrl outsl and push cmp aad out mov sbb or jbe es aam mov (bad) arpl dec cmpsl fistl sbb test or repz dec cmpsl arpl mov cs pop add lret push shll sub into lock sub xchg cmc inc or mov aam add cmp sub xlat repnz add ja xchg inc and sub jmp dec sub dec scas je and pop xchg insb mov scas and bound fdivrs pop mov (bad) jno cmp dec inc push das xchg aad cmc jle stos pop idivl (bad) jnp mov mov mov int3 add test sbb adc movsl out (bad) fldl push and mov cmpsb je adc mov push mov mov xchg inc scas (bad) or js or addr16 push cmp pop ja dec mov cltd outsb inc enter xor adc adc fcmovne (bad) repnz je mov pop inc lods (bad) cli outsb inc cmpsl jge jnp nop jecxz loopne mov jb mov inc dec movsb adc jecxz mov stos aaa push inc jge mov test jno stos cmp scas dec inc cmp enter push pop and fild push test insl inc jl push jmp inc add js and int in repz (bad) jb sub negl add int3 aaa aas inc inc gs les and mov lret adc jno (bad) mov xchg xor sub mov addr16 jbe ret push scas xor xchg repz mov inc xchg nop and pushf inc push mov jecxz inc out xor cmp sbb pop xlat mov mov int3 xchg xchg ror imul sub dec inc (bad) mov inc std inc cmpsb ja stos xor inc or xlat out out mov push outsb jg fcoml std inc cmpsl ljmp mov movsb inc cld ss fwait test mov pushl addr16 mov stos lret stc je stos subl jecxz jns xchg add mov sti push pop adc inc imul dec xlat dec pop adc (bad) stos adc daa inc push (bad) sarb imul inc es (bad) rcll and mov mov push out push dec mov stc ja insb or inc push dec (bad) pushf adc sahf popf or push push stos sub inc vmovaps jmp mov pop in ret lock mov lahf mov add cmp cwtl sar add cmpsl sti lods stos inc lds lea mov movsl push mov gs inc aas mov xchg fsin ret push mov mov bound iret jne push inc (bad) jae les in add pushf call fmuls loope push movsl cmp adc (bad) das aaa push inc sbb dec addr16 (bad) mov or push xor dec aas pushf hlt dec jno jp les insb fbstp or mov mov lds inc inc ret enter mov fcoms adc icebp test dec cmp aad push sub pop fistpll push mov popf or add mov outsl fstpt lret rcl inc cmp or movsl stos in jp in sbb fidivrl insl call xchg std or ret (bad) cld xchg inc dec mov xchg pop int3 or movsb ds fwait jb push lahf icebp data16 dec and mov pusha jb stos inc scas icebp push out fild (bad) pop inc inc push sub stos aas pop mov sti dec movsl dec cmp dec sarb es or test xchg inc or loopne sbbl mov enter out (bad) mov aaa leave pop xor or mov xlat add ror adc lock push in pop mov mov push sti (bad) dec and add jg (bad) cmpsl dec push into jl pop jb lcall mov mov jle jg stc adc xchg xchg mov push dec lcall sub scas punpckhbw sbb jno int3 orl dec sub sub daa adc imul in fwait sti stc movsl imul inc into dec lcall push push popa loop out pop push adc addr16 pop test mov outsl inc lea mov dec or icebp jnp sahf ret sub add inc sti pop dec jecxz xchg loop loop sarl pop loop gs sub adc hlt outsb test add cmp cmp aam jno into mov test jne cmp adc loope sub jge inc (bad) les cmpsw sub inc les push (bad) add sti lods aaa sub int3 mov lds (bad) add fstpt push (bad) pusha mov pop mov inc outsb js in loope sar push push int jmp popf cmp std aad cmc pusha push lcall jae xor inc (bad) into lret cwtl ret dec adc lret ss pop outsl pop push add pop ficompl loope or dec imul mov imul jl xchg subl ljmp stos and xchg lds mov bound add inc ret arpl in imul sub fidiv jnp jnp aaa cmc jbe inc pop pusha mov insl (bad) jge add xchg rorl popf std push fwait inc push xchg addr16 pop sub adc rcl adc fisubrl jecxz movsb stos lret cwtl xchg inc mov cs xchg decb inc or xchg mov inc push jmp ffreep jle sub inc dec sub or cmp sub leave imul dec xchg rorl stos leave and jg in pushf and fildl inc insb xor mov das cmp sbb jns inc outsb popa push push inc and enter (bad) jmp sub xchg xorl dec outsl dec and cmpb sub and in cmp xchg add aad pop adc push sbb or pop mov mov add jns aad jno inc push in repnz repz jno cmp adc les push add in cmp das sbb aad data16 and imul inc and inc pop (bad) xor and sahf xchg jmp jp jg iret (bad) out pop lods pop xchg cs jl or dec aaa dec cmp inc rcll xchg cmp icebp add jns jb ja fistl sti mov xchg repz jge mov fiaddl pusha dec outsl leave test sub inc jle jbe mov jns inc inc fucomi dec mov push out jecxz dec ss (bad) das pop mov push (bad) outsl sub ljmp flds out inc cmp inc push push mov lods add mov ja and adc xchg sub cs insl popf or adc test and ret mov rorl (bad) int3 fldl2e cwtl add mov aad jae cmp sub jge add add popa lods jb inc xor (bad) hlt xor pop out add in lea popa mov pop (bad) popa fcomp movsl cld movsb lds (bad) push or ret sbb rorb addr16 data16 xchg mov ds mov lods mov adc ljmp mov pop sbb andb adc cmpb cwtl lahf jae xchg dec lret sbb scas dec aad pop lret pop inc xor repz adc jns push sti xchg inc mov fsub cli ja dec push sbb or (bad) and scas add jge add adc cwtl mov lds les jmp inc jbe fildll inc cltd sub push popa or inc (bad) cmc xchg cmpsl mov (bad) mov (bad) fs adc jo lea push insb icebp inc pop loop mov pushf aaa andl pop insl sbb pop push adc cmp es inc (bad) cmp negl push jo sub inc sbb test ret add cmp mov mov fnstsw ljmp dec dec jnp shl dec dec mov sarb or sub fs arpl ret inc lret mov cmp mov jae aad push out inc adc into inc roll scas out mov repnz insl fcmovnb stos dec outsl aaa push icebp jno mov cmp cli push adc shrb cmp xor in enter mov lea fisttp mov dec jecxz xor jno enter or add sub jecxz imul or outsl stos dec pop add dec bound mov sti adcl sarl mov jno mov push fcompl mov addr16 enter dec push sub (bad) std xor (bad) or and adc pop mov scas sahf out sub les jp dec inc xor (bad) mov xor xor (bad) cltd jo dec sub push (bad) mull and mov loopne lods inc stos jl jmp pop mov push dec stos xorl js sub gs das dec or jmp es pusha mov jge daa cmpsb clc add gs and xor std mov sub xchg into jb (bad) aaa push (bad) mov sub mov inc sub je cmp inc push push (bad) sub xchg add leave xor pop xchg push xor lea xchg mov push dec jno mov xor dec lock dec pop decb adc (bad) int3 xor out add add fidiv imul adc das loope dec or ja pop and jle lea jae jae scas mov dec shll add mov xor js imul sbb das mov mov inc repnz dec repz inc mov arpl add mov mov xchg cmp sarl popa loope test sub xchg adc jo mov mov adc loope dec add push mov adc inc lret enter push cli and clc (bad) mov inc add pop jl bound or and adc rcrl ret rcrl iret and or fiadd lock add cmp dec stos cmp dec popa fs dec mov push pushf repz out sbb stc xor pop sbb jecxz or inc cmc frstpm(287 inc dec lods cwtl je sub outsl pop and mov cltd add add xchg sti mov ja inc jno jl xor adc or gs inc jb xchg cmp call jmp xchg imul or sub dec jne aam xor ja inc nop mov pop jg inc and pop xchg inc cltd dec jbe in xchg sbb cmp mov pop inc dec xchg add mov inc mov cmp push add jge push les nop xor lea in (bad) stc popa in jecxz lret ficom test xchg inc mov loope cmpl cmp pop mov addr16 jl adc icebp and dec in hlt pop sub jo enter mov adc xlat fadds cmp push pushf inc dec pop popf push push jmp xchg leave add push inc gs je (bad) test or inc add xchg mov jno xchg movsl rclb xchg mov mov popf inc mov dec xor push cmp lock pop jmp add repz inc mov and shlb out shlb (bad) in (bad) pop aaa fwait pop and icebp push adc lret mov push repnz add rclb arpl fwait cmp sti and xor jne xor pop inc xor cs xchg (bad) fwait add cmp mov in lds shl outsb (bad) mov mov stos cmpsl gs adc xchg pop in inc js push jne (bad) cmp in (bad) imul lret and idiv into pop cmp leave jmp movb inc mov dec or dec dec clc push xor adc mov push add sbb pop sub popa mov adc (bad) pop push mov add lahf popa test and aaa insl ret test fnstsw in outsl mov push push xor int3 stos popa push push jmp mov push pop adc in add xor and test xor shll dec repz and mov sti dec cltd and push jmp inc push pusha inc xor into dec add push loop mov rcrl mov int3 mov sub or and sub push (bad) rorl clc push mov aas jns adc rclb icebp ja adc fnstenv out jg adc sbb push out stc jo jecxz std into loopne and inc imul sbb cmp aam sub mov ret imul mov xor push enter aad movb (bad) and daa xchg das stos fcmovb aas jo lds mov sahf pusha jecxz pop inc cwtl int xchg lock mov sub lds jo in cmp in mov xlat mov mov mov adc lahf inc add add into fisttpll sahf mov adc push xchg ret add xchg mov push adc nop hlt add es or cmp sub sub xor cmp pop or jbe in les inc or (bad) fxtract mov dec cmp adc dec imul mov loopne imull inc (bad) punpckhwd pop and adc aad pop icebp imul add mov dec inc lods clc mov push dec mov pop jns mov lds ds mov jbe test lods (bad) or outsl addb jge imul xor cmp mov inc aaa icebp rolb and ret lret sub (bad) je jle test repnz bound fcompl xchg loopne sub mov outsb pop lods jp jge imulb or and jns ds dec sub sub aas data16 xor cmp int3 pop (bad) inc sti mov push pop decb cltd cmpxchg8b (bad) int3 pop add hlt cli cmp das mov mov mov fiadd int3 repz popf sub into pop cmp push dec int jg ficom mov push cmp cmp test sahf fucomi sub add xchg push push inc (bad) mov add jbe daa mov daa dec sahf or dec cli lret (bad) aaa cmp inc mov cmp stos (bad) imul fwait inc xchg sarb mov push push inc arpl adc imul mov out jno mov inc push addr16 aas out inc push xor add and bound je cmpsb inc push (bad) out (bad) out insb dec mov or leave add das push inc clc ffree jmp out imul xor or add sbb push jbe arpl mov sbb pop inc dec push cmp dec pop pop sub sqrtps inc leave cld cmp out adc dec sub inc fbstp push in psubb inc and xor stos adc cmp orl lahf inc ljmp xor rolb jp mov and mov nop popf pop pop out cmp pop pop jle jne push mov mov inc lock mul mov dec pushf and inc pop or aas divl inc ror mov fsub add int3 in mov xor inc jo sub mov iret jns loopne xchg jne adc dec or sub jno popa cmp mov inc shl pop clc and aas jne iret push xchg pop push gs loop ljmp pop xchg inc pop sbb sahf cmpsb pop cmpsl into xlat nop adc std inc test sub fiaddl test xor cmovs ds (bad) dec or ret jg fisttpl dec mov inc pop enter loopne das inc xchg (bad) out adc jmp inc js pop pushf mov aad test add mov leave xchg dec mov jo cwtl inc cltd and repz bound mov out xchg test adc inc sub out push int or mov jae jb jge enter jb push stos icebp cld loopne sub fstl sahf push mov xchg sbb repnz (bad) aam add enter into out aaa xor and add push rcrl inc dec inc push adc sbb inc imul jbe jb lahf test push lahf inc arpl inc pop cld sbb sub mov (bad) je (bad) in lea sti test sbb mov outsl loop rolb jns test mull dec dec dec jae cmp movsb into test add or (bad) ja cmp adc outsb call adc sti out jne arpl ficompl jecxz mov lcall fcomip and mov or cli mov ret fcmovne push call lahf rcll mov imul popf pop loop jnp cwtl cmp stos jp (bad) mov cmp push pushf xor aaa test fistpll sbb shrb call (bad) fstpt arpl sbb fstps inc inc sti mov icebp addr16 sti pusha (bad) enter jmp xlat mov ss mov jne inc sub (bad) ficompl add cmc cmp push fsubrp and arpl xchg dec daa psubb dec lds ss loop mov icebp add ficomp mov lret pop cmpsb dec sub mov mov pushl inc int3 add mov cli push sub les cmpsl idiv out push aaa shlb sub shlb push (bad) rorl stos and leave lcall push push cs xor bswap or fldl fs xchg pop inc cltd mov lret outsl sub push jae pop stos push push mov inc cli (bad) ret jne cmpl cwtl bound push mov and inc insl imul mov stos adc cmpsl (bad) lea ret push stos pop les dec into add lds insl aas xchg dec push int3 ljmp sub pop cmpl sub stos cmc ljmp adc ja sub mov push inc adc cmpsl shrl add in fimull inc cld mov bound or ss mov push jge sub xchg push loope mov xchg popf sub xchg fldt push sarl sub (bad) and repz or jo inc ss aaa adc and add pop push dec fmull mov mov add cmp dec shl dec test and xchg ret in xor lock mov inc push lret sub test into rorl add sub bound jecxz pop sti ljmp ficomp mov adc xor xlat push sarl pop mov pop cli out mov pop movsb repnz push and sbb add add xor dec nop inc push insb push loope add inc cmc add dec push stc or loope das xlat dec dec jnp xchg inc mov ja mov jmp or stc push push push out mov sub inc in (bad) repnz (bad) push sub insb fbld jne push stos push add sub jmp gs xor subb std jge jecxz out (bad) jns scas pop es jbe push xchg mov test sbb arpl in push pushf outsb sub or (bad) loop sahf inc js mov and push xlat dec mov mov je test (bad) movsb fadds inc add inc jmp sub (bad) loopne repz sarb cli sub aas movlhps pop fwait ret inc loope icebp push and jae inc sub mov loopne push inc push iret ss test xchg inc jp arpl dec mov cld add mov lock mov inc scas ss daa cmp mov fimull or out ret inc mov test aaa xchg push enter dec jge fsubrs cs lea fadd loope mov inc dec sub in cmp adc (bad) mov aad imulb lock xchg das inc int3 cmpsb sahf cmc jae pop inc mov inc arpl pop jle je mov cs add mov or lock outsb mov xchg mov aaa nop adc test pop repz jge mov mov mov jecxz out lea dec inc in fwait sub push dec jp int3 arpl cmp out dec inc jl adc int3 loope shll lods bound inc (bad) ret mov lcall mov xchg jecxz fst inc insb (bad) xchg je aam adc pop test push dec jle jne cmp xor shr cmp mov jl adc aam push or cmpl push cmpsb sub cmp jge xor enter mov push sub test inc fmull mov jl enter jo mov les mov mov add nop jne les sub pop pop outsb ret nop fcmovnb imull lods jp out dec xchg cmp adc inc mov xlat fdivrs mov lea adc push (bad) ficompl add fs ret rclb scas pop rolb inc mov adc jb aaa pop inc inc in fldl and jne inc lahf (bad) adc aaa lea inc sub dec fist push (bad) sbb inc pop test imul lods (bad) adc movsb xchg je cmp push repz push sbb lcall sbb add cmp sbb cmp push push repnz enter inc data16 ja leave cld mov jae lods inc cmp fdivs dec bound jp inc push (bad) push insb fiadd add mov sarb inc cmc cmp addr16 jae mov test cmp adc enter popa push (bad) xor fcmovnb bound dec pop xchg sets sbb dec add pop inc cwtl or xchg mov cmc or push sbb xchg repz pusha (bad) adcl call loopne inc bound sub inc jbe (bad) dec push pusha inc push cmp popf inc fwait in push xchg add cltd dec pop push scas inc add lahf adc arpl (bad) loope dec ficompl push xchg dec pop imul adcl adc les add int and stc inc fbld xchg xor inc jmp push lock js jnp lds call in xor mulb dec inc cmp lds dec loopne xchg fldt gs lods scas adc jo (bad) push rcl gs inc mov mov lret lock (bad) into movups cwtl sub inc ret mov mov adc xor push roll mov add mov cmp add mov (bad) je mov xchg xchg ja ljmp iret dec sti mov cld ds jp loopne pop and jae sbb out jle int3 into (bad) jecxz ret (bad) sbb ret mov sbb mov aaa or and rcll mov popf or lods pusha inc pop lret imul inc aad jmp dec and out mov popf push in sbbl lods inc xchg rclb mov or inc movsb mov test pop adc inc and lds inc rorl mov mov inc mov sub xchg mov jmp cmc mov cwtl adcl lock aam adc sbb mov insl test xor jmp sbb add cld pop and mov sti orl sbb inc jl push sbb sub pop mov mov and (bad) popf aas inc movsl xor mov inc mov arpl xlat cwtl int3 pop or jns sbb in sbb rclb push mov jmp mov jl popa sub inc push mov dec pop (bad) cmp push fidivrl inc push lahf xchg ss ds push stos mov lock rcll cld inc and mov in add xchg pop adc inc movsl and add lea fistpll adc into inc nop xor lret dec inc mov inc sbb popf mov imul out pop (bad) (bad) inc sub or adc and xor repnz and enter int push cld (bad) sbb inc mov test repnz stos dec dec sti add cmp int rol push push scas inc es inc mov push (bad) movsb (bad) or ficomp and loop dec loope xor insl push imul xorl outsb scas mov fstpl xor popf pop push cmp enter jmp sbb push dec lods cmp inc add add and das or movsb xor inc add arpl xchg cmpsl sbb test es xlat jp sub jbe std rcrb jg pushf lods inc gs in xchg sub push pop ffreep mov ja inc shrb jmp fs inc inc push push xchg inc mov arpl jae adc into outsb mov mov fcom dec mov pop cmp lcall inc xchg xchg adc rorl (bad) push or (bad) push dec inc jecxz sbb mov test lds jp mov jbe (bad) aam xchg pop inc mov ds aad pop xlat icebp les xchg cli addl push insb repz lret and adc pusha jno ljmp dec pop push pop lods out cmp je lea jecxz pop cmp pop add pop xlat push outsb push test mov sbb jmp movsb popa jb xchg cmp push ret and pop mov inc fldt push inc pop mov into pop outsl sub hlt xor push mov je lds and jno mov sahf (bad) jecxz adc pop insl outsl jne insl repz cmp or in popf clc decl mov aas sub lea movsb inc mov push mov inc mov pop dec mov inc adc out jnp jmp cmp sub mov je getsec fisubr add cmp xchg les lret pop mov sbb cmpsb add popa sbb ds mov dec pop sub sahf push dec dec pop fdivl ja xor or lret jne xchg mov fs lahf push mov xor add aas cmp inc dec cmp cmpsb decl sbb xchg xor inc xor sbb dec ja sti ret xchg mov jne dec jb mov aam int jmp push outsl add cltd sub and push aam or cmp cmp arpl xchg jb shll mull ret cmp mov push fwait and sub cmp imul stc aaa neg popa mov loope ss jl xchg lcall outsb in hlt dec mov cmp mov xchg sbb stos stos inc data16 push jns cwtl cwtl pop dec jo push into jae lods out leave adcl repz lret pop sub arpl pop xchg cmp dec rcrl push dec jbe sub cmpl dec lea (bad) push jo iret sub arpl js sahf daa adc xchg movsl inc fcomip xchg or adc push cmpsl test les cmc push push jecxz adc cmp into stc sub pushf push int push inc stos fiaddl dec aaa or sbb pop jge mov fdivrl ret out (bad) (bad) in pop out or jge inc jecxz mov jmp in mov outsl daa xchg mov (bad) pop testb subl ficomp jmp dec ds fildll int3 mov popf xchg cmp decb popf sahf lcall cwtl stos iret or test inc push (bad) dec (bad) into xlat (bad) add add and insb movsb push and or or rcrb fucomip arpl cwtl frstor inc fdivp out aad pop xchg repnz lahf ljmp mov js sub xor rcll push std cwtl iret in aaa adc (bad) fisubr lods lret lds mov xchg jb test xchg mov lods sbb mov mov (bad) sub pop sti popa lret add and push es mov jne adc (bad) stos dec cli pop xor fwait sub lods jge dec es mov enter (bad) dec mov inc lods add mov hlt pop inc js mov lret bound je ficompl or cmp lock jno sub std int3 cwtl inc cld out ret jmp stc xchg adc cltd fisubl jnp pop adc jne and cltd dec sub loopne cli sub out aas add and push mov mov scas adc repz cmpsl dec (bad) xchg xor jecxz ja jmp inc cli scas ret jmp jb add adc adc aad pop push jmp in leave sbb pop inc add (bad) jecxz mov shr cmp notb add or pop sub std and pop sub hlt fisubl cmp iret cmc push dec dec lods adc xchg call inc mov inc test mov inc es test imul in mov push inc arpl outsl add lods pop mov adc jecxz test pop ret add cmp fdivrs inc into or in adc test leave push sbb and mov sub jbe push nop orps inc cmpsb cmp mov inc fisttpll dec (bad) pop xor lea and lock xchg fisttpl dec jns inc cwtl mov add and or ja dec mov dec dec in arpl cli sub mov inc repz icebp inc ljmp mov inc std and lahf inc (bad) push int cmpsb mov cmp sahf mov (bad) mov mov jno andl fsts jae inc mov add jmp movsl sarb ss scas dec dec enter test hlt cmpsb pop into adc cmpsw pop xchg repnz int in shlb xor fild lds adc mov or ret mov add inc std lret jp cli pop jno imul movsl inc pop push mov xor mov or out inc notl inc adc arpl jg mov sub sub adc inc mov mov iret sub pop dec or fmull loopne cli aaa sub arpl popf push mov sbbl sub into insb sub int loope jg jmp imul in cmp (bad) ja ljmp daa inc stos aaa sub fmul fistpll fstps xchg shlb push outsl fildll pop inc mov int3 das sub pop pushf hlt push xchg out call outsb enter ror jne add jae dec push sub inc adc push sahf fiadd adc sar lret or imul orl mov mov fistpl xchg inc xor sub (bad) xor (bad) out arpl pop fcomi es cmp pop inc ret movsl pop fldt inc jb mov push mov mov and les or xchg dec or aas out inc (bad) jb adc in push inc push (bad) mov inc adc andl aaa mov scas dec mov jnp xchg test outsl xchg and sbb jg fchs jecxz add dec add jg enter sub sub dec push jno cli popa jae and fsubs mov ret out mov int or scas gs mov outsb std repz or adc xor lea test jecxz mov aas inc push scas sarl inc std inc cli jmp sti push hlt mov pushl dec ret push cmc xor push inc sarl inc add insl pop dec xchg dec sbb arpl dec dec sbb ds mov dec pop dec test mov push int3 xor xchg add sub or mov add push cmp dec mov jecxz sbb sub xchg jae or (bad) cmp pop mov bound inc xchg or sbb sub fiadd mov and fdivrs scas cmp jo cltd (bad) add (bad) ja stc stos dec scas inc mov push sub addl int3 inc sbb leave xchg test lret incl adc testb ss add sbb ret sti push les mov jae cmp push mov lcall lret push aaa inc movsl aas sub xor arpl dec mov add sahf cmpsb inc mov je jb jge mov inc jo dec add xor fs mov sti popa inc rorl lcall mov push xchg in js cmc pusha outsl std ficompl mov mov enter cwtl sub mov (bad) sti popf inc and pusha (bad) jb repz (bad) iret adc sar and jno stc push addb mov and inc pop dec pop mov repz jb adc out (bad) and mov dec mov imul push fwait mov (bad) sub mov call ss bound mov inc pop popf das mov pusha jno cltd mov loope inc rclb mov popa sub fnstenv pushf or jmp mov enter lods sbb out arpl movsw dec sbb into insl jl int3 dec inc inc xor lahf cmpsb jae (bad) fsubs fsub pop mov out test fnstcw inc sbb add xchg outsb xchg (bad) xor jb cmp inc dec cmp inc std rorb lahf add inc jns sbb inc jbe inc sub ret mov mov mov or jno xchg scas or push pop incl jg push xchg adc into (bad) mov xchg ret pop cmp xchg lock pop hlt iret jbe (bad) jge add shll cmp fldl leave jmp movl jle sbbb inc out fsubrl jl (bad) cs jbe pushf adc movsl out mov mov stc std out les inc outsl jg jbe cmp jae mov lcall xor push mov adc pusha sub adc ljmp xchg mov scas inc (bad) dec jmp pop pop sub (bad) and rcr das dec mov xor add lcall and sbb cmp cwtl mov js movsl cltd ret sbb jne cmc dec stos sub out mov or sub ljmp sub cli adc rcl or int sbb xor mov push inc push dec mov cltd test mov dec push test fwait mov aas ds and test dec cmp inc jae ret adcl pop int3 (bad) and and or inc lret jo sub inc arpl (bad) jg adc or xchg add stos jp mov inc popa adc cmc mov addl jnp shll inc or ret and or loop cmp mov pop insl mov jl cltd xchg and mov sbb dec rcrl mov arpl mov in xlat sub sub shlb mov cmp cmp movsb andb rcll pushf pop adc xchg dec lds xor orl inc mov lret dec fiaddl add (bad) cmp fwait insb inc mov or adc inc aam mov sub sub aam ret lcall xor test in call sbb and lods pop sbb cwtl repz adc scas add pop test push xor pusha add cmp mov mov xor adcl aad popa mov das ss mov push sbb outsb dec fsubs mov push add (bad) aas mov or mov pusha push pop stos andl jge idivb mov popa iret xchg cmpsl add push pop leave addl je adc jbe xor shll inc outsl cmc dec sbb xchg add mov jnp push dec xor inc imul inc jns repnz das push clc cld mov xchg cs inc stos adc ds into icebp push inc push iret fstps call xor dec sub outsl xchg mov bound add push inc jns fldcw push test xchg out outsl push xor adc lea loop jae xor xor pop pusha test inc xchg fxch (bad) sub inc inc dec mov ret in inc stos ficoml mov mov cmp add push (bad) mov and add (bad) mov sarl mov gs ret sti xchg idivl rorl les pop int inc aas cmpsb jo mov cmp sub cmp rcll dec fsubrl push dec or out jp push ljmp enter ret sub sbb inc jg push adc cmp nop ja ds gs push inc pop add loop insb push and subl adc sub loop pop pusha lods ja add les outsb shl push scas inc sub lcall pop inc mov shlb sbb pop lcall xchg mov mov or mov add xchg fildl lret popf cld jnp cmc les add loopne mov xor inc inc arpl int pop jae popl or stos pop xor xor icebp sbbw jno inc sahf add cmp mov enter mov jl pop xchg mov xchg mov insb mov enter xor mov imull arpl inc into mov and xor mov (bad) mov xchg jl pop or sbb xchg pop xchg cltd jmp inc jbe mov repnz (bad) arpl inc jge mov lcall dec mov add cmp loop icebp cmc inc inc lcall fs (bad) imul je xchg mov sub ja mov cmp cmp pop lret cmp jle iret (bad) imul pop sub mov vmwrite pop or lcall and pop ret ret bound inc dec out xchg cmpsb (bad) xchg fbstp pop inc mov cmp inc cmpb ret test jo inc cld test xchg rcll adc subl inc rol in inc push pusha test sub dec iret add js sar xor inc cwtl shr mov push or xchg loop mov add test je ret sub add imul ret pushf in sahf sbb inc xchg lret mov inc cmp inc sub ss test shlb push jle add ret xchg mov addr16 fldl push push hlt xor push daa add or testb cli mov sahf inc adc mov fxch pop test mov inc add dec pusha inc add or loop and ret push push into cmpsb ja jecxz shll out lds mov and and xchg add lods sbb or push cmp inc inc xlat outsb scas test inc mov loope addl fisub adcb into push push add daa pushf ret out inc outsb not int les xchg (bad) push out inc jno inc (bad) adc inc (bad) or sbb ficoml mov inc cmp stos ljmp jmp cmp xor adc in inc call inc dec mov addr16 ficomp cmp add ds cmc iret cwtl or and add js sti sub push xor (bad) jl inc jnp (bad) or inc test cmp mov push push ret pop pop lea dec mov push bound push inc sub hlt addb mov and mov loop ret add sub cmp fiadd sbb xor (bad) inc xchg cmp adc das push (bad) sub push sub cmc and fwait repnz xchg inc or pop inc pop cltd cli push gs dec out ror inc jae inc sahf pop xchg adc ret popf addr16 fild mov sbb or mov push (bad) enter inc sub imul inc int or sarb cmp fbstp mov shl aas adc xchg call sub mov rorb dec add push std in jo fwait das jl sub fldenv mov out fildll mov js xor (bad) cmp leave adc ljmp dec mov sub mov insb cmp pop mov sub mov jne push (bad) testl call sub inc popa pop mov inc push es data16 inc add xchg fsubs dec popa (bad) adc pusha fild (bad) (bad) int mov jecxz fwait inc stos xor cs rcl cmp out int dec and dec stos cs fnsave outsb push inc (bad) dec ss testb dec or adc mov pop push icebp mov in xor mov sub push icebp pop and les inc shrb lock push xor add xor decb sub iret clc in inc test adc mov push fnstsw lds loope xchg fiadd xor cmp lea pop repnz sbb add inc mov lea xchg mov inc or addl or lret push (bad) xor outsb test mov mov sub push jg jne jno jecxz lcall out aad daa sbb inc (bad) loope movsb lods stc add rcr push jne xor popf lods cmp inc jae mov sub outsl xor test lods ret lods sub sub add ret pop cmpsb out cmp mov rcrl movb dec xor inc push push push and xchg add (bad) hlt push call lahf ret inc dec adc rolb lret xchg sub sti jno lcall inc in mov loop fcoml (bad) fisttpll ret dec push sub mov scas dec mov (bad) loop and push (bad) rolb jae add adc cmpsl dec sbb add mov cmp push lods or add mov cmp fistpll insl push mov push inc push xor enter das call jp inc pop add push icebp cs inc mov xchg inc push inc mov and inc lret or mov invd std add dec ret sub lcall inc push xchg push insb dec (bad) (bad) push orl (bad) sub dec rcll sub out enter push imul stos xor cmp inc lds mov jle and inc pop sub sub test mov and fwait pop dec pop testb jns imul pusha jbe adc movsb rcll inc aas and and cmp xchg in out sub cld rol mov (bad) enter ret push jg jle xchg ret and push xchg mov sub xchg sti stos mov mov aas in xor mov xchg inc jae cs ljmp loope bound cmpsb popa scas lret ja popf dec je inc lds in xor mov inc jle lret push adc inc fwait pusha ficompl jbe mov mov and add push movsl jp mov call inc push xor cld sub dec jecxz sbb imul addr16 aam add or fistpl repnz ret dec push cmc push jge xchg (bad) lds add cmp fildll push jo enter dec repz loopne jmp dec out add aad cmpsl ss and insl inc or push push mov pop bnd popf mov out pop sub sub outsb hlt arpl mov pusha daa data16 dec cltd je inc mov mov mov mov inc or ljmp lock adc cmp inc mov mov orb imul pop aas inc pop insl cmp repnz sub jo xor jle scas inc cmp cmp inc ds (bad) jne imul xchg gs jmp jo cwtl lea mov xchg sbb fsubrl inc cmp pop ficomp cmp dec xor (bad) je sbb inc sub aad sub cmp xchg push cmp mov addl xchg xor push pop jmp or push pop jl sahf outsl sbb xor or dec rorl lea hlt or cmp xor stos sti xchg add push xor loopne scas mov adc repz adcb arpl adc movsb mov add pop dec gs nop or aaa add (bad) jae xor push mov xor out sbb adc push and adc test add mov fildl mov inc push xchg repz pusha mov sub aas addr16 mov aad loopne je mov inc inc pusha or jecxz mov mov add stos stc aam inc movsb outsb (bad) inc xchg mov or enter addr16 mov fcompl jno inc imul je xor insl negb inc call enter int3 dec stos ret inc fs loop jne repz aam cmpsb loop cmp aaa pop mov jle bound and push test setbe push divb sbb je jecxz lods lahf cmp or jmp (bad) push mov adc ret repz add scas xor xchg stc lods mov mov into cmp outsb mov and les mov sbb mov xlat ss lds sar or sub mov cli push movsb lds push jae dec mov add push sub push add pop shl mov pop outsb fist ret sarb arpl inc subl pop je push outsl xor dec hlt fmull inc inc jnp dec inc pop jmp xchg jb scas jle dec out adcl inc inc out fcmovbe popf push dec inc cmc inc add (bad) fadd daa xchg push xor pop gs cmp mov cmp jge flds (bad) dec dec xchg sbb in test rcr test cmc adc mov sbb push push dec jns je rcl bound inc inc xchg push cmpsb cmp std dec jecxz push pop lock inc adc add and pop rolb lods daa sbb pushl mov dec fadds xor cwtl jmp sahf out mov push orl mov mov mov pop outsl add inc mov jmp jp dec xchg jl push sub incl loopne mov push dec sbb aaa insl or and rcrl pop in js mov inc daa sub sub jns inc add imul test mov insb mov cmpsl sbb sahf xchg test and pop cmp mov bnd lock adc test adc xchg lods cltd imull xchg push jae into popl inc in cmp lea aad mov dec xor inc inc mov mov dec sub imul popa mov (bad) adc pop add cmp les mov insl xchg adc and jmp sahf ljmp inc and outsl mov mov iret (bad) (bad) cmpsl mov inc mov in add test das cmc sbb lock adc ret call inc jp lods es xlat inc out imul jno cli add (bad) mov inc ja ljmp add in jo sub aad into inc mov roll inc xor test sub lcall add mov inc mov dec sub int3 rorl inc fbld insb loop sub in mov sub inc jno imulb subl jge sbb std int dec pop cmp dec dec pop clc (bad) cmp fsubrl and mov add popl jecxz int3 enter shrl or movsb cs (bad) in ret inc jne test das pop (bad) pop cld inc xlat add sub pop cltd fcomip imul sub inc pop into (bad) cwtl cmp xor loop jp mov xchg xchg cmp mov sbb dec sbb ljmp or add push ret stc insb jge push pop imul daa jbe cmp hlt js xchg les lods jge je xor jmp test lcall rclb lahf roll fmul mov sub adc lods push dec inc and inc out aaa pop sub fdivs test add sbb mov lds dec mov imul cltd inc mov mov pop xchg push add pop dec xchg xchg std xchg dec mov nop mov mov test add test pushf fnsave sbb push xchg out mov ret test xor cmpsb mov sub shrl stc loop push mov bound inc pop jle lret inc sub jne push das ss (bad) xor cmp imul (bad) out inc ret push arpl das inc cltd lods jno into (bad) mov inc mov jbe sbb inc xchg cmp or lret mov mov pop and pop or js cmp lea lods pop imul push inc cmp insl leave fsts xchg lods mov cmp sub outsl add mov insl ss mov inc lds inc std sbb cmp or sub ret inc lods js popa dec ds and mov mov repz inc std lcall push cmp pop and pminsw gs mov sbb xorb (bad) add inc mov iret enter inc aad mov mov add xchg movsb ret adcb inc inc push insl sub pop xchg mov fidivr cmp repz cmp lods fwait jecxz imul mov dec mov push fistl sub cs sub jmp push fstpt dec cmp negb inc jmp test fs sti test mov sub and test mov push inc out addl movnti loop cmp jb jg sub int imul stos pop insb jp sar add fdivl inc inc jmp adcl fldenv sbb mov mov ljmp jmp push inc push bound loope leave fwait inc in mov mov cmpsl jge xchg mov mov sbb cld push adc sub in mov (bad) push mov push aaa adc movsb jno lret (bad) mov int3 fsubrs sbb sub adc fisubrl aaa mov jo dec xchg cld inc mov cmc scas (bad) sbb (bad) dec and jo gs dec xchg out adc stc inc add cltd inc pop or je xor and out adc push inc addb pushf inc xlat mov add pop popf int3 cmp std ja out lods dec mov dec into stos jle dec cwtl add pop inc ljmp xor inc aaa push dec cmp inc or jg mov pusha or inc pop dec rclb push nop jl cwtl pop test shlb js jae add jg xchg xchg out out loopne mov mov scas pop inc inc data16 sbb cmp jg call aad repz stc cmp jge iret aas jnp push pop push push add scas push insb dec mov dec out ret sti cmp mov (bad) mov test mulb inc adc lock or (bad) loope cmp inc xor adc popf jns test dec and inc adc in hlt mov adc int3 add inc loopne or inc mov mov push andl jns inc mov xchg add (bad) subb mov loopne pop mov inc icebp sub in loope in push imul clc (bad) add mov jg out fimull xchg not xor cs jbe mov bound add mov and dec ss fnstenv ret dec out pop mov fwait or xchg adc xchg pusha mov sbb and push dec (bad) cmpsl xor stos mov mov or mov push mov stos mov popa fs mov int3 fnstcw xchg cmp ret lock fild dec mov sbb lods das pop mov scas call jnp imul mov popf dec mov repz lahf jnp cmpsb fwait or scas mov lret and stos ret loopne fwait out inc add mov inc and cmp dec sbb repnz mov div arpl inc addr16 push jnp lret push divl jg out sbb inc or push mov jg shlb adc in mov jmp sbb inc pusha inc push sarl jb jmp inc (bad) in jae add xor xchg les jne add pop inc inc mov out neg cmp inc sub (bad) cmpsb jb adc mov jmp inc inc jnp mov push lret mov cmpsb push (bad) dec in inc imul xchg xor jecxz sahf xchg addr16 inc loope cmp xor inc pushf lcall incl adc mov imul and jg (bad) out push inc dec adcb (bad) loopne add mov sbb mov test sub push inc enter repnz sar xchg xor mov out mov jmp and pop shlb xor lds adc add (bad) ja outsl inc cmp (bad) pop mov lea lcall mov incl or stos shl sub movsb int aam sub push daa pop or popa dec sbb adc aaa outsl dec fwait call lds cmpsb inc jecxz mov lods inc cmp cmp push inc out (bad) dec pop movsl mov daa mov gs xor push iret xchg add fwait inc sub scas ss push ret inc fs mov dec inc xor cmp clc in add repnz cmp add les mov ret cmpsl xchg shll or outsb add sti push inc push aas popa mov out jge loop mov in mov inc sub pop outsb es ffreep dec sarl inc scas jecxz out xchg inc push cmp push mov inc push dec fisub fcmovne outsl insb jge dec sub sbb inc or inc add or or sbb or dec mov mov or mov inc (bad) (bad) aas push outsl les xor and adc call (bad) sbb cmpsl cli cmp ja inc fbld xchg or push ret sub loop inc inc jmp sub into loopne xchg add (bad) xor pop push adc xchg and loopne jmp mov inc or xchg xor mov jbe leave cmp pop xor (bad) xor aad sub call mov roll sub imul dec (bad) andl push dec icebp ret arpl or fstl or popf dec scas jns fcomi addl xchg jb (bad) xor pop and sbb push sbb lcall pop mov mov (bad) mov inc aaa outsl ss lea mov or fwait adc mov hlt rcrl xchg jmp repnz inc and outsl loope aas loop sarl sbb test adc pop test dec aas ret inc push mov popa cli add (bad) or xor jae mov out ja inc add dec ds add fnsave jle inc pop lahf xlat lods insl test inc shlb inc (bad) movsb add popa inc cwtl scas inc xchg shl call inc jp movsb push mov in xchg jae call sbb cmp ret scas in pop inc lahf ret push (bad) mov mov inc sbb out sarb cmp cmp jg scas mov and or pop xchg (bad) jno adc stos stc ret dec shlb xchg inc mov (bad) int inc fcoml in insb pop add es fs daa push push adc push addr16 or cwtl cmpsb jae,pn sti inc loopne int inc and imul xor pop imul mov xchg out ljmp push in int3 nop imul insb sti inc shlb in pop xchg xlat dec fistl inc in mov mov lds xchg jmp or popa roll push ljmp inc pusha loop or stos ret cmp sbb jno cmp inc push inc iret mov (bad) xor add mov pop and shrl xchg xlat push push icebp inc enter pop ds inc xchg sub push push aaa insb sbbl fwait push repz inc cs push lods dec inc mov notl sahf xor cmp add cs (bad) pop test inc imul jge cwtl mov push nop enter xchg fadds and aaa jb fdivs cwtl mov fisubrl std scas adc adc and mov mov jnp pop fwait xor incl ja ret pop and pop push xchg (bad) (bad) out loopne dec repz mov add push pop dec lods jne inc jle sti iret cmc ret add int dec sub aas dec outsl push pop xor inc inc movsb andl fmull push (bad) adc mov inc push into jp in dec pusha popa jno inc sub repz or bound daa (bad) aas loopne clc dec and add pop mov lret movsl fiadd hlt lods cltd inc pop xchg xchg add rcll lret arpl or inc mov push jge inc mov mov aaa int mov cmpl roll push out adc xor inc and push xor xchg (bad) cmp lea les xchg inc popf test cmpsl sarl lods frstor (bad) (bad) fbld or ret jge sbb (bad) cmc rolb lds cmp cs testb or gs push daa rcll lds mov add fsubl xchg inc lock ret scas mov jl lods inc test repnz sub push popf dec or lea cmp sbbb es rorl cmp mov mov or dec flds ret mov sbb bound pop enter adc jns inc mov test stos dec ljmp fwait shll aam push or xchg jns movsb test movsb jl mov inc add mov ret int inc jne aam cmp es xchg test xor cmp push and dec pusha das or sub arpl push cltd sub push (bad) mov int3 bound mov mov dec inc (bad) xor popa jb xor inc fimul in push inc loope int3 pop popf icebp js push and arpl inc inc cmp xor add ret push jno je sub dec jns movsb cmp stc mov pusha inc push fsubl ds and cmp xor sub xchg fiaddl dec aad inc in fsubp clc mov inc mov lea sub xlat test inc inc scas (bad) aad jl inc pop daa adc add dec dec cmp inc xor inc insl shrl fsubl ret pop dec lea inc inc jnp pop mov in cmp fildll ret test jae add repz mov xchg movsl mov (bad) sub cmp xchg and pop stc imul fwait xor push xchg pop pop inc popa in mov popf pop add sbb xchg jbe or pop mov out or or sarl hlt adc inc (bad) data16 les out ss push ret xor sub out cld leave pushf in jae aaa (bad) dec inc mov inc dec movsb and or sub pop push dec (bad) inc shlb scas data16 mov jb lret xlat inc adc mov cmovbe sahf scas in cmpl xchg fdiv or push jp ja jb cmp dec sbb jecxz jge inc data16 xchg inc add adc addr16 cmp loop xchg mov cmp call sarb adc fldt mov mov inc sbb and (bad) mov cmp inc push fldt push insb rolb mov sbb mov dec out cmp mov imul loop ss sbb mov sub jnp xchg adc pop pop adc dec dec incb data16 dec inc lock pop or mov roll push (bad) mov mov hlt push dec or inc and outsb mov test pop jo add xchg push (bad) repnz xchg sbbl xchg cmp inc iret xchg xchg push mov sub lahf push pop inc inc in fdivrl lcall ret dec or mov dec push test mov lahf adc sub mov insb xchg dec pop cs xchg mov pop xchg cmp inc cmp cltd xor movsb or lea xchg jmp or adc fs lock cmp insl pop sub pop push push or dec inc lcall cltd mov inc fucomip pop sti outsl enter jb dec mov in jnp push cmp fiaddl push push adc inc mov sbb inc shr stos sbb inc pushf out (bad) repz std rcll xchg mov jge jno xchg cmc test mov jcxz xor adc xchg rcll lock divl add loop xchg xor xchg push xor shrl leave cmp dec xchg sub xchg and (bad) mov xchg add xor aas and sbb fistl (bad) mov aad mov cmpsb inc ret hlt pop dec sbb in xor mov sbb ja push dec jb enter cmpsb sub test lahf popa mov xor jo pop test inc mov idiv cmp dec aas inc inc mov out sbb fist ja popf jecxz dec (bad) pop sub sub pushf dec cmp inc mov add inc mov imul xor sbb xor pop and cmp stos imul jne xor in mov fisub das rclb es jmp add imul jbe dec xchg rol add sub inc cmp cmp inc shl mov or out sub push adc lahf jecxz mov hlt xor xor jnp xor cli stos inc (bad) imul adcl shll sbb scas jge and cmp lcall das in inc movsb xchg fbld aaa push push jae push clc add lea repz and repz cmc inc and push into in jecxz inc add inc xchg fdivrs mov inc push ljmp pushf lods sbb jmp xchg sub repz call push (bad) cmp inc jne cltd int3 jge call jne jp sub dec hlt push jmp fwait sbb mov jle loop xchg add add xlat push mov int3 mov in out adc jge jmp mov mov jo cmp xchg or jl jbe push pop mov inc andl out mov sti xchg (bad) adc xchg roll add sahf xor aaa jg inc mov addr16 mov dec pushl sbb mov mov lahf out push sbb jnp ret (bad) mov adc mov xchg test inc dec add rclb inc cmp in arpl jge outsb add jb mov imul push mov cltd stos add cmp and pusha jno call dec notl xchg mov xchg inc xchg jmp fs (bad) cltd add cld mov outsb pop inc adc pop loope sub orl and sub (bad) icebp jp jl add repz clc mov sbb lahf movsb mov jl (bad) pop inc add dec sub orl cmp add mov cli sbb into mov cmp xchg sub mov push imul inc lods (bad) add inc loopne pop xor xchg add lret lea push insl add mov add inc or fidivr inc cmp fcomps in clc ret adc mov push inc mov push pusha dec sti dec ret cmp xchg sbb movsb inc ror lods jns push push inc (bad) dec out push addr16 xorl test jge (bad) xor inc inc insl into push cwtl cld (bad) repnz xchg sub int3 adc push push add dec mov pop lahf jg in and lret mov mov jmp inc mov scas ret sbb ret mov xchg loop and std push mov inc inc fmuls pop mov mov dec lea or mov addl jle std outsl das mov out stos lds lret inc (bad) jle mov int inc pop sbb inc mov cmp scas add pop lods pop push dec movsl push inc xor aas aaa sahf fldt repnz clc cmp inc test loope add lds adc mov fistl mov xor mov xchg mov xchg lea (bad) dec nop popf addr16 les ja (bad) movsl jl outsb dec pop jbe leave ret imul test les xor jmp inc rolb and arpl push dec mov pop (bad) in cs lret inc aas cmp mov mov and fsubr ret repz inc loope xchg outsl push xor inc jge push add xor adc push dec mov inc and or sub imul lcall insb enter icebp add stos daa (bad) clc nop inc (bad) div adc mov xor xchg (bad) and jecxz xchg mov dec jo pop jae lahf jo mov sub adc popa (bad) adc mov add cmp cmp iret xchg mov push lods pop shrl xor fisttp jl (bad) shr pop cmp pop pop inc jb imul (bad) jae pop test les scas adc push in inc ficoml and fisubl dec cwtl sbb push int jae test out rcr std daa cmp imul inc pop lcall xorl add js je mov inc or in adc xorl mov pop xchg mov shrb jmp pop mov test stc cmpsl shll xchg lret dec stc push std mov jecxz mov imul scas inc sahf mov add xchg push (bad) or ret (bad) outsb jne push insl scas sub cmp inc movsb in xorl imul xor mov gs push push sub hlt rolb xor xor or sub mov inc jne xchg jmp inc test push pop or loope xchg or add rcl in popa sbb call push sub cmpsl xchg sahf push ret add scas adc adc or push das inc xchg xlat pop dec aam inc aad mov xor outsl jle push jg (bad) mov rcrl ret inc lret push bound movsl add cli cmp mov push fnstsw adc mov adc pop and sub inc push adc inc jmp cmp (bad) ds leave inc dec pop aam lret jno inc leave sbb push inc fsubrl stc int3 push cmp lods jecxz cwtl inc or popa xchg lea (bad) notb mov push cmpsb mov ds int popa icebp clc mov mov push test xor outsl inc xchg jns dec xchg fldl inc dec lea mov push ret push imul leave inc bound push jge jl (bad) sti or lock inc aad jle clc sbb inc punpcklbw out rolb out mov cmp dec push cmpsb mov mov arpl out scas adc lcall cs pop inc xor push stos and mov ret jns jno cwtl aas xchg out mov test cmc jb push imul and insb cmp dec cmp push push or rcrl mov ds imull inc pop pop cmp stos mov mov xchg cmc pop xchg inc add arpl rcrl push pop inc fs roll inc cmpsb mov and cmp mov std sub fnclex inc shl mov movsb add sbb and and mov sarb xor inc or and cltd dec jne cwtl mov lcall push push xchg (bad) jle (bad) pop dec lds jp ret repnz movswl mov (bad) fisubrl push jo dec inc jl xchg xchg jge push push inc scas js cmp sub inc push loop int3 or push stos aaa jne and or mov stos xchg pop pusha cwtl fldenv mov lahf cmc stc clc pushf pop enter shr push add pop into mov out sbb rol arpl js aam int3 or sbb (bad) xor pop test push (bad) rol mov lret aaa (bad) rclb shll fnsave inc addl in ss int3 dec repz sub or div inc xchg add mov adc je roll sub dec lods mov aaa pop add das mov andl (bad) in jb ret push and or inc pop clc cmp sub aam push scas test jns inc and mov cmpsl in xor (bad) test sub inc into add aam aam mov repnz sbb jle stos mov mov out xchg add dec leave adc add bound push push xor pop pop out xchg call aad call xor sub sub (bad) and (bad) outsl sbb cmp in stos mov xchg adc sub pop mov aaa rcrl push cmp sti iret push pop add xor jns in daa movsl sub out pmullw pop pop mov ret ror adc and or fstl aas insl add out popa dec mov sub xchg push adc mov jecxz mov fndisi(8087 movsb mov mov sub dec stos inc sbb fbld or jge inc xchg sub adc add aad loop push stos push xchg add insl mov sub xchg add pop (bad) hlt fcomip aam (bad) mov xor mov mov std addr16 mov inc in popf daa shrl inc xor xor movsl inc cli cld and test mov stc dec in pop call cmp adc push cld daa jbe das cmp outsl xchg mov and test push jmp insl je nop fcompl dec arpl imul test dec inc xlat jge dec xchg mov mov repnz stc jle lea jecxz cli mov add orps mov pop jo jno adcl fstpl and mov and ds scas sub push das popf cli subl inc je and jne mov sub mov test aaa in (bad) and sti stos jmp mov out inc add pusha mov sbb mov or aas pop fcmovnb pusha outsb in pop xchg sub mov js xchg or mov pushf out mov jb push jge mov pop (bad) popf cmpsb mov es inc shrb push out (bad) xchg xchg cmp out mov addb xchg scas or (bad) jb push mov and ss lahf out inc fisttpl jnp sbbl popa icebp inc or mov bswap fmuls clc (bad) cs mov and push ret fsubrl mov mov jmp push dec (bad) sub out push sahf shrl mov lahf sbb inc inc in lret xchg sub inc rolb sub imul mov and jno xor mov xchg iret in and ret sahf int loopne mov dec call imul push push ret das mov jg (bad) leave xchg push xor repnz mov xchg push movsl inc and jns inc jge das je mov mov mov push mov pop and jno imulb pop arpl fnstenv push lods out mov fistpl inc mov jnp dec push hlt dec pop xchg inc or fldt mov jle and inc jno les pop ret int lods mov rol add xchg dec adc xchg xor sti ljmp movsl pop mov xchg and out jmp ret inc daa push jp inc mov ja ds mov inc inc inc lcall push inc gs mov inc int test xchg add testl in leave faddl insl out outsl fisub mov stos and xor push fdivr je jbe and inc call int3 ljmp gs jecxz jmp or bound push gs (bad) ror inc mov dec push pop stos mov mov inc sti xchg das aam mov dec mov inc sbb xor loop hlt ret sti sbb xchg (bad) jle out and ljmp lock stc cmp (bad) (bad) aas mov xchg pop dec (bad) pop repz jne lret jmp cmova sarl adc dec cmp mov mov rcll cmp (bad) and mov add sbb jecxz cwtl shl push jp jmp daa push repnz lods mov mov xlat insl inc scas jo outsl inc sub loope mov pop inc out add cmc jo ja inc xchg pop xchg dec (bad) ret in cmp inc sub xorl js inc cmp xchg (bad) outsl test mov ret push inc fldcw (bad) cmpsb (bad) sarl mov adc xor mov or inc cmp inc test aad pop ret je int3 js pop jb arpl cld lahf mov xchg push inc sub sbb pop test or add add xchg addr16 mov mov mov cltd adc jae dec inc sub push ds test mov clc push pop std repz outsb push push aas inc bound xor lods loope mov pop sub setns ficomp sub or xchg cmp jo xchg xor cmp pop dec mov add inc loope neg je into arpl (bad) sub xchg inc fwait ljmp or aam aam scas dec mov popf dec sarl dec mov fistpll and jecxz stos imul fwait sti into rolb cmp std jmp pop cmp dec xchg add (bad) jns fisubrl jae movsb pop je fwait inc mov addr16 (bad) lcall loop int3 clc mov ja cli dec arpl fstpt xor ficoml mov push xchg add dec stos pop sbb into aad mov cmp das lahf pop jg jmp xor dec pushf loop hlt or cwtl aaa test test dec dec loop fldt push mov sub or jo cltd push sbb sub add inc push sbb lret ja and iret jl sub jp add (bad) xchg mov inc sti pop rcrb (bad) lds loope inc xor cmp pop ret dec sbb sub popf js mov shll add cmp push dec pop jae stos push push sahf jne mov cwtl push push leave arpl xchg jno inc cmp (bad) icebp ds mov cmp gs mov add xchg std push (bad) mov adc sub cmp mov jp cmpsb inc jb ret loop cmp sbb push inc leave mov and je xchg fbld (bad) leave fidivrl mov add stc fldt jns xchg mov mov scas imul xchg cmp push outsl mov mov and pslld mov inc pop jb lds push add sub xchg push (bad) mov pop sub repnz mov push lock and or pop push cmp in xorl or jae movsl mov push xor je push ja add xor mov and lret add mov xchg sbb and ds mov mov adc mov mov sub push xchg lret jmp test mov jg test imul cmp movsl xchg ds gs mov int pop adc mov aas fistpl outsb enter sub addb jb inc mov xchg mov int xchg cmc dec add pop and jp repnz aaa cs pusha jo push inc push pop std pop sbb outsb rol daa or mov (bad) push inc sti push push in popa inc inc sub cmpsb loopne ljmp scas (bad) movsl adc aam sub movsb ret push int fisttp sub lahf lret push addb mov insl scas jmp jb xchg add xchg out mov ret movsb adc xchg dec jb inc or jbe mov popf mov aas inc xchg or ss add pop mov inc push out inc xchg jmp push xor pop or and pushf inc (bad) xor inc aam mov nop or and inc inc stc rclb jo mov mov inc leave aaa int hlt (bad) (bad) mov test incl imul xor xor add (bad) push pop fstpt lods dec inc outsb xchg xchg and dec mov push push cmp pop mov mov mov push adc push add push xor inc clc cmp dec lea mov sbb inc push into and dec aaa cmc inc dec in mov loope pushf push bound mov fsubs push push cmp ljmp testb mov push inc cmc jae sbb add lret cmp addl inc inc movsb fmull stc sbb daa pop dec mov mov inc cli sub and repnz xchg mov incl frstor cmp ret popa lock les pop roll out mov loop sub pop dec lods loop daa out sub mov pop ja inc jecxz lcall mov mov jb sbb add pcmpeqw test inc popa jecxz mov sbb inc (bad) es add inc pop dec push pop jae pop push sbb addl xchg mov sbb outsl or lea ret cmpsl push inc test add outsl mov jns ljmp lret mov insl pop cli add jb sbbl rorl popa cmp inc test jg push xor divl dec loope dec cmovl mov jnp ret gs mov js cs ret inc and dec add arpl xchg test xor hlt insl xchg jb inc fist repnz mov inc sub add xchg sar call inc or adc mov sub aam rolb (bad) loope mov iret and jb les icebp stos movsb push popa orl inc pop mov outsb (bad) out dec cwtl test inc push push fbld pop jl scas outsl sti sbb push xchg lods inc ficomp hlt icebp cmp cs sbb mov inc insl adc xchg sub add mov push outsb rolb pop and mov bound popa push mov dec out rolb xor mov xchg add adcl out xchg fwait sub out mov out xor inc inc pop jns sbb fldl inc inc out jb add pop push fild jo xchg and cli inc xchg inc aam dec mov fs pop add out jae andb dec jo test rorb jae loope fisubrl push cmp ret js rcll adc (bad) mov inc xlat incl in lds adc out jge lods addl jnp inc pop or cmpsl cmp int push adc push scas imul in jne addr16 mov pop es adc out mov mov sbb cmpsb lahf test stos jecxz cmc loop aam push jnp push repz inc adc stos push and inc dec dec add push dec push mov mov fiadd adc push daa lods add push imul std inc fidivr pop insb lods inc cltd or mov rorb pop or inc and xor mov jl mov pop cmpsl pop inc pop mov leave fwait or and and imul mov xchg inc xor or inc mov mov jge cmp fs inc push scas push mov es xchg push push nop inc test cs push sti mov je inc pop lods dec add dec push add fistpll sbb lret cmp jns sbb jmp lret add call (bad) into sub test lahf in mov mov add pop (bad) mov mov cld inc xor xor stc cmp mov or inc adc out mov inc mov pop mov add outsl ljmp pop and sub push es inc cltd sbb dec cmp dec mov and adc test sahf scas mov jbe inc cmp in ja out les mov andl push jns inc push push jbe int3 inc ds inc inc iret sahf cmpsl mov jecxz xchg inc cmp pop dec add ret inc je xor dec fild fsubs (bad) les mov jecxz jl (bad) sti inc or testl or lods and leave sub sbb les mov pop sub ss mov fsubrp and add inc stc dec fisubrl xchg inc outsb ja test mov mov popf imul adc inc dec fwait mov push and sub jae sub loop jo xor cmp push rcll jb dec xor inc out add and inc aaa out pop scas xor incb test cmp outsb cli stos push add dec popf sub inc aad inc imul lods jo adc mov jmp and insb orl pop dec sti les inc in mov int inc xlat testl fidiv imul insl mov xchg pushf add push inc xacquire dec icebp push gs xor test (bad) (bad) mov adc mov jno rolb movsl cltd lret daa outsb test pusha in pop ret test arpl (bad) xchg jl inc movsl jg out cld push sub cmp mov add ljmp imul (bad) pop scas aam clc mov inc cmp inc pop adc fwait inc push fldl add std mov out and add icebp repz and inc add insb mov push dec mov inc clc cmp dec jne mov inc inc jmp and xlat leave nop lahf mov jbe std push cltd pop imul test ret das orb shrd mov repz sub pop inc movb push out mov xor push int3 xor add mov (bad) iret xchg das cmp imul ret enter or push adc and (bad) inc ret inc ljmp popa insl xor pop fisttpl sub xor lcall sbb daa inc (bad) lret xchg rclb and (bad) push call sub adc push lods roll sub ret inc add out add and dec pushf test jo and xor sahf lea notl jp push fs push xor sub and test push cmp mov (bad) enter mov cmc mov les jecxz fldl std mov or sti add cwtl idivb dec push sub out inc and (bad) das cmp adc pop enter cmp inc out ds xchg push into cwtl mov dec loopne push pop dec inc (bad) jge mov in cmp lret shrl add xchg xchg push mov sti cmpsb repnz mov dec cmp mov ficompl arpl adc dec stos mov mov adc iret cli adc sbb into add xlat dec inc sub test mov dec push cs jle add sbb adc idiv test mov shlb mov cmp movsl and ja mov jge push aad jmp xor cmc (bad) adc inc call fwait inc dec mov mov push sub ret out movsl (bad) addr16 fwait in inc pcmpeqw sub jbe dec fcoms mov inc push or lods in jl cli jae xor mov divl add mov daa push addr16 pop outsb inc jle icebp xchg ret mov daa pop inc sub enter xor mov mov imul mov mov addr16 push or cli push fwait xor imul nop in xchg inc popa test daa jg mov mov insl sub dec and add jl push out stos imul cs (bad) bound jg inc aad mov cmpsl push das xchg mov popa xor loopne pop neg dec sub sub sbb and inc mov outsl push mov mov push pushf ret test movsb cmpsb int3 mov sub mov imull sti dec mov orl bound rol inc inc xchg xchg push roll sbb mov sbb imul jge fs dec adc repz inc push lret fsubr mov shrb aam rcrb mov outsl inc mov inc mov lds sbbb lock in add push jns push int3 dec sub jmp add mov arpl scas aaa lods arpl test or mov sbb fldl2e mov mov fstp out insl inc push cwtl mov jo scas fwait adc jp pop (bad) sti jno push insb cwtl inc rorb inc adc add les dec push adc aaa incl mov (bad) dec cmp fsubs lock inc jmp pop lcall pop mov dec jl cmpsl adc (bad) jne (bad) icebp aam (bad) dec pusha aas inc ret cmp ret dec std or in addr16 jnp es arpl inc sbb mov and pop clc dec adc loopne movsb pop cmpsb stos daa repnz ret sub dec jecxz movsb scas mov inc inc call popa (bad) les sbb mov sahf inc mov sub fs xchg push mov jle add lret xlat call xor or ficompl mov mov push pop je repnz mov gs daa sahf loop sbb cmp decb mov cwtl dec adc out ret cwtl loope icebp push mov cmc dec dec aaa fsubrp cmp ja fnsave data16 cmpsb bound jne (bad) ss bound xchg push sbb loope inc mov and int dec jle inc pop jecxz pop inc psubusb popf test daa xor xchg iret xchg (bad) outsl mov add repz incl sub fwait testl sub xchg adc pop and int3 sbb inc fildll cmp jb and mov subl cltd mov data16 jle dec inc mov xchg sti xor cmpl xchg js stos (bad) lock jge out enter test movsl out cmc lcall xchg rcrl out mov sub aad mov mov dec mov inc test xor inc xchg into fmulp lock jl mov cmp repnz and stos mov sahf add (bad) and (bad) xchg push pop inc in jbe inc in test jo inc pop cmp push dec mov jno mov push out dec enter add mov inc rorl pop cwtl inc jb repnz cmc or inc dec mov aaa jg xor cmp test ds (bad) gs inc (bad) lret enter sub cmpsl sbb fs addr16 jecxz inc cli or das inc daa adc and sub fisubrl rcll inc popa stos mov rorl les shll mov jl fwait leave inc shl and and dec nop stc scas mov loopne push inc pop les (bad) dec outsl add adc inc add inc pop popa movsb mov push mov inc scas dec imulb (bad) dec mov inc adc loop or sbb push sbb or repnz sub pop jl jno inc jp sub xor popf or sti sti jl leave ret (bad) inc out es or arpl dec fimull loopne lods mov inc ss clts push jl call pop jae push xor and repz ret pop lret dec mov (bad) fsubrp add sub jbe dec mov cmp sbb frstor addb fsubl push fs inc push lods inc repz jmp inc (bad) add popa jecxz and push pop mov push jecxz pop mov sub stos mov add inc xchg pop xor insb mov repnz out (bad) xchg xor mov repz inc popf push pop popa mov sub add ret jns jbe fsts je inc jne pop mov inc dec (bad) mov fisttpll stc repnz and pop stos jmp add cmp test sub dec xor enter cmp pop jge jmp mov and lret inc mov push xchg (bad) popa xor xchg inc or cmpsb mov xlat cld sub xchg add and and lods mov dec orps mov and inc jae cmpsb dec cltd arpl inc in clc in jecxz lret pop xchg lock mov pop xor cmp dec (bad) dec movsl das cli mov adc mov sbb dec mov push inc add xchg inc mov push ret pop mov mov scas inc clc loopne out adc pop push push ret fstps sbb call cli cmc and lahf clc or loope adc mov sub or push rcr inc jbe pop cwtl xor adc mov cltd lahf xor cmp inc dec or out out ficom push adc mov mov loop and ljmp or sbb jb inc and fcomps outsb out dec jnp inc xchg mov cmpsl mov (bad) mov sbb es enter jb mov push (bad) adc sbb jne pop sub jo test inc sub cli mov adc ret data16 mov adc insl mov add xor inc addl aad (bad) mov inc or std insb addr16 scas adc arpl xor adcl xchg adc xchg popf iret cltd scas or jle mov and fwait out cmp cmp jp outsb pop inc cmp push movsl cmp movl outsb push daa dec or dec incb push add jbe sbb inc push add cmpsb ja rcr sub mov inc jnp push pop andl pop mov loop and (bad) push lret inc xchg jo xor mov jnp xchg pop loopne (bad) mov aaa test into and push pop jle loop push mov (bad) mov out push inc das push xchg push arpl outsl mov outsb mov leave pusha mov pop pop push sub movsb repz lret imul push sub loopne push sub inc add iret push inc addr16 leave inc cmp adc clc inc popa outsl mov movb shrb rorl cltd fild in xor out push pusha push add (bad) repz xorl es lods popf cmp pusha add inc dec pop ret in out inc xor xorl fisttpll fwait imul in pop imul jmp lcall or js add movl pop stos icebp (bad) arpl and repz sub stc sahf cmpsl sbb sbb in mov insl pop push test pop std xchg addr16 inc ficom xor push push (bad) jnp inc cmp movsb mov int3 pop inc call add inc jb fwait push push out sti out cmp clc add clc dec dec in xchg mov pop dec bound loope (bad) jo sti shll pop push ret sbbb icebp add imul or icebp int3 out lods daa and (bad) jnp push dec stos push addr16 sub rcr sbb mov xchg (bad) jecxz adc mov jecxz sub or pop dec fldlg2 leave adc push xchg shr mov adc stc sub rolb push push and pop stos mov sti adc inc cmp in jne xor jb pop add pop lods sbb cld or pop mov in (bad) and enter cmp and lret sahf sub pop int ss in cli stos pop sub pop (bad) (bad) decb sub mov cmp fisub aad mov test movsl (bad) inc loope into inc add test (bad) cmp sub mov (bad) sub aaa jnp or mov adc sbb add cmp dec mov sub outsb hlt sub cmc xor rolb and (bad) mov jg subb rorb fcomps push xor inc icebp jae push xchg sub xchg xor sub mov iret call cmp cmp jecxz lods mov inc sub (bad) jbe inc push or stos mov std adc int jp into ret and mov ret xchg ror and sub fs aas leave pop dec jmp mov test add push add ret push xor divb int mov add fs xchg mov fwait clc call mov int in mov scas jbe push mov push mov jl loope mov out into pop inc ret (bad) mov sti (bad) jae orl ficoml lret sbb jmp xchg sub dec js (bad) push adc (bad) jae jo lret ficomp and daa inc mov inc inc hlt mov mov mov dec (bad) push fist jecxz shlb jecxz push ljmp mov jecxz aam and inc insb (bad) mov jnp out mull push icebp ret jb fs insl fdivrs xchg sarl std lea mov fwait mov cmc lods call jl sbb data16 inc mov scas push xchg dec rcrl enter inc cwtl inc aas cmc inc and pop fwait leave or and push inc or cltd arpl inc add adc push aad mov jecxz push decb adc xlat lea ret out inc jg dec sbb push pop ret (bad) mov xor push inc push out nop inc mov imulb jnp mov or and ljmp les dec jae fmul cmpsb imul mov and inc xchg xor (bad) xor pop cmp jmp mov xchg aad imul and aaa ret sub mov dec sti fldcw add mov push ret adc cmp and mov and fwait inc (bad) cmp popa in push inc add xor dec jg,pt aas daa push sarl inc (bad) sub jno outsb arpl fmuls lock and repz mov jecxz pushf adcb loopne inc leave jmp insl xchg hlt dec jae or call inc add sysexit sub jno into push popf dec cmpsl outsb mov and clc sbb sub push (bad) fst daa cmp pop adc bound pop inc ja and pusha inc jo ret popf jb out aas or ja cli stos mov fild jns dec and int sub lret insl pop inc imul inc push xchg add sahf mov push push out movsb loopne inc aam scas bnd sub mov ficom sbb dec mov dec push mov pop add dec or inc or shrb cli into and in subl into push mulb out lock dec sub or mov rcrb lret mov mov enter mov aas xor imul rol scas inc push (bad) es data16 add bound std and rcrl stos inc mov jle sub lea popf inc shrl aaa stos xchg pop iret adc pop cmp into push add push jnp rolb test lea mov lret cmp (bad) pop dec sub dec daa inc sbb xor popl cmp mov and cs nop or mov add xchg mov xchg inc fmull sbb je lea insb sbb ss inc test sbb test mov inc jns pop leave jbe test mov dec subb xor imul xchg stos add fiaddl sti pop insb lods lds push inc sahf cwtl in stc pop pusha dec outsl xchg pop shll rcr ret add (bad) les loopw testl pop arpl mov push adc mov (bad) adc out add sub mov ds pop test and cmp js insl imul lret gs add inc push add aad (bad) cld std outsl cmp je ljmp icebp or out mov rol pop ds pop dec lret and mov inc dec or mov aam pop (bad) popa mov inc sub cmp sub mov in loop loope inc cmp xchg inc push mov rclb lods and addb out mov sub cmp pop loopne cmp push addr16 iret xchg xlat jno ss inc sub loop enter jno es ret mov jp je sarl mov pop adc pop inc mov adc lods lcall jo jecxz fiaddl test call inc adc jns sub bound dec xor ret mov mov stos inc sub enter sbb inc add dec subl scas out xchg mov ret jns add out mov xor add mov mov and mov nop iret aam or push ss add push dec pop mov insl (bad) pop xor pusha aas sbb lret jge sbb icebp lds and bt in lds fisttpll pusha cmp xchg out jecxz ficompl ret inc dec pop lods cwtl fnstcw pop ret or rcrl imul pop add jnp das mov jnp (bad) loopne and sbb inc loope repz or pop inc cltd dec xchg aad jns ret sti daa imul push or (bad) jmp cmp cmp pusha js movsl or xchg ret xchg push sbb arpl xor fldt dec inc cmp add and cwtl pop lea std adc jo and scas push rep push ss fcmovnu push or movsb jmp inc or mov adc add mov inc stos movsb data16 test xchg push sub fadd jo dec mov add lea mov pop test mov push mov sbb inc xchg into fiadd dec and mov inc dec sub sbb push aad add xchg dec dec ja mov pop mov jmp in or hlt int push into fwait loop rcr lcall jl mov xchg mov sbb fs aas push fsub adc and test ret and push xchg bnd inc pop out mov push push inc aam cmp mov push popa arpl (bad) andl stc aad xor cs and fld push addr16 push dec test test inc (bad) cmp and inc (bad) jl insb stc or ljmp inc sarb mov ds out enter push inc daa cmp sbb cmp inc push lcall inc cs shr and inc pop stos in inc mov xor mov outsb inc jno and (bad) faddl mov cld mov inc ljmp repz inc inc subl push adc adc cmc dec mov ret stos cs movl lock pushf sub xor lds in arpl dec into inc xchg jae and xchg xchg lret loop mov addr16 loopne mov (bad) push fildll sarl in pop xor gs out sti (bad) out (bad) push ss sti adcl and push loop sub idiv nop into imul push mov mov jp mov je sub xchg mov loope xor roll clc ret or cmp or jb int3 mov mov adc (bad) dec gs mov addr16 dec fsubrs push cld repnz (bad) push mov cmp ret xchg (bad) jae dec sub movsb mov cmp ret data16 ss push stos pop popf push dec inc lcall pop fistpl cmpsl outsb push stos pop sbb repz sarb push dec int add dec jecxz lock dec mov jno test ja das aam cmpsl in loop dec mov ret fcom xor inc jecxz sub lock loop inc push sahf cmpsb setbe imulb sbb jle lret push loopne gs inc in sub cmp inc pop (bad) jecxz in lret inc icebp pop and cmpl and sbb dec pop fdivrs inc inc pushf mov gs pop lods aaa imul dec inc pop push dec ret xchg jl js add shlb insl pop jnp loopne inc push jmp xchg or xor jno inc push inc mov fidiv (bad) lock enter xor fmull mov dec pop adc push lahf push mov mov pop xchg sbb loope es jge xchg mov enter imul mov jle and add ret jg inc por adc inc add xor lret lcall inc xor xchg add pop sub inc scas cmpsb rcrl push mov add jmp push mov adc xchg xchg pop data16 insl jae mov cmpsl out cld xor aas xchg scas rolb xor xchg dec ss add mov inc les arpl icebp and movsl repz cmpsb mov cltd pop test fs add jnp push ljmp sahf sub jge inc adc mov les jg (bad) sbb imul lahf mov addb sbb xlat dec push fstpl aam sub xor add mov mov push into rcrl bound stos xchg dec in push mov jecxz lret fcmovu addr16 inc ss add jle outsb inc push add push adc pop jbe adc pop or inc fsub (bad) icebp push out aas xchg popa test popf iret xchg jmp sbb inc lods cmpsl in rcrb sbb and in inc xchg xor adc shrb lret (bad) push pop sbb xor jno pop test inc inc fdiv push ds xchg ret mov mov (bad) scas and or imul cwtl jae stos inc fwait or mov in mov inc adc sub pop imul inc sbb test inc outsl push mov or and ret dec pop pop inc fisubl rcl aaa outsl pop cmpsb inc xor inc adc pop sbb js push inc gs and xor je and bound dec add mov fimull mov dec cltd fmul inc scas push mov xor mov ret in sub orb ds stos popa js pop xor cs jecxz jae mov mov test std ret sub push cmp mov add test sbb xchg or inc pusha dec mov into inc jl push xchg icebp je inc movsl push sarl pop dec inc ds pop add daa mov jns push jmp jo dec push xor std inc sahf mov icebp jp jecxz mov pop mov cli ret hlt pop cmpsw lahf mov fcoms icebp inc mov repz (bad) int (bad) xchg loopne fbld jg dec mov insb xchg rol lahf int enter mov xchg xlat fcoms push cs jecxz mov push stos cmp icebp imul data16 mov push push add xchg stc popa and jge inc xchg sbb in pop repz inc mov ja js lea fcomps cltd inc lahf inc push mov inc nop test jg sbb mov (bad) sti jecxz jp jmp or cli push fcomip insl and mov lods inc outsl sbb je cmc dec inc leave cmpsl pop frstor fild mov dec imul daa test lock mov out or dec adc in aam ret pop repz fimull rcrl mov inc test or inc add push sbb adc stos and ret gs jl pop pop (bad) (bad) mov inc ja fsubrp fwait sub dec ret inc sbb jb jecxz mov mov or loope jno (bad) movsl js addl int mov dec notb cmpsl in inc sbb adc loop stos mov inc int adc out call pop stos sub repnz out jo fcomps xchg (bad) dec push add jecxz pusha mov mov jecxz push dec aas cmp rcl test dec repz roll dec pop lds call sub xor (bad) fsubrl xchg rorl mov adc xor xor add adc daa sub jp loope sbb push sub jnp cmp mov dec (bad) lret sti cmpsb inc add bound pop test scas cmp jne dec mov jecxz ret xor mov stos int3 adc fcompl cmp (bad) cltd daa stc jg jp daa sub inc dec test ss jb push sbb xor out idivb adc push xchg and xor jp add cmp ret mov adc push ret inc mov inc jl lret add jno dec adc repnz add arpl mov jo stc mov xchg xchg (bad) dec xor int3 sbb mov add or mov sub and cmp sub lea in sub mov jp push push insl in sbb push sub lea (bad) mov cmpsl aam inc mov mov and and incb mov add es popl mov loop shlb push les dec mov lret push (bad) ss dec insb fiaddl inc push pop lods out xor mov and inc loope push scas jecxz pop ljmp scas aaa inc jl aaa int flds std testb jne mov out mov out fidivr push mov les and sbb or aad inc adc mov dec mov jb fwait mov out rcrl jmp xchg rclb (bad) cmp (bad) and pop add or rcll dec or ja jg aam aaa fldl rclb add mov xchg mov aam or xchg cmp and dec inc push leave fwait lods push inc push mov jmp pop inc sub icebp ret mov pop out inc aad xor in mov std sbb inc scas repnz rcl or and les xchg push inc imul mov add adc sti pushf dec or mov mov or sti or fild jecxz (bad) negb add adc lea ret sub bound aas std icebp dec mov inc fwait jecxz clc inc popl aad fwait cs sub mov push cli adc sti push shrl add sbb popa in push cmp addr16 loop xor sub rolb mov jl xchg push in add cmp stc inc loop cltd or and sub ret insb mov xchg sti mov dec inc pop pop mov aas out repz in add out das xor lods jno fs ss pop and lds icebp std rcrb inc inc cmp inc pop jge push xor mov insb mov cmp outsb arpl lahf (bad) gs lods rcll dec mov inc or jnp sub les mov insl clc push aad stos pushf out pop inc int3 or cld push sub imul lahf mov adc sahf rcl inc add fbld adc shl lds cmp adc push cmp sub loop sbb lret or addl add sub mov inc mov loop aas or (bad) nop insb lea add sub mov scas out mov xor (bad) xchg fcmovbe xchg inc pop xchg rclb pop jnp inc dec repz add cmpsb loope arpl push lock adc dec ss cwtl inc clc pop xor jl or fs into (bad) inc dec mov or inc test bound inc mulb lcall adc dec inc mov xchg xchg sub cmp push fwait movb test ficomp or lahf scas loop cmp xchg aaa inc mov fisttpll test mov mov ja popa repnz push out imul fdivrl mov mov pushf cmp jle mov mov xchg add cmp es inc popa sbb pushf jle roll dec mov aaa (bad) mov push sbb out stos jge gs mov cmp jmp jnp sbb arpl int3 push hlt mov mov push mov iret insb inc int3 loopne cli inc clc (bad) lea push icebp js and jo jle dec cmc xchg das xchg add gs sbb jg,pt and mov mov lea mov xor in sbb pop inc mov or dec cmp subl test fisubrl inc aad (bad) aam or fwait inc dec mov xchg inc ret icebp ret jae dec add inc pop push cmp movsl mulb jle jae cmp pop test adc push fisttpl std inc mov push pop sbb lds outsb (bad) and (bad) jno movsb pop mov sbb fmuls dec enter sarl (bad) cmp or inc das aad cmp dec (bad) sbb movl lahf and iret hlt daa or mov mov dec xor adc mov add icebp out xor or add scas push in add sbb (bad) jnp popa ret bound outsb adc mov cmp outsl add es clc xchg xor inc ss dec ret mov push sbb mov inc bound inc inc loope sbb ret dec inc push add outsb and mov or push sbb pop aaa pop jo aam sub das jecxz mov push push aas xor dec scas lock mov nop add lcall imul inc outsb xlat divl hlt dec inc inc dec pop out out test ret inc inc xchg mov (bad) dec (bad) xor (bad) mov mov jne add fild adc sbb scas shlb imul sbb mov mov int3 sbb movsl int add adc sub mov fwait ret imul je sarl jecxz hlt loop adc mov fiadd rol sbb sub test ds pushf inc ret add inc rcll inc shll lcall pop xchg mov or insl jbe and in rol mov add sub testb incb sti mov cmp sub mov dec inc xchg sar imul idivb and dec cmp push inc stos inc call inc pop mov pop mov jo mov dec sub sub pop or fwait int3 inc rolb adc cs into cmp mov sbb popa mov clc adc enter xchg dec mov scas mov ret jg loop inc xor jle mov dec (bad) jl js jge mov hlt pop bound inc pop or repnz pop push daa (bad) loopne sbb rolb or inc divb idiv jno data16 add sbb cmpsl imul lret js rolb push je jne inc inc lret and mov inc inc sub mov mov or xor push (bad) sub or fnsave mov push loope mov inc mov lret cmp push dec aaa cmp lods and iret out stos aas jmp sbb sbb and inc imul and inc xor dec mov push mov arpl test aas inc clc in lret stc dec fstps inc iret xor ljmp mov das jo ss xchg add bnd arpl (bad) mov fucomi jl push inc js and cld mov inc out jbe jno in bound xor test xlat fiaddl xor aaa repz sahf xchg pop or movsb mov shl cmp test xlat lods jb jmp mov test xchg (bad) fiadd sbb in add arpl inc pop das mov mov mov leave cmp add call dec rcrl fdivrl fldl pusha mov test test pop cmp es push (bad) push xchg push adc (bad) outsl xchg hlt out adc jb cmp add xchg addr16 inc xrelease jo cmc mov shr fmull jl inc pop mov pop jo mov ret nop fsubrp ret loope aas (bad) leave (bad) and sub jo inc movsl mov mov mov pop inc insb sub movsb inc mov mov and mov in adc pop xchg icebp aam cld sub (bad) mov inc test push cmp mov clc pop mov jnp hlt loop and or sub lret mov aaa (bad) mov fbld or dec pop rorb jle push inc mov mov ds cmp push sbb cli testb mov stos mov outsb cmp inc icebp dec das inc es push xor loopne xchg sub dec scas rcrl in jle cmp inc fimull jmp mov scas and push cmpsl xlat push je sub adc scas ja sub push jb (bad) push sbb xor scas fiaddl dec enter xchg sub cmp (bad) push cmp int cmp fnstenv incb mov loop repz or repnz xor add cmp push dec sbb sbb add adc mov pusha xchg mov scas je pop pop lcall dec sbb dec int sub jb popa dec cmpsl push inc das mov (bad) out mov xchg or fadds imul pop loope and das xchg cs sub stc inc push fwait add and in mov mov push adc popf ja cwtl ret into mov or inc push adc add sti add shll scas cmc inc outsl push (bad) lret flds das jge inc jle scas stc jb xlat mov adc or cmp inc movsb or adc hlt or push push xchg mov bound inc sbb xorl xor test inc aaa fstps add in js xor cmp inc shr jmp test ret cmp cld xchg daa scas inc jb jecxz mov cltd inc repz mov xor push inc iret ret sub xor cmp dec pusha call es dec xorb inc bound shll mov int3 js sub flds cmpsb (bad) mov push outsl mov ficom ja pop std mov add jb fbld inc inc mov in push lcall dec mov and outsl push push inc (bad) mov add push shll or jge scas loop sub mov xchg adc jle out out push fsubr mov add adc xor inc outsl xor mov jmp flds stos call pop adcb sub inc pop ret inc fwait out adc cmp cmc movsl sahf or outsb in pop fcompl (bad) gs cwtl and mov add pop sti mov pop mov lahf enter cmc xchg dec sub cmp pop and enter sub dec outsl cmp mov sbb adc stos push push fnstcw push std adc sub dec movsb xchg jbe mov int pop (bad) insl add sub cmp cmp adc popa or aad xor pop push cmp into faddp xor mov xor push stos dec sub pop cmp add or cmp sbb test mov push in mov imul aas mov xor ss sarl sub daa push jg sub mov xchg mov dec sahf and sub sub cmp out add push (bad) mov mov xor and cld pop dec mov dec sub outsl cmp mov sahf xchg sbb jae cwtl jecxz adc or push pop fldt js inc jne rcrb sub out inc outsl jge je cmp pop xor dec xor inc sub mov cmpsb jl xchg dec jle sub and xlat in pop popl sub jo pop rcrl xor lret lea xor scas pop ja stos pop dec ss shll dec pop cmp jno cmp js mov and sub cmp sub adc out ret ljmp ljmp aas movb stos shrl jne cld rorb xchg mov cld xchg dec and clc dec cli inc fcomps xor add insb xlat jecxz in sti movsb les add xorb stos inc mov into incl cmp xor cmpsl push inc jecxz xor mov fistp inc lea jmp xor lds xchg inc ret fcmove push aad inc mov stc mov xchg push xchg sbb mov mov scas pop inc and cmc shrl jmp sbb loopne mov cmp jge inc push int3 pushf test mov xor cmp (bad) mov mulb jns cmp lods out pop dec ja mov inc cwtl mov (bad) sub and ret sbb pop movsl push push push arpl std add ret cmpb push std test mov lret inc and mul inc sbb adc adc insb stc or add pop je inc mov xchg sbb (bad) sbb (bad) dec cmp mov mov xchg test imul les push test add inc scas push xchg aas in rcl mov sti add inc lahf and xor test or sarl fwait ret test std js sbb sahf sub mov inc push sbb or jae inc rcrl ficoml add push xchg (bad) mov out inc mov popf pop cmp jge rorl or in push (bad) adc je cmp (bad) xchg mov outsb loopne push push mov adc and sarl jns cli jl addb jnp arpl inc and inc (bad) int3 push stos push loope out dec pop inc xor ret (bad) sbb inc mov ss insl movb cmpsb std fidivrl ret flds inc add aaa dec out jnp jne ljmp inc or and pop sub sub push (bad) inc or push xchg sahf cmpl lock inc sbb ljmp inc test jae cld test insl inc push xchg lahf in sub clc rclb push jnp jb and jecxz inc mov cmp adc push lahf mov loop and push fistp mov adc repz popa xor iret ret fwait mov inc je cmp push push xchg inc in incb jne jo std jle rol xchg ret lahf push add mov jmp addl je jp jo dec mov inc adc adc fistpl or inc or sarb jmp xchg rcll out das mov shrl or enter mov lock (bad) out arpl stos jnp dec dec sub imul adc in sub pushf rcrb add sub cmp mov pusha mov adc (bad) dec xor adc gs loopne mov ret cld sub mov outsl inc mov push out inc or mov mov or and cwtl add rcrb push push push and ss xor (bad) ja (bad) stos add push lret lret push stc ds repz mov bndstx shr stos add (bad) inc sbb icebp or add into sbb inc mov popa int3 mov dec xor or mov leave (bad) jge jmp xor push mov shll add les dec add cmp xor lret lds sbb xchg sub mov dec in push sub test xorl cmp aam push test push inc pop jae pop (bad) xchg into xchg mov loop dec inc push lcall add inc cltd sub pop lock mov (bad) into mov std and inc push jae and and and incl add incb lds out xor xchg cmp aam and fist jns push (bad) jne (bad) add es inc add cmp inc jne pusha sub adc dec dec jns cmp mov movsb sti test sbb xchg or in sbb add out cmp fcompl fistl repz inc pop inc adc pop (bad) xchg jg jmp les pop jnp mov sub jns jecxz cmpsb in les insb movsb or aaa push jb scas jo cmp and cld sub sub adc push push fidivr fnop int3 pop inc push fdivl imul test push mov in jns add dec rep dec (bad) push dec sbb insb out ret sahf push inc jl inc jp xchg sub ffree inc movsl mov pusha addb hlt mov std shlb jnp inc jle cltd adcl jne dec stc dec pop push stos mov inc sub mov mov inc (bad) repz add add mov pop sub xchg dec fwait ds cwtl dec pop in bound mov repnz xchg mov ret sahf add xor add aaa and outsl jnp xchg inc lret mov insl mov lea ret xor pop dec pop cmpsb mov dec rclb loope ffreep ret mov icebp pop fild sub sub xchg mov mov out nop cmp dec and inc push add (bad) pusha stos push mov test push inc dec data16 jmp scas jns in std pop push inc jp fild gs (bad) cmp pop lgs test add sub jp inc ficoml sub jae test inc jl int3 cmpsl fcoms push cmc addr16 test inc pop addr16 push cmpsb adcl hlt push (bad) repnz stos xchg push cmpsl test loopne inc push pop add ret dec xchg aam jmp add jne sub pop mov add shl divl jbe mov xor les and xchg test addr16 mov subl fstl inc les mov jl pop jecxz inc aam and mov lods (bad) jmp sbb dec cmp arpl das fwait sti flds mov fistl dec mov inc mov inc mov repz inc add dec cli dec sub enter cmpsb mov int inc sbb dec push mov adc pop push push adc sbb jl lods and and rclb sbb mov jae repnz test icebp (bad) jg inc xchg mov mov dec je add push adc ret add adc cmpsl jns inc and add jno fs mov roll vpsubb imul sbb and xor ja (bad) and pop push cs dec popa pusha gs push push cmp or mov test adc xor shlb ret jl ret inc add or addr16 mov mov pop jmp push or lods xor enter xor lret adc fdivrl imul in sbb mov (bad) or and xchg sub inc cli xchg pop mov fs push popf scas out insb stc inc jge jl shrl inc divb sbb out xchg ret mov popa and adc jp mov stos adc movsl jo mov ret pop iret cld out lahf cwtl push shll lret or pop xchg or stos or lea testb cli fistl sub out mov mov mov sub jb jecxz dec adc fisub xchg (bad) test aad movsb cmpsb imul jmp push (bad) lock lods push mov addr16 inc out orb sti leave inc (bad) add xor inc mov test jecxz in nop dec insl add mov fcomip jge inc pop jecxz (bad) add inc push out mov dec inc leave push cmpsb out pusha idivl enter or sbb cmp ret dec lods mov fsubr test int bound sbb test ret outsl lea inc das inc jmp gs inc push inc mov or dec xchg es xor fsubrl inc mov ljmp pop pusha out inc pop pop jb dec pop test cs sbb inc mov mov les daa shl enter adc sbb mov inc hlt xchg dec sahf lds xor stos add push jo jne fwait sub pop loop nop cmp dec inc jle scas cmp or inc jp sti adc addr16 inc dec insl outsl add lcall xor add and inc popa sub and fdivrs jl mov je push xor jb or outsb aaa insb out lea clc cmp inc mov ss and ljmp adc jmp cli push mov test pop mov jo cld fcomi cmp inc (bad) and pop or ficomp jecxz add inc pop popa std xor cmp cmp push fwait mov ret (bad) cltd xor push cmc push adc xlat xor inc xor out cs jbe das mov (bad) aam fistpl fist repz push push mov insb push inc mov aaa inc fs aas push outsb bound jge test add int xchg xchg inc in ja popf (bad) sbb mov mov jge xchg aad sbb rcrb fwait xorl push inc or push mov stos inc mov add pop dec arpl mov incl cmp or mov push or movsb mov push aam inc repz adcl jp pop inc add rcll or adc unpckhps inc mov cmp lea fcomps sbb inc aam call fsts das mov inc cltd sub mov in push add cmpsb hlt add mov stc xchg rol loope in sbb fmul dec repz dec fadd (bad) push and into jle mov cli aas add lret fs xchg test stos (bad) hlt xor (bad) std shlb pop add inc into aaa mov mov inc orb ja aaa xchg xor sub mov incb test cwtl mov xor dec inc (bad) in pop arpl and pop lcall push cmp bound inc push sub loop push int3 mov push inc jns jmp enter mov cmc xchg dec xlat dec sub cwtl ret xchg mov jmp push jl mov es add test sbb xor sub xchg dec (bad) in xchg aad jmp mov sbb retw outsb idiv or adc shlb sbb jae sbbl aas inc lahf loopne fldl into dec test xor sbb dec dec cmp andb jae stos popf push mov jne xchg lea push rcr gs add inc and mov cltd cmp xchg push cs xchg leave jno add int3 (bad) sub inc loopne xchg pop xchg movsl aas xchg mov add fist add fwait mov mov push icebp fsubrs sub or testl roll (bad) push dec push fiadd jge,pt pop (bad) sub lcall push call (bad) in jno call mov popl into lock inc add pop rcrb mov aas jge and or aad sti pop dec sub daa xchg pop sub xor mov lret cld mov cmp insl test loop sub enter out sub int3 xor sub push insl shrb hlt (bad) scas xchg sub mov sub lods mov cmp jb xor ss jg int3 push or js scas lahf cs pusha pop (bad) push cwtl mov std iret push xor pop push add xchg loop fdivrl aad jnp push mov lea pop add or stc fistpll aad xchg jne push pop movl cmp jno pusha mov in pop pop lahf inc xchg out call adcb lret mov cmp sbbb insb dec inc sub les in push int3 sub aaa (bad) je pop movsl push rol mov out cmpl into push mov inc rcl int3 inc cmp es mov push jbe (bad) mov sbb mov fchs subl inc cmc mov inc add bound (bad) and lods cmp mov cmp mov fcomps adc pusha xchg enter sbb (bad) loop push adc lcall fmul dec fildl push xchg rorl sbb xchg inc xchg aad scas lock arpl je adc dec or xor xor and inc push jmp insb jle inc (bad) xor lods fisttpll sti mov imul sarb sahf inc in pop fsubrl xor mov addl mov xchg bound xchg repnz pop ds test dec (bad) push inc push mov sti sub inc movsb inc arpl (bad) popf imul (bad) push aad int3 mov dec stos pop xlat cwtl (bad) and dec xor fcmovb inc ret scas inc rolb cmp lods and (bad) bound addl stos push add (bad) jb movsb mov test mov mov or sub xchg (bad) xor jle aas sbb or sbb mov hlt inc das fisubl xor inc movsl mov sti in inc pop xchg sub push scas or movsl dec mov sub adc sub outsl imul push sbb add clc add pushf into lea enter dec sub mov sub pop or cwtl ret cmpsb (bad) call lds lea inc shrb nop mov jae push mov cmp or mov xor fwait sub pop mov sbb lret lahf movsl or and or xor cmp cmp push lahf xor out push and into jle inc dec add and arpl xor ds lret push (bad) cmp push (bad) dec mov in mov cmp mov jg iret imul movsb sub or push loope push int3 mov fadds movsb rcrl push sub inc xchg xor inc mov or cmpsl sub pusha inc lret inc sub push insb pop jno inc (bad) jbe xchg roll push jecxz movsl push dec mov cli stos jmp cmc inc popf mov inc pop jle jp bound push inc sub shll add mov (bad) flds sub scas divl fdivs sbb imul ficomp inc dec pop mov mov mov jo and jmp fisubrl inc dec and pop inc daa pop xor sbb les jmp xchg inc sahf inc ffreep movsl movsb shll clc or jmp inc rcll outsb (bad) out pop mov pop gs add das add mov repnz (bad) sahf inc mov aaa push jge in (bad) mov addl aas scas push fldz inc negl lret pop inc adc lea lds dec rcrl add ret aaa jle jg movsb mov xor inc or ror daa loope outsl mov (bad) aad inc and inc movl decl add pop inc (bad) dec stc dec hlt adc and sbb adc call aam (bad) out jae scas dec fimul nop sti mov sbb fs fwait inc addr16 mov (bad) repz jb push xchg outsl pop jle out push int3 jecxz cmp or iret cmp mov fdivp pushl aad (bad) pop push xor data16 das inc push xchg push xchg and stc dec fisttpl mov div scas dec adc lds mov xchg pop lret fsubrl cmp push sub inc xchg add inc fucomp mov push adc out mov test adc movsl sahf lret rcll pop sub lahf pop mov dec mov mov add test ret xchg dec xor sbb push pop fs lahf std push dec movsl (bad) cmpsl lret add ja xor jmp xchg rcr or loop cwtl popf subl inc inc and aam test inc cli ljmp cmp xchg stos jae jp das adc mov jo or das roll out push scas stos into dec sbb stc jb xchg inc jns fild cld dec push cmp xchg xchg std inc in sub test pop or leave cmp inc icebp dec lcall out nop push or or popa push adc adc out mov and push in data16 daa aad inc fsubs lcall jmp mov stos icebp cmp push cmp sub and push clc xchg movsb outsb xchg inc cmpsl (bad) mov cli cmp xor push daa (bad) mov dec mov test cmpsb and outsl dec shll imul and mov fldl jecxz xchg jmp xchg aam dec and or iret sub xor loope xchg push xor js pop inc sub scas daa pop out inc push adc mov inc cmp fisub js ficompl std fbstp lret jecxz aam push xor or movsb and add lret cs loopne stos mov fs les inc inc jle jg xchg dec cltd shll and add sbb and ja cmc outsl jg cmpsl xlat push lea cmp dec arpl inc sarb out inc inc aaa sub mov pop scas push dec shrb (bad) stc mov fildl aad iret push cwtl inc add or mov push cmpsb xchg inc test leave fnop imul sub stos inc loopne dec mov mov or xor shl lds ljmp mov sti lret xor inc call sub sub (bad) adc mov inc jne push aam subb pop sub movsb repz xchg loopne sub lcall inc add adc (bad) jae out cmpsb push mov loop push pop leave inc push sub insb rorl sahf sbb adc push mov xor je fldcw aaa cmpsl loopne outsl mov into mov cmp sti lods ss mov aas sub dec xor clc inc adc push daa inc inc xor mov mov movsl (bad) out dec imul jae cli lds pop pop add xchg aas xchg inc mov jmp add lds into fldlg2 ret xchg imul jns pop xchg mov movb push ds (bad) sti test dec inc xchg xchg (bad) dec add add inc inc daa jle inc add mov cld adc inc sub rol jmp dec pop dec fs lahf (bad) cmpsl mov movl stc inc lods sbb mov aam dec adc inc mov inc xlat stos adc and subl in cmpsl mov or int3 lahf mov repnz mov mov repz popa aam or push sti or ror push in lahf mov inc xchg xlat mov ret jge pop inc push pop imul das aaa push xchg inc fcompl mov inc push repnz xchg movsl mov cmpsl push jae ret sti sbb push inc pop dec dec pop hlt shrb ja daa push das sub cwtl adc mov xchg xor mov fistl fbld mov loop std ret mov inc dec or nop shl mov sub out fbld push jne cmc jnp repz xor cmp mov mov cs sub sbbb jg xchg dec pop jl inc ja mov or arpl popa movb inc pusha mov aas push jae sbb outsl jno lds dec sahf pop dec or inc xor push and fs cmp or inc aad roll or mov mov sahf cmpsl xchg inc imul push (bad) jecxz cld call sub (bad) cwtl add push lods sti clc les sub jnp addr16 mov test jnp inc xchg js fisubl sub test hlt sbb inc shll lock cmpsl mov out jp ficomp test ret xchg jp inc in sub jns inc sub push jg xor xchg sub cmc dec (bad) int3 lret sub mov leave xchg mov xor inc dec ss jo lea ss jmp xchg int3 jg cmpl frstor notl mov or add or jno mov xor xor pop sub stos lahf mov sub add cmp int3 enter or jo push pop push or inc inc pop int3 pushf push (bad) jecxz mov add dec inc push cmp fist sub pop vmwrite xlat je (bad) (bad) inc pop pop mov (bad) rol dec mov pop sub bound lds xchg shll lds pop or push mov sub mov sub roll or mov sub aad lret push rolb ret adc les lret push shrl in and mov cmp sahf out sub iret cmpsl sub mov (bad) mov shll sbb lock mov ss push lds cmp sub mov sub and sub dec (bad) push shl xchg int3 (bad) sbb fstpl lea enter in imul insl sub mov jnp adcl dec insl fild stos cmpsl andl aas dec or stc cltd inc cmpsl sub adc lret insb es mov cmp repz dec stos mov repz sub xor jmp inc mov add or int3 mov loop adc fisttp or sbbl and jo sub push dec lret xchg xor fdivs shrl pop fnclex mov (bad) arpl mov ljmp cmp sti mov into ret out dec and mov mov pop (bad) push aam inc jo xchg adc cwtl mov js out sub jg out popf mov cs cs or mov fist xchg inc sub int3 xchg cmp push aad adc cmp sub dec pop jne ret jecxz popa (bad) lret stos add mov mov push sti idivb dec mov dec pavgb in js add jge sbb and jae add push cmpsl sarb xor and inc rcll repz push push sub jge xchg dec in into xor mov add xchg xor sub or xor mov mov loopne inc sbb (bad) icebp cmp xor (bad) pop rorb imul fidivl mov out ret xchg fstpl push pop sub jge test sbb fbld addl jl cltd push inc lahf gs adc insl xor inc test xchg push scas xor mov aas vsqrtss sbb push inc es add sbb lds mov and test stos lcall inc add movsb xor dec fstpl ja cmp popa sub ret pop in lahf inc les shll or inc mov bound cmpl xchg lock icebp in sbb inc mov stos cli jge jmp jbe (bad) cs subl test ret inc xchg dec out adc add mov lods push jns pop mov movsb and clc adc xor repz add mov es push xor push (bad) jle fldl out nop xor subl mov lcall inc pop sub and mov xchg je roll cmp and sbb arpl adc push sarb pop mov pop mov stc mov test jno inc inc push aaa lods mov idiv cmpsl (bad) pop mov adc xor in repz inc xchg in mov sbb jmp insb lods ret add outsl testb mov push inc arpl mov sub inc add jle bound inc lret sbb mov into and mov xchg scas cmp ficomp sbb xorb sbb add mov cmpsl dec cmp inc les dec std push jo inc clc das cmc ret (bad) pop cmp ficomp (bad) popa leave lret dec ret aad lret add ds cmp cmp push mov fisubr dec jne inc lret adc sbb (bad) xor js scas bnd inc inc aas movb test add movsb roll mov adc push sbb ret inc cmp push shrl mov inc dec jg pop dec js push inc and xor fadds mov out and lahf test pop add inc inc add jecxz mov fwait out loopne adc das (bad) out jae insb fwait mov inc pop aas je push and inc das in pop cmp sbb push and sti mov arpl pop incb mov lea int3 inc hlt jo jns push push dec (bad) cltd sub and lds mov sub inc dec add add (bad) dec pop mov dec pusha test test add lret ss xor push das ret mov rcll xchg or mov dec icebp push and mov jns jne pop inc cs mov push add (bad) out enter cld (bad) adc imul xchg (bad) pop inc pusha xchg mov dec mov shrl rol inc icebp cmpsl aas (bad) out clc mov popa mov jns add inc movsl dec pop aaa rol add sbb inc cmc add arpl mov addr16 (bad) cmp stos mov inc stc sub or dec sbb mov out ret imul fwait push lock add or xlat ds (bad) sub lret fisubl adcl bnd nop push mov inc sarb pop jae inc (bad) dec xchg push xchg fwait repnz xchg jle dec outsl stc (bad) dec mov dec add xchg ret outsb push aaa add jge pop inc arpl or pop inc and push inc mov cmpsb pop jae inc pusha jno ret decb inc daa std ds in inc mov in mov call inc xchg lret sbb cmp xchg mov sahf (bad) in gs fwait push and mov add inc inc xchg mov arpl les ds pop pop outsl rorl inc adc or pop mov outsl sub les popf roll sbb scas inc add in and inc push inc xor push imul ss and icebp adc ret mov jb pop jae lods add or or mov andb or pop xchg fs into call sub xor pop add and add dec inc sbb lret fisubrl imul sbb ss jp jb das push xchg ret nop insb data16 inc scas jb imul rcl loopne cmpsl cs stos pop imul mov add js add dec lds jge dec sahf sbb addr16 rorl orl or cli out jb in inc mov sahf sbb inc hlt adc push and inc cmpsb jp inc lea push xchg dec pusha (bad) ret lock mov out add mov pop mov jecxz push out mov fs sub sarl adc test inc dec inc pop pop dec mov xor inc sahf dec jp mov jnp jg adc cmpsl pop lds (bad) popl push pop mov cmp loope loop sub dec jge into mov ljmp dec pusha lret shrb inc cmpsb stos aad notl push xchg cli lret sub (bad) mov sbb or push outsb adc dec fsts pop (bad) popa sub cmp xor add movl cmpsb xchg inc jno xor add rorb push mov push mov inc inc inc lahf mov orl pop repnz mov movsb dec ja cmp cmp mov mov push ret dec js pandn dec enter mov add cltd (bad) repz std inc push xor test icebp call fnstenv fs shlb add jecxz xchg stos rolb cmp add push cmpsb jle je lds jno enter fucomi sub js and leave int adc (bad) xor fadds mov xor mov scas in ret fstl sub inc add xor dec hlt les mov ret jecxz mov mov xor adc cmp aaa dec jns out push add xorl inc sbb mov scas cwtl xor inc test ret add inc test arpl pop mov dec add xor jns ficompl cmp outsb lods add add inc aad rclb mov mov dec addl mov mov gs push sbb outsb inc pusha mov (bad) out jne daa push stos dec mov ficompl out fdivs adc rorb int3 out ret hlt (bad) mov (bad) bound insl (bad) fsts inc stos and dec mov cmp inc ja bswap (bad) das loopne inc xor dec popa mov test add mov rclb inc (bad) push adc and push inc test call push imul inc add sbb ds inc jbe sbb jne xchg xor in mov aaa nop add dec das add adc xchg lods xlat push (bad) xchg push sbb push cmpsl sub inc mov and cmp jmp push icebp inc dec and ret adc int3 xchg outsl fwait jns repz mov inc dec test sub hlt shl pop push push inc cmp movsl mov es inc mov jns mov sbb inc mov in lods test and add cmp and iret inc (bad) fiadd sbb pop call aaa and jnp and jb pusha loop fldl xchg (bad) dec add mov incl jmp ret mov (bad) aas dec push lcall mov dec pop push mov push sub add in dec insl add das (bad) pop out and int3 sub sub out mov sub dec inc dec jecxz adc sub push jb lcall inc push outsl cmp add js pushl lret sbb cmp sub cltd inc sub js mov jp and xchg xor mov and mov sbb outsb xchg adc inc fisttp jl icebp icebp lahf pushf (bad) inc sti dec pop mov enter out lret (bad) in or rcr les xchg or rol inc fbld cld jmp mov or sub hlt scas and sbb xchg into lock dec (bad) int3 outsl mov xor push cli repnz movsl push repnz cltd mov xor dec mov lret mov xchg xor data16 test insl cmp stos pop inc sbb push jg jecxz stc mov fistpll add (bad) ret jo loopne xchg push pop sbb call dec (bad) dec push out iret push int dec fnop add dec mov xlat pushl sub call aad cmpsl cwtl lret leave fs mov push movb es push inc cmp mov xchg mov shlb inc addr16 pop mov pop add or (bad) iret add out fldl hlt je lods or pop sub inc push cs js fstl inc repz loope ret enter (bad) imul sub test jg cwtl ret popf lret negl aas repz adc jl imul nopl dec inc or jl or and mov add ret jo and jae push fldz inc adc add inc adc xlat sbb jb ret popf fiadd cmp lret popa mov incl mov dec cwtl cltd mov jnp nop testb imul jb icebp (bad) xor lahf or and lcall xor mov stos pop mov inc sub aad inc dec mov mov jno pop outsl call jl xor loope popa push cwtl inc adc fwait aaa inc out or inc imul pop es movsb inc (bad) test cwtl insl sarl ret push sbb movq das scas inc xlat out incl xor xor decb (bad) xchg adc insl in adcl and xchg data16 (bad) xor xor xchg inc int out inc mov in pop cmpsb pop mov mov aaa and lds cmp std xlat mov xor xchg push cmc fisub adc lret lock push or arpl jb push inc js stos adcl cmp or subb push inc mov sbb add sub arpl mov adc jl sub adc loope mov pop sub sti leave fwait sbb inc (bad) mov inc inc adc in adc push mov xorl lock inc nop jne push mov xor insb lods insl xlat loope dec push lock xchg xor divl sub dec cwtl mov insl fwait jle inc lods add xor mov xchg dec xchg adc xchg ljmp or mov and repz loopne popl nop xor pop pop repz inc add pop mov inc aad xor (bad) int imul cmp add or out jbe out inc js push xchg jns inc push xor jecxz xor cmp mov push dec cli inc mov mov adc dec aam dec cmp push mov push inc sahf or push repz push inc cmpl sbb cmp mov lock sahf pop jmp pop xor les mov decl inc pop adc or xchg (bad) jae or jmp sub inc scas cmp aam dec imul inc sti inc push scas ss xor xor adc sub imul inc jl call jne mov adc rcrl stos xor push xor mov fsts mov adc cli mov aas inc push pop call cltd sbb sbb pop lock xchg dec lds mov add into scas fdivs orl sbb pop mov add cmp sti cmp inc push fdivs push mov (bad) ret int (bad) push cmpsl sarb push out xor cli (bad) mov inc push sbb inc sub movsl push aas stos pop mov gs out sbb pushf lods sbb mov and jmp jne inc scas xor lods or sub inc fmuls std enter dec dec aas movsl or mov adc jl ds cmp addb repz jbe inc in mov push fidivl mov cmpb push iret mov push (bad) inc movsb data16 mov jb,pn out and push mov xor xchg daa enter push fwait push scas cmp jle and jl lods mov inc jecxz sub arpl inc mov cmp fwait adc inc xchg add sub dec jle sbb inc test and dec inc xor jno or pop inc (bad) iret test in inc insl and adc xor cmp lret dec mov mov sbb (bad) les fwait scas jecxz out incb jg pop dec jns int3 cmp push nop and jl jmp lock cmp fildll test jo inc ret aam fisubr push sar loope jae (bad) dec nop and sti call std test or mov icebp inc or sahf jb shlb mov ret std mov int jns push jo fsubrl nop add lahf test scas arpl roll inc fmull or adc in xor mov nop into pop (bad) fs lcall add inc or inc pop pop lahf dec out cmc loopne imul push mov ret push add ds jo adc fwait js inc adc jo leave adc ja es sub jnp push cmp ja inc stos inc ret test and jne rorb dec xor jge aaa mov add cmp out aas inc and cmc cltd dec push int3 pop inc push adc cld test leave jne or mov cwtl (bad) hlt pop notl sub test imul or andl orps adc inc mov insb push movsl add inc jne gs push inc out jg into clc inc lahf ret daa (bad) xor insl and aaa add mov fmuls cld jge pop scas test sbb push ss jl (bad) clc movsb insb xor jnp dec sub inc sub pushf cmpsl jne clc fs fsubrl scas add mov shrl (bad) addr16 lock dec stos and or stos dec cmp sti imul and or ds inc dec cmc xor pop inc pop cmp pop pop inc xchg aas push clc and jne jno fimull inc sbb push xor clc xchg shrl sub cli daa (bad) push mov push mov test ljmp push mov stos mov test sbb cmpl outsl leave aas push (bad) or (bad) sbb or mov pop insb sarl cmpsl xor add mov pop into ja scas jns push out push fidiv das ret ja inc jb jae lret and adc out outsb repz imul outsl mov jb mov add mov int3 dec inc clc mov gs mov outsl mov inc fbld rcll in mov incl mov mov repz dec jbe jno aad push push cli mov sub add pop stos (bad) jmp xchg mov xchg or add cwtl insl faddl movsb dec add inc inc arpl sub inc add mov dec inc xor out negl fidivl add leave dec (bad) (bad) dec cmpsl dec lret add mov push test aad cmp push xchg outsb push push ret sub in loop adc nop (bad) (bad) fcmove testb mov pop dec push xlat or mov dec push push sub frstor xchg dec sub ljmp mov paddq mov fsubrs ja iret les rorb dec push lret fs xchg lahf lret dec ror and pusha lcall in test sub add cs xchg pushf cmp jae cmp fisubr adc ljmp sub inc fldt jmp (bad) xor pop add dec adc mov lock imul (bad) push push sub push sbb xlat inc dec fsubl incb sub dec lock lock shrl push in sbb in jns stos (bad) es add mov dec and jl mov lea and sub cli loop mov push inc pusha mov iret jo cli xor lods loopne test inc popa es add cmc addr16 lock inc xlat dec push fstps pop inc add or inc xchg sub jmp gs in and inc push orl jmp gs mov xor (bad) int3 inc cltd adc sti jbe shll ret mov adc dec ja in mov jecxz push lea inc mov pop inc jo inc aas lock xchg dec pop add inc pop movsb enter fsubr sti or jp imul jge and inc cmpl mov jb ss adc push lret cmp cmp das aad dec sub adc or cmp dec pop jnp cs out aas sub out je cmp jbe mov loope push inc xchg xchg inc cwtl in testl mov push cwtl mov xor mov xchg nop addr16 mov mov loop cmpl and add in mov in inc and outsl mov mov gs dec imul mov add pop mov cmp inc in mov shrl (bad) or or cmp jge xchg push sub inc jbe xlat inc xor cmp das adc mov jecxz,pn stos inc inc sti push lahf cmp iret pop adc xor dec pushf add mov test jg or lock push scas xor loop fsubs push sub ret xchg stos push fwait loop aaa dec (bad) fiadd sahf mov dec (bad) sbb or int inc cli pop sbbl push inc mov out ss xchg push arpl leave inc jnp in xor jnp (bad) int3 (bad) mov sbb arpl (bad) adc cmpsb in push fdiv add test inc ficompl pushf scas push sarl bound fs int3 stc push jmp inc xchg or mov mov push cld dec pop sub shll (bad) mov add xchg mov mov nop adc popa fs add and mov cs add roll pop mov daa push (bad) xchg pop movsl inc lret gs loope add pop jnp test jmp out ret cwtl xchg push sbb lahf dec pop dec mov mov adc xchg adc (bad) subl sub dec aaa ss in ficom inc cmp pop aam xchg xchg rclb add lds (bad) adc aaa jmp mov mov mov jb inc mov imul mov fistpl xchg lret inc and cmpsl jp jecxz xchg lds dec shrl lcall jmp cmp jg mov fidivrl push shrb imul (bad) clc xor jle sahf daa jecxz bound pop cs push jae loop jae aad xor psadbw fadds pop mov pop mov clc int3 fstl xor push inc iret ss jb dec nop mov (bad) inc loopne lahf cwtl or cmp test in mov sti lods and dec outsb enter int3 cmp int pop out xchg xchg repz test xchg jmp pop xchg mov testb jmp inc into scas test jecxz rsqrtps (bad) jae test shl stos inc sbb pushf xchg inc sbb (bad) or push mov (bad) iret das popf add fld int pop mov adc add cmp ja xor aaa dec imul pop dec xlat push jnp jge enter inc mov sub and int3 sbb dec mov scas pop sub push and push data16 jno shrb sub ja xchg inc stos jge xchg push lods std leave cwtl dec ja inc in sbb push adc or pushf test out aam je push (bad) js mov inc lods mov pop outsb inc pop out add je inc fcoms jne mov mov mov gs mov fnstenv dec sbb lock jb push sbb sbb in jno je cltd loopne jo inc adc push sbb and push inc xchg sar sub adc data16 and jnp or mov inc push shl fbld add insl jle or pop xor xor (bad) inc inc popf push xchg movsl out mov xchg sub pushf adc cmp dec xchg mov xor sub jge fcompl insl es push xchg jno mov test cmp lret js cmpsl sahf inc addl jb aas xor (bad) pop outsl inc push cs lock lahf inc jo mov rorb add mov push inc fsub inc sub xchg ret push jne shrl lods arpl fdivs (bad) lock mov jbe lock mov cmp sarb add ret or aaa xor dec roll incb loopne lret lcall aaa add lret hlt stc ds (bad) cmp fiaddl dec jnp,pt fisubr out (bad) cwtl call xchg fmull insl out pop stos insl dec shr mov adc ja pop push dec sub lret cld or push sar addr16 icebp dec fstl sub int3 enter pop ret arpl push cmp inc push sbb fs out jno jge add arpl int3 cmpsl icebp imul lret int3 mov into shrl dec push fdivrl aad test int3 dec (bad) mov jo pop mov dec ret pop sar jno push call sub lock les mov xor mov mov push out jl jge daa dec movb sbb lahf aad lret mov lock push std sub arpl js mov mov xchg ja jbe ret test mov sub or popa dec ret jb adc add addr16 inc push dec push and push out inc in adc sti push add test adc and dec cltd mov aaa cs dec pop push xchg push inc ss inc pusha add test mov fnstenv nop cmp lea shlb push imul pusha mov ficoml add inc test out add test pop or mov aas in bound inc lock popf inc stos fcoms mov inc test cmp scas jg mov lock jle icebp mov imul dec pop dec add pop jcxz inc sub inc dec mov and inc dec push stos mov hlt xchg lock lret inc pop mov rclb popa jb pop test mov xor inc mov cmp outsl das gs loopne xor (bad) lock inc (bad) pushf leave pop scas mov movb mov sti sub inc insb fistpll jge loope stos cmp lods or imul cmc lock ror popa nop mov push das js inc add mov faddl cmp push decl mov jge mov daa dec inc cmp ja in mov or mov pushf test notb hlt pop bound arpl insl outsb ja mov xor inc xor mov insl inc sub or ljmp lahf mov (bad) jo rol ja sbb jecxz or repz shr inc ss push les lret sahf add in pop add rolb scas loop mov ret sti jecxz add iret jbe sbb mov or pop jae dec repz stc or and and mov fdivs sub jle addl (bad) aad mov mov xor jge and vpsadbw sbb js inc ljmp add pop mov fiadd inc mov (bad) out jp adc push inc pop and jns call popf ret fs gs push fwait or sti xor roll sahf (bad) jno aam inc pop xchg sbb cmpsb push push add inc adc aas push and mov in mov jb jp jno (bad) push fstps mov sub or mov inc daa cmp add (bad) mov inc mov add lods js into inc scas ss loopew loopne inc (bad) dec mov sub jno jmp jb sahf cmpsl int3 inc jg mov shlb inc adc les xchg jno jae addl xchg movsl sub out mov lahf adc jge loope cmp repnz xor jmp pop dec rolb sbb mov das mov outsl mov sti insl push and mov ret push (bad) dec add inc out mov int3 imul push pop stos pop sub push push dec lds sbb xchg xchg iret dec int3 lahf lcall cmp sub mov adc das jo lret (bad) jle sbb inc rcrl sar lcall xchg ss popa mov in add xor mov jne mov add ja insl ljmp pop (bad) inc push (bad) adc outsl cmp (bad) je lods pop cmc in push sub sbb adc and lcall enter (bad) aaa xor lods std dec cltd add ret sbb push dec sub imul insl cmc jp push cmp inc dec jo jb adc orb jbe lret pop repnz jecxz int3 arpl mov jb popa cwtl add add out lret sub negl mov lods inc out dec (bad) jae xchg sub xor adc sbb sbb fmuls inc icebp jnp cmpsl frstor repnz mov out lret jno sub jg daa add xchg push xor lcall inc mov dec fildl pop jo inc dec pop dec mov repz lea and (bad) iret loopne mov sub inc adcl and xbegin push jb push fsubrl jmp (bad) and adc ret lcall mov pop add inc inc jle in clc dec mov mov (bad) lret (bad) mov jle inc xchg xor xchg call insl inc push cwtl scas fcomps push (bad) stos mov cmp or lahf dec xchg pop leave ret xor sbb adc sub jae cmp pop cmp clc stc ret pop xchg stos push mov std das sbb inc cmp push jmp pop adc mov (bad) mov xor dec cmp fsubrp dec popf lods out mov add test stos mov repz lea popf adc leave push xchg int3 mov lods add test push out addr16 out xor and inc push xchg mov int fdivrl and pop sti ret ja aad outsl adc and in inc (bad) in cmc mov mov inc jle in (bad) adc sub add and adc cmp rorl imul xor adc cmp xchg adc push xchg inc fistpll add sub lcall lea mov mov jmp pop mov jge inc inc dec ds pop insb inc fild fcompl push pusha test xlat mov aas cmpsb mov pop (bad) into inc cli xchg mov icebp push jns mov jbe push test addl or push inc fldl mov add sub stos in pop movsl jl ret cmp mov push xchg cmp dec add (bad) (bad) cmp pop js rolb xchg test dec aas cmp iret sbb inc mov cmpl movsl dec inc mov sub fmuls jo mov or inc flds fisub inc inc or mov jae loope jecxz in dec inc int3 sti out or pop les test sbb insb xorl aaa stos dec in and nop inc adc mov lret push dec (bad) jge sbb popa push test insb mov add and outsl dec into pop enter xlat push add push mov pop sub and test dec in inc and pop jge inc or add fwait shrl mov xor loopne dec (bad) or sub jno ds add push inc popa fs dec push and sbb adc push inc jecxz cs pop shrb dec stc push in (bad) jmp inc push push pop cmp les es dec or cmp add jecxz das push scas sub insl test jmp bound or add dec into dec mov cmp aas jo test es mov fcomps inc add les inc iret sbb sub sahf pop jecxz dec add aad (bad) jge mov lock add ljmp sarl stc dec bound popl sti pop mov push out arpl sub xor jecxz fdivs adc xlat or cmp cmp scas imul dec mov cwtl cmpsl lods mov sahf mov out pop jae mov fwait cmp jle push aas sbb hlt sahf cmp je jb outsb popa lahf sub addl sbb cmp icebp dec jp and push cmp lock sbb lods loop xchg jp dec fisub sub cmc imul mov sub jecxz mov and sub test nop (bad) adc test loop out andl adc lret mov cltd les inc and push add push push mov inc adc mov mov push add mov inc mov or mov sub inc adc sub mov adc sti ljmp or fdivrs cmp inc pop push lods shll js and outsl inc data16 rep cmp testb fbld aaa mov push aas lds adc and cmp xor push adc xor cs mov fadds and cmpsl mov cmpsb or inc xchg inc les mov stos pop sbb stos cli inc roll in cmp enter add mov cmpsb adc out cmc sub sbbb push outsl ret pop sbb je and mov mov pop popf movl mov cld imul lods sub mov cmc (bad) and xchg inc lods idivl ljmp cmp icebp add push ficoml push mov repnz in addr16 jl lea inc xor test shrl push xor es repnz add pop inc and pop cmpl cmp jnp outsl lcall fdivl push jp ds sbbl in inc cmp adc and push push shl pop mov dec lcall adc sbb sarl xchg dec mov arpl in inc xlat call adc inc sbb pop je jle inc test dec pusha inc fild rcrb out je jg jl pushf pop inc shl fadd in mov mov repnz insb cwtl das dec fnstsw arpl inc sbb cmp sbb fwait inc dec dec jb fisubrl push ret repz addr16 stos addr16 xchg fld xchg and adcb sbb into add notl lcall xchg jno inc and je in push or and mov test inc xchg adc inc xlat in addr16 jbe xchg sar (bad) (bad) dec inc or repnz sub dec and outsb mov pop (bad) xchg fdivr push addr16 inc stos sbb pusha xchg (bad) das testb sub inc sub sbb les mov add push mov dec in xchg andl mul sti ret add inc jne cs or cmp xchg sbb out pop out ret push add scas inc inc call pop push pop cwtl jnp jecxz mov inc mov mov jbe and popa inc push iret mov pop repz push out jmp pop jecxz std addr16 push lods xchg divl pop push mov add in enter cmp jg inc cli pop loope je lcall loopne add xor inc xchg mov jmp insb addr16 pusha mov push cld pop xchg bound rorb repz mov ds ret outsb mov push stos mov jae lcall xor lahf jb and les xchg aas jno mov scas inc mov push scas inc jl xchg stos jle sbb inc mov cmp push pop xor es fwait ret sbb xchg sbb inc inc inc pop jbe mov mov cmpsb data16 test inc push insb mov cmp mov je xorl cld push popl lods sub fsubp and adc pop sub mov jne pop mov cmp stos jae cwtl sti nop xchg lea cmp pop xchg mov cmp out fwait sub test inc cmp inc xchg enter xor inc (bad) jle pop or nop (bad) arpl mov out sti les sub cli andl sub fbstp das inc push jp call (bad) arpl push push int3 xor aas lods (bad) (bad) cs lret stos mov inc movsb pop sub xor nop add add and and xor sub inc cmp mov and jae ljmp push mov orb fbstp and and std sub xor dec sti cmpb inc insl xor ret clc xor jae pop lds test pusha loopne sbb push inc (bad) iret popa insl andl int3 (bad) ror cmp push cld cmc add fisttpl adc mov popf adc loope ficomp icebp scas push sbb lds std cmpsl cld jmp dec inc fs inc (bad) sub int divb xor icebp scas or jns cld or jp and adc dec xchg or ret push inc sub add lock sbb mov in or (bad) push das repnz push lret mov arpl mov sbb jb pushf sbb iret xor mov (bad) mov iret mov fcmovb (bad) fdivrs mov sahf fwait daa jl addr16 mulb frstor sub clc adc pop stos inc in ret test lods pop add pop (bad) push and pop rcrb xchg inc (bad) ret in mov xchg cmc repnz inc add (bad) outsl inc je lods (bad) lret mov sbb stc sbb gs push mov ret lret and das movsb xlat mov xor sti cmp cli sub xor inc (bad) fsubrp pop sbb dec repz mov mov adc jo fisttp js dec sarb clc inc into aad gs (bad) xchg cmp repnz mov inc shlb inc dec cmp sahf imul push icebp lea cmp cmpsb and add adc mov bound xor mov lcall pop fistpl (bad) icebp mov test lds xchg or sbb pinsrw inc cltd sub inc cmp lock rolb or jmp sub mov testl (bad) mov inc push xchg sub xchg std loop loop gs inc aaa add and or sub xor sbb orb pop aad ss xchg mov xor inc inc arpl add adc cwtl lods fildl out or pop cmp data16 movsb inc cmp pop (bad) (bad) into movsb sbb mov stos cmp cli cmp mov shll mov adc inc sbb loopne push popf dec aas jo sahf call dec mov cli jae push mov and in movsl mov mov inc or dec lcall inc fistpll decb or jae jno mov inc aaa jg xor pushf cmp mov ret pop ret jno add popa int3 test xor rcl mov or int icebp fmull test fsubs out cmp inc mov xor pusha inc jbe es (bad) leave add lcall incb add in mov jmp rcll cmpsb stc push mov shlb inc push mov arpl ss (bad) mov push add add loope inc out jns outsb push popf push test sub mov inc dec popf insb inc cmp daa sahf push push inc inc mov ja mov jb lds sub test push lods nop jno push push enter adc dec xchg loopne pop (bad) fist jl dec int3 in push dec lahf (bad) std dec fwait jecxz inc mov push xchg inc jl cmp mov aad push xchg inc inc mov pop or adc xchg mov jnp add and add ljmp and out mov repnz (bad) fcomip (bad) add sbbl ss push mov lret sbb cmp mov cli lcall lock cmp inc aas jns pop jb adc xchg movsb inc ljmp lcall hlt pop lock test xchg aad mov int shrb push jnp inc inc xchg gs xchg push je popa pop push into cmovae (bad) (bad) sbb insb or enter rclb rcll pushf testl in jecxz cmp inc out pop sub mov mov repz in nop aad push mov test mov xor mov ljmp pop dec testl sahf sub ffreep xor mov dec shrl pusha push popf inc pop subb movsl dec jnp jle (bad) rep and sbb xchg loopne xchg clc cltd fistl and pop mov fiaddl push jb and ficoml out inc inc cmp hlt mov and (bad) hlt mov cmp test rclb ret out dec ljmp pop inc pop xchg push enter cmp and inc movsl pop jmp lret (bad) jno fild cmp cmpsl jge lds jle add mov push mov sub add pop fwait pop jnp rclb aas jg ljmp repz stos inc pop cmpsb pop xor jns jg call xchg jb mov mov jno inc lds aad aas add aam pop push rcr flds shl in add test pop mov inc out insb adc (bad) xor pop or ss arpl add jb or or inc mov inc dec cmp push mov xor jmp inc mov inc sahf inc sbb xor imul addr16 je dec xchg pop xchg cltd inc adc in jns mov popa sub xchg dec es sarb xchg fmull inc push scas sub in loopne inc inc rcr jb mov jecxz sub xorl movsb inc fucomi sub inc jne shl pop or inc and mov push test mov repnz imul loope jle repz and scas ljmp xchg popa inc out pop rclb inc mov jp sarl dec mov inc addps fstpl cmp add add adc inc ja out cld push mov xor and (bad) add repz imul add stos push dec sub push jno cld or jne pop sub mov fildl (bad) sbb test jge and stos fisttp faddl hlt dec cmp adc ret adc push and bound dec ds sub dec cmp xchg test xchg xchg (bad) jb cmpsb push inc mov add bnd pop mov mov push sub pop mov push cmp cmp aaa mov pop stos jns mov lds inc add add mov pop pop mov insb lret adcl inc cmpsl pop stos mov inc iret enter pop and std pop es xchg xor pop add and rcr xor imul ret (bad) iret inc sbb out xchg or push mov je movsb adc xor (bad) std jl fs add pop or xor orl repz xchg adc lret mov dec and cs (bad) scas add repz (bad) pop xchg jmp stos sub int3 js mov inc inc clc and xchg (bad) aaa rclb loope dec inc dec pop push test push mov ja inc pop or or mov negb (bad) push or cmpsl sahf or cmp inc mov dec mov js lea jp jecxz add jno pusha jg pop inc mov inc out mov pop fcmove xor shll addb lcall lock and cmp (bad) push pop icebp das inc add and mov jecxz shrb repz adc ret dec pop fwait idivl pop cmp jne cld lods (bad) jo cmc sbb std mov or shll jnp test ficomp dec xchg or mov fistl lea (bad) not mov popf jmp inc and cmp inc dec mov addr16 imul pop int3 xchg inc jge inc and stos adc push inc and pop fist mov mov cmpsb test mov jno jg ret mov roll (bad) push cld jmp in mov xor inc sbb xchg stos out rcll push push pop mov sub mov loope aam imulb adcl push mov enter fadds out fisttpl push mov aaa or pop jmp aas fwait inc adc fldcw cmp mov cmp pop sbb jl mov cmp mov xor inc mov mov mov inc mov mov sbb out xor les out adc cwtl xchg sbb bound inc push andb inc jmp xor inc mov in ret dec pop (bad) lea repnz aas roll cmc sbb mov cmp movntq push (bad) cmp add mov shrl push xchg movsb inc xchg roll dec push push sub int3 push adc cmp pop addl pop dec js scas jne cltd mov movsb and and test arpl int pop xchg das xor jg sarl into mov (bad) imul lods push sbb sub push push inc xor jo aad shl inc adc sub cltd adc jp inc lcall xchg aad out (bad) lock add xor call arpl pop out mov test mov cmp mov adc cmp xchg xor subl dec sti (bad) or xchg pop loopne add mov mov pop xchg loope jne inc loopne and fwait or sbb mov sub stos mov (bad) and ja sahf out ljmp rolb scas insb sti cmp sub seta out popa aam xchg xadd add mov add jb inc cmp lret dec sub xchg add cmp into scas add adc sub cmpsl cmp sub cs cli push dec pop xor pushf push movswl gs mov inc leave cmp add hlt ret test jmp sahf or movsb inc test or push (bad) mov jecxz jns mov repnz movsl fiadd mov movsb push dec xor push adc ja (bad) pop and aam add jbe push ret add cmp mov xor movsl inc jns jnp int push icebp repnz sbb jns (bad) lret jbe jae cli push les stc lods or adc mov sub rcl pop mov jmp les jmp or jg add int test leave mov xchg out inc stos add (bad) ljmp aam pop test cmp mov jecxz or inc adc push dec mov mov mov cmp icebp pop jge ret stos fmuls inc mov mov in inc incb adc sbb cli xchg xchg mov jl cmp push adc (bad) push popa pop and loopne inc jecxz out jle push push lcall sub jno and xchg pop pop mov xor jnp push les xchg (bad) and mov pop adc les jbe pop jae or popf das iret sub push insl loop mov inc inc pop (bad) test mov lret in stc imul dec inc and add mov inc mov pop jne movb mov xor push inc insl pop push jmp addr16 jge push inc pop outsl (bad) mov inc cmp (bad) xchg pop push inc fs jle subl rolb and in inc mov push mov push inc add cmp std dec xchg das ret mov push sbb fildl push shl sub adc loop lahf add lods sbb fldcw ss inc mov or xlat inc jne sbb std push pop dec test fldln2 data16 inc adc sbb dec sbb (bad) icebp in dec mov jo jbe lea or push pop xchg (bad) mov (bad) pop gs inc in sahf jecxz aas push pop orl add inc enter ret arpl mov inc aad mov sub inc imul movsl pop (bad) outsl mov ret arpl xchg call mull lret push test fild and jle loope mov inc imul mov scas in cmpsl inc ljmp pop (bad) or lds sbb push push inc aam jl ljmp and and xor ss and in imulb in inc sub pop inc pop jo ja aaa fwait cmp mov popa icebp jno adc rcrb movsl loop repz cmp add pop mov dec mov aad pusha jecxz cmp leave inc mov ret add push lret dec lahf pop rorb in out and cs mov mov test mov mov cmp (bad) jae (bad) jae adc or dec xchg sub jae rolb xorl jge out dec ffreep pop int xor and sbb out inc pop mov ds call (bad) or fisttpl inc jb mov ljmp popa inc les in xor outsb out inc jne test adc and xchg (bad) push fimul iret push mov incb push add out fisttpll xchg mov inc mov jle es sbb add dec sub add mov int orl mov add dec dec mov adcb or (bad) jge jle pushf mov xchg cmp sub push out or aas dec fistl pop mov xor test idiv inc mov daa cmpsl cmp inc ret mov andb mov clc lods jmp inc inc adc xchg inc jge mov out sub ret inc inc push lcall (bad) outsl add sbb sub mov addl cmpsb jb (bad) pop mov dec ret push sbb leave sbb in mov (bad) popl pop pop xchg mov add ja pusha jnp int3 pop mov jmp sbb xchg inc or movsl mov add and jmp sub push dec pop xlat sub (bad) cwtl shll mov cmc cs sbb rclb mov cmp hlt out xchg mov add cmp jo dec stos cmc inc mov xor addb aad iret ds xchg pop fnsave inc push inc add jg inc inc stos sub push inc fiadd or sbb int jmp mov xchg sbb dec mov popa pop out cld bound test fild pop insl push adc inc loope vcvtsi2ssl push jae pop push in leave inc mov xlat dec in outsl in cmpsl inc loop stc sub push inc pop or push jle xor push sub lahf mov inc fcomps adc stc jns inc in pusha nop add pop jae ret inc sahf (bad) sbb (bad) out jecxz xor inc lock sub or dec and popa add cld inc js push inc xchg lds xchg xor mov mov inc jb outsl test adc mov inc mov mov push into and pop lea xor mov cmpsl adcl das cli test jae xor inc loop (bad) jle mov xchg mov jge sbb pop dec dec mov jno subl lods mov das dec aad (bad) cmp clc shl jge rorb and inc and mov push add rolb push stos xorl fs mov xchg cmp jl pop push jne mov sbb and out imul lcall ljmp cmc out add dec mov (bad) cmp cwtl mov cmc jle xchg sarb jle xor sbb sub imul dec cmp cmp test daa ret pop mov inc inc imul shlb add mov out pop jae mov push xor mov cmc sbb jne xchg dec mov inc add rcrb ja add inc sub or mov in iret mov push xchg lods aas ds (bad) arpl sub xchg je pop pop cmp cwtl push jecxz xchg sub sbb or insl add aaa cmp or fldl cmp xchg xchg syscall repnz arpl lods mov fistpl rcrl pop sub inc clc inc xor test jmpw inc mov or cld scas cmc icebp mov imul das in lret mov mov add sbb ja stc or add rorl mov fidivl dec cltd lret mov inc es mov cmc xor insl out or int3 popf mov (bad) iret sub pop outsl cmpb adc outsb (bad) iret cwtl lret or (bad) mov mov cmp iret leave aaa dec sub (bad) aas clc movsl pop jnp jno loopne shrl push pushf mov mov add mov js mov inc enter push xchg fwait mov or out xchg loope pop cmp jo lea adc inc dec pop stos dec adc xchg (bad) in aaa cmp movl mov cmp dec fadds jmp int mov cli mov lock or xor or sub ret sub or add loope push or sbb lret jecxz or pop xchg pop xor in cmp aaa imul lahf icebp xchg and mov sub push fxch cmp shl adc jne pop pop ja mov fstps clc lods mov call out std inc call js add or fs sbb xor lret add sub push push mov mov inc das lea loope bound inc sbb push shll (bad) fcmovne inc cmp adc cmp clc xchg pop dec push xor pop jg inc xchg dec push inc fcoms leave daa jmp sbb mov pushf inc or add pop int3 inc jecxz in sbb mov and pop aad push (bad) jmp ret dec adc sbb inc ret repz and lods jne adc push jecxz pop jno ja cwtl insl jmp mov adc mov inc leave jg and inc xchg loopne or push inc push scas add inc xchg stc lea inc outsb adc int inc xchg nop inc aaa (bad) mov and adc jae dec std sbb and inc daa pop ss mov push cmp sub cmp push inc sub add aas inc lea adcb aam addr16 aam lcall (bad) repnz xchg xchg (bad) adc bound inc pop fistp jmp mov push std push mov leave mov fisubl cmovs cs and pop sbb stos jb fnsave push popl adc xor fadds push xor xor xchg xor test lahf subl ret rcll mov js jp mov adc mov and adc push jecxz sbb mov out and lahf or xor fstpl stos mov sub nop (bad) mov inc mov mov shrl lahf (bad) xor jle and pop loopne (bad) fstl adc cmp nop sub ret mov roll inc sbb cmp test jbe ret out xchg iret mov inc popf pop sub sbb or xor inc jl rclb dec les hlt andl addl xchg mov fcomps jns lds lods push xchg inc jb rcrb mov sub pop (bad) loope test out xchg push push into fwait out xchg out push add sub fwait andb stc add pop xor xchg pop sbb fs lods cmp in lcall push mov or (bad) ret fucom and ss lahf xchg dec mov push xor out jo test (bad) lret (bad) sbb rorl sub jae cmp dec xor jg arpl movsb push (bad) mov cmp dec (bad) mov mov sub out xor add aad sub jo inc mov and cmp push xchg and jmp sbb adc inc (bad) stos loop add cmp imul inc ret lret adcl andl xlat cmpsl inc stc movsb inc call or je lods pop in add adc sub push mov inc mov sbb mov inc aaa out add mov push mov xor mov (bad) mov aaa repnz int3 fs fisttpl iret shrb enter pop inc test and test xchg es enter sbb imul inc pop scas enter push pusha push jne lods sti sub adc sti or push inc inc xchg jno adc jno icebp jg stc mov and sbb insb sarl bound cltd cmpsl incb mov jae push inc ret mov push ret leave xlat fisub cmp (bad) xchg aam sub jg ret or stos inc pop sub mov mov xor push xchg outsl inc es negl out push addl dec inc test sub xchg scas (bad) icebp add out inc test inc fwait jbe nop movsb xchg xor pop inc inc mov push ret ret mov pop pop or dec or jl cs push push or cwtl int lods push add daa fxch pop dec jo dec test mov fiadd xchg iret mov std outsb adcl dec jae jb scas xor sub jl lea mov ret and imulb mov xor movb inc enter pusha aaa cmpsl ljmp jo xor rolb inc xor enter mov or shrl xchg add or aam out insl or inc addr16 dec jne and data16 inc dec dec cmpsb mov add mov cwtl push cmp jmp shlb add mov mov xor mov inc test sar in sub inc add out mov inc fmuls and pop pop stos cmp pop lahf movsb ljmp test fs cmp sub sub xchg dec dec shlb mov mov or and lahf mov out ja fbstp or cmp movsl fs xchg les pop mov cs cs insl scas dec daa call jbe lret test sbb sub aas adc xlat mov xchg out mul fild sbb dec xchg dec push dec addb les dec jb pushf jae stos inc push or xchg in cmpsb popa sbb mov popf pusha sti addr16 int dec mov mov (bad) rclb out mov inc lret nop inc inc xchg and and xchg mov cmpsl push ds mov pusha pop mov (bad) mov icebp dec add sahf dec rcrl push dec or inc add inc xchg push sbb (bad) movsl xchg adc pop imul mov inc fwait loope div push arpl fwait adc pop adc inc cld xor xor xorl test mov pop add iret jge dec adc ret and and jno (bad) stos xlat inc lods (bad) das test xor jae inc xor outsl rorb subl xchg in sub xchg out inc cmp rcrl mov xchg rclb dec sbb mov push adc hlt test cld or sbb outsb (bad) scas (bad) aas jno cmpsb int pop mov mov xchg imul add adc scas inc not hlt mov loop xor and pop jge add lock inc pop sbb out inc inc clc int aaa lods loop addr16 rclb and mov jg lahf ret xor imull enter lcall adc cmp popa xor inc push and jp push rcl xchg push add ja pop pop in cs cltd xchg leave fistl call movsl add mov push and inc insb push mov std xor into xorl sub aas popa cmpsw adc xchg inc frstor stc stos mov cmp push push inc inc pusha jno dec mov mov and xchg dec ds (bad) xchg outsl xchg jo and cs pusha jmp inc adc insb cwtl mov xchg loopne xchg sub sub hlt mov dec sbb or lahf dec clc sti xor repz push jle jg and and jb and cmpsb ret (bad) push das gs xchg or xchg std xor xor sub inc ret pop pop (bad) cmp shl test daa mov repnz sub xor addl mov gs jp push scas add or imul js xchg repz in sub pushf inc pop inc into aaa mov sti sub pop pop dec push fldl push out popa (bad) xor sbb inc imul orl pop inc jae dec add movsl inc mov fstpl (bad) dec mov jno push jo cmp loop int3 pushf out outsb in pop (bad) xchg add stos jmp xchg fisttpl imul and sbb mov je xchg xchg stc insb inc push mov cwtl cmp gs or (bad) arpl outsb xlat dec call adc ret (bad) jno hlt aaa lods and add popa in out or mov jg fstpt inc cmp dec sub or fidivrl dec pop inc scas or mov int mov sbb pop out sub dec iret mov outsb pop (bad) into xchg rcl outsl rcll sub push cmp inc add xorl add push jle or repnz outsl fptan movsb arpl push ret sub adc gs xchg icebp xor mov mov out ja,pt imul jg bound inc pop ret mov inc pop loopne push jo std inc addr16 xchg fwait sbbl add mov movups hlt inc xor jo and sbb sub pop cmp es repz pusha push inc mov xor adc xor jp adc std sti lock sbb ljmp fldt test (bad) sub push mov cltd sub (bad) mov les repnz xor inc lret pop lods out sub mov stos sbb sbb imul sbb xchg sbb inc dec aad inc mov mov test push iret popf mov inc aam sar hlt pop jge test test adc ss push mov inc mov and fdivrs fdiv mov dec std fisttpl dec push sub mov ret fdivrl inc repnz (bad) mov idivl pop cld adc dec imul xor add (bad) mov mov lock xchg sub mov test lods mov and ret (bad) rclb inc jnp jo lds repnz xor inc jb jp sbb push roll xchg adc cmpsb pop inc inc (bad) aad addb xor ss jecxz das int adc mov cmpsl cli clc xchg mov xor and imul lret lock push pop adc push lds push loope sub sbbl jp fisub rcrl and imul cmpsb or cli add sub cmp sbb inc mov dec fidivrl mov xchg insl leave pop inc sbb mov icebp fsubs xchg jle,pn roll lahf out or mov inc out pop addr16 xor xchg jae xchg ret cli aad enter mov xlat jecxz movsl jbe iret cwtl sub push inc xchg syscall mov inc mov dec or inc pop sub xor fistp lcall mov add cmp call inc mov mov fninit loop sbb mov sbb movsl mov dec sub ret inc cmp leave jle mov mov inc dec stc cmp lods repz dec cmc outsb pop inc pop dec sub xchg dec and sub jecxz inc pop outsb push push inc loop enter movsl dec rorl mov lcall addb mov dec jecxz fistpl movsl push add sbb pop mov push xchg mov fwait mov (bad) cmp pusha mov mov loopne,pn add sub jo lock pop imul jecxz add add jo loopne insl (bad) jecxz push dec cmp in inc dec mov xchg lcall or mov pop inc idivl sti (bad) loop dec mov test mov push std sar (bad) icebp insb call mov lret gs outsb mov clc add xor cmp in dec dec cmp mov (bad) repnz mov test jno inc mov and jg inc mov ja push ljmp mov pop or pop mov lahf (bad) add inc push fucomp sub mov sub ljmp es repz test in mov popf inc pop pop sbb push jg add popa mov xor push jb test pop add test pop mov mov push and add add ss shrl add daa mov aam fisttpl jb lock sbb mov in popa cld (bad) mov cltd imul mov mov inc (bad) (bad) jle fbld dec and and fdivl pop cld jne inc mov pop fiadd mov int3 (bad) rcll incb jl and jecxz notl movsb lcall xchg lods in imul test cs and add pop push dec jb scas out mov outsl adc aaa jle dec jp cwtl mov inc inc sub sbb dec int3 pop popa aaa push inc dec inc and fwait and push inc imul test (bad) cmc or cmp push cwtl out clc int3 push cltd fisubr add faddl leave push inc mov inc sbb nop xchg sbb lock ret xchg inc fildll popf pop sbb inc add cs sub jmp push add rcrl add dec out scas sub push sub lret sbb fistl pop in xor fadds inc cmc xor mov or aad (bad) mov xchg dec add inc inc cmp cmp mov mov dec xorl testb push inc pop jmp popa jb add enter mov (bad) sti inc sbb jmp pop inc out popa scas jo ret ret movsl lahf mov into testb aas xor cmpsb in inc sub jnp xor adc lods pop sub rol push and cld call pop ret ror mov hlt push std pop call push inc adc aad add fisubrl ds inc lcall rolb adc mov lret inc jge or add and mov xor fs mov jno rolb and push popf aaa bound dec xchg mov iret jg cmp mov add int cmp mov mov adc add test dec jne or mov insb mov dec fs or xor or and jmp or stos inc pop mov aas mov arpl inc mov imul inc (bad) std pop push inc inc and push push inc inc sbb push rorb jle test dec mov aas test jne arpl addr16 jo fs pop or xor jge ja jmp pop push xchg jmp (bad) sarb xchg arpl (bad) fiaddl sub adc dec inc sbb xchg jmp imul loopne aam or sar mov jbe or adc push mov cltd cwtl movsb xchg sub xor pop mov inc mov imul repz int3 dec mov dec xor int3 les cmp (bad) xchg xchg and imul mov pop test xchg insb mov sub rclb push dec mov inc cwtl dec lods add outsl out inc inc popa fs or dec test mov clc xchg xor fwait inc jg aam mov mov xor add push push push ljmp sub int3 dec mov mov mov lahf inc out ljmp or ds inc hlt add in xor stos loop add push pop dec popa pop xor jecxz jle inc add popf fdivrs xchg dec mov pop inc inc (bad) mov jae dec lods repnz cmp ret and mov pcmpgtb xchg inc out dec cmp and lcall addr16 imul ret adc (bad) add sub fstps xchg jmp inc loop scas or mov cmpsb ss std dec movsb cmc out fildl addr16 sti lea loop cli push std repz fdivs push xlat mov or lret cs or ds and mov jl push push adc imul int or dec jg mov in push adc sbb cld mov (bad) mov (bad) xor movsl out and add dec das lods jle test mov or outsl jno (bad) inc inc incl bound cmp dec stc mov and std ds mov daa dec xor xor out adc pop repz dec stc mov mov mov (bad) sahf inc inc aam std (bad) lret inc pop popa add add fwait jl inc daa lea sub into mov pusha cmpl outsl push inc and fild inc pop jns add ret sbb fwait repnz push jge out je sub lock jbe add cmp cmp in inc arpl xor or nop inc jne dec cmp addr16 xor leave inc int3 add jo and xor inc in test int int3 fwait ret or inc push popf fiadd xor mov movl hlt xor pop inc movsb ret icebp test push inc add into lret jnp mov push scas inc in inc loopne sub sub addl (bad) ds dec inc das pop in cmp jg xchg (bad) or sbb test sbb sub dec stc add loope mov imul jno inc sub push pop ret or dec jne pushf repnz jl lcall push leave mov loopne push frstor cmp aad aas and mov cmp xchg pop fsubs (bad) repz mov cmp inc stos in pusha imull outsl pop sbb dec sbb push add into sti stos loope bound inc sub dec mov add or mov mov mov dec mov sbb jae (bad) sub dec and sti sbb xchg sbb push cmp loope clc (bad) loopne cmp pushf scas pandn jbe faddl mov cmc xchg pop sub jp loop loopne sbb xor ljmp imul int3 sub cwtl test je pop orb pushl test sub xchg enter mov movsl inc fbld test xchg adc sbb loopew xor pop jnp mov movsl xchg mov pop sub int3 mov jl add movsl lret push jle sar call jg sbb inc sbb stc mov or or jecxz jo mov out mov mov (bad) sub fdivrs sbb imul xchg xorb les xor jo dec insl js sarb sub cmp sbb mov inc (bad) jae les jge jle mov iret movsb xor xchg xor aad out mov inc mov add (bad) mov stos mov or mov (bad) ss inc repnz push pop imul sti imul adc jg mov dec fwait and cs dec mov add jae cwtl pop ret dec outsb aad das and pusha or cltd mov inc inc (bad) outsb scas cmpsb dec imul dec inc cmp mov pop data16 dec push rol sbb push gs scas out aaa in loopne pop push ds movl dec pop int3 into hlt iret mov jno lahf mov or add cwtl pop sub pop xchg dec in or (bad) out cmp mov clc inc int3 or out mov pop js mov pushf mov cmp test in xchg stos movl popa mov inc inc test dec jg imul xor push loopnew or push test (bad) aam mov popf sub aas fstl xchg push (bad) mov dec adc sub sbbl popa fdivp mov push mov sti lcall divb pusha xchg in test out outsl pop or pop nop iret loop inc mov stc scas mov jmp mov inc in cmp inc xchg in std ds lahf mov push fbstp mov jb inc out (bad) test int3 jle jle (bad) push mov ficom les and sbb in int3 mov sahf scas dec xchg push shlb cwtl inc test imul mov push mov inc pop gs test aam inc mov (bad) out mov pop fdivs out inc nop xchg inc mov fmull js jb mov and push data16 inc mov push push jo int jecxz xor sar outsl xor mov inc (bad) xchg pushf inc xchg mov scas bound fs mov xor jp mov push add jge (bad) ret (bad) in insl jae pop add dec mov inc xchg div in inc int lea inc or cmc das xor pusha and (bad) jno and in dec mov mov xchg push mov xchg inc adc sbb pop inc clc mov ss and cmpsl lock dec inc data16 test cmp cmp test aaa and lcall out icebp ret fsubr daa into aas fwait push repnz mov leave mov mov std addr16 add (bad) jne test inc jle stc out and jmp jecxz xchg mov fdivrs mov mov push dec enter dec jae jmp into pop lock push stos mov sarb xor xchg loope push lcall mov mov les shl mov push cmp gs jae imul (bad) cli mov sbb shr pop (bad) jnp or dec lret push lret sarb cltd sub pop jmp mov mov lea ljmp cmp lcall jns dec sbb out lods push sub mov (bad) cmpsl into add ret out call sub lds dec adc popa ja jg aam call dec jp add and push inc outsb cmpsl sahf repnz loop push arpl inc in mov gs adc pop push insb push into or or daa mov cmp sbb adc jb and inc mov cmp nop push jnp mov xorl aam mov mov inc pushf dec pop jge int sar lahf addl mov sbb je mov jle dec test inc lds inc sbb push adc insb (bad) mov sar dec sub clc decb inc mov les mov mov add fldt sub pop fwait sub fsubl dec or jbe mov mov adc aaa xor int3 jg push xchg dec stos pop int3 jns inc push or sbb cmpsb inc xchg ss mov inc roll push cwtl xchg sbb push push inc or xor push inc jg xchg lahf ds (bad) jmp add mov jnp mov rcr or ret jb test cmp mov ret mov jle sub xorb xchg jnp fistp (bad) stc or mov jae mov fwait aas popf cmp and cmp lret fcmove jp inc push mov jge sbb pop and sub sbb pop sahf push jge or ret add aas jo or pusha add and push lcall push dec sti xchg push shrl in inc mov xor xchg rclb mov jnp xchg loopne inc dec mov mov inc (bad) outsl xchg cmpsb sbb jo les imul cs cwtl inc adc mov push pop inc add daa inc push pop das mov jb mov adc arpl pop out icebp dec and loope mov pop (bad) loopne out xchg dec dec xlat pusha (bad) mov push leave orl repz dec push pop out inc sub fsubr mov std push outsl dec inc jnp xchg fmull mov push sbb (bad) xchg lret fsubs push pop pop in jmp add dec push inc xchg pop jb sbbl jmp out cmp mov pusha add lea jmp mov mov pop inc sub cmc jg data16 lret test subb inc outsl js sub bnd or inc testb les dec lret inc outsl imul ret jae add xor cmp (bad) std inc dec stos mov and out sti inc ficom ffreep sbb dec cmp scas sbb loopne (bad) or adc mov cmp iret popf test adc xor and jp sbb pop (bad) pop imul push push add cltd stos push push hlt push jge cld ds jmp and push scas rclb lahf addl arpl inc cmpl jae adc cs lret pop inc jns pushf andb push and sbb pop push xchg insb jne je aad pop (bad) in cmpsb std repz push pop (bad) out xor push push or xchg stos popl cmp ret icebp iret and in xor arpl movsl aam dec mov mov xor daa ds xor (bad) mov dec stc pop push inc in ret insl dec sbb dec push xlat add in (bad) fnsave push dec int3 dec pop scas push iret inc ret icebp jo inc inc push test mov sub pop jae push pop daa lcall dec sub and in mov dec mov bound push xchg add and test dec push cmp aad dec lcall and lret dec loop outsb inc mov pop cmp enter mov and adc add adc sub mov lock add cmp out push call xchg hlt push loop jnp repz lds dec push add push adcl shr jp (bad) pop rorl pop sub in sub pop lock xorl add insl rolb pop cmp mov (bad) rcl inc into int3 leave push out mov adc jl jae inc in inc stos add mov fcmovbe outsl or and xchg push fadds mov mov pop mov int3 adc mov call pop (bad) pop sub cmp add mov dec fsubp inc gs xor dec rclb int3 insl mov mov mov push add add lret add int3 jg out xchg repz int insl inc push sub mov push lea cmp jecxz mov or or pop push sub cmp mov xchg imul dec fwait je mov hlt ljmp dec xlat ret (bad) dec mov loop push inc fsubp jge mov xor inc xor cvtps2pd cltd mov xor pop inc or xor pushf inc dec pop lods fistpl enter cwtl or xor sub es inc mov mov (bad) cmc xor popa ret dec inc fldcw mov pop mov jnp sbb cmp jle fwait adc mov aam push popf iret or jmp repz and (bad) cld jge add xor popf dec xchg dec jmp and in push and sbb scas aaa fiadd inc or rcrb jae int3 adc sbb inc jb sbb mov sub stc mov (bad) aad push mov or or andl sbb orb js outsl lcall mov std imul inc andnps movsl mov pop dec (bad) xor rcl cs fisttpll aas jb,pn and push jecxz enter mov push add xor outsb sub push xor pushl push (bad) rolb xchg test aam lcall pusha jno push or cltd adc icebp aam pusha (bad) daa lea faddl rclb idivb ss std mov push sbb (bad) jl inc mov jmp xor sbb dec mov (bad) inc jne ss das cmp call mov popf data16 hlt push xor xorl inc cmp popf (bad) mov scas stos aad mov mov es xor inc mov cmp adc cmp ret (bad) into xor lret outsb push cmp (bad) cld in pop adc jle int out das and mov add adc mov das xor inc ja fs or mov dec imull add popw add inc xchg xor mov adc pop inc (bad) sahf pop lret mov xor cmpsb clc xchg or push loopne sbb rorl cmpsb mov xchg adc xor xchg outsb xchg dec lea fsubr pop cs ret cld push inc (bad) aaa in dec stos or imul out int3 dec jg xchg ss pop mov dec outsb adc add stc cli xchg (bad) mov ret sub xchg ret insb fildll xor mov cli adc les jp,pt add int xchg inc ret (bad) repnz out lock ret in xor rorl push bound xchg rcll aad mov dec mov out je icebp addl jns dec mov stos ret mov push je xor jle jg roll push mov fistp mov mov inc inc rcll ficoml movsl bound mov daa aad push pop pop iret dec jmp mov (bad) pop jmp or push and out (bad) leave inc dec mov rolb xchg add adc repz dec push mov jge int3 jns js push fdivp sub mov jecxz and jns stos inc cld dec dec push das ss addb xor add mov nop je mov fisttpl xchg jae push pushf dec mov xchg cmp push outsl mov inc inc xchg xor inc sbb inc jle cmpsl and adc xor and jnp mov shlb jno dec popf fisub xchg outsl cmp test das inc push pop pop test inc xorl cmp out inc add push inc aam scas ficompl ljmp cmp lahf (bad) jne cwtl xor aam mov nop/reserved lret mov xchg mov mov leave dec lods js or inc inc push enter adcl addl arpl pop ds out inc or adc inc add mov pop inc xchg imul jmp aad mov mov pop subl jb cmp push push movsb aam adc lahf cmpsb jle pop and cmpsl inc adc sbb in mov js cmovae mov imul dec push stos into push pop leave sbb pop (bad) sbb dec gs xchg lret or mov inc scas xchg mov dec dec dec dec sbb inc in add xchg or jl out (bad) into sahf cmpsl pop lret mov add xchg into dec (bad) sub ret inc or xchg scas es dec dec adc mov mov (bad) push push or popa mov cmc pinsrw xchg inc (bad) jb adc cmp inc imul popf loopne lds push adc dec out pop xor (bad) mov adc dec lret dec ficompl jb xchg test mov jo mov arpl bound ret call dec lds nop in add loop std adc in adc (bad) aad stc popf push cmp xor inc xchg repz dec push add dec inc jle insl clc or jle test adc fstps stc arpl and ljmp out push pop es out inc out cwtl je push (bad) (bad) mov xor (bad) mov add aas int and push cmp jno push xor fsubrp fwait pop sahf popa je rol enter and pop mov mov cmp mov and push mov daa and pushf leave or out inc inc xchg dec fsts inc mov push inc or fbld inc insb stc or dec xchg xchg out dec cmp sti roll addr16 std cmp pusha aas pop (bad) lds loope in or leave inc sub adc push test push sbb addr16 out in and add adc sbb push rolb and pop in stos mov push add xchg loop pop fwait rol jmp mov in sbb insb imul mov lret jb dec sti loop push mov cmpsb and add fdivs mov lds inc cmpsl subb push into mov int3 aad mov lret lahf ds dec sub sti and push ret es jg les sahf inc mov mov jo jno mov rcl adc dec sub sahf push inc (bad) jb mov sub pusha ds mov aas dec fsubrs adc push std dec ja inc sarb sub and mov movl cltd dec daa jmp pop (bad) fcoml inc add xchg lret ja std ficom inc out cmp sub ret cmp push jnp mov lods push sub or cs and fs rorl les rcll inc repnz dec pushw mov or mov ss mov aam mov jge xor ljmp pop push jnp mov clc cmpl adc adc hlt push sub pop lds push push mov dec mov lock add inc inc daa push cmp repnz and ret xchg sbb mov lahf sub inc push shl addr16 jmp adc mov xchg mov add dec jno add sbb sub inc out iret mov inc ja mov repz inc mov pushf add inc xor pop add sqrtps dec mov mov mov inc adc stos mov sub (bad) mov xchg xorl xchg add and adc or loope adc add dec ja xor imul sub adc icebp push or bound push jb,pt lret or arpl aaa lret xchg add std nop mov jmp sub push sub les test sti fwait repnz xor adc dec xchg popf jnp mov xchg imul int enter mov sub mov call repnz arpl or xchg sub into loopne or fistpl xchg data16 push push xor je mov inc dec jmp jge jl jno push repz sbb inc inc mov pop xchg stc or hlt inc xchg jmp and test popa sbb dec xchg jecxz cmp cs clc cli and push arpl sarl jnp jo mov insl push out xor cmp inc pusha mov dec dec inc clc out or mov jo mov inc mov js lods fwait mov ret loopne cmp xchg inc pop dec andl nop fsubrs jno sbb test cmp dec in icebp inc dec sbb pop pusha bound xchg xchg roll push pop popa and repnz inc rcl ljmp pop xor icebp addr16 (bad) test mov sbb or or cmp and push inc jne xchg adcb dec sar and cwtl les jbe scas inc popl mov sahf or push sub mov lds out inc pop inc and pop dec pop pop cmp shll mov cld (bad) mov lret xchg jae jno adc test mov inc push sub add mov xchg cmpl gs out xchg outsb arpl inc in inc test sbb or ds gs jg int rorb leave jns lds pop cwtl das in movsl out mov jl push sbb sbb es cmp repnz roll jnp inc xor or fdivs repz lock cwtl ret aas dec or scas aaa cs fist pusha or andl dec cli mov dec leave or and push es in push mov jno cmp das inc aas into cs int3 out jl fdivp mov jge repnz add mov (bad) fdivrs pop cmc mov insb fnstcw pop insb inc (bad) (bad) call dec mov arpl mov inc xchg out mov (bad) push and or adc cmpsb call dec inc dec jae jo inc mov (bad) stc loop ret dec mov aad repz jnp mov mov or push cmp inc daa adc stos cmp testl cmp jecxz inc clc jl push imulb add movsl (bad) loop and in xor cs push push (bad) jae ret add rclb dec popa ret inc or ss mov mov or push dec (bad) jae inc (bad) add movb adc dec mov test add arpl jle jge (bad) out dec jno dec pop and dec sub push ret jmp scas or rolb cwtl out mov aas repz sti outsl and mov jge cli clc mov xchg push cmp fs sarl xlat xchg out mov sub ljmp inc das lock fist jb cmpsl inc push into cwtl mov cwtl fildll bound fdivl sub int3 mov (bad) popf mov add mov or (bad) es adc adc xchg aas mov repz stos loop popa test inc dec xlat mov das stos jns sarl int3 ja sbb sbb inc mov aaa cmpsb int3 pop push fsubs or aaa std sub call jg loop popf mov idivb arpl cmp sbb imul divl jno pmullw out stos dec cli cld in mov push int3 inc mov push std cmp aad aam xor cmp aaa jo rclb jne mov and shlb mov (bad) dec mov add sar stos mov dec sub sbb lahf pop sub xchg fucomip mov inc (bad) xchg sub sbb push sahf movsb or and lret imul fwait inc leave push sbb mov scas dec pop stos sub les aad cmc (bad) in outsl std cmp stc inc push fild mov stos lea push sub lods add inc sbb inc int3 fsubrp push pop sub mov in pop stc sbb dec cmp push or lret lahf inc and ret sbb rcrb mov incb test sub call mov in lcall inc ja aam sub add loop inc push fldenv pop test sbb add cmpsl cmp push jg scas repz ret adc popf jmp loop cmp sub loope cmp imul cmp push insl add mov push jmp jmp stc insb out add shr pop (bad) dec push sar jmp lret (bad) cmc add sub lods arpl into mov cmp (bad) jno push (bad) push sar mov mov std in aam inc les ljmp mov movsb and lret lock sbb sbb (bad) mov adc lret jae out xlat je mov adc and or arpl arpl or cmp sbb popa jmp or call fbld stc aaa add mov xor imul aaa jb inc fisub out movb and sub lret xor inc (bad) mov clc in dec fst or pop sbb mov sub xchg addl scas (bad) jb add dec pop inc insl daa jge pop push jmp mov xchg ret adc (bad) and or arpl xchg scas test addl in pop imul das push dec cmp sahf cmp inc repz push (bad) ds inc xchg mov ljmp lcall int adc push push fwait jns dec add sti dec sbb and inc dec daa cmp je nop jo xchg mov xlat or lock sbb inc (bad) cmc outsl sbbb jp lea js adc and xchg adc outsb mov jmp aas add loope push enter mov inc mull mov cmp pushf shr xor out outsb sub jbe sub and jae adc outsl dec (bad) int3 xor cli sbb mov sbb pusha cmp sbb lock sub mov hlt push dec xchg sbb ds dec (bad) stos push lcall dec dec mov adc ret rcrl push fist or insl dec ds lret xchg (bad) cli shr inc pusha (bad) imulb enter sbb idivl or sbbb add je or xchg and inc lahf mov inc jl,pn dec cmpsb aas dec jge or pop inc mov mov mov test adc in inc xlat add je sub mov or mov rcr inc out popf icebp repz into fild and push jb inc ret enter scas mov push inc push aaa or ljmp cmp movsb retw inc leave fmull xor lret sbb add seta inc xchg cmp push and xchg jbe cltd shr add out push daa cmp mov sub scas xchg and mov push cwtl mov rcl stc mov (bad) (bad) lahf mov ss out movsb lods inc or fsubs sbb out or push add add push mov out mov jmp notb popf mov mov call sub in and mov push add mov xorl mov es or mov sub add loopne mov inc pop mov cmpsl dec or fistl jb rclb sub and rorl mov insb fsts jb iret mov jnp daa cmp inc sub mov and and push adc (bad) cmp xchg (bad) and adc mov sub inc add inc and jnp adc mov dec lcall fs mov cmpsb (bad) lret or push xor sub push push push mov cmp mov dec push and mov aas cmpsb xchg pushl movsb out repz mov jg xor inc fcmovnb test scas cmpsl and cmc push xlat mov mov in je jnp rcrl xlat inc or dec pop lret adc add push fs dec push xor xchg incb popf or cmp (bad) dec insb push add xor out inc (bad) popl push icebp rclb negl in in inc mov insl repz aad pop imul ret adc es daa adcl dec inc mov cmp cmc xor scas or insb fwait addr16 lods xchg adc (bad) jmp mov dec jbe imul stos insb cmc push dec bound popa inc xchg sub dec pop push lods lock inc out enter aam lcall sub jo mov hlt pop sub inc mov rolb inc and lret sub call lods xor int mov dec cmp mov push int3 lock test add iret loopne das mov lds push and inc add into push push mov ret jo lcall cmp add sbb ja cmp cmp (bad) mov push push fldl std inc insl ss sbb test rcll mov inc mov popf fwait sub inc lods jecxz (bad) fidivr movsb jle mov dec lock inc xorl rcll das fdivrl inc sbb sbb jecxz inc add mov jo mov cli mov inc sbb jnp stos and fwait mov shrl adc mov outsl sub pushf mov test sahf (bad) into scas lock and popf sarb dec xor daa decb in xor xor mov (bad) jne notl pop push adc addl xchg inc jg (bad) pop mov mov std inc imul mov (bad) aad (bad) sbbl int fwait imul sbb sbb fptan out les addr16 or test fcoms sbbl inc push js dec mov test andl cmc ds test xor bound sti push add ljmp (bad) xchg mov fcomip rcrl jecxz scas push lock fnstenv loope mov icebp adc inc mov int3 inc neg out jb push pop loop outsb lcall imul dec int js inc inc (bad) (bad) mov fisttpl mov add and inc push lahf rcl inc inc xchg outsl xchg (bad) mov mov int3 fadds fisttpll or out int cmp cmpsl inc lret or pop sti pop sbb dec scas or add (bad) (bad) adc jecxz cmp stos out push pop xchg fildll mov sub or pop clc cmpl int3 mov jno sbb pop sub (bad) push aas inc div repnz scas arpl dec sub sbb ja scas icebp and push popa (bad) cmp jnp adc xchg push lret mov pop xchg dec mov add in or roll fdiv aas int mov adc xchg mov loop push scas addr16 cld aad outsl mov call or loopne in dec pop push xchg xor fistl pop add cmp fldt mov aad adc inc je stc cmp lock push jg aaa rcrb std (bad) ja sbb lret and jae pop int aam dec cmp xchg rol in sahf xor jno cli divb inc in mov mov scas mov push (bad) sub inc mov add lea push insb mov fs lods outsb jmp pop enter mov jno decb inc cmp mov push xchg xlat xchg mov inc sbb inc push (bad) aam jne sbb addr16 mov jae and inc das xor in or pop les call pop movsb mov xor sub aam jmp jle into pop in mov sub decl pop mov xor push dec (bad) dec xor insl pop dec out in das or fs jg mov pushf jae cmc xorl outsl ds in mov dec mov arpl test insb cmp push leave add pop add std test push and xchg dec push fidivr fldcw cmpsl call dec dec fisttp mov dec dec repz xor add xchg push or jp adcl inc orl jns lock xchg mov int3 and fldl sar test sub mov sbbl (bad) or test jge xchg inc sub cmp or je addl movsb cmp jns dec dec cld sub and xrelease cmp inc push fwait and in inc inc push (bad) mov icebp roll add lods mov push sub adc mov movl imul add insb clc or sbb jb sbb adc es scas ret xchg push repnz rcll and cmc inc cltd mov roll jp inc mov lcall mov adc push iret inc cld xlat cmpsl fsubrs popa jle leave inc cmp jle lods ficom insb xlat adc jbe push leave sbb mov incb daa add data16 dec push xor cmpsb inc xor fnstsw xor int and push sbb dec int aad fldcw (bad) mov hlt jb mov inc xchg stos pop cld mov or xchg dec (bad) sub cmp mov xor push xchg cmpsb jb fcmovnbe xchg in pop out or ja cmpsl mov cltd add xchg je pop push inc shrl (bad) dec mov and xchg nop push cmp nop out and jb and sar cmp fst pop jne jmp add cmp fs mov adc mov shrd cmp fcomi mov leave xchg cmp ret stos mov sub adc mov insl bound cs sub gs inc add cmp ficom xor in dec int and xchg push (bad) push sbb push frstor (bad) cld pop cld dec sbb sub icebp sub push outsl loope adc enter adc mov and mov sahf jo dec cmpsl div (bad) into add pop fnstcw jge (bad) shrl stc sub aad push inc cmp inc jg sbb xchg and push repnz jge lds dec adc xchg lret push test add jge fisub sub fdivs add jno test mov cmp ret xchg xchg pushf aaa sub ja xchg mov pop inc pusha (bad) test pop dec cmpsl loope arpl push adc add or (bad) icebp leave sub add dec dec xchg lods aaa movl (bad) push inc fcompl xchg mov and push jmp or mov xchg lret cmpsl jecxz jne insb hlt mov lahf pop (bad) xor pusha pusha push out call stos dec add dec dec sub inc sub xchg rolb or mov idiv cmp mov in jle sbb lods mov dec fistl pop mov mov sbb jg ljmp inc cld in add loop pop mov cmp andl inc mov ss xchg inc mov mov sub inc mov add fcomip cmp movb lds lock or inc push jle clc or mov mov inc pop in scas pop dec and cmp or outsb dec mov leave out dec addr16 stc mov les bound shrl cmp cmp je leave xor adc (bad) ret jg std (bad) fcoms inc jle mov outsb inc jae and daa sahf pop xor das stos pop xlat in cs loope inc cltd xchg push (bad) xor les push repz inc jle or inc mov mov mov es mov xlat inc inc mov fiadd sbb (bad) jecxz xor inc sbb imul sbb and incl sti pop rol push out fcoml fisttpll ret jp dec xchg out xchg hlt es xchg adc stos daa xchg jge mov hlt sub imul popf lahf out mov pop sub sub aad push mov push add (bad) mov inc xlat fwait (bad) adc push enter inc jne imul dec js inc fbld dec loop inc into mov lods sbb xchg pop push stos es dec call loop mul dec push add imulb (bad) pop jmp into add loop scas and jo test (bad) (bad) dec into int3 shr enter or xor icebp out jae jns jo fldl xchg or inc lret (bad) pop cmp push pop mov loopne dec inc sub dec int (bad) outsl mov jp out jge mov adc fsubs test adc jb aas jne bound cs sub mov jo aam pop in xchg (bad) pusha pop push mov sahf add cwtl cmpsl push bnd cs push mov lea pop fs pop inc pop stos dec repnz test mov pop mov (bad) sub (bad) das jbe mov in and add andl inc enter lods lock aas je push xchg movl fs out scas enter cs lahf push ret push push lea popa sti xchg call inc loop lods pop dec inc xchg fwait adcb mov popf rcll fwait int3 pop loop adc je xor mov pop cmc roll les in sti dec dec and sbb mov clc cmpsl arpl fdivs inc mov lock pop adc dec jmp stos jl stos fstpt ds mov gs push movsb enter insl lahf test pop dec shlb cmpsl bound xchg cmpsb fstps aad jmp sbb fdivl pushf scas push mov sub dec pop inc add inc mov addr16 xchg xor jle addl nop ret sub cmpl les push inc stos jmp scas pop push lahf sub lds sbb inc mov jbe cwtl sub pop lret lret jle (bad) push push and dec dec das cmp test out jae pop stos scas push sub pop sub push lds addl adcl inc and mov fldt xchg scas (bad) leave pop hlt lret adc mov sbb in (bad) xor push mov arpl aad imul and (bad) xchg sub add mov push jg cltd inc push sbb pushf push push mov out jmp push pusha test mov jae xchg jo insl mov mov mov mov mov mov stos fidivl imulb insb inc push ret inc push dec (bad) (bad) inc lahf leave sub dec cmp ret inc aam mov dec inc jle jae sub mov pop inc in jp inc add in sub popf and shrb fdivrs push pop dec pop outsb lret jns cmp xor and mov fldl clc jae pop adc movsb inc pusha mov xor ss cmp ja adc sbb out dec (bad) pop pusha mov cmp pop arpl push (bad) inc pop pop add and cltd mov fmull jne movsl push jecxz inc push movsb (bad) repnz adc push xchg sbb cmp mov and insl mov mov push leave jnp jmp cmpl xchg test test inc adc mov fbld inc xor (bad) (bad) xchg sub push xchg lcall dec in and mov imul out aad inc push xor jbe inc xchg sarl pop pop iret cmc (bad) and in lds mov or cmp inc sub push cs clc xor push adc and sbb (bad) mov sbb cmp jae sub jge,pt xchg fcomip dec (bad) in stos sahf sub mov std xchg (bad) das dec jge adc arpl int3 fdivrl aas out sub imul or mov cwtl je icebp cmp pop orl rcl aas push sti mov mov rclb mov (bad) loopne (bad) xchg xchg icebp dec mov mov dec call mov pop int3 cmp lret push aas adc add jae sahf inc or (bad) stos sub xlat fild mov mov daa sub sahf cs xor mov das inc and das xor lock fisttpll mov pop add stc scas cwtl mov iret sahf jb into dec sub in xor icebp fsubr shl test sbb add pop sub cld jmp cmp dec and movsl lret inc adc fcmovnu addr16 mov lahf cltd call fs lret add sti in xchg and je gs lods into int3 cwtl popf ret adc lret cmp into aas adc jl lods cli arpl sahf cmp iret pop jnp adc loopne add cmp fistp pop xor addl ds (bad) hlt cmpsb cmc add mov sti sub sbb lock jns jae add xchg inc adc xor sub mov push push orl leave dec xchg mov add iret or push ret jo push sar cmpsl cmp and or and push or out push cmc inc dec rol (bad) and test lahf push mov push dec sqrtps xchg (bad) pushf iret sti jae cmpsb subl popf jecxz ret pop add repnz mov jo,pn shll xchg out call fs pop add roll add add cwtl jno jg lds ret sbb jl mov jb lret cmpsl lahf sub xor imul push enter pop movsb inc xchg xor in mov sti or stos inc mov addr16 fistpl fildll push xchg jo stc int3 push sub insl sbb push repnz lahf les xchg or ds movsl cmpsl mov fadds sub cmp inc icebp imul inc fldcw pop and mov cld sahf into and ret mov fildll scas icebp js out std pop push xchg sub xchg in inc pop stc rolb orl stos std mov cltd push jg inc int adc xchg sub cli mov cld mov sbb rcrl adc mov hlt out mov cmpl test sub test adc in rolb mov pop test fdivrs push rorb sub mov arpl imul bnd cwtl lock dec dec sahf xor daa xor jnp lds add or xchg mov int jbe repnz jae cltd mov leave mov dec cmc in inc cmp jb cmp outsl popf cmovne adc push loop push fcmovnb fs pop mov ret adc push fstpt push adc mov xor inc mov mov push nop mov int3 incb repz in jl js (bad) sbb cmp add aam (bad) jb ret inc jle mov mov xchg xchg mov jmp int inc leave jae mov sbb push jae int3 insl mov lods mov mov adc pop jl (bad) ret mov inc mov sti push cmp sub sahf mov rorb mov mov jge cwtl sbbl push mov add push jecxz mov xchg pop popf gs pop or inc repnz or (bad) xchg inc lock dec fwait lods and cltd and enter adc lds fwait jge mov push cwtl fsubs inc add (bad) mov enter sub pop mov pop dec (bad) push sub pop pushf add test jl cmp dec sahf xchg ss push andl xor inc cmp cmp cli cmp pop iret mov xor in inc rclb inc mov jns adc add inc dec sti xchg sarb push scas fwait xor inc (bad) pop test mov sub xchg xchg xor dec mov (bad) lahf adc fcoms addl pop mov notb xor iret mov pop or xchg faddp add cmpsl pop mov inc inc mov or mov inc outsb not repz scas jb jecxz lods les and inc mov popa pop lock (bad) fiadd sub ret sub loope inc clc jg mov inc cmp xchg loop mov mov aaa aad mov enterw mov push inc fpatan call roll xchg adc ret out hlt fisttpl sbb aad js addr16 xlat aaa into inc cmpsl mov adc enter stos inc or mov sub jg xor inc hlt adc aad pusha into sub add and xor mov jo dec leave and dec mov shrl adc (bad) jae cmpsl fildll sbb mov xchg fwait inc arpl aas cmc jo mov pop cmp xchg cmc jle mov sarl call and cwtl sub nop jo pop xchg lret ror add into ret sub cmpsb addr16 mov popf push ja cs gs test lds test arpl jl out icebp lahf loope jecxz shl scas and inc inc xchg in mov pop sbb push mov xlat pop fcmovnu lahf push xchg std es (bad) jne scas inc lods pop outsb jg sub cs mov xchg adc mov fwait cmp test push pop add lret clc mov sarb adc dec sub int pop dec fsubrs mov or (bad) cli mov or in in adc hlt dec (bad) mov bound dec add fwait or inc xchg and push ja lods rcrb jmp push adc fidivrl mov xchg and into (bad) lea sub jge push inc ss insl int3 or or adcl incl inc sub jl add dec jbe pushf (bad) mov inc xchg iret pop cs bound mov xor jl xor rclb scas xchg xchg cs sbb mov push inc repz pop dec lods mov mov pop adc inc mov sub inc adc rcl imul add or (bad) es outsl inc xchg lahf add imul das push dec and jno subl ja xor inc repz (bad) std push mov pop shl lds adcl cmp inc ret dec pop inc pop inc mov es jbe and sub sbb and pop inc add pop lret inc cmc or cs sbb fcoms xchg dec xchg mov adc add lahf sbb inc mov addr16 push hlt mov pop pop inc dec and pop jle mov scas cs fisubrl les call mov push inc cmpsl in fidivr aas sub outsl dec mov or std mov lahf inc fild in cmp int insb fimull cli cs add je inc mov dec sub in inc test scas jbe or idivl dec adc arpl (bad) pushf scas aaa xchg repnz jecxz inc int pop dec fucomi dec stos sbb pop cmpsb xor and mov inc (bad) pop jo cs cmpsl ss in pop inc dec pop bsf pop aad repnz iret push inc aas push int3 aas std inc sub outsb jg repnz sbb mov arpl cmp test dec jnp xor inc or icebp xchg nop inc ficom adc ja in or cmp inc lret jns ret loop (bad) mov mov jnp xor inc inc inc pop adc adc mov mov jle test inc push lods xorb aaa sub in xor adc das inc jbe sub rcr push inc outsl cmp mov inc cmp fsubr lods pop dec imul bound mov mov adc add dec pop inc scas add mov lret fisub rcrb das negb mov loope inc pop mov sub pop xlat cmp sarb pop outsl test dec inc add jnp aas stos inc jge xor (bad) inc imul add pop or and pushf test cwtl mov mov xchg incl mov dec ficomp cmp test ret xchg and xorb flds mov inc leave pop and fimul dec sbb daa sbb pop sub xlat cmpsl cmp mull xor insl into cmp outsl dec les adc xchg cmp jecxz cli loope pop (bad) or dec jmp imul jmp (bad) into push pusha aaa adc scas mov jge cld out add add (bad) flds push push mov cmp lret les inc into movsb loope mov or sbb movl jecxz std pop sub gs aaa mov mov stc lds add mov subl cwtl sub xor and int3 popa mov stos popa push jae inc sub cmp xchg push icebp jle dec (bad) popf mov or orl aad divb addr16 test sbb jne out lds adc pop xor sub aam lret fs roll sub jle inc inc add das mov insb mov inc mov scas sbb xlat rcrb add sub xchg mov mov test fwait inc dec (bad) daa or (bad) test ret lret stos stc imul and outsl out jnp loope push (bad) inc xor das push popa inc lods add cmpsb add shrl inc sub xchg (bad) mov sub call xor inc jp pop sahf xchg imul mov imulb outsl cmpsl mov mov or fcom and (bad) xchg jmp rorb std pop push fistp or arpl lea mov icebp jno mov repz push dec inc jmp mov xor mov sahf (bad) xlat jecxz enter pushl add js loopne sahf pop mov ja mov bound ret push dec jl imul add nop fisttp inc (bad) pop pop jb pop jmp sbb sub push inc pop insl (bad) mov add in bound mov sbb mov gs inc jno mov mov mov scas popf dec repz inc int3 add sbb outsb aaa into push xor std inc push leave add mov out xor dec cli or int3 insl xlat call push dec xor mov fiadd dec adc int3 pop cmp iret and addl mov sbb sbb in inc aad ds in dec pushf imul sub out rolb sti lock xor inc sbb inc dec jp out iret nop (bad) mov scas push mov mov inc sbbl fsubrs pop in pop les (bad) cs mov or les or ret (bad) push dec aas xor dec fildll mov and push inc fnstsw xlat int3 push call enter out mov int3 push lret cmp pop sbb jge jae iret mov ret xchg int3 (bad) dec out sbb sarl das dec mov ja sub outsb inc fcomps fisubr dec mov cld push test mov cmp inc daa xchg (bad) aas and cmc mov push xlat dec adcb add pop jb out repz or add xor mov sbb sbb das sbb in loopne xchg or insb jge inc or (bad) fiadd pop (bad) imul sub xor fstp xor out push nop (bad) int test add mov out movsl mov or test repnz inc (bad) or in cs xchg mov std inc adc jg enter ficoml mov mov imul loopne jbe dec xor xchg les ret and scas das incb inc push jns fsubr jmp dec rclb and inc xor mov pop in mov test fabs stos inc mov fimull pop insl hlt jno (bad) push inc lret les adcl pop sti push cs xchg adc flds pop inc ds jae xchg inc jle lock ret testb adc (bad) out xor lret add jge inc cmpsb pop jo shl arpl mov xchg mov inc ja (bad) sbb inc sub dec or adc inc inc loope jp push addr16 inc inc mov (bad) (bad) adc and int3 jmp push jb cltd mov cmpps mov push pop add inc iret pusha inc xchg inc push inc in mov fisubl dec inc aas jb in cmpsl mov inc rorb imul cs push mov xor fwait xchg loope std inc dec out mov mov cs mov loop xor inc xchg lcall push push push out adc cwtl push push sbb in movsl jg nop pushf mov jnp,pt mov les dec dec and dec push ss imul xor es jnp add int (bad) dec push (bad) popa pop cmpsl rorb test push push repnz inc add sbb xchg xchg arpl iret mov xchg add stos test dec sbb or adc pushf inc inc sbb pop pop mov inc lea movb repz inc add cli mov inc sbb out test out inc ds pushw jge dec pop andl jae dec cmpsb in adc push cld call movsl mov xchg int mov fldcw les add (bad) in and dec aaa dec inc xchg mov adc inc push or sub shl add fisttp mov movsb andl nop mov push int rclb les rcrl jmp in lods push pop push inc addr16 popl jg sbb mov fistpl pop fcomip icebp outsl (bad) mov mov jmp test in int3 sub jl ret mov xchg sti jl xor (bad) iret cmpb xchg mov jae push xor and mov test ja imul js push es xor rsqrtps (bad) clc xchg dec jl iret jne inc imulb test jp test subl or dec orb jmp stc data16 rolb adc adc push sti push inc pop dec lret mov inc jmp adc add fild and loop pop ret dec and hlt jae (bad) iret jne rclb jo inc push inc movsb pop lods jne in dec cmp scas pop xor pop xor jno mov xchg repz inc imul daa dec sbb arpl cmp lret xor inc hlt lock fnstenv inc mov in int3 add std adcl cmpsl outsb cmp in xchg inc adc (bad) cmpsb lahf test cmp fstpl xchg inc addl sbb dec ljmp xchg not imul rcl ret arpl mov inc stos or rorb test mov clc daa das push cmpsb mov fmuls test movsb in scas inc xor jl xchg pop cmc sbb aam and or incl (bad) mov lret jle or scas cmc test inc or dec popa aam enter xor adc es inc mov sti mov mov mov shrb icebp push fwait push push cli (bad) xchg incb adc enter inc xchg xor out add lock or pop (bad) ljmp fstpt mov lods outsb xor cld sub mov and test dec cmp andl pushf call inc adc pop sub push shl inc stos sbb decb out mov mov mov jb (bad) mov divb (bad) mov sahf stc and xor xor pop cmpsl (bad) in test push mov fwait cmp dec (bad) mov in xor pop cs loop int3 mov repnz inc sbb cmp mov mov popa enter sbb jnp xchg call dec jl dec ret add push dec adcb adc and or shll sbb test pop ret push and jb sub sub push (bad) mov loop pusha (bad) loopne mov mov push insl jmp xor sbb fistpll inc mov repz lret fadd mov mov ljmp adc mov inc lcall jb lock add aas pop loope inc jge pop pop notb iret lcall movl push repz fisubrl cmp sub jle nop dec adc sub inc out dec lret inc and into divb or xor dec mov cmp adc lret lods sbb add jne push aad mov and or and inc addl xchg add scas gs outsl cmpb add mov adc inc adc movsb add jae sbb pop aad and orl jne aaa inc lea mov inc push mov add cmp add mov mov jle jp imul dec push hlt ret mov enter scas ficomp pop mov push repz dec jo mov pop push hlt into pop cmc scas inc fstpt mov dec dec call lds mov sub clc pop dec mov jne push xchg icebp mov mov (bad) call scas xchg inc (bad) mov xchg scas lock cmp add xchg xor test cmp pop add sbb mov inc frstor pop dec pop fs dec inc in mov inc pop pop pusha jge movl sub and out add (bad) jb (bad) aas stc int3 mov inc or jp sbbb push xchg xchg stos mov mov dec arpl imul push xchg adc mov push (bad) pop push sub cmp xchg imul mov pusha subl push xchg (bad) mov adcl shlb mov jae adc fidivl ljmp sbb arpl jp inc cs ffreep lahf sbb cmp loopne in add push push in add repnz pushf out mov incb mov lock or xlat sbb shll mov mov pop arpl inc (bad) cmpsb out mov xor jno dec xchg hlt addl es cmpsl test je cld dec jg cmp push js movsl dec rcrl hlt jno fisubl insb nop mov mov push mov sbb jge inc (bad) repnz sub inc lret call gs popa push mov popa test andl fld1 std jmp pop in cmp add inc xor in lock adc or adc pop cmp cmp add dec js fisttpl sbb jge mov sub arpl loopne addr16 rorl mov xchg scas ret push int test inc clc insb push jp mov pop inc cwtl lea sti xchg push sub mov mov inc pop (bad) mov inc or popa mov sti cltd scas mov mov fwait hlt add leave inc inc and fdivl mov add push es loopne jge mov dec cmp ret lock inc in loop popa lods fsubr les xlat xchg fisttp mov xchg add sub insb cmpl add pop stc or popf cmp xchg mov pop adc push test xchg push cmp das mov push mov mov inc inc cwtl sbb sbb lods (bad) or lret adc les jne mov jmp push adc mov jecxz add (bad) pop cmpsb cwtl pop std jnp add jg xor (bad) mov jae cmp fisubr dec xchg (bad) mov xchg test data16 mov pop sub cmp das jle dec inc stos ja mov mov cmp fcmovb lahf mov inc push rcll cmc mov push in es jecxz pop scas xchg outsl push mov mov jae pop enter xor rolb ds mov pop mov push sub sahf roll ja inc mov loop dec jnp push mov (bad) ja push or sbb int3 or lea ja test sub jb inc shll pop and dec sub sbb out ficomp inc int pusha aad sub stos movsl mov mov daa add mov cmp mov lea xchg scas arpl mov (bad) mov rcll xchg repz lods adc ret push repnz jle mov mov pop pushf lods cmc repz lods out and cmp pop mov sbb push ds nop jnp xchg and cmpsl xchg dec add jl ss mov repz add jb insb popl push jbe jecxz jp inc clc cmp lahf dec push xor adc sub xor mov and jb xor (bad) mov pop dec addl inc push pop in xor push cltd (bad) xor push ret mov and cmpsl mov mov cmp test aad mov bnd (bad) (bad) movsb shrl mov inc dec fwait lods mov inc jg or negl adc fcoms mov pop add xor lret stc int push mov mov xchg cmpsl movb adc imul jecxz fsubrl adc mov jae sbb inc jo mov inc stos mov jp inc jo arpl mov gs (bad) test movsb sbb pop jbe cmp xchg push dec mov movb or sbb pusha jecxz les lods test mov inc or mov in aam dec inc shll ret cli cmp adc (bad) inc outsl xchg mov adc pop inc pop les sti imul and popf or in inc mov aaa push push ret out jns mov in movb or sbb cmp sbb sub sbb inc push cltd or inc push mov leave inc cmp dec out jg enter in std or sbb pop mov lret adc push mov js inc adc pop jae bound mov fisubr fdivr out inc cmc inc pop mov jb push inc push xlat (bad) pop mov jge jp shll cld fdivs stc lds ljmp dec pop cld dec fsincos pop (bad) in push pop push dec call gs aam cwtl inc or test mov cmc sbb iret loopne out fiaddl push push (bad) cmpsb jae inc (bad) cmp daa jle enter inc setns or jecxz lods inc mov dec mov pop sbb pop into outsb lcall inc mov inc mov mov push inc jne xchg out cltd push adc add cmp aas mov inc mov cs test mov movsb and cwtl in push mov jae insb cli jb add inc adc sbb call inc addl imul push lahf adc jno and xlat mov push les adc les (bad) pushf aam aaa loop pop sti or push outsb arpl into ret (bad) xchg loope jecxz lcall sbb xor pusha adc std cli xchg nop ret lds shlb hlt cmp loop xchg sti notl inc add (bad) xchg movsb (bad) ljmp cmp sub loopne dec repnz lahf sti adc stos popa xchg lods jbe cmp xchg xchg push lret adc bound (bad) gs mov js lods stc lret dec push xor in popa nop or push cmc fidiv pop push inc push adc dec mov arpl xchg es into adc xchg movsl dec mov scas mov call mov mov add inc add (bad) or xchg das out inc fisub mov mov rol enter loopne in push mov stc mov dec fildl mov add sbb pop leave ret andl pushf lods jle inc test inc pop sub mov push rolb mov (bad) mov enter inc push pop std into ljmp dec ret or jbe mov add xor dec insb pop push or pushf dec mov push adc je sbb dec pushf mov rcr imul aad cmpb int3 push pop sub and dec pop or fimul dec sti pushf sub push test and ror and les sub inc xor sub jmp int into dec (bad) jae xchg rorl addb das add mov xchg ret sbb mov int3 jno out inc ljmp mov stos (bad) inc jmp inc cwtl (bad) sub jp lea imul and mov add rcl mov pop test xor mov cli repnz mov cld push or and or cmpl sub mov xor popf and and outsl push dec iret ds inc dec fs hlt fadd sbb aad inc dec mulb daa cmc push xchg mov xor sub std int3 test and in jns dec adc xchg (bad) arpl pop into cmp cltd iret (bad) daa push sub aad test jecxz out xchg lods cmp addr16 ss cmpsl adc jmp mov inc or mov cltd arpl cmp pop mov shrl xchg lcall mov jecxz mov xor cwtl push adc pop int sub stos inc out pusha or push xor sti ss dec into pop mov popa pop mov pop call inc aas stc (bad) jecxz xchg jo mov jge cmp inc add js or mov lahf in dec mov dec movsl inc inc ror xchg add mov add dec nop daa les inc arpl xor std add arpl xor mov push dec sbb xor xor xor std xchg push push lods pop and or lahf loopne or inc cmp adc je (bad) adc cmp dec lods int3 inc pop lds lods lar cld leave mov jnp lock jg sbb inc mov int3 inc jns (bad) xlat sub ret pop js sahf inc repnz dec jnp sub lods in sub popf notl inc xchg mov cmc dec movsl pop inc cmp add jecxz sub jns xchg sub (bad) adc inc lock mov je jns mov movsb sarl xor rolb inc sub sub mov icebp sbb jae dec mov push out ret add (bad) cmp mov test cmpsb sub fdivs in ret pop movsb cwtl pop dec jge xchg push cmp pop mov (bad) inc push das jae xor int stc inc ret or sub cmp push push outsb arpl jle cli and xor or addr16 mov jo repz push xchg jl mov and fistl stos cmp xor ja dec xchg (bad) push push xor inc lds mov jge (bad) lock cltd adc add (bad) into inc dec clc stc jge or mov inc sbb out cmc add hlt and xchg mov in popa dec jge pop fsubl push sub xor mov push push jl movsl test imul mov out xchg movl in and add inc mov fsubrs xorl mov lods mov (bad) fnsave repnz jno mov cmpsl inc nop (bad) leave xorl pop ficompl into sub and jle in ret mov int3 push mov xor ret aas fsubrs inc pop inc cmp ret in ficompl mov push add pop inc ds jmp add inc and mov jle jnp mov dec or sub andl and rcr push cmp push repnz xchg push mov fildll cltd int dec stc icebp cmp mov orl dec sbb in bound mov aas rcrl push pop (bad) hlt dec popa mov push dec decb cmp lds clc mov inc pop push inc jno lock inc lcall inc add mov test jns mov pop sbb xor sbb aas cld add and repz mov js or loope lahf lret mov jbe xchg push std or xchg mov rdtsc mov cld int3 or xor ret rorb push pop mov inc fadds je xchg mov mov xchg add xlat mov jl push in pop dec inc pusha sbb inc lcall mov mov cmp push fiaddl push xchg lods add mov jecxz mov cmp or push loop inc add push xchg dec fisubl pop ss dec jo cli ljmp insl (bad) xor fcmovb and jmp pop add xor mov jecxz xchg xor push ja add mov (bad) test mov sbb imul xchg lock pop add les cmp pop (bad) cmp (bad) (bad) ljmp (bad) inc add push movsb xchg pop lret ret sub jbe inc cmpsl (bad) (bad) dec ss lret xchg clc xor and mov lods mov fldt pop cmp xor pop fsubrs sub and sub push xchg inc jle cltd mov cmpsb inc out movsl and cmp dec xor mov inc sub ds or pusha test mov cmp sbb pop lahf sbb inc (bad) jmp pop or imul aas (bad) dec inc jns out icebp arpl movsb inc sbb ljmp pop jp mov mov inc fs mov mov out xor push inc test loope test sbb addr16 and add stc push bound lahf aas push inc xchg adc inc and hlt popl insb js fcmovne pop scas fstpt inc jecxz or push or ja push rclb fcomps add ret sahf sbb fs inc add pop xchg pop push and inc imul sahf daa push scas cmp dec js aas inc jb ficoml mov inc arpl or inc push loope inc (bad) sub stc pop cs lea scas orl std daa dec aad mov lahf inc push call pop mov nop sub xchg sbb repz inc xor sub imul inc push inc mov dec cli inc xchg loope lcall fwait sub pop jl inc cli jb xchg adc test in repz inc inc insb sub xor mov ret leave adc cmovp orb adc cli xor xchg pop imul outsl mov inc cs sub xchg inc ja (bad) loop adc sbb bound xor inc int mov bound cmpsb das sahf inc repz mov arpl mov jge pop cmp loopne dec mov sti inc pushf add cmp cmc mov push push (bad) mov or aaa and xchg sub incb mull imul inc inc lds lock xchg out dec mov pop (bad) jo pop arpl das dec (bad) dec imul add mov in jmp add shrl inc sti mov (bad) mov stos and add gs mov je cmp inc push adc out pop and inc addr16 mov inc je xchg repnz lds mov inc mov stos mov js inc adc lods pop xlat and (bad) cli ret and mov shl mov fistpl sub in arpl rcll sub pop loop test pushf xor sub test std decl sub loopne xlat in fcompl xchg mov je cltd mov sti aad lods jns outsl stos cmpsb jae sbb lahf les outsb in imul popf scas sub mov mov pop faddp fs imul xchg mov push jecxz repnz shlb (bad) and ss (bad) jne or mov aam (bad) sub mov xchg scas mov incb pushf push in (bad) int3 addl inc sub xchg push dec pusha fnop ss dec add inc and fiaddl movsl inc jb daa fiaddl rclb call (bad) ss dec (bad) (bad) pop and ret cld mov inc fnstsw mov xchg mov or (bad) jge inc pushf addl and cmp int call pop scas rolb push in jnp xor pop (bad) inc testl mov fiaddl loope cld and popf mov in inc in insb stc cmp dec xchg in hlt xor sub sbb rorl nop daa adcl xchg pop and mov cmp jg aad fidivl out ret call dec add les and push sbb pop stos jo je sub jmp cld shll std mov ret jno mov data16 ret xor jge add call push sbb push sti inc sbb loope fmulp and mov cmp in inc dec dec and xor ljmp sub cltd or les and arpl inc inc lods ret out js cmp inc jge je sti in in push loop inc mov cmpsb lods in sbb sbb jmp inc rclb fist inc or sub notb pop loopne mov jmp inc aaa mov pop jmp in nop jns dec or adc xchg mov lods cltd inc fcmovu inc imul sbb push inc aam repnz jb inc pushf jnp adc int3 mov pop (bad) inc iret enter push imul jle or mov jns sbb in fmull xchg inc lea jns orb cltd inc lahf pop adc inc enter sub fldcw arpl test mov mov pop mov xor ficomp add or inc inc in icebp jno into loop sub push sub cmp inc cmp addl fmuls xchg aam push mov sub rolb std subl push dec scas jo popl shlb xchg add insb fcmove inc fistpl lods stc xor daa inc mov mov cmc add push rolb dec lcall inc subl push push lret sbb out mov sub (bad) dec inc jno mov mov mov sbb add add and inc sbb sbb aad cmp add cmp repnz xor std pop in mov sbb es repz das popa inc (bad) clc push js mov sbb ret movsb sarl dec shl in in cmp mov sahf subl sbb pop push mov fidivrl jnp fnstenv sbb or xor flds sub jbe inc aam cs (bad) or std cmpsl loop in cwtl xor jae cmp repnz or mov mov lods mov mov push or inc repz push test bound frstor adcl je les mov or dec arpl rcrb jle cmp lds arpl xor cwtl iret aad popa jbe mov (bad) sbb jge sub mov jnp sub mov jae mov aad and sub jnp add push fnstcw sbb fwait mov mul loop cmp or imul push and test add leave inc repz roll in inc (bad) jno add adc jge lds (bad) mov mov inc cmp clc enter fild imul or lret mov jae andb adc push sar mov inc stos loope cmc out add inc aaa or dec fdivl push inc xor push jl mov mov int fwait sub or jo xchg and test jmp enter rolb sbb mov jmp dec lods cmp ja mov adc push inc mov incl fmull (bad) push das test inc data16 int3 ss inc cltd jmp or gs jle mov add leave inc sti or sbb or adc idivl push and mov mov push inc xchg inc inc xor mov mov test (bad) (bad) push test addb cmp inc add insl cmp inc das popf rcl (bad) cmc pop or jg fstpl xor add add sub mov mov stc xchg (bad) xor pop mov mov dec push in out popf or mov movsb xchg adc cmc inc jae inc mov cmpsl inc add (bad) aad jns push pop fldl add push inc pop fmul cli dec xchg push out inc jp stc mov das inc jne mov std (bad) icebp roll pop cld dec mov test inc xchg jb adc flds or mov push jle adc sub sub push xchg ret gs call mov pop addr16 mov mov insb roll push push and jle rolb sub mov ret add (bad) aas cmp popa and mov das push dec lea jg decl aaa push cmp in mov mov dec (bad) jb aad inc stos xor mov mov sti lret cmpsl aaa mov sbb lahf in jns movsl sti xlat pop lds lds push aaa lea pop into xor pop lahf (bad) movsl inc xchg out movsb xor hlt aad and int loopne mov test add ljmp enter int3 mov inc or mov cmpsl test shlb loop mov out xor rcl frstor gs in inc js shr clc cmp pop mov mov inc fwait (bad) jo test in sahf pop jae pop cmp es daa ret jbe data16 mov pop and in inc pop (bad) sbb pop movsb (bad) jnp dec lcall scas ret inc es mov cwtl int3 lret fstps add add stos push sub sub dec popa jae jbe dec scas inc outsb lock and and ror xchg push arpl jnp add adc mov fistpll imul cltd aad xchg push nop clc lods mov cli dec sub (bad) adc lret jbe xchg arpl into push push or fiaddl ja fldz je dec andl into adc jle xor pop and (bad) lret stc mov pop push dec push jl mov into inc jno int3 xchg adc loopne cli outsb sbb les insl add mov rolb (bad) movsb icebp outsl mov outsl (bad) mov aad inc loop jl sarb cmpsb mov xor jp or mov and inc mov sub adc pop inc mov xchg lahf jge or in arpl mov xchg push inc lods dec (bad) jb mov loope addl inc lcall xor cmpl inc pop mov test iret (bad) xchg xor or jp jnp movsb mov mov jmp xor orb ret out outsl and stos push jno mov inc pop xchg int3 cmp dec cmpsl jp sub dec xchg push xor adc cli mov inc int sbb inc inc jb cmp pop lcall push es test rcr mov dec dec sbb mov cmp sub mov cmp and push adc insl xor adc cmp (bad) enter dec daa push xchg sbb es inc cld ret popl push jo mov and cltd stos pop and sub lods dec jb fistpl std dec dec inc roll push sub inc lods xchg push inc add stos and shrl and aaa (bad) mov cli push jg cwtl and std sub fildll rorl sbb pop xchg das xor rclb or popa fiadd addr16 pop fldl xor mov xchg hlt mov push and add bound clc mov push cmp sub negl les inc int fdivl subl aad and pop repnz jge and cmp fisubrl loopne push fprem1 inc inc popf sub imul adc inc mov inc xchg jecxz bound push ret mov mov addr16 inc pop in mov daa cmpsl std mov into inc push addr16 xchg aam jge inc sub sbb adc cmpb in mov fucomp add jge inc jno jnp and mov (bad) scas ret (bad) push loop inc mov rcrl mov inc xchg loope daa aad nop xchg (bad) dec in es mov (bad) scas inc std mov (bad) outsb lds mov inc add push fisttp or out xchg cmp bound cltd add js xor mov xchg (bad) xor jb push int3 pop roll sub loop push xor lds pop or xchg shll cmp mov push stos dec sub sub mov sbb and test stc or dec shlb leave jmp xor xor das insl outsl dec stos jne scas idivl adc fisttpl push dec lret mov fwait into fistp dec je dec fucomip lcall xlat inc lret jb fdivrl xchg mov das leave testl js inc adc xor inc stos or je or mov cmp add xlat or add insl cmp pusha into dec ja add inc add shll dec rcrl das call fsts out gs es jo (bad) mov (bad) mov popa mov xchg inc push pop xor mov cltd icebp cmp and ret scas xchg fist out ja imul shr les (bad) jecxz mov adc mov dec sub add data16 or mov subl (bad) jne (bad) cmp pop sub cli mov fsubrl push jne sbb popa mov push pop inc cmp outsb sub dec fmuls loopne sbb js dec mov dec mov add lock pushf repz lock movsl mov mov xchg mov mov dec mov dec lock sub scas insl lea add daa push repnz out int3 dec mov repz mov and mov pop insb sub dec sub inc into ret outsb or sbb or cmc fwait aad cmpsb cmp adc dec mov std lock sbb sti mov repnz leave mov add inc xchg jp (bad) xlat jmp sbb push in cmp mov xchg rcll les cmp push sub aas in add aad cmp pop inc ja shrl fildl ja inc inc out dec adc mov inc inc push in aas jb mov add add cmp aam sbb (bad) aaa into inc xchg cmp pop cmp dec ja aad imul sbb (bad) or jb repnz lea into scas icebp iret ret std fadds rcrl js insl rcrl movb int or arpl mov les test add gs lret rolb cmp sbb cmp push movsb lea mov push sub (bad) shl leave sti lcall xor out inc (bad) mov fs lahf add pop cmp shll andl mov ret sbb pop or xor out inc pop mov inc jb push pop mov mov jge fwait std sbb lods xchg insb loopne jle push dec mov jb rorb int3 hlt mov fistp pushf aaa jl mov pop popa pop xchg sti aam icebp adcl test adc daa cmp or xor xor xchg imul popf mov testb sbbb ret inc jg push popf mov mov add (bad) out inc inc and std inc lahf sti or int3 inc shll jecxz adc insl fild mov icebp adc sbb cmp pop sbb out inc inc movsb mov pop mov jbe mov and mov ffree cmp sub or or cmp sbb repnz jge ret add ljmp pop test jno mov jl sub fsts jns orl xchg fwait adc mov loopne sub jg mov dec mov dec jae push das lret daa inc rolb sti test sub xchg mov push push ss pop or repz dec jo inc (bad) mov andl sar call ret int cmp mov (bad) aad inc mov mov mov xor or push shl inc sbb (bad) push xchg stc into inc pop sub arpl pop xor inc dec je and lea roll sarl les jno mov addl out out movb sub sub jmp rcrl push add inc jnp ja dec jns mov loopne cmp cmpsl test mov sbb pop lds sub or test in inc fsubrs sbb xchg push cmp popa push push pop aad ds stos lds push sbb cmp or inc mul test inc push aaa jae fildll insl add lcall lds xchg inc adc insl sti push xchg dec inc ret cmpsl lret cwtl mov pop loopne ret xchg shll scas sub sarb inc push mov out mov mov fmul add mov icebp (bad) in rolb jo or in out stos mov in sbb push push mov (bad) xor inc out das xor mov pushl (bad) sbb bound xchg sbb in into sub push fs cltd out movl fdivrp cli push lods jmp and (bad) xchg roll adc push jne outsb ja cwtl fdivl pop xchg popf mov jmp inc or add inc nop hlt add movsb popf ja sbb daa cmpsb inc ds loopne pop pushf icebp mov lds add int3 cmp xorb inc pop mov and ja popa scas aaa aas sti stos mov idivl xor adc outsb add push xchg aad mov stc jb in rcrl cmp push movsl lods je inc xchg cmp pop dec pop xlat mov and hlt adc cmc fcmovb mov imull fnsave lret (bad) inc and loope aam test jp sub cs icebp mov movsl ret loope jge roll push or lcall sahf add scas inc cmp xor pushl xchg push mov fmull dec (bad) xchg fadds push pop cmpsl sbb dec jbe add test andl ret adc inc inc mov mov out inc sbb ss pop test out xor and dec add xchg add in mov or loope sbb iret sbb int3 add sub xor ds out popf icebp adc add enter cmp cmpsb cmp (bad) sti add loope dec or cwtl ret jge stos xor ror sub lahf addr16 adc sub dec pop adc mov lea daa sbb or mov add stos frstor jp add aad lea add xchg insl xor (bad) xchg loop mov jns sti adc mov cmc (bad) push arpl pushf adc mov xchg xor pop les inc aad nop imul add xchg mov rclb mov and fcoml pop sbb js int add push out inc push (bad) mov sub xchg inc mov addr16 popf lahf pop inc inc cld sub inc leave ljmp inc xor mov mov dec std inc sub mov imul insb and cs lcall test stos imul arpl push push (bad) jo movsl les fs fs stos inc test ret sub std notb fwait xchg orl inc adc imul or dec into iret and hlt push mov mov daa (bad) arpl ljmp inc movl rorl pop ret sbb mov add adc or adc inc inc cli pop mov xchg mov add sub jmp inc mov addr16 mov and pop stos xlat cltd jp mov mov inc testl js lret fld1 inc (bad) mov cmp mov jne ret inc iret push push mov dec push movsb jne and mov adc jo pop lahf arpl pop (bad) lret loop lret in sub xchg addl pop cltd cwtl mov push inc jmp or loop inc in mov pop and mov rclb and dec inc enter and or lret das push rcrb inc pop aad jle cmpsb add test push rorb imul add ficoml out pusha inc sarb mov push pop xchg mov outsb dec pop fidivrl inc lea mov xchg push xchg add mov in call lret sbb inc mov and fldt mov mull lods mov push add jb je dec ret dec pop test mov mov xchg test addr16 dec pop xchg lahf adc and jnp push test inc flds fwait movsl mov cltd cmp (bad) and call fcomp (bad) or cmp addl sbb jae cli aad test notl add nop call mov movsl adc pop inc inc sbb arpl (bad) cmpsl les imul push and inc mov insl addr16 rcl adc inc inc inc cmp sbbl xlat lretw fldl2e aaa fadds ret movl push and pop pop (bad) jne test mov es add adc xorb lea push push inc ret cmp inc pop lods push sub imul adc sti and inc lret loopne pop (bad) outsb mov inc roll pushf les mov icebp imull dec jno inc leave ret imul mov jecxz outsl lahf out inc ret ret push and sbb inc repnz dec cmp pop mov iret roll jne adc js fistl fs push push pop adc mov (bad) ja inc cmc ret out gs fdivl pusha jmp jae pushf inc add and rorl hlt pop movsl test and inc xchg push insb jno dec push xor xchg xchg mov inc bound pop and icebp xchg cmpl inc insb lea push inc popa mov loope ret xlat sub adc sub fs lock stc jp inc ds jl lahf add inc testl and inc idivb jbe add aam sbb imul (bad) add sbb (bad) sbb movsb push xchg xchg test add pop lret hlt pop andl imul ror jne subl stos sub js fildl inc xor mov fidivr popa fmuls cmc (bad) aaa sub insb sbb inc popf enter andl and inc adc pop inc movsl mov mov jge dec inc cmp inc add lcall push inc adc inc fldl cmp push jle inc pop outsb rolb jnp inc inc push or pop xchg adc mov cmpb jp xor inc jl lahf shll aam dec pop out idivb jmp inc (bad) xor loopne in mov sub popa sbb fdivrl enter sub inc mov mov inc adc mov cmovle loop mov xorl inc pop jnp,pt (bad) cmp sub push (bad) cltd inc mov dec repz mov clc inc out dec data16 ret jb lods in dec enter sub cmp addl mov testl ss inc cmp inc mov push ss sub inc arpl arpl in add push lock mov push sub adcb pop sub popa aam mov inc aas testl or mov adc testb aad ja push pop es xchg mov dec fs (bad) adc push cmp push icebp dec cmp cltd inc outsl stc jbe lods xchg shrl loope mov inc imul jo aad les sub sahf push pusha ds add rolb sub outsl jbe repnz js lods clc push xchg sub sbb and and hlt push movsl mov inc sub gs (bad) dec push pause (bad) cli in mov dec lret insb inc test or inc dec push into pushf jl push or inc and daa sub clc loopne inc cmc jnp jae,pt jl inc lahf mov adc in adc faddl jns sahf mov xchg adc lock loope mov sti mov mov gs sbb mov ret jns subl push test daa cmp ds cwtl aas mov pop dec (bad) scas (bad) pop add cmpsl je or loop sbb sub cltd dec fildll clc arpl inc movsl cmpsb xchg mov inc inc lods outsb cmp inc test outsl and (bad) mov xor in push lds dec sub pop test lret push loopne sbbb mov pop ja popa inc add adc sbb jl leave lahf repz mov or divb mov ret clc and inc lods inc or and cmp sti add mov mov sub faddp (bad) addr16 jp hlt adcl ss lret fildll inc (bad) or mov inc push loope xchg or adc sub dec subl inc push arpl xor xchg inc sub add ret inc sub enter arpl sbb and ljmp hlt dec push movsl cmpsl push mov jbe cmp inc push lea xchg (bad) out lret les mov inc cmp (bad) flds sbbl dec push push shrl daa mov adc mov xor dec inc fnstcw ja jl jecxz push testl pop out mulb outsl inc cmp movsl pop je push push sub dec and mov (bad) jle (bad) inc stc adc xor imulb orl xchg inc dec jns or orl bound sub rolb loope lret std lods jge (bad) loopne imul lea subl arpl sbb pop sbb and ret adc hlt push lea push sub sub fnop inc imul icebp out in inc jge enter popa jl (bad) cwtl adc mov mov cmp repz nop rcll push fdivrl aas (bad) ja ds mov jl lahf mov (bad) or (bad) divb (bad) sbb jge mov sub adcl or fsubrl mov leave cmp inc adc adc repz jge mov adc outsl xchg mov mov sarl xor inc mov xchg mov mov mov stos inc sub pusha xchg jmp aas movb rolb adc jno ja dec jbe bound (bad) push xchg push mov jecxz mov je mov mov and inc inc addr16 mov add xchg sub xchg cmp ret sarl adc mov jge mov shlb fs icebp ret add rolb jle mov ret cmp int3 and adc arpl loope and (bad) popa (bad) mull test xor inc dec fcomps xchg dec inc mov mov lea jae jmp bnd xchg leave scas mov cwtl (bad) dec scas imul imul adc (bad) cmp sub repnz mov jle xor add xor addr16 outsb in comiss jae adc pop test daa xchg dec (bad) (bad) push (bad) jns ret pop or adc lea je cmp and sub sbbl ficomp sbb test jo,pn mov dec arpl sbb fsub sub mov scas lret aam cwtl daa pop inc lods pop gs mov repnz sti nop dec pop jno push sahf icebp cmpsb mov add xor mov inc pop sub or clc addr16 addl pop in aaa fdivs sbb xchg testl add adc cmp pusha push adc decb pop add push movsl cmp sub out dec or and dec sahf inc push data16 or rcll (bad) lods mov sub inc pop fs scas mov push fldl fisubr dec inc mov jo je outsl push and fldl or xlat pusha dec mov inc xor test xlat in mov adc lahf push iret loopne inc repnz mov dec in xchg dec icebp adc sub ss call pop cli and sub rorl std mov pop loope adc popa cs leave pop dec xor mov iret dec cli xchg in and hlt lret in xor mov dec xor jp pop xchg popf push or (bad) dec scas das inc or lods shl rcrb in xchg cmpsb or sbb push inc mov fldenv mov clc sbb fs pop ds fcoms bound cmp stos movsb pop sahf dec stos xor cld and lea (bad) push dec mov cmp and repnz and pop sbb fwait std xchg test dec in addr16 pop pusha sbbl mov mov les jno adc xchg push jmp bound jno mov inc jge addr16 push test mov int3 mov ljmp gs push mov mov jae xchg inc call or and inc mov ljmp adc and mov inc pop cmp or outsl out add flds test pop dec fimul stos (bad) divb inc jbe push jns xor mov xchg fist xchg jne or out dec repnz out jo test sarb cltd sub pusha rcrb jne fwait cmpl and add cmp mov icebp jno adc subl add pushf lea jne data16 (bad) mov jmp das inc cmp push push pusha xchg pop xchg outsl cmp js mov xbegin jae mov cli mov test mov fbld mov into cmovl mov push sub jns pop out adc lcall mov xchg push in lock inc sbb mov es sti fwait lahf fcomi push jmp loop mov movsb mov call jmp cmp dec push outsb pop cmc cli xor aas inc xchg cmp mov xor adc (bad) jno pop xchg aad cmp aas sbb sahf add icebp cs pop pop and adc and (bad) jno adc movsl cmp fs lods out nop rcl push add sahf roll mov icebp scas incl cmpsl pop cmc dec jo icebp into aam xchg jb cmpsb pop ret sbb pop cli or ljmp xchg loop ret mov lret cwtl xchg adc xchg pushf lcall hlt gs adc or movsl fidivr pushf inc rorl insb pop rcl sub into shrl insb push or mov add scas inc stc dec mov scas xchg sub inc sbb inc pop and scas xor pop adc push pusha shr bt bt cmp call movsb cmp rorb (bad) repnz ret cld dec xchg dec jecxz pop add push add push (bad) xor add inc loopne mov (bad) cmp xlat mov pop imul scas pop mov cmp mov lock add mov mov test sahf loopne (bad) dec pop je fldt (bad) pushf add enter call sbb movsb jne mov mov pop adc sub sti dec mov sub jae cmp dec and mov push add jne cs pop pop rcl add add out test xor daa sbb dec mov jno adc and inc pop dec inc pop inc jmp int3 dec push push addr16 mov gs mov dec xlat dec pop or pop nop jg dec push fcompl int3 push nop inc inc pop fs (bad) push test mov xchg pop or jne pushf fdivrl int3 arpl addr16 lea jae cld test arpl aam gs xchg loope outsb in xlat out or sub mov adc arpl pop pop aad mov xor cwtl inc mov lret jno inc test mov mov jg inc push jno add les mov adc ret cmpsl xlat movsb mov inc cmp test inc mov (bad) hlt pop add addr16 addl arpl inc movsl cmpsb cmpsl test stos stos lods inc lods scas scas mov mov mov mov mov mov mov xchg inc mov xchg xchg inc xchg xchg xchg xchg cwtl cltd lcall adc dec out xor inc push inc dec out mov fistpl and dec data16 inc (bad) and push add ret jae movsb add sbb les sub xchg clc jae test xchg adc jnp jle jg data16 popf dec shl mov dec dec jl mov lods (bad) jne inc push sbb and out inc lea (bad) lret pushf inc push (bad) or mov mov stos push mov aam gs outsl imul push arpl mov push ror push dec jb mov aas fwait les push sub mov jecxz test xchg (bad) int3 out push jecxz xlat mov aam gs xchg add adc sub xchg jae imul lcall out push out fisttp movl mov xchg into xor sub cmp push pop addr16 aam gs xchg gs stos add imul push inc out (bad) fistl stos aad scas inc fwait mov imul mov inc dec int lods cmp dec dec lahf dec inc ljmp ret mov outsb inc cs inc rol dec push ds (bad) jge test push arpl jae xchg jb xor cmp bound sti mov xchg pop push inc icebp lahf mov pop push jno arpl lahf pop aas in jo fwait aas call mov lods cmpsb pop mov push xorl add stos shll mov mov mov movsb xchg test arpl push mov stos push mov shlb lret stos outsl mov mov movsb mov jo outsl xor mov je lahf rcr xchg dec (bad) push mov jmp push fildll mov cmpsb lods mov subl xchg lret pop dec and xchg mov or stos mov imul jl jo jae ja movsl mov outsl dec scas movsb mov and les pop xchg jecxz mov pop fidiv out jle test mov mov xor iret dec movsl movsb cmpsl dec pop mov lods mov into es jl iret loopne cmp paddq ret push scas addr16 mov arpl fiadd push sti addr16 mov aam gs jnp addr16 outsl or fnsave jecxz xlat push (bad) addr16 insb xchg dec aam jp dec sbb aas fsubrl xchg out out aas rcrl (bad) lods ss (bad) jmp int3 les pop mov out ret mov js or in dec dec mov xchg push push dec dec addr16 push xchg ret fldenv andl pop iret inc inc add (bad) ja in orb rolb xor clc mov outsb jmp or lods and mov pop rcll mov fstps fadds xor jecxz xor push mov add sbb adc bound or iret sub inc or std (bad) jmp dec inc scas cwtl push sarb mov cmpl cs shr xchg sub insb jb les inc imul cmp jmp or mov pop cmp inc adc push jmp es push aaa pop dec pop mov or nop fwait test ljmp xorl mov into loope popf inc sub xor arpl xchg call adc into popf sbbl mov stos in fdivrs ss and mov or fiaddl int xchg mov ja,pt cmova ds mov orb mov dec cmp popf cmpsl jle xchg inc rcr mov (bad) cmp push push outsl inc test and xor adc data16 mov out or xor addl lods scas repnz add leave cs jbe incl xlat add sub add (bad) push push mov jb sahf and inc pop add fsubrs or aad xchg jle bound bnd and mov popa hlt adc ret or incl push je into mov add hlt xchg push mov sbb jb dec inc add enter rorl push ret xor out inc in jmp inc cwtl andl inc aam sbb jge inc mov add jg fs adc lds inc sbb lret fwait dec pop hlt dec sub leave jmp mov mov dec jbe pop adc mov inc popf jl lret lcall clc jne stos cmc push inc ljmp push push jns xchg xchg icebp adc inc out and or sub popf inc lcall pop dec xchg mov repnz xlat jae push lahf and adc or jmp ret pop aam add (bad) jae pop ret in jne out bound outsb scas pushf inc jae jne ja jns jp jl jb jbe dec dec push pop jbe mov loop mov pop dec aaa jne and addr16 xchg pop pop repz dec mov lods popa dec xor arpl push fwait out or mov push dec pushf out inc ja dec imul mov inc jno inc jbe sub mov mov push jmp rcll dec xchg or xchg insb dec arpl xchg test pop xchg mov fs into add xchg test mov jecxz mov dec mov insb andl orl daa fwait mov jl push xchg data16 mov mov imul dec lret jl (bad) arpl icebp ret mov xchg aam jne push es ret outsb pop mov mov or push or jge mov arpl aam or mov daa jg sbb scas aam or jne iret jl (bad) arpl icebp ret mov xchg aad mov out pop mov mov pop aam or jl pop (bad) test cld or aam or daa xchg pop rorl insl or daa dec mov jl pop aaa rorl pop imul mov mov (bad) inc push pop test out aam or daa mov mov rorl orl mov jno call mov rcl xchg or out inc adc pop push fiadd (bad) mov je add jl pop inc rorl and pop aad aam or mov data16 add data16 aam or int3 xchg push inc inc popa mov or rorl enter sub pusha frstors (bad) mov jl bound aam or daa push mov jl pop cmp push mov push xor mov jbe or jmpw push (bad) or and sahf aam or cmp pop jle mov or jl pop into rorl lcall jp adc data16 aam or daa mov data16 aam xor and aam or add xchg rorl xor aas and daa aam data16 hlt bound xor aam aas in shlb sub data16 bound cld inc mov or daa call fsubs sbb clc xor ret cmp bound loopne mov xor inc pushw cmp bound es mov xor aas sarb bound out inc mov xor aas (bad) shlb ds inc mov xor aas sbb daa cli ret inc mov xor aas loop daa and data16 push xchg dec test adc pop movsl xchg sahf (bad) push push dec xchg add pushf movl mov inc les arpl mov fdivrl and push mov ret data16 rcrl je dec dec push movsb out addl mov je jae push push mov add bound mov xor test jno push inc and mov jl jmp and icebp xchg pop lock inc or loopne or cmpsl ljmp pop or call addr16 arpl mov inc movsl lods cmpsb arpl cld mov push xlat insb cmpsl testl or insb jb mov test mov insb xor xor add adc imul mov and fwait lahf xchg xchg mov mov and mov mov sbb addr16 test mov mov imul movl lea cmpsl mov fstpt ljmp fsubrs inc ja xchg mov lods xor jnp addr16 cwtl jno jge test mov push ja out or xchg and inc inc inc test mov out inc jne xchg scas loop cmc inc inc enter enter imul arpl stos scas push xor xchg insl xchg popf dec pop mov mov dec xchg test mov mov dec xchg insb dec roll test stos adc xchg (bad) mov sbb adc dec dec idivb call xlat addr16 mov test push lea (bad) mov mov lret stos insb xor push insl lods and lock xlat dec not push mov scas aas xor jge in inc jb xorb cmpsl or insb dec dec addr16 mov sbb dec dec stos sbb movsb or push addr16 call fldenv xchg test mov scas sbb addr16 or test daa mov mov push push ficom test addr16 (bad) mov test int fdivr dec dec imul mov int3 (bad) mov int or xchg add cmp test clc xchg iret xchg mov jmp bound imul aam cmp bound dec addr16 nop test mov dec dec xchg addr16 mov popa push xchg xchg mov repnz int push addr16 xchg out decb xchg insb dec pop cmpsl xchg aad mov jns dec pop call js jno pop mov adc jae dec adc xchg mov rcr scas xlat movsl imul dec cltd imul cmp insb dec outsl addr16 leave popf pop out xor mov fdivrs dec ja push ljmp jnp imul mov lods cmp push xlat test mov pop dec xchg out jp int sti xchg insb dec mov (bad) fwait cmpsl mov push (bad) ss cmc cmpsb cmc aad arpl addr16 xchg pusha push add dec inc mov aaa xchg dec addr16 mov add fwait pushf dec push cmpsl addr16 mov mov outsl sahf rorl push mov jecxz dec push xlat addr16 mov mov nop fwait cmpsl push test adc push mov push addr16 push push fwait mov lods mov push push dec addr16 sbbl mov sub (bad) lret push (bad) mov test and mov stos std movsl mov xchg mov popf push fistp xchg enter stos ja lds scas sub push dec xor pop mov lock movsb jbe and pop in test lods in xchg push test mov pop dec lods addr16 and pop aam sti fcompl jne cld add test mov clc data16 jae mov mov pushf pop jo (bad) mov (bad) lcall pushf xchg mov sbb enter mov outsl sub dec mov pusha arpl test cmpsl lods sub dec addr16 test outsl (bad) jmp aam (bad) sahf lods in jae (bad) in movsb (bad) mov jp pop mov sbb lods data16 sub addr16 xchg test out push mov xchg mov push mov orl sarl addr16 aaa mov test fnop outsl pop sbb mov lret xor andb mov sbb nop shll mov sbb imul inc imul sbb adcl sub addb inc fnstcw call shl push lock lods scas mov jcxz movsl insl insb movl mov (bad) cmp inc xchg in icebp (bad) sub sub mov sar inc jecxz lea stos cld or cmp ret jno (bad) push stos inc xlat loope fisttpl loopne dec jbe dec pop iret aam jle aas cli ret inc jecxz xor inc fisttp xchg jns ljmp test inc mull pop cmpsl and cmp jo mov ror ss pop mov lret mov xchg jb mov insl add inc scas (bad) xor dec test push cmp aaa mov mov inc push sbb pop pop loope repz mov (bad) dec pop inc stos jl fsubrp in cmpsl xchg inc rolb sub shrl inc cltd push je fs mov pop push mov pop (bad) in dec rcrb outsl mov add mov dec hlt sbb sbb ss push inc mov cmp cmp shlb inc insl ret out pop gs in push mov stos test ljmp or push hlt cmp rcrl or dec les inc push push inc cmp ljmp mov andl icebp adc clc pop lea add hlt mov pop jne cmpsb outsl xor inc scas pop or sbb add ret ret fadds inc and mov inc sbb lret pop outsb cmpsl dec inc or (bad) adc lahf test pop fisub and sub subb mov stc mov or sub inc fnstcw add andl js out mov outsl dec xor (bad) inc mov dec ljmp rcll inc xchg jae xor mov adc mov mov dec aas jnp push in sub mov ret mov inc clc cmp inc and inc lret push push dec ror cmp cmp mov dec push std mov daa andl xor lret mov fdivs mov mov inc enter mov dec or cltd adc or xor sbb and mov xor pop and lods fistpll dec fstl idivl dec inc ret and popa (bad) xor push leave movsl jecxz gs pop inc xchg cmp xor inc lcall pop mov inc push push pop xor mov cmc cmp sbbl add mov xor fstpl das mov pop xor xchg pop mov cmp test and fcmovne daa inc (bad) idivl in pop xor add clc and adc fcmovnb imul add inc lret call lcall adc adc cmp std add jp cmp xor mov pop jl imul adc inc push inc fadds aad out or test mov mov into dec add inc jo mov dec inc xchg inc fbstp sbb sbb fdivrl mov movsl mov inc mov repz and mov inc lret inc into out and xchg scas repnz inc ds ja sub or movsb sub dec push les adc adc pop inc jp outsl popf lods (bad) rolb sbb jge stos rorb mov cs push pop jl fbld add sti inc test sbb jo jae xor les mov mov das arpl inc fwait shll jnp dec inc xchg cli mov xor (bad) call and repz cltd pusha gs inc out lcall inc (bad) in js lret mov inc cs and push int3 xorl xchg iret or xor add aam xor lods cmp (bad) cmpsb pop dec add pop cs mov rcl cmp xor inc sub adc jns stos inc cwtl inc out sbb mov (bad) pop fbstp jp mov inc or into shr cmp cmp inc sbb inc lahf dec aas frstor decb imul stc cwtl (bad) dec mov andl loop fistl aas movsl mov cmp dec lahf aad das clc arpl sub repnz jns xor adc repz inc push enter xchg std jl or xchg pop inc xchg pop imul enter ja mov test xlat addr16 add icebp or add xor inc les or sbb inc push cmc pop xchg jb daa xor or sbb fisubrl lods adc xchg outsl mov ja nop (bad) mov and fucomp les push inc add call or pusha mov hlt pusha (bad) lock in xchg jnp xor adc jp jbe push imull out mov loop lret jnp sbb jne in incb pop imul testl stc inc lock mov mov jl adc (bad) inc mov ret sarl mov xchg mov inc cld add push movsl xor daa inc pop das push repz mov dec dec orl icebp arpl test push js jle (bad) ss movsb inc test mov addl aas fiaddl mov xor loop scas inc sub test dec sar leave cmpsl stos mov inc or int3 and fimul lds js dec inc rorb jno inc inc adc and clc arpl xchg cli (bad) js bound xor cmp adc lods imulb mov clc inc jmp xchg out mov stc inc mov fsubrl push cltd mov lods data16 (bad) ret js mov fsubr leave inc sbb push cmp xlat add iret ret ret sub testl mov cmpl (bad) mov and mov data16 sub into insb mov jl lcall dec xor xorl xchg inc fstps (bad) pop xor sbb push push enter fs xor jmp sub test lock mov decl mov mov or cmpsb push outsl sbb flds push lret inc jecxz jnp lods inc push enter cli cmovae mov jge addr16 mov jg jo outsl xchg icebp mov sub xchg sarb popa inc jge push and insl inc fdivs in aaa fimul inc dec cmpsl push fldt int loop dec xor inc or mov out repz xchg loopne bound mov (bad) cmpsb mov (bad) xlat scas test cmp push movsl sbb add xchg cltd mov (bad) rolb int dec xor enter mov ret inc push xor inc xor loopne fcom in inc push pop inc xchg mov cmc cmpsb repz pop loop sbb mov gs inc (bad) aaa add inc fcom (bad) push sbb daa push and ljmp cld mov imul out dec inc movsl jmp and jl stos fcoms mov mov fisubr leave adc cmp xchg hlt add outsl js xchg (bad) (bad) dec and add dec pop mov test aam sahf inc sbb mov push ljmp push aas add stos or pop jmp dec sub mov in add pop jne,pn aaa loopne mov movl add les and lock adc inc mov pop add xor dec mov cmpsb mov xchg imulb mov add pop (bad) xor aam mov inc mov pop ret cmc cmc push jbe inc add push inc mov and sbb nop pop add adc cmp or lahf rorl jle fcmovne movsb lods inc push sub add inc or lods push es ds push push daa addl aad ret jl mull mov xchg (bad) aam fstpt cmpsb es aas lahf enter mov cpuid dec mov bound nop add js sarb adcb (bad) mov scas mov lea jle das dec fs inc or rcll add rclb mov mov mov scas out movb xchg mov mov push shlb test inc pop sbb test pop ret sub mov lahf arpl popf js cmp xchg into addr16 pop add cmp pushf and mov idiv inc add mov inc andl pop dec (bad) xor cli dec cmpsb leave dec inc hlt lahf jno add jle jl mov fbld pushf mov mov sbb cmp stos jae cmc ds inc xor mov ret inc ljmp pop adc lea dec push jno ret shrl movsb aaa adc sbb std inc xchg pop adc jns out inc mov add mov xor outsb test inc (bad) in fcompl frstor sbb mov icebp int dec and xchg push enter ret add sbb xor fimul test xor fwait pop add sub inc aad mov cmp inc mov hlt fsubr push sub outsb sub xchg outsl call xor rolb roll adc pop inc xor jp or (bad) cmp (bad) aad stos dec inc xlat inc repnz lock lar inc ret cmpsl adc out aad out mov xchg xor mov or sub add jnp inc ss iret lret (bad) cltd inc call movsb insb repz push xchg icebp pop imul aaa (bad) fistp mov sbb idivb mov inc js clc aas int3 mov xchg in or jp dec adc xchg negl and test arpl or imul push dec jno and ds inc fcoml aas dec insb stc dec mov fcoms inc sbb flds or jle or adc test out das jle inc mov lret sub push pop rorl lock dec and iret mov mov ret xor xchg mov push call sbb out xor into inc add cli fdivs lock jl mov xchg in pushf inc inc cmpb xchg mov leave cmpsl and inc fs dec pop (bad) mov inc jl insb xor mov fwait pushf out insl add add leave cmp inc movsb mov aad inc cmc lods and sub mov popa hlt orl test add jae lock inc pushf (bad) xor inc push inc inc stc in (bad) mov fwait inc mov xchg popf arpl adc mov jp inc jns sub or sub mov lahf dec addr16 pop cwtl mov iret xor arpl xlat or sbb mov xchg inc pop pop ja les xchg add mov jg movsl inc sahf mov mov popa inc jp jl sub sar or push or mov inc cmp inc dec outsb lret mov inc xchg lods dec (bad) dec jbe pop inc cmp jns mov repnz in xor dec popa lret xchg cwtl jecxz inc ret inc and ja adc adc pop sub je pop push pop inc and add jb push in pop lahf mov mov lfs xchg dec mov cs mov rcr and or add xor cltd mov inc or add and jl cmp ret repz or xchg fs fadd pop inc cmp xor xchg inc sbb mov inc hlt not mov pop push jae lahf ret (bad) ja xchg mov popa inc movsb enter mov (bad) ds sub movsl nop cmp cmp sti or div dec mov das (bad) int3 fwait outsb fdivrl call dec mov jo sub notb fisttpl mov mov jmp repz jp mov mov outsb sbb aas ret inc push fistp dec pop push sahf sbb inc mov inc mov push mov inc (bad) lods fidivl inc int mov and pop mov mov jne rolb lea push inc in scas (bad) xor jns xor mov inc push fimull push push jae inc inc outsb xorb push fadds mov add mov xchg sarl clc push pop orl fistp lds mov inc addr16 or loopne mul jnp lds pop xlat inc push cwtl pushl inc in and or aas or out sub test aad stos inc (bad) jg sub icebp dec jecxz jno inc inc jns mov test ja mov es outsl xchg add int sub inc imul sti (bad) or mov sub pop fwait loop aam inc mov aaa cs popa xchg mov inc or nopl je ds jl push mov aam dec xchg add popa pusha adc inc (bad) mov cmp mov out cmpl fist pop (bad) hlt movsb out enter mov push inc pop dec sbb xor mov rolb xchg add jmp inc pop fldln2 cmp jbe push mov daa and inc test lods push lods movsb mov inc in lea das dec pop (bad) repz xchg nop sub shrl cwtl flds ret lret rcrl imul out push jp incb testb inc push inc xor xchg mov mov push lods dec call mov ret das jg or xor inc ficomp dec scas xor xor test mov ret inc iret or inc and jle stc dec fcoms inc cltd jns adc aas loope sbb xchg mov insb in dec xor push (bad) jle cmp addr16 (bad) cmpsl or push jnp push (bad) mov mov add int sub cmpsb push mov push (bad) inc aaa test dec movl mov xor mov push iret arpl inc dec in push enter out mov pop jnp inc xchg inc xchg cmpsb fmuls cmp inc inc loop out sbb or add ds dec (bad) (bad) out xor xchg js in inc cmc push fidivr mov cld sub sub dec pop fldl cmp inc sahf repz jae popf inc xor sub scas mov xchg int fimull add mov or mov js dec xchg fdivr sbb pop push gs pop xchg inc cs std and dec mov mov mov mov (bad) rcrl je mov movsb int jmp mov insb mov jecxz bound pop sub (bad) movsl mov pop inc rol or push cmpsb stos loop xor outsl mov mov stos in push mov pushl arpl lret popf xorl mov mov mov jb add jp js ja mov cli dec fwait adc lock jmp in nop in pop iret fcom aam inc push pandn cmp adc orl idivl mov mov insl jmp lods scas mov xchg mov pop pop enter das cmpsb sarl aaa inc mov lret lds and mov xchg mov mov mov push cmc cmp call call push mov lahf pop xor dec add scas jo enter test cld push dec xor xchg or xchg or test jl sbb aaa dec dec push outsl jo test push in inc les xor stos jle inc pop mov or fdiv sub repz and sub sti inc push and lods into sti aaa sbb addr16 push mov push push insb ret jae lods icebp shr stc (bad) sbb insb dec pop fs mov stos jbe mov sysexit mov lcall push jae js mov stos shrl aad pop xchg incl pop in pop xor jecxz btc pushf mov jmp fs xchg dec aaa mov sub lea movsb insb fcoml lea leave imul test movsl sbbl inc cmp xchg cmp xchg sub movsl ret movsl mov aad pop (bad) add scas cmp lret ret sbb mov jmp arpl (bad) in dec xchg scas popf out push xchg pushf mov push rorl push sub fisubrl fs lcall xchg loope push mov mov loopne inc cwtl sbb mov jg sti dec xchg mov jnp (bad) sub fsubp mov or sbb in in leave mov ret lods and inc add ror not sbb or adc sar sub setb neg xor sub call int3 sbb stos (bad) or xchg push mov inc jg xchg andl (bad) dec in xchg mov (bad) std ds popf cmp cmpsl les mov fiadd xchg xchg jmp aam lods scas shl xchg lret or inc lcall pop frstor popa mov fisubl jl inc addl and adc sti jbe lahf cwtl inc cltd ret int3 sarb (bad) mov xchg in in repnz cs and mov aaa js js adc mov sbb add aaa dec lea insl push pop cmpsb pop fisttp aam shll mov mov pop int mov inc pop addr16 imul xchg push repnz das ja or sbb pusha sbb sub mov mov xlat sub icebp ret push add ret cmp test xor adc cmp add and pop mov loop mov jnp mov (bad) sub mov inc addr16 push mov jecxz mov pop lret jmp lahf jg insb adc data16 and mov pop jmp pop test add lret sub push scas mov inc xchg or cmp out ja xchg jecxz divl in (bad) push cmp divb push cs outsb pushf (bad) test mov pop mov insb fisttpl popf shl fcoml xor dec and xchg and scas out xor dec jnp insb (bad) repz ror push rorl cmp testb (bad) push sbb cmp mov (bad) shlb scas (bad) adc sbb outsb push cli movsl cmp push inc cmp cmp (bad) jl push aam fwait jno ljmp lods hlt call or rcrl iret pusha call jne shrb push mov lock rclb out pop inc int3 jae sub sbb xor ja push mov xor stos pushf sahf sbb dec push data16 fistpl push mov lock rorb (bad) (bad) or pop rcl jmp dec xchg in xor mov ret cmpsb pusha inc test cmp cli cmp lods push cltd jns adc mov and loope test jg mov cltd inc pop es add or in mov push leave (bad) cmp jmp gs and push xchg mov lds mov adc jb mov mov fbld sbb and call fisub sbb inc clc pusha (bad) mov (bad) sub insb lret popa out stos push scas push mov (bad) (bad) fstpl xor push jbe add cs les mov jbe cmpsb out fstps and mov sbb movsb stos mov (bad) dec jl insb mov fdivs std or inc dec cmp jge jp (bad) xor movsb or ss leave inc pop fsubs pop pop inc mov sub cmp orl (bad) notl outsb icebp add call lea je bts cmp test add or sub push and shr shl jmp add and xor lcall jmp mov jno lds mov lds and shrl (bad) pop repz das xchg sub loope jecxz inc (bad) js jbe or sbbb insb mov data16 jmp test call sub (bad) imul or jp jae mov nop and and mov mov icebp sbb es dec mov sbb es pop xorl clc adc or in jne fldl2e dec inc (bad) aad jp xchg push in inc std add inc std cli dec ss jl test (bad) xor out adc push mov push dec (bad) pop push jge cs cmp stos mov scas cmp push mov add pusha jecxz jp ljmp jecxz fsubrp fist mov mov test int3 adc in mov inc mov rorb jne pop out pop lods adc fisubrl in outsl fldl add aam sti sbb cmpsl mov out in mov das dec outsl call xor or dec mov shrl mov push sub or mov push ds aam dec mov mov loop nop pushf loop inc cmp cltd ret jne inc dec addl mov push popf mov mov cmpsl ja cmp jle imul and mov fiadd in xor inc loop push mov pop jno out mov lds inc push xor cs insb add mov aad loopne adc pop je cmp jg cmpsl inc imul sarl jecxz pop fwait inc mov (bad) dec nop ja mov xchg rol popf icebp push push fs shll add push loope mov xchg es lea mov shl cmpsl cmp mov sbb shrl mov addl in (bad) loope out inc dec test jge xor xor movb mov jp add jbe insl lds (bad) aam cmp loopne loope and aaa pop inc sub jno in inc mov inc mov enter inc bound cltd scas mov insl (bad) cltd stc in lds xchg test insl icebp in push mov rcrl jns push adc add jo or cmp xor aaa clc sbb insl out push (bad) icebp fdivr and ja in sbb mov in loopne fwait dec xchg pop cwtl adc shrl jl xlat cltd cmpsb jno out cmp sub rcrl les xchg cmp sbb sbb push in pusha fdivp pop and addr16 jnp xlat (bad) xlat movl push xor outsl das fildl and or fucom pop es addr16 inc cltd cltd xchg in ss sub repz xchg push adc pop or add (bad) mov scas push insb lret sarb les inc mov ss mov popf cs xchg cmp (bad) xchg in daa out ljmp repz ret cld in icebp mov inc mov stos movsb fwait out enter popa push imul incl mov push popa cwtl push imul pop cmovnp and ljmp lret jp (bad) das inc (bad) test adc hlt xor fucomp lock lea adc test out (bad) xor jnp cmp imul cmc icebp into (bad) (bad) or or bnd (bad) mov mov es aaa push popa addl es stc inc rcrb in xor dec out cmp iret xor imul test jne adc add es cmp cmpsb mov int mov cmp in adc sub lods jg fisub sbb leave mov or mov lea data16 mov imull push scas outsl adcb mov or out jno jecxz mov lea je pushf pushl call movb lea je aam sbb sub bts sets mov rcl not bts bsf mov shl rcr shr movsbl shl mov stc cmp or pusha mov jmp movsl cmp cld mov mov aam popf stos cltd cmpsb dec negb xor push inc mov vmulss loopne lret adc pop mov lahf sbbl add fcomps loopne push inc jl test movsb pop add cmc jle,pn sbb lds sub rorl je es cmp (bad) cmc mov out jb cmp aaa scas mov push mov les test adc cmpl mov mov cli les and xchg inc mov mov stos mov or cmp cmp ljmp loop sbb and movsl scas nop ja push pushf lea jmp clc add pusha pushf movl lea jmp pushf call es cmp pop push icebp cmpsb stc adc add jmp test leave insl adc push popa loopne cmpb cltd xchg mov inc mov loop inc std push jmp scas insl imul test pop inc scas xchg mov inc mov sbb outsl enter (bad) sub int mov jmp push fsub (bad) push push sahf jle adc stc in sbb jp les int inc mov add adc int3 jb push outsb push movsb popa inc pop mov pusha stos xor and jno loope pop test clc iret ss push shrb cli and flds pop xchg push nop push cmp sbb cli or call pop rcrb test adc cmp fsubrs mov popa (bad) mov imul hlt in push cmc unpcklps cmp mov inc mov pop sub sbb enter cmp sbb push inc cmp daa or mov inc sahf cmc mov imul (bad) jbe xchg adc das outsl das push mov pop xchg push and addl loope jno loopne popf mov fs lcall gs out out nop cs mov xchg enter pushf ret sbb cmc lcall sbb push pop enter repz adc mov cs divl jns or outsb aad adc jge ss cmp jl and movups inc push adc sub nop xchg outsb xchg push jb push sub jbe movsb lods and fsubp add cmp cmpsb push test cmpl jb cmpsl es or mov jno loopne push fsubrl pop repnz sub add adc pop cmp add fcmovnb xlat dec je inc out xor stos cmc out inc cmp (bad) out add jno popa dec aaa push das jle xchg ljmp stos mov call bsr in roll xchg inc adc pop pop nop hlt outsb push popa jbe push dec or adc int (bad) hlt sti inc test push pop add xchg in inc std pop xor add push bound aad lret in lret sbb xchg insl xor push cld je pop stos adc hlt cmc jmp xchg or sub stc mov stos adc jno fist pushf call rcl rcl clc add rol inc mov cmc test pushf jmp add add or sbb add add in and add add or add or add or add add add add add or add add pusha sub add add pusha sub add add mov add add add add add add add add and pusha add add add add add add add add add jae popa insb insb add fs gs inc outsl jne je jb gs push je imul gs arpl jb add outsl js inc insb insb add jb imul add insb outsl popa fs gs inc outsl jne je jb gs push je imul js jb js pop insb insb add repnz mov xchg pop sub bnd push jge ja notb (bad) mov or inc mov and (bad) ficoml mov and (bad) aam stos dec in dec adc les mov jmp push cmp sub imul in loopne aad jge in inc fldt lods dec inc aad and mov and fcompl xor not mov in lea iret inc pop sub xchg jmp addr16 enter xor dec mov pop cli negl inc adc fsubs sbb push push pop cmp push je inc inc arpl lret out pop xchg sahf jge enter xor pushf add mov sub sbb mov fs jecxz cmp mov out push pop adc mov jb mov push daa fist pop ret mov adc xchg inc lds pop add sbb inc mov pop inc scas loopne sbb mov adc push jg adc sub ja dec adc dec iret xchg push inc push jnp dec sahf into fsubl inc jecxz je and hlt addr16 xchg sub jne push pop test add movsb lea push cmp jne inc andl js pop inc addb inc inc outsb test pop cmpsl jns and icebp sbb push push fdivl add inc scas mov xor out daa add mov cpuid add arpl mov pusha js pusha xorl sbb or fsubl pop jg (bad) orl iret cmp or fucomp popa sbb jbe les imul lahf mov lcall adc adc jl imul dec cmpsb pop cld lret mov jmp pop lahf pop negb fs fnstenv (bad) cwtl bound movsl lds jl jmp xor add dec mov mov loope sub xchg vcvttpd2dq xchg add fimull lds imul (bad) jno xchg jle inc movups mov push mov lcall xor incl mov inc mov cltd outsl add pop mov push int ljmp mov out push jne add sbb test or mov pop cs jmp push call stc das mov fdivrs icebp jmp mov scas ja fcmovne shr jecxz push add out sbb loopne fninit leave add (bad) push mov inc fcompl push jg push inc dec dec std jmp and repz pop mov mov push pop test je hlt sub dec enter adc jl pop sbbb (bad) insl idiv loop stos fs jnp out cmp dec cld mov push cmpsl jb sub lods adc mov mov xchg pop mov jecxz sub gs xchg mov xor adc outsb nop subb das aas add in or dec jae adc lea xorb push mov je xor cmp mov stos rcl leave pop cld inc cld and cmpl lahf rorb pop sub pop lea or ret jle clc mov inc xchg out int pop sub and sub adcl mov pop (bad) stos jp mov sbb imul cs push ja clc es dec jp xchg or mov cmp cmp pop jne sbb mov mov cmp inc push push sbb cmc imul lods mov sbb mov adcl scas lcall (bad) movsb add (bad) out dec ja sarl iret sub cltd cmp xchg or pusha cld adc mov fidivr data16 push sbb cmpb int pushf (bad) xchg push mov mov scas mov xchg cld mov stc icebp mov jl dec mov dec add xchg dec xor loope pop xchg ljmp mov movsb popf es xchg iret popf mov cmp xlat push cmpsl xor movsb jp xlat pushf or xchg mov pop dec fwait cmp push sarb fwait cmp cld lds jmp pop jmp jae adc pop push cmp lds cmp mov dec scas cmp inc pop rcrb ja out mov add xchg lock test leave ret lods sub push pop jl ljmp loop jo jae mov jnp mov out fwait test xchg sub adc (bad) mov jl push sti aaa adc ljmp out xchg fiaddl aaa or fcoms push sbb mov mov imul fs mov inc movsl adc js push or scas stc sub push outsl test mov cli in or (bad) sub cli lcall (bad) outsb mov cmp push bound inc push lods aas mov inc lahf mov mov lds mov sbb sbb out aam lock sti ss mov push mov adcl jno dec fdivl int movsl addl gs lcall dec mov aaa jns cltd mov xchg push hlt xchg sbb ljmp std je or jns jecxz imul push movl pop jp cs subl push leave dec lret imul fbld xor insb aam pushf fidivr cld sbb (bad) call sbb mov nop sub sub mov iret adc push inc outsb dec jne push jo dec lds and fnstcw sub enter lock cmp jo (bad) pop mov lods sub insl dec mov bound icebp dec pop adc xchg cmp inc out push mov repnz or pushf (bad) jl add jae push adc xor cmpl (bad) sar ret ja jmp inc mov lret mov arpl inc or xor fbstp sub testb movsb xlat stc add jp mov cmp jl sarb (bad) (bad) lea push loop ja aaa jge test mov jo dec mov and shrl addr16 mov jecxz jecxz push xor or dec mov and jno divl sbb xchg xchg outsl scas and inc xchg (bad) xchg mov mov addr16 and or dec jmp xorl cli mov lods xchg pushf movsl test les pop jae and test push cwtl insl push outsl push jne or inc test jnp xchg (bad) dec xchg cmp inc (bad) push jno shrb nop mov sahf nop adc push or cmp roll mov loope adcl xchg jb fstps xor sbbl pop dec lea dec or test sarl scas inc add lcall sub test cmp mov addb lock mov iret adc adc push imul adc inc jno mov dec notl insb dec cmpl xchg pop cmpsl inc pop push ss hlt pusha repnz xchg push add aas sbb pop xchg pusha dec xchg add cmp rol xor loop cmp andl lret insb mov adc movsb mov jg in sbb add or xchg or outsl push push jl,pt jne sti mov push dec sub or sbb adc push sub dec mov pop stos mov lret lret sub ljmp sub push lret das fild or (bad) dec and xchg dec xchg loope or js lret sahf adc movsl insl push cmp mov stos ficom pop fistl inc rcrl push jmp dec mov in and hlt (bad) mov sbb ret cwtl idivl cmp lea or shr cltd push jno (bad) cmp sub in xor movsl mov cmpsb div sbb ficom mov mov jle test cmp cmp dec je fdivs xchg or jae shll mov fild fcomps pusha mull mov ja cmp or inc and nop (bad) pop xchg inc lcall jae lcall (bad) or cld push mov call mov mov sbb fbstp sarl gs sbb dec lahf add (bad) mov outsb mov stos pushf jne cmpb xor rolb mov or jae dec cmpsb add ret mov adc (bad) scas pop sahf mov movsl and mov sbb sub popf fsub daa ret clc adc test ja mov mov outsb sbb sbb pop adc mov mov aad pop sub xchg push adc mov jbe insl or xor ss push inc popa lahf dec movsl test sub fadds sub popf and ds faddl outsl push hlt dec jb cmpsl js sbb gs mov sbb dec pop dec add push push push mov add (bad) jge mov dec xor xchg lret inc xlat pusha cwtl pop push movsb fxtract (bad) out jle push mov jl mov sub test xor pusha (bad) test adc out mov stos test jo jmp cli mov imul int mov gs sbb cmp push out aad (bad) xor inc outsl cmp jl insl shl adc jbe out jo dec call inc cmp (bad) dec inc cld lcall aad add imul cs insb add add sub cmc test pushl popl push cmc pushl cmp lea jg push lea ja cmc dec sub (bad) (bad) push inc add push mov setbe neg rcr mov stc bt pusha push repnz jmp push push das test pusha call ret cmp daa out and pop xchg xchg push out lret aam and pop outsb dec sbb push sub mov aas xchg sub (bad) xchg rorl dec (bad) lods fwait in push mov iret xchg in icebp xchg mov push test in (bad) jns outsb and lahf loop adc cmc lcall mov jmp inc xchg ljmp ja mov shr fsub negl daa sub aas jg movsb insl mov mov pop lds fidiv lea cli or (bad) repnz sbb bound add inc mov add adc stc push imul mov shr sbbl iret adc int3 in xchg aam sub lahf or jb arpl pop je into ficomp mov pop in xchg insb and stos add data16 fistpll mov popa daa movsb mov lods mov xorl aad mov ret fcmovu add pop and xchg ljmp iret adc (bad) push jo xorl in lahf loopne sub cs lds mov push push push rclb aas inc popf repnz add inc addr16 and mov (bad) scas cmpsb (bad) push cmp js or mov cmp test loop fistp jnp out fistpl daa ds and pop xor sub sbb stos mov add mov cmp adc outsl dec rorl pop data16 mov sbb inc (bad) push xchg dec cmp jno out jne pusha jg mov lds mov out dec hlt stos sbb iret in out iret lret icebp in inc stc cmpsb sbb (bad) push mov lods std dec cld bound (bad) xor push pop inc pop pushf push or adc (bad) and mov repz movsb (bad) jmp mov scas rclb or stc mov (bad) and fmull mov mov (bad) daa popf cmp jp xor out pop push mov push mov inc lahf lahf pop xchg sbb jnp lahf inc jnp xchg sub push add aaa js mov mov (bad) call add jno into lret (bad) adc movb pushl call mov mov in in lret xor pop and lcall xor lret pop (bad) and push int and je push xchg test add dec (bad) out (bad) jb outsb adc mov xchg movsl cmp and sub dec (bad) mov and jg adcb inc out mov sub inc mov xor adcb adc pushf and shl rolb fs icebp dec mov stos rolb lcall sub in push (bad) mov inc mov xchg dec cwtl xchg (bad) sbb into loop lods push (bad) out nop ja (bad) pop imul dec rcr sub pop lea cltd fiadd rorb nop push cld add cli pop and std and sarb mov iret repz cmp loop pop jo fcoml mov lret loop insb jae sub (bad) (bad) into mov enter xchg loopne roll mov sahf mov or loopne outsb xor (bad) mov and loope push mov pusha stos icebp inc inc mov xchg inc movsb add sub push test pop out or inc lret jp aad sbb rep rorb adc movsl mov or (bad) pop inc push jmp mov int ds ss nop subps into ja or and inc xorl xlat jo adcl data16 push andl mov mov rcrb cmp pop and cmc test scas shll jecxz arpl adc mov add data16 dec push lret out aam out xchg mov cmpsb push dec adc enter addr16 pop dec fstl push enter std into push xchg hlt jmp in shl cli adc (bad) sub outsl cmp cmp inc ss push fs push mov test (bad) lret aam push mov and test xchg cmpsl pop mov inc xor sbb xor nop cmp xchg or hlt ljmp fsubs andb add fsubr jmp (bad) and add cmp out sub adc push dec mov jbe mov and test cmpsl mov rorl ja sub pop orb sub lock lods jns mov sub mov arpl pop (bad) into (bad) push xor cli loope push bound mull ljmp cmp adc scas inc js inc fucomp push (bad) sbb and (bad) jge pop outsl and iret shrb fadd das es and lret cmp jbe and rclb inc mov xchg enter xor loope xchg mov (bad) movsb ficoml push mov ja jnp in mov mov enter mov inc sti or sbb jl xchg movsb shrl cmc lods repnz call int fcmovu call jno int3 add mov sbb test outsb hlt call call (bad) sahf xchg stos (bad) cli adc std loop ror mov sahf add add ljmp sti sbb dec test dec in test push jmp adc pop (bad) pop insl push dec xor jp xchg call dec fwait and xor cmp ja out aaa int3 or inc cmpsb jns ss cli addb mov orb cld push rcrl (bad) (bad) adc lret leave mov mov xor rorb jmp pop cltd loope out aaa mov fwait and ss cli mov mov mov inc or mov jp adc dec adc add aaa call fcmovnb xchg mov sti xchg or xor sub out cmp aad (bad) jae std ss cli push mov lods in das inc aas andb (bad) pop add dec in jl pop lret cld inc shr cmc movb pusha pushl cmp jmp call sets stos not jmp jmp rorb (bad) out sub cmpsb pop mull lahf nop (bad) xor addr16 jnp xchg xchg iret ja cmp stos je ret jne dec push push movsl xor mov inc dec or cld nop ret push jl adcl mov and rorb cmpsb sub dec ret fwait and aas jg into lock sub in inc lods xor mov cli in enter sbb xchg inc popf inc divb mov sub pop dec sbb out push jo lods mov mov mov add decb pop fadds mov dec test sub out push enter xchg lods mov je insb ror or iret loopne std repnz add jmp jg sub inc cmpsb je lods fiadd lods aad xor loopne mov rorb ds pop fdivr (bad) adc add mov jl sub mov push mov or inc (bad) (bad) jg jecxz mov iret cmp (bad) jecxz and pop adc inc mov scas add jbe loop mov xchg rorb mov fiaddl in push leave fidivrl dec xchg cmpsb fildl sub push dec mov jmp mov sar icebp adc nop cmp jo inc out mov xlat pop outsl xor in lods xor xchg mov ficoml scas clc dec adc iret adc cmp icebp vpaddb pusha mov adc (bad) dec lods fldl hlt sbb or pop mov sub pop dec insb aaa test xor push mov cld lcall out add jne xchg mov push icebp mov xchg jb outsb push mov jae adc cmp mov xchg xor in and jbe xchg pop in fldl jge pushf jecxz sti testl jg pusha rcrb icebp pop sbb (bad) roll mov and cmp mov movsl mov repz enter cwtl pusha stc stc xor add pusha pusha or push pushl lea je movzbw mov movsbw bswap pusha mov pushl not pushf lea jmp movsb and js and in mov movsl adc fildl or push (bad) xor scas adc xor adc and cmp add iret loopne or xchg mov adc pop pop bound lret push lahf push jp jge lods mov hlt aaa or jns inc in push ss adc and or hlt xor js (bad) fcmovu xchg adc jp popa sbb cmp ret jge mov out out scas shl jno (bad) sbb sbb repnz push xchg mov fwait sahf add cmc inc scas subb mov mov out push mov insb or add test lock mov xchg push into movups sub popa mov sub dec mov cmp or dec int3 xor push and lcall loopne es xchg out jecxz dec in mov jne (bad) xchg xchg add cmc dec mov mov cmp pop es jno jle mov push mov divl dec test xchg mov adc pop in out xor xlat xchg addr16 loope lahf fistpll cld lret push cmpsb pop mov rorb stos jno lds out push dec mov push mov jmp mov push sub push lods aaa mov sbb jecxz push mov in inc fcompl in (bad) jmp xor dec mov inc cwtl and flds sub or ljmp cmc lods ret test adc add aaa jbe fs repnz fneni(8087 cmp sbb test cltd jl mov std popa (bad) ja subl ljmp es or cmpsl addr16 or mov mov dec xor pop test mull mov add xbegin cmp pushf add jne pop pop adcl xor scas pusha add movb lea jne pushf stos pushl pusha pushf pushl lea jmp mov sub arpl cmp and sub sub or (bad) pop pop outsb nop push imul ljmp pop jno jbe cltd pop pusha jno push arpl (bad) enter add mov cmp xor pop jne pop fwait mov (bad) xchg rcl pushf test lahf fsubrp or sub (bad) xor pushf dec pop out mov jne lahf push sub mov jb mov lret imul das sub inc mov push insb stos or bound inc test cmp jnp fstpl mov mov add (bad) cli xchg xchg dec jmp push arpl xor cs insb add fs jne lahf movsbw push pusha mov pushf push pushf push lea jmp add push vunpckhps cmp push mov inc jnp (bad) aam arpl mov adc xchg adc inc clc cmp push push lcall out lods dec pop and inc les xchg add sbb push fs xchg pop in std or sahf pop mov cmpsb clc (bad) test sbb mov fild imul xchg jecxz arpl sbb add (bad) out rcr xchg push es cltd (bad) push int lods call adc in loop (bad) or repnz and mov and out xor in arpl and out out repnz jno ret ror pop xchg xchg lods inc cld adc hlt xchg leave sbb xor pop sbb ljmp repnz sub inc mov sub imull jnp and jle into shr movsb cmp lds xlat cs push add pop and sub cmpsl js out xchg mov (bad) call (bad) orb mov sarl pusha mov pusha fimull xor mov mov pop insl cwtl repz jle popf frstor add mov push mov movsl mov jno ret jno pusha call insb je je add sub jns adc nop mov sahf rorb cmp or add imul jbe cmpsl scas xor and imul insl pop bound std and xor cmp xchg jbe shll ss and cs das (bad) subl fwait icebp lea mov cwtl stos jae gs jnp into jecxz pop (bad) sti mov mov sub shr icebp scas (bad) mov leave adc fild test insl imul popa test inc pop and pop test or fsubp icebp fwait jecxz mov add test cmp fwait and mov cmp icebp stc decl (bad) (bad) or jns jl or stos xchg ret push add push loop popa popf mov jge data16 jl incl lret sbb push and push pop add arpl xchg mov mov lcall std loop pop pushf and ds sub mov (bad) je (bad) ds push dec inc inc push xor cs insb add add dec mov insb fdivl decl cmpsb clc (bad) cld ret fdivl in scas (bad) repnz mov add bound pop lods dec jbe (bad) hlt cmp add push sarb cmc xor popf repnz push outsl scas ret (bad) cwtl fsts (bad) cmp inc pop pop lcall (bad) jae jmp addr16 scas cli jne lods jb jp mov rorl push gs imul dec xor sbb dec stos xor mov fwait and lods repz pop xor repz movsb loope xor lods shrl imul inc mov jno lods xor and adc enter popf jno shlb cmp (bad) in push fwait lods test lcall mov fs xor fsub cmp push fistp adc and dec repnz cmp inc pusha notl and push mov sbb (bad) in leave xchg sub fstl jle jmp les adc insl mov xchg jle aaa sbb mov push sub pop test sbb push sub pop pop (bad) in in add push sbb test test sbb daa out or sub movsb (bad) mov int mov pusha jno mov je stc jmp js jp push dec xchg rcll (bad) aas pop and aam fsub mov loop push pusha mov pop (bad) xor and ljmp loope sub mov mov pop mov cmp mov or push scas dec (bad) cmp mov fiaddl aad mov mov (bad) or mov push xchg mov cltd mov jo dec lods adc jecxz cmp dec xor pop xor testb fisttp ret mov mov inc divl enter dec push jmp repz lock adc ja fsubrl nop dec pop jno mov push lea je push pusha mov test cmp call lea call push pusha mov call sbb dec add test pop push int inc xlat sub in pop mov mov mov fdivrl std sar stc mov push dec loope hlt dec rcrb dec jae push enter cmpsb (bad) enter hlt add insb mov mov stos or add mov push pop aas push mov jno pop out fld xchg add dec jecxz (bad) test mov int3 mov cltd inc push mov shrl adc int sbb sub dec addr16 js mov stos push out mov dec xor idivl stc adc xchg jae pop and xchg cmc hlt ljmp pop mov mov sbb sub mov movsbw mov clc pushf clc call rcl nop iret lock sar inc loopne pop inc mov or loope int and jp adc mulb dec pusha pop push enter pop (bad) lock or jnp mov or inc or das scas lock mov mov stos mov xchg in rorb stos fadds mov mov sbb cld (bad) xchg xchg int3 and jl xchg mov lods mov mov mov jge pushf add sbbl mov stc in movb (bad) enter mov js scas out push sbb mov lahf adc push dec jle sti test test mov push hlt dec mov push cmp add (bad) fcomp jl addr16 mov mov out jo ret out mov mov pop sbb mov mov arpl adc arpl andl lea lret jno test push popa cmp cli sbb mov cmp xchg movsb cmpsl xchg mov adc loope int fcoms sub imul shrb (bad) ds sub movsl cmp pop mov je (bad) lea out fdivs pop ret cld push lock mov jo lods repnz push test pushf incl cli jge adc inc inc pop fucomp sbb out sti xchg out inc add push (bad) and loop mov in mov push dec (bad) cmp pop xor mov sar dec add in push pop cld push sahf (bad) and arpl cli inc cwtl movsl or out inc cli or je mov xchg outsb jg add pushf and gs movsb jnp into xor add imul fwait cmp adc xchg or test jp mov in and or xchg test jbe push leave inc (bad) jo cs inc or pop sub cltd pop mov repnz jno jle subb or decb adc push xor shrb add lcall adc popf add inc aam mov mov or repz (bad) les aaa jl out (bad) and shrl mov dec jns xor fidiv xor outsb call mov cwtl (bad) fmuls mov xchg push xchg pushf mov pushf jno mov pushl cltd and dec or or cli test outsl jo adc sub inc fwait lods pop add jne pusha sbb jge nop lods rcrb cmp mov mov cmpsb ljmp (bad) sbb mov xchg inc popf scas cmp inc mov insb lds sub hlt lret xchg call push or add fld mov pop cmp notl call cmp daa (bad) xor sbb mov sbb mov lahf sbb jne cmp (bad) scas add jle bound jne ror lods (bad) xor fsubl pop inc sub mov out out (bad) sbb ja cmp sub imul mov repz jle mov hlt imul xchg movsb xchg or adc cmp jb and cld (bad) jb jge fisttpl cmp pop mull ljmp or ja add jno push enter xchg push and daa jnp mov (bad) ja outsl ret jnp loope push aas xchg mov frstor lret (bad) lock adc (bad) xchg daa add push gs sub cli mov test fwait sub add jg or jle daa mov lods repnz jno mov add xor xchg sarb xchg je push dec inc jnp ja bound pushf mov xchg lret je shrb outsb jmp test sbb or cmp sbb sbb scas xor pusha (bad) aas sub (bad) mov lea repz sub sbbl xchg test mov (bad) and sub jnp js testb cmpb mov in push dec dec mov jge sahf sbb and outsb nop push jno aas pop sbb mov repnz sbb gs mov xchg int add jmp pop mov lcall mov dec fmuls or mov jp push add lcall fs mov xchg inc push xor sub adc push fldcw test jl addl movsb pop add out jo jo fnstcw pusha cwtl inc mov (bad) mov lcall aaa dec cmpsl cwtl ja js push ljmp jmp arpl cmp push mov (bad) sub adc jae outsl add mov out outsb (bad) stc xchg getsec test mov mov repnz cmp pop ret xchg lods into xchg arpl pop mov arpl int3 xchg sub pop sbbl jae or cmpl pop jle mov push dec jmp xchg push jno push xchg dec dec je ret fdivr (bad) xlat fwait mov test xchg lea jbe rcrb mov pop push enter loope loop mov jno and pop in sbb pop mov fisttpll popa cmp (bad) pushl lea jne lea setns pusha movw movb sete pushl movsbw mov call or pop inc pop dec mov subl xor imulb pop sti inc mov dec ljmp mov arpl lahf pop nop mov notl pushf add (bad) sbb xchg sub mov mov jo arpl lods xor andl mov popf imulb es repz mov lret aam std bound or push xchg xor pop push aas lahf jo cmp pop int jae (bad) pop es mov xchg jp ds jb pop mov in lret xchg rcrl mov jp aad sub push rorl aad cmpsb pop mov out pop mov lds push sahf and je cmp popf mov icebp in (bad) adc outsl pusha jae push cs push cwtl cmpsb cli fiadd (bad) or pop pop jg movsl mov in adc xchg push mov iret sub inc in mov cmp daa push dec xor cmp sub sub dec mov mov fldenv in add jecxz mov test inc sbb addr16 (bad) out mov stos xchg inc cmp inc adc lds mov dec scas push or inc rcrl aas push jge jbe scas pop mov test jp cmp xchg cmpsl out push push lcall leave mov push fwait add xchg jae mov inc jl mov lahf mov test mov jle xor fcmovnbe push inc jnp xchg loope (bad) je (bad) inc pop into lock xchg sub mov das cmc lret mov in (bad) inc jle pop pop inc lcall (bad) lods adc clc mov jno mov fldt xor pushf mov pushf jmp cmp cmp daa cmp cwtl xor mov cltd (bad) adc adc bound push mov mov (bad) hlt dec lahf xchg jne mov dec test pop sub jno,pn (bad) cmp (bad) push mov mov in or xchg cmp bound incb loope imul adc pusha jno shrb shl clc out mov pop in or out lock push int3 (bad) data16 xlat fsub ffree add xchg leave insb rorb maxps xchg sub sub mov out mov sub clc or push add sbb call pusha rol stc cmp not mov stc stc push add pushf cmp mov setbe jmp xchg ss test outsb jo hlt or ljmp or popa sbb icebp out pop mov (bad) mov jl push aaa mov push mov (bad) (bad) or rclb scas je outsb jo jo insl jl mov adcl xor leave lds stc push add stc jg fsubl test int jge jl arpl aas mov in sub cmc fmull (bad) xor mov xor push push pusha (bad) pop add (bad) cmp mov cs sarb cmp out fnstenv cltd stos lods rclb je mov sbb push jno mov jmp push popa je dec popa je push inc add inc push dec cs insb add call adc jno mov or xor sbb cs cmc jmp jmp shrb ffree xor or mov (bad) call imulb xchg inc jns jmp jmp cs inc mov jne sbb in lahf fildll lods xchg cmp xchg inc std push dec mov push sub cwtl (bad) sbb inc out add mov mov or ss inc clc int rolb mov data16 iret adc pop mov int3 xor stc mov movb bt pushf test test jmp jbe push push lea call call pushf call mov xchg pushf movw pusha mov bswap mov pushl mov push movsbw mov push pushl ret jmp add fninit hlt inc or or cli inc lods pop cltd insb lret lods bound push frstor inc push dec pop mov aas or xchg lret adc (bad) mov jo or xlat call in jnp inc adc adc jmp shrl dec rol ret rcll int mov ret movsb cmpsl mov in add inc pop cmp mov negl scas int jno lret iret add mov call pop jp sbbl push xchg xchg adc or imul (bad) pop int3 pushf popa add cwtl xchg int push cmc dec push inc jle imulb inc pusha jle pop push jmp jnp adc jp mov pshufw jmp mov shl aad sub cmp lcall push cs sub dec adc sar and stos xor stc add lret cmp and cmp cmp lock pop negl (bad) mov inc cmpsb cmp dec or jp jg fsubrl imul test notb and or xor pop rcll cli sbb adc popa inc lcall xchg jmp pop scas xchg sti mov xchg movzwl jmp pushl lea jne pusha mov pushf bt add clc test cmc movzwl shld mov pushf clc mov bt add test cmp movb bt mov call gs xor jmp movsb sbb dec xchg or sub mov jne or add out adc fadds (bad) repnz pop jo fildl dec das (bad) adc adc (bad) enter loopne mov fild pop je daa out adc xchg mov xor pop xor clc (bad) xlat push pop cmpl mov aas andb test faddp sub lods adc dec call xchg adc mov (bad) repnz xor pop add inc pop jno scas movsl ljmp xor lcall jmp add rorl and outsl ss test adc rorb sub xor insb adc or sbb out stos repz mov or and pop jle mov (bad) jl pushf add mov out je insl jle les lret dec lods sahf rcl add and imul cmp or push pop inc inc popf scas mov mov (bad) daa idivl cmp popa outsb test int inc sbb xor xor mov or fiadd ficompl ret cmp adc xor rcrb add mov insb push xlat dec dec icebp loope out scas mov pop cmp mov mov sbb sub (bad) xor jnp inc cli sbb imul dec movsl mov ret xchg ret fucomp stos xor pop aaa adc mov jae incl ret call sbb and inc push dec adc cmp cld jne leave jne jbe pop mov sbb push bound lods adcl addr16 lahf movsl lcall adc cmc cmp (bad) aad pop lods aas push test pop inc cmpsl js iret xor inc add loopne jecxz jl inc lahf inc push adc push push fidivr inc cltd stos sub in inc fcompl or pusha imulb insb jp cmp push int3 leave xchg xchg jecxz xchg inc or iret dec pusha push cmp mov cmp jnp xchg test js movsbl nop xor ror fadds inc aaa les shrb add fsub dec jnp fwait sub sub xchg mov cmp inc sarl ret jno lods push jb,pt jmp mov lea mov pusha mov mov jmp call xchg lret pop loope jle and pop test (bad) pop fiaddl sub jle mov mov push add rclb jmp fstpt (bad) call ror rclb scas mov add xor and and sahf mov xchg add rcrl sbbl (bad) mov and jnp push or jecxz shl (bad) or test push lods xchg and pop jmp (bad) mov or and sub insb pop mov movsl cli cmp xchg sub cmp pop stos mov jbe add xor sbb jl sub pop ret xlat sarb aas add inc add iret jecxz sahf movl inc lcall testl loope fmuls mov lock lret sbb mov scas or fldt cli repnz cmpsb popa mov or inc jg fmul or mov mov (bad) xchg jae inc cmpsl test dec in call mov mov ds cmp pop insl push jno xlat mov mov fiaddl jno stos sub in xor in adc add ljmp cltd (bad) lock fadds inc xlat pop add sub xor lret fcoms push pop fadds out incl dec push mov mov cld or dec movsl lcall sub cmp dec inc out repnz gs sbb pop add divb cmp sub mov dec std (bad) shrl jp scas sbb and repz lds aad cltd (bad) cs mov stc push pop push mov mov iret push call iret sarb iret in rcrl push jmp and dec scas inc inc or fld inc fwait pushf ret jecxz mov pop int int inc fsubp xlat (bad) fcompl cwtl cmp cmpsl (bad) mov jnp enter mov jb adc cmpsb mov jge test ljmp imul idivb pushf test bound andl pop inc pop and xor in and mov or dec xor fcompl daa pop je outsb jg mov inc pushf dec adc jle outsl mov leave je imul mov sub iret (bad) mov data16 dec cwtl insl in jb jg mov cmp shr inc fcomps das ret jno test je jle lcall jmp jae cmp mov dec push dec ret jl test mov enter sbb rcrl leave rclb mov push mov fimull adc add test push mov fcomps mov adc sub pop andl loope or sub adc pop outsb push mov ss cmp leave fcmovu inc call ficompl mov (bad) aas push inc mov and hlt xchg mov es aam jnp sub (bad) fiadd push stos popf loop (bad) pcmpgtb adc outsl inc or ret push iret addl lahf cwtl sbb cltd jbe in jb cmpsb jg arpl addr16 dec mov pop cmpsb sbb lock ljmp mov pusha jae fidivrl subl arpl or mov aam pop outsl js pop (bad) xchg jno test and call jmp lds pop jo mov fcoml sbb sub lock dec ja loop mov inc sub or mov push and sbb add dec fwait test icebp loopne in lret add push ljmp ret jnp push mov ret inc (bad) jle insl out sbb pop pop xor stos lret (bad) sbb pusha mov out pushf lods int int loop std mov ljmp movsb imul in cmc sub sarl cmp cmp xor xor mov (bad) (bad) repz test mov add xchg (bad) std leave push mov jno cmpsl lock rorl movb push movl call insl pop xchg jae pusha mov xor ja push in cli in enter stc mov popa pop mov and ja mov jns int dec xor sbb dec and inc sub push cwtl scas bound xchg aaa fildll and and dec les xchg xor (bad) mov pop sahf in xchg mov jmp loop push fwait push in lcall xor mov dec inc outsl mov xor std daa les add sbb fucomp sbb add sub mov (bad) cld in icebp inc fimul mov mov mov cmpsb mov lods jno mov (bad) mov xchg daa xchg iret scas jae pop inc cltd cld ret nop ret addr16 test cmp jae mov je test lds pop imul ss ds int aad fcoms dec xchg aam mov es (bad) sub add pop jl inc xchg xchg mov ds or xchg inc jns sahf and mov and in lahf ret test xor mov and mov sub pop nop lds fcompl (bad) daa out sub pushf aas mov je pop and jmp push mov loopne push mov loopne in stc (bad) (bad) mov adc cmpsb add fs jbe and test adc sub stc dec shl mov call pusha lea je bt push sub call mov (bad) test cld repz das sbb adc adc sbb fimul mov cmc adc std stc (bad) mov dec pop pop (bad) jge xchg (bad) dec fwait pop add pop cmp aam adc fwait inc ja or int3 repz daa fwait and imul mov icebp adc mov push call mov mov mov dec dec push addr16 pop fsubl aas mov cmpsb or push lods mov inc add mov rorl mov cwtl insl jle insb mov jo pop cmpsb imul lds mov test sub sbb jno movsb sarl icebp incl dec add sti add repz or (bad) push lods push push mov jo in stc inc adc cmpsb inc sahf and pop lods xor movsb jp stos fidivrl pushf jecxz or daa insl push dec inc push xchg push in push add mov shr nop cs push lcall enter jge mov insb fcomi xor jp repnz clc push imul inc xchg and das xor push movsw sahf dec (bad) jp push cmp aaa sbb fisub push mov push movsl pop rorl mov stc add push cmp jno je leave cmp push add aas sahf pusha mov mov pop mov nop sub sti shrb jge pop jle pop loope push push ret pop scas jb orb add add dec mov sbbl shrb xor rcll jo mov sbb mov test jl xchg lret fild xor aas addb mov pop iret sub xchg ret test mov test test adcb (bad) hlt pop inc lcall adc mov dec pop stos sbb and fwait and sbb aad movsl fcmove adc mov daa int jns pop mov lea call push push lea jno push lea jne movzbl movsbl mov pusha pusha lea jmp push addr16 xlat dec test test lock push gs data16 out xor call mov test sahf cmp loopne jae aad cmp sarb push dec mov adc lods cmpsb cltd jne push mov lea repnz add stc data16 cmpl dec jbe mov lret ficoml mov inc dec push fs ss mov pop lcall mov test push fst cltd (bad) lock or or sub jg mov cmp and push jecxz lods jno mov jns mov mov sbb mov mov in cvtps2pd jle imul lret adc rolb cltd test pop inc test ds xor or adc iret sub xor inc out xlat jno je push daa pop repnz ja pop sarb inc (bad) in sbb lcall inc cltd cli sub adc pop scas (bad) mov arpl sbb adcl je push mov sbb flds dec addr16 daa xchg sti movsb mov (bad) push lret (bad) and mov mov (bad) mov add js jnp pop mov call pusha (bad) aas sbbl popa iret ss ljmp lret inc fisub cmp movsl fisubl jle xor addr16 (bad) jbe int3 pop mov fwait add xor mov roll in inc clc cmp pusha rep adcb imul mov cwtl test iret nop sarb push mov lods aaa pop dec es xchg or ja mov cs push leave fcmovu icebp add pop in push cmp iret adc cli je loope pop data16 dec xor and push mov add add fwait pop fdivrs shrl inc clc dec mov xor sub sub and out sub dec jae xor adc cmp xor nop cmp sbb jl fcmovu dec cmp dec test dec mov into cltd sub aad or cmp outsb and gs cmp pop inc int3 xor add adc sbb pop lahf clc xchg dec xchg lea movb mov pushl call es xor std mov sbb test lcall test js clc movl nop out and xchg push das lcall mov test into fcomip rcr push in push inc pop jo bound loope lds das jl fsubrs jbe cmpsl xor aam pop in add push insb mov popa add cltd sub add fwait andnps or js mov addl leave test or lahf repnz or out roll test (bad) jb mov arpl jl push sub add sti mov pop mov incb ja pop cmpsl cmp sahf and xor xor gs (bad) xchg or test stc in out pop and hlt dec ja cmp je sbb mov fnsave in in in aas and stc mov insb push xchg pop add push cltd add push clc jnp push sub or mov mov xor xor dec dec xchg lahf xorb add jbe and out aas jno sahf mov stc sub jmp jmp sbb mov pop inc push push fiadd lea scas push addr16 faddl cs addr16 adc repz sarb pop pop fs rcrl add adc iret push fisubr loop (bad) cwtl flds adc jg xorl pop jns cltd adc popf push in (bad) stos jae inc sub mov je pop lds inc lock insl popa loop (bad) jmp add jecxz and dec xor push mov adc pusha mov clc into xchg insl sar inc push pop cwtl div mov push out push out dec pusha mov sbb sbb out or in xor jnp xchg into (bad) arpl data16 fdivrl fsubs scas pushf pusha sub xchg jecxz sbb xchg je sbb add push es (bad) std push shr cmp lcall pop jbe mov add (bad) cmp sub mov scas push or pop dec testb and rclb data16 push stos addr16 call push lds sbb aam push push pop jle add sub out into iret insb xor push dec out pop add in jmp mov lret or (bad) and jno (bad) or outsb shlb jmp repz xchg stos (bad) enter daa xor out rorb jae mov xor pop pushf mov mov push pop xchg outsl xor mov inc aas or into cld and bound scas das outsl jl xchg jmp test movsb and lock notl ret cwtl daa push maxps popa mov or jge mov mov mov mov pop inc nop aas inc imul or clc sbb add xor jmp ss jno out loopne lods xor int3 mov push lahf loopne loopne sub and pop inc or jae xchg sub mov xor sbbb sti and and lahf rolb dec imul insb adc pop fwait stos in sahf mov call and mov aas sub inc or cltd pop lods (bad) popf jb inc test jne imul or fisub je aam lret pop push (bad) jl outsl arpl xchg jnp jecxz pusha out imul aaa jl mov loop aad lea cmp fs pop inc cmp fstps jne fildl dec je lret mov mov jl call sahf rclb sar iret mov and ds iret rclb movsb fwait adc insl movsb sbb push mov xchg mov ss mov add out add xor inc fwait arpl push adc adc (bad) jno lcall jecxz lods test mulb gs (bad) leave (bad) xor enter add inc xchg fwait mov scas iret iret iret pop test insl adc imul scas mov leave push and pop daa lods adc pop xor mov int3 pop (bad) xlat in jne jmp push sbb (bad) mov fisub cmp addr16 repnz sahf fisubrl stos je sarb bound lds fstl stos cmp adc rcll outsb xchg pop dec inc cwtl mov popf div mov mov mov movb lea mov outsl lock sbb cmp sbb jo inc cmp jno lcall and pop and mov cmp neg bt mov call inc xor enter xchg fucom ret push xor dec sarl test cmp push aas icebp adc push mov mov dec aaa pop cmpsb pop negl pop xchg jb or rorl aad sahf inc roll inc sub outsb add pop popa mov out mov (bad) std rcrl mov fbld bound mov stos arpl pop add xchg sub cltd pop xor icebp lea je jmp movl movl pushf lea jmp xor pusha imulb pushf (bad) icebp sahf or sahf mov jns mov pop lods push jns bound andl fnstenv addb adc outsb icebp xor mov mov enter push xlat push cs test lret jb mov popf jo cmp lcall mov push jns cwtl and jmp pushf stos push sbbb fsub push sbbl adc add lods and or mov scas mov lcall cmp mov or cwtl inc popf clc movb adc xchg push push push inc push dec xor cs insb add icebp decl mov icebp inc pusha sahf daa daa and mov insb ja mov xchg mov xchg fldcw mov fmull jp push xchg xchg push inc pop sahf add cld xor jno add outsl xor jp iret adc sub outsl repnz and adc pop outsb jo mov push mov xchg adc xchg pop lds or push and stc sub and push and arpl xor push test mov shrb push sub xchg sbb and pop cwtl or shr inc sub add and test mov sub pushl call lea ja call cmp stos xor xchg outsl fsts fldl and jno push imul inc test inc cli and and sub xchg dec mov rcr daa xor xchg ss jp sar fcomip fisub push mov in inc fidivl mov sbb mov ret out stos jb push decl les sub mulb push or jno xchg in pop lea jae push cmp pusha jmp loope pop jo sbb or jae mov inc add (bad) push imul out pop movsb xchg in fiadd or and and pusha jno aas xchg fs das push repz mov ret cmp jmp mov and movsl and gs ss (bad) mov dec aad sti cmp push nop scas inc add inc push repnz ja lods cmc dec call (bad) in add nop cmpsb or pop inc jle bound repz xchg in flds mov sbb adc sbb ret add pop inc cmp and xor xor movl lea jnp push pusha pushf movl push pushf movw movw lea jmp mov mov not movzbw mov pusha not pop mov lea mov movw jmp jmp shr xchg mov inc btr add bsf add add btc bswap clc jmp outsl dec jne imul sub jno xor sub pusha xor cmp push push lea jge addl mov jle mov inc js lret jge gs pop xor (bad) mov fidiv insb mov xchg jecxz and and mov inc fs mov inc fwait and ljmp inc fwait xchg cmpsl mov icebp xor cwtl and jnp (bad) or pop into fstpl pop mov (bad) mov in stos adc sub push gs jle mov mov xchg (bad) fsubr hlt repnz and lods mov add sub push sub dec pop enter push in jno hlt das (bad) jno outsl or sbb push xchg mov adc daa faddp (bad) es sub xor (bad) sbb mov iret xor (bad) jbe daa mov dec out cmp push fwait test ds jb arpl nop jno jo or mov cmp inc jnp xor (bad) aas lcall in orl xchg xor sti test bound xor (bad) das sahf mov lea xchg fisubr rclb mov and dec mov cmpb ret pop xchg sub jno outsb in imul push jge adc es aas cmp mov cld (bad) xchg inc jge (bad) mov push fisubr jle jns sbb fnsave mov sbb fldenv mov leave inc mov test scas pop loope cmc adc les jg pushf dec xor dec mov pop push cmp negl mov dec hlt lds icebp out push sub (bad) mov and je stc push cmc cmp push movb push pushl ret not pushfw neg mov pushf test jmp aam cli jmp pop push sti lock and out fisttp das sbb dec adc pop cmp mov push pop mov into adc adc aaa mov (bad) movsl cmp fwait xor cmp push ljmp and push push test mov add iret add popa mov arpl jl je stc mov stos adc xchg incb imul pop cmp pop bound inc aam xlat jae sbb pusha aas stos xor inc leave push mov adc push fs xchg mov fsub push lea call call or and fldl and data16 into mov cwtl xor jg,pn aam sbb dec shlb xor cmp xchg inc sub test mov jb sub aam jg test stos jle pop jmp lret scas cmpsb jge (bad) mov mov in mov (bad) je mov inc jno xchg shrl jmp jmp imul sub mul sub push jmp add lcall add (bad) cmp ret sbb cmpsb lret roll (bad) pop out clc adc jno xchg stc xchg andl inc jmp or push into mov pop shlb push or jmp pop pop jg (bad) pop cmp push out ss aam or pop jo dec mov ja mov in pop adc sub (bad) sti movsl repz aaa inc popf and dec (bad) jmp addr16 push mov inc shll push (bad) jb loop js ljmp loopne fcom dec (bad) pop popf ss mov arpl or aad rclb (bad) mov add pop jg lea push repz pop cmp inc cmp outsl outsl ds std or push mov in mov fld xchg jmp cmp jb mov jno nop pop xor dec push inc pop sti mov vmread or fild js cwtl out pop and aam mov iret adc mov movsb push mov fsubrp push imul and ja push push scas shrl dec lsl cmpsl mov test lahf daa or push lret fistpll scas adc cmc (bad) int3 or pusha jle dec (bad) js mov inc cwtl pop call in and sub jmp jne xchg or add fbld cltd inc inc push push mov xchg push adc cmp shl push mov jb imul mov int ficompl jmp pop inc sbb inc cltd jno nop jnp bound inc dec xor cs insb add into mov push movw movb lea jmp insl cwtl xchg movl pop sub and add xor stos xchg or std and xor inc jp dec mov push data16 movsb in push lea mov lret and xchg out dec psrad in cmp or or jns mov mov scas js arpl xchg call pop mov cld sbb push xchg addr16 adc push int3 push mov ljmp cmc addr16 loopne loopne adc inc or inc adc mov mov aam inc cmp jne jno (bad) ja fwait and push das sahf andl inc cmp push xchg lds outsb xor mov test mov xor add xchg sbb cmp sub daa sbb mov mov xor inc ret mov (bad) push fs xchg stc add cltd sahf outsb push (bad) repz shl stos pop add ds pop push inc push scas enter mov test out adc (bad) jmp (bad) cwtl sub xchg xchg mov mov fadds pushl ret sahf shrl pop stos mov sbb fadd stc cmpsb pop (bad) in xor iret cmp ret mov xchg (bad) mov and jge dec dec jb addr16 loope lods rcll sub std sbb fbstp in inc mov sbb xor cmp xor cmpsb stc cmp jno mov dec bnd rcrb icebp into and (bad) fdivs icebp sub stos jg pusha jno lret inc lcall push icebp and jns pop sbb popf jne fiaddl sahf inc into jno sahf scas push mov jbe push add mov add aas xchg jnp sbb test shrl push outsb daa inc mov and xor jge mull push push cmp dec push daa loope push mov inc out loope sub mov sahf inc xchg adc jmp clc out mov fwait and insb xor cmp inc jnp into cmp iret loope mov mov pushf mov push pusha pushl ret push inc push push dec dec dec cs insb add aas ljmp je call call push pushl ret jno mov xchg out in aaa push test xor sahf xorb jl lods repnz aaa mov mov test dec pop aas lahf pusha jmp and stc in xor imul sub mov xor adc int inc inc mov or adc adc jg fs hlt imull fiaddl push sub lcall xor sbb (bad) shrb jno mov shr das xor or aad mov (bad) into addr16 mov test mov and jl inc mov add push jns aas jno aam push dec lret je test mov stos shl clc (bad) (bad) adc ja jno mov es ds pushf stc or push lea je pusha movzbw lea not lea pusha movsbl movzwl call pushf call lea jne not call scas sahf rcll dec mov inc pop rolb cmpsb lahf decb (bad) js fadd adc daa pop xor ror pop test adc sbb aaa sub push (bad) test pop mov js fildl (bad) lahf mov (bad) and cmpl mov mov imul test repnz sub xor xor int cwtl sbb (bad) push push mov and xchg loope sbb cmp cmp (bad) rorb sub es and stos xor cmp cmp pop mov je cmp push add sub jmp pusha lea je call cmp data16 icebp mov sub jl sbb aam dec push mov jmp add (bad) popa pop inc jle scas lock iret scas sar in wrmsr cwtl push imul popa in pop jecxz sbb test pop fbstp push inc fcomi mov and xchg sbb scas (bad) jno cltd hlt std jne in adc push fsubs out jo out push or push add lea jecxz (bad) xchg (bad) leave xor insl xor (bad) aad enter aas ja bound and loop call dec jo jne lret (bad) (bad) lret aam jmp push or jno mov into cmp add adc lea imul push dec call sbb push insb push dec jb jp mov (bad) mov in jmp cmc dec mov ljmp or inc cmp mov mov add lea sbb sbb jg movsb lcall in aam push popa arpl loopne jnp adc andl adc mov cmpsl in mov (bad) push popa inc mov sti ret mov sub subb mov cwtl mov lods rorl adc pop sub cs fldl (bad) or sub into cs pop out iret in cmp xor pop cmp dec xor aaa cmpsl call arpl add cmp mov lock out in sbb adc cmp jb inc cld mov xchg mov add pop inc pop insb aad pop out dec xlat in mov fildl adc mov dec mov adc (bad) or ds mov test pop aaa jl (bad) rcrl (bad) pusha adc sar imul cli stos sub rclb cld (bad) int sbb push lret pop jecxz call sbb mov adc sbb and loop mov insb jae push xchg dec pop jno mov xor add push pushf pop add jmp inc pop int3 adc stos ja cld test lret sub dec sarb or les lds mov cmp cltd mov mov cmpsb cmp test js (bad) jns insl ffree xor adc fnstcw out xchg int iret mov mov cmpsb sti verr jno pop imul add ficomp push enter rorb pxor les je jl insb push fnstcw pop addr16 cmpl pop fnstenv dec ret cmpsb lret sub test inc jl movsl insb mov scas jecxz jns xor pop xchg scas or sub data16 and movmskps mov icebp ret xchg dec pop xor and cmp je pop mov mov sub push loope pop sbb cmpsl jns xchg loopnew xor addr16 lahf mov out ss add and cmpsl cwtl push cwtl mov and fiadd nop roll add and push dec outsb sahf dec sbb push pushf mov (bad) mov push (bad) in loopne fmull mov mov mov push fisttpll adc xchg int3 cmp jae xchg stos sbb mov mov push xchg mov movsb xlat enter inc decb outsl push fs adc idiv dec sbb xor outsl xchg pop in movsb sbb in pop or push mov (bad) das dec xor arpl cld mov dec inc jge popa lods jno dec or push call gs mov cmp popf pop mov rcrl cvtps2pi insb adc (bad) lods (bad) xor and insb fist cmp sbb movups jns mov dec leave push in sub mov jne flds jno xchg mov lea ja bt test jmp cmpsb adc stos adc cld pop cmp pop and mov inc mov push sbb or into icebp xor hlt (bad) jno cmp mov inc jp adc inc lahf pop mov jno push insb mov cmpsb mov enter pop mov bound popa loop ret in push xchg adc push mov or sahf mov nop ret jl xchg pop jns aad (bad) mov or pop idivl add or and inc fs shrl clc ret cmp push clc cmp add mov add sbb cltd sub sahf adcl dec cmc jl push jp mov scas jecxz sub (bad) pushf lods jno test or sub scas add mov jnp fwait add fwait inc pop sbb dec adc jp ss mov lods adc lret das addl stc cmp ror lock rclb pop scas jl je sub jnp mov mov nop cld movsl sbb push sub adcl rcll push popf iret jo xlat dec out ror outsb adc add adc xor movsb dec aam int jno test pop lea xchg movsl out jo sub repz sbb insb xlat xchg or sahf mov or xchg push daa cmp arpl cmpsb cmp xchg xor shr adc test mov mov nop loope in mov bound cmp fsubrl inc dec in dec inc aas push mov push lods scas ret jmp xchg sbb sbb (bad) hlt cmp std pop aad arpl pusha jno jecxz (bad) mov sbb pop les jno,pn cltd jno fistp push mov daa mov mov das fadds xchg lods stos mov mov push xor adc in fmul adc lock rcrb or clc cmpsl sbb add rcrl leave jne popf das mov aam mov xchg or cmp xor insb inc cwtl sub mov scas add std adc mov pop in iret dec in adc sbb cmp fnop das repz sbb xchg rclb xor rcll mov push pop mov dec pop sub pop (bad) jmp out scas (bad) mov in xor adc or fsubs xchg push dec mov pop (bad) (bad) lock lret adc cmp outsb cmp pop les and (bad) repnz inc lcall cmpsb scas sbb mov pop pushf dec xchg dec cmc cli and lds (bad) xlat imul mov jno push cmp xor inc inc push rorb adc push cwtl daa out jp dec cmp je jno (bad) pop xor inc daa pop cltd insb jge mov xor inc push flds add jmp xor sahf fs or imul push outsb jmp cmp dec sub sti ret fstl ret xchg test rcrb mov es jg,pt mov mov or faddl ja dec aad mov leave push addr16 lods add dec xor faddl jns mov cmp cmpsl aaa xchg mov add inc push jno (bad) test movsl fnop stc sub call jmp cmpsl test mov mov sbb add cmp sbb fcmovb cli cmp mov and adc pop out in lea push and scas or insb lods dec add (bad) lahf fcomip push or adc mov stc jnp pusha push dec repz scas cmpsb pop push imul int adc push xchg cbtw test cmp or mov out (bad) jmp ljmp iret xchg add or fisub mov mov leave nop into call aaa mov cltd or mov cmp out pushf not cmc sub jmp mov lea jae shld inc ror shr mov movsbl btc sbb bt mov push xor btc mov pushf pusha sub push bt repnz pushf push lea jne bswap dec cmc jmp not mov jmp add loopne sbb jb jmp fnsetpm(287 push inc cmp dec push outsl jo addb pushf jb imul xchg in std loope sbb jecxz je in xor inc push dec or pop int3 or jae iret and and or dec add (bad) cmpsb mov dec inc push stos pop in icebp inc std sub imul lea jp push sub push mov lds jp jmp pop out popw int (bad) cwtl mov fwait inc inc shrl xchg aad mov inc fadds dec push push mov repnz pop xor mov jl sub dec jne lds cmp aaa pop pop pop (bad) sbb jmp inc xlat sub aaa scas mov in pop xchg mov adc dec repnz mov cmp lock inc fwait test fistpl pop pop push adc inc adc pop and sub inc fistpl mov push imul (bad) dec pop or inc call pop push mov mov fiadd xor outsl lock cltd xor in repnz inc cld xchg or sub jno jg sahf nop into aaa cmpsb cmp pop and and sub ficompl xchg sub test push (bad) jnp movsl push out movsl mov out std xchg test jge sub pop mov xchg test nop (bad) adc add push mov push push out scas enter mov add cltd sbbl xor jmp push sarb push lret lcall ret ja in xor cmp add pushf ret and out lock ret jle cmp lret aam sbb mov mov push mov cmp fs dec (bad) pop add addr16 mov out xchg xchg das inc decb mov mov cli dec lea mov out mov pop (bad) sbb inc popf scas testb cs aas (bad) ds arpl test cmp inc gs mov pop stos add pop cmc mov inc jp lods pop fwait push and rorb in inc fisubrl sbb popa xchg jb jno jle (bad) in clc jns (bad) iret fs cmp gs or and inc add sub test test fwait jp movsb daa dec mov scas out adcl push cmp clc jecxz inc addl mov iret dec jo loopne shrl outsl or sbb sub scas (bad) jmp jne sbb push lcall push test cmp add sub outsl aam mov mov repnz test pop fist cltd lcall add data16 sahf and stos xchg mov (bad) fsub (bad) and xor jge movb out fsubs addr16 add jnp dec mov js xchg or adc mov orb stc data16 data16 fs or repnz pop inc jbe pop jae cmp (bad) outsb outsb xlat out sbb fdivl (bad) or in ljmp fiaddl jo insb fwait inc pop inc jbe mov lds sbb mov jno test insb gs fstpt jo aaa cmpsl aas lahf add inc inc adc es jb cmp xchg lods xchg sbb int3 sbb mov arpl mov xlat pop loopne sub mov mov or push add arpl and adc pop jo pop jl add nop push lret adc pop mov pop call lahf dec rcrl mov jae imul xlat aaa out in sub inc pop lcall push fdivrl jecxz stc gs inc jnp gs mov jbe rcrb lcall aad push mov lds fcmovu pop adc cmpxchg8b push dec inc sub bound xor mov pop (bad) sti cmp (bad) cmp fadds and inc mov mov lods mov mov je dec ret sbb mov arpl repnz cs icebp add jae je je cld stos stc and xchg mov mov rcl jmp outsb mov push sbb push fstps push addr16 icebp popf sub adc pop mov call cmp mov shrd cltd inc adc std add icebp popf jno,pn arpl enter pop orl push in fiaddl jmp aaa scas adc sbb ljmp xchg int mov sbb test out xor fwait mov repnz mov inc outsb push popa cmp cmp popf icebp int pop mov gs je imul xor mov fucom ss jnp enter inc and popf lret call cmp dec sub pop and je xchg iret push insb out cltd insb fwait inc (bad) jl dec mov and jo lcall jo cmp ret mov mov loop insl dec xchg fs loopne add sub mov mov xchg pushf fsub decb sbb add dec push mov rorl aam pop mov and jl mov cmp stos push shl aas mov dec ret xchg sub xchg mov (bad) dec pop mov push dec pop decl repz xcrypt-cbc cmpsl push mov pop jae mov mov dec xchg jge hlt lret push sub cmp cli cmp mov jno jp push pop inc call fild xor xor mov mov aad jbe push fdivp push cmpsl pop es ljmp adc cmc imul add adc inc frstor jno mov push dec push bound and out rcll lods loop jmp outsb mov xchg jno addl xchg adc add daa mov scas mov add pushf cld bound leave aad imul sbb icebp inc cli mov imul push xchg dec or jno jns loop (bad) pusha lock or mov mov push dec out cld inc pop jg mov fwait sbbl xchg dec xlat pop pop pop add xor aas xchg sub ret dec std add (bad) ljmp rorb fs pop in lds pop out add daa clc fucomp push stc mov adc push sbb scas aam and jp fistl push or scas mov test adc std xor cmp in (bad) vmovq push sahf addr16 push fsubl movsb xchg lods pop (bad) sbbb sbb mov pop js fwait icebp mov add je outsl jns outsb jbe jb outsb insl outsb je insb outsl arpl push pushf lea call pusha lea jae not pushf jmp lea ja lea mov pop movsbw bswap mov lea pop call jmp ret loope and pop and push sub gs in repnz push (bad) dec push dec sbb arpl dec (bad) xchg fmuls test int3 lea mov sti fdivrp pusha xor (bad) mov add movsb pushf lods xlat cmpsl out xor mov or mov cmp mov cld fiadd mov xchg jmp insb es jbe scas sbb dec hlt add stos aad jno ja popa or mov call push mov movzbw lea movl movsbw pop movsbl setge lea pushf call inc das push mov sbb ds int sbb (bad) leave mov mov sbb insl adc sbb mov mov popa aaa cmpsl test js pop negl mov cwtl push dec adc cli or iret push (bad) std ret jnp lods jmp rcll mov and movsl cli cmp xor jge jno ja dec mov xor xchg jae icebp or or inc scas nop xchg sub rcrl outsl out xlat mov dec (bad) repnz roll or ljmp xchg push in xchg pop pop loopew or es mov (bad) in push (bad) or push js push out mov (bad) mov in gs mov test es push sub sti in add sub xor or add das jno jbe rcll or xchg or sbb gs sbb ret push add mov repnz insb jge in addr16 in pop mov xchg movsl iret out dec sti jo inc or xor insb (bad) ljmp imul ljmp lret mov cmp mov jmp (bad) enter push loopne nop out dec jle push ljmp dec mov fist subl or cmpsb sbb jmp push pop insb cltd xor mov adc jbe mov mov adc dec xchg movsl arpl and dec push (bad) dec icebp inc cmp fidivl mov dec idivb out ds arpl mov sbb pop mov mov pushf ret aam or in pop xor pop in lock movsl mov fbstp shr (bad) or adc popf scas mov repz pop and add in (bad) in in sub sub outsl addr16 adc pusha jno ret lock mov pop mov pop mov pop cmp movsl cmc leave inc mov mov inc movsl sbb pop lret and push mov jo or push cmp cmc add pushl call lea jb jmp xchg es cltd in add fcoms repnz add cmp xchg lret popa lea pop push sub xor pop adc test es lea mov sbb rcrb mov cmpsb mov aam das mov repnz inc faddl std or add add push xchg cli rorl (bad) lahf xor stos fwait mov into mov sbb or dec out rorl fsub sub add sbbb inc mov sub mov xchg or (bad) mov in jmp pop lock iret iret inc call stc insb shrl test scas int mov xchg les xchg or xor nop mov jo je sti cmpl iret adc lock or jl sahf addr16 rclb out jne (bad) orl pop jnp pop xor mov jnp lods mov mov insb jge outsl mov pop fnstsw adc push and jne jmp mov (bad) cmp mov pop sbb call rorb push mov pop xchg or mov lahf xor xor aad aas (bad) test adc out mov sahf addr16 jo fbld mov pusha mov dec leave ds add daa inc gs gs ja (bad) (bad) mov out repz (bad) out inc push push mov xor mov fstl and xchg rep mov gs xor jne adc xorl insl xor dec and imul lods in and adc push loope int3 or stc mov arpl inc sbb add pop mov push and mov insl xor dec adc pop lods jp fcmove or outsl stos mov mov xor cmpsb jle mov cs and pop aad adc fadds pop sti inc mov rcrb jmp inc or jmp pop xor xor (bad) cmp imul lea mov jg cli or lret cmp dec mov push int aad pop xor shlb test outsl sahf pusha mov scas pusha mov adc pop cmpb stc (bad) fbld sub rorb popa lret lods enter in repnz sarb mov cmc test hlt xlat (bad) dec aam int (bad) sub jno cmpsb cs clc call lcall add fwait lods dec mov mov pop popa mov sbb dec icebp mov xchg sbb fadd mov push cmp dec mov imul aas out test lcall (bad) jmp push lods insb insl push js dec (bad) add xchg or jno jno or or test mov dec out pop decl repz pop aam dec xor ljmp mov nop out jmp cltd lcall (bad) fcmovb sbb xor out add jno jne jmp es pusha mov test (bad) lea cwtl into rcl sub call movsb jecxz aas ss mov gs pop add imul xchg push std (bad) pop xchg mov add cmp sub and inc lcall lods repnz ffreep sti cmp pop jo into mov cmp call pushf test jmp mov bswap pop push pushl ret and cs inc push out xor adc mov cmpb (bad) addl scas cwtl inc js das adc jp jp sti das push jge ss mov gs inc adc xor aas push jb fidiv ret mov xchg inc add (bad) lds xor lock jbe call jecxz clc (bad) bound xchg popa jno pushf mov flds xchg pusha outsl lret out add fwait inc fnstcw add sarb loopne push ljmp cmpsl fidivrl iretw outsl imul (bad) jmp ss ret es fld inc (bad) push jno outsl ret mov xor js lock gs jge push sub (bad) aaa adc imulb stos adc sbb xchg test mov mov xchg enter fdivrl jge into shl loopne loopne into jmp mov mov sub push movsl adc push pop pop (bad) je repz aam fldt addl xchg pop fadd addr16 in std dec imul movb loope in call adc pop inc mov pop cmpsb sbb push jno rcrl pop fs popf add mov insb jge pop outsl orb adc inc sbb sub add dec fdivrl or xor or push xchg xor mov imul cmp icebp push cltd pop xchg and cmc add mov (bad) clc mov into hlt lret push dec aam (bad) out mov pusha call jns imull push (bad) idivb in jne lret ret in or inc rcll push data16 xchg mov jns xchg jb sbb sub and movsb cli enter jne inc mov push imul pop and (bad) jne sub imul mov jno outsb dec inc out pop mov pushf pusha lea jmp stc cmp bt clc shr call call jmp add cmp daa sub mov mov (bad) jnp pop jecxz cmp clc out lock adc push leave fadd xlat inc popf scas incl fwait pop (bad) ret jp mov xlat sub mov in test sub add and mov jb es mov ja adc push cmpsl sti in test ljmp loop inc push lea and jnp loope mov sbb pop and test sbb jbe stos xor pop xchg outsb add arpl cltd sub out lcall mov dec (bad) pop movb mov dec push fs sub rolb decl std and xchg cmp bound adc loop jge (bad) jno loopne fsub (bad) mov ja shrl loopne pop cmpb mov into mov movsb lret xor add test push (bad) mov clc add xlat (bad) jle sbb dec mov test mov daa push or or aaa sbb int3 cmp (bad) mov repnz icebp insl arpl js jp inc or adcl mov or movsb call or mov test xchg jmp les (bad) call cmpsb std jbe mov pop stos aam cltd rcrb add pop and enter sbb cmp aas into xor sbb sub inc push sub pop insb orb rorb pop sbb rorl (bad) fbstp rol lcall push dec imul fbstp (bad) cmp scas js insb mov or xchg cmp mov (bad) xor mov fisttp mov mov or adc aam sbb dec cld inc xchg pxor inc fstps mov mov (bad) (bad) sub hlt sub aas push cmp clc sub jae lahf daa xlat pop loopne pop aas dec arpl daa mov xor mov hlt jl sub mov mov mov adc cmc in fwait and pop imul mov sub test in repz (bad) fwait daa cmp sub pushf test pushf cmp call movw test pusha call pushf call pushf jmp loop or inc mov test repz cs movsl pop cmpsb out and dec shl or jns adc out lods mov xor add dec jae popf sub push rsm aam cmp adc push dec lahf adc cmp daa fmull int loope pop pop bound call adc fdivp add loop xor dec pushf ret stos mov out aad stos into pop mov sub hlt adc add xor mov (bad) (bad) and pop pushf stos int stc icebp mov add popa decb sbb jecxz mov lods xrelease aas add scas mov outsl mov mov in or push dec das xor sti push or jno push test rcr adc and in add jle mov lea jmp lods jmp pop test pop push mov divl and insl xor ds dec pushf inc enter mov mov mov mov test xchg iret jge mov jmp inc add jns repnz inc dec adc lcall pop repz aam insb scas jg xchg mov cld pop into xchg add cld out (bad) cli dec xchg (bad) cld pop add pop ficoml (bad) sbb test inc lods mov bound movsl out mov cld sub push cmp call subl dec sub inc sbb dec sarb pop aaa or add out adc aad nop into (bad) pop imul add add add fcoms addr16 or xchg cmp lea lea sub bswap clc push bts aaa jmp mov mov lea jmp pusha lea je pushf test bt movb cmp movb mov lea je pusha lea jmp add inc outsb jae jne jb pop inc add in cmp sarb enter inc push (bad) xor or (bad) sbb jle jbe jbe and sbb stos jg jle xor inc jg push push arpl push data16 les cmp inc (bad) jl das jmp mov or ret icebp mov lock pop jp std js mov xor pop addb aam in ficoml mov stc inc mov push call (bad) fldl cltd or in pop push xchg hlt jmp iret inc jmp sbb adc push ljmp sub pop xchg push outsb xor dec mov dec push fs fucom mov and adc cmp jle lret push xor aas loopne shl (bad) mov mov xchg or adc outsb pop pop and xchg (bad) fist pop push mov xchg sarl lret mov mov jl mov stc int mov repnz jno addr16 mov jbe jb pop dec (bad) dec cld jecxz cmp pop les adc push dec push (bad) xor rep xor mov pand in test mov jge lods add jecxz xlat xor push rclb sub xlat sbb test imul popf xchg lods pop add sbb push adc xor mov mov shrl daa jnp shrb fistp jle mov sub cmp out js fwait xchg in and cmp jl jo xor jns mov jb jno ret loope cmp shl xor xor mov pop jbe mov out xor scas lds (bad) jb mov cmp movsb imul xchg sbb bound test mul test imul inc (bad) dec push popa sbbb (bad) js push push dec pop cmovg les jmp sub and insl nop push stc repz jne scas (bad) and (bad) cmc jns sti xchg in std cmpl and jae xor and fsubp and pop and lods push leave icebp sub (bad) xor (bad) lock xchg pushf mov jno lcall sub push push wrmsr inc mov es dec scas jge push pop add xchg cmc push dec jp lahf (bad) js movsb sti or sbb cmpsl pop inc cmp cwtl pop sbb or add repz ret jge pop loope out fbld aad pop stc mov push dec andl xlat pop mov cmp pop imull out (bad) das loop stc inc xor and imul outsb jno data16 pop gs bnd in lock inc fildll rcll fsubrl mov int test pop (bad) sub pop call std dec (bad) dec pop lods add add popf xchg enter pop fsubl aad inc enter stos mov jnp xchg xor push or jg lcall out xor iret ss popa sti cmpsl push pop repnz out add or repnz jp shrb addb out xchg lea pop mov (bad) das jb push dec and xchg jnp cmpl pop gs je adc lret rcll sbb and mov fldcw jecxz shrd sti jecxz pop das mov mov push dec pop push dec mov mov fmul jno xor add (bad) mov sahf push repz inc js pop xor push das xchg and imull mov xchg stos je (bad) xor sahf loope das shrl (bad) clc dec xchg out cmp ret pop loopne imul sub adc ljmp ret js jbe pop fiaddl dec aam leave nop into aaa pop js sahf and xor jno fs cli call push lods cmp test xor stc movl pushf clc rol clc clc pusha bt not pushf bt add jmp xchg dec rolb inc jmp (bad) jne mov lods inc std xor ror xor cmp leave xchg jns cld mov dec xor rcrb add in int pop mov pop dec mov mov mov and add cld sub mov incb or adc daa mov pop das std das sbb cmpsb jp jp repnz sub jb add (bad) or lret (bad) ljmp aas aas jp stos pusha into fwait dec scas mov push cmp sub inc pop xchg mov and push xchg dec or jg xchg jno decl xchg jg add inc mov cmp jno fs mov pusha or setbe mov movw and pusha cmp add push pushl pushf pushf lea jmp jge and popa cmp xchg push insl jns lods mov mov idivl es pop mov sbb das push cmp push ljmp aas pop test xchg stos mov movsl adc sbb (bad) nop movsl cltd fadd in xor jmp jnp jnp inc pop lds std xchg jae or cmp out xlat push push shlb lcall pop imul xor pop insl outsl xor imul fisttpll inc icebp xor add das mov outsl mov rcrb xchg fcmovb (bad) movsb cli dec push cmpsb add push mov cmp test imul stos pop cmpsl test mov inc cmp repz in sub inc or xor push sbb loopne movsl adc or fistp push jo imul mov inc sahf outsl popl pushf mov clc jno bound cmc push sbb pop fucomip xor into cmpsl mov lods shll xchg stos mov lods repnz xchg cs cs outsb jl aam imul mov outsb xor and cmp pop (bad) pop imul pop shll push or rcl iret and push in setp jl mov enter or sub add fucomi hlt gs sub imul cmp pop popa insb and enter and popf les or add mov lea cwtl lea jmp lret pop loope aad (bad) cmp lods xor mov cmp xor sub or pop incl push in decb inc and call and jo cwtl cld mov ds lret xlat daa pop xchg (bad) adc fwait (bad) aad jecxz lock push push fs mov scas cwtl sarl leave jbe jb (bad) ja lea loope aam ja push mov add mov adc add mov mov ret add push inc sbb and dec xor test or sub adc pop popa add clc lea js call and pop mov cmc mov es cmp add (bad) adc xchg sub (bad) aas test pop addr16 ret (bad) jmp fcomps ret cmp clc push push xchg cmpsb clc dec jp cmp outsb adc sub cmp inc xchg push rcrb (bad) call add ret lea adc cmp add pop sahf imull in dec dec bound or inc (bad) fsubrs decb scas outsb js pop out adc push mov jns shr or jg mov mov adc outsl mov push push mov sbb sbb pop hlt les loopne lcall out das mov popf loope mov sub pop in mov pop aaa or push popa es mov mov popa popf test cmp xor mov add cmp jl mov in jl aaa orl dec ss inc adc add fwait insb call cmp data16 add inc xchg sub std xchg pop pmaxsw imul fdivrl push mov cli add fistpll hlt stos mov or int pushf mov xchg gs and call repz cmp pop jmp out jp sub fs daa push sub imul xchg mov mov or push loope testl mov fsubrp jno pop push subl aam cmp cmc decl pop movsl mov (bad) pushf or rcll in (bad) enter fmull test int3 ffree aas hlt dec pop sub mov and add pop es xor mov in or scas shrb dec push in fcoml push sub decl int sub mov mov sbb pop inc ds (bad) push fdiv sub cmc imul lods push leave movsl (bad) (bad) sub or icebp adc inc pop and push mov daa sbb or insb rcr es das das outsl xchg test jno pop inc dec dec adc add imul jae mov sarl mov es scas in fadds sti fiaddl (bad) pop or xor inc dec mov into sarb pop xor je fwait gs out lcall pusha mov loop sub cltd pop ret (bad) rcrl pop add repnz sbb dec imul insl test or sub add add lea pushf les or xchg xor mov das mov (bad) jns mov inc cmp xchg mull xor sti addr16 cmp inc xor (bad) fsubrl cmpsb mov jnp sbb sbb mov aad insl dec adc (bad) int3 (bad) inc inc and stc imul daa jmp es (bad) fcoml adc shrb imul jge cmpl cs pop adc xlat xchg popf out (bad) mov (bad) pop movsl std inc xchg pushf mov arpl xor arpl pusha lock scas iret adc jmp xchg in sub rolb lcall daa (bad) jg pop pop int3 dec jns push sub xchg ljmp jl xor ss lcall mov popf and mov cmp dec xor lea int lcall xor inc cli rorb in fldenv jne jbe jae jl jno bound and cmp add test sbb cli xor xchg or and lods pop loope and push stos repz lods in jno pop daa push mov cmc sub pushl jmp sbb jecxz mov in in fisubl cmp repz cmp das dec pop fisubrl mov and pop and cld jnp mov xlat push dec cmp (bad) adc bound rcrl and adc jg push in jo js sbb add fadd sbb test repnz das mov push mov jg dec (bad) (bad) psadbw cmp jge jb pop inc jl pop int3 xchg xor pop pop add cli mov outsb mov lea (bad) jmp jae jb (bad) enter enter or aas pusha mov pop and fs es frstor xchg je repz test in inc sub sub aaa fs mov jmp cmpsb loop adc and sub xor pop mov leave mov lods repz (bad) and pop jmp clc loope imul mov fsubp mov loopne mov jbe stos pop (bad) std or and mov int add fsubp add pop pop insb and mov and cwtl leave mov mov add in adc cmp test mov lret inc out nop movsb jbe stos mov add xchg int3 aas add shl inc in pop add in (bad) lock clc cmp and adc stos adc faddl lods mov je push popa xchg or xlat and stos inc cli fildll push or mov cmp or jns jo pusha cli mov mov test and std sbb jo sbbb pop aad sbb sbb jns pop pop test imul ret push inc push out icebp jo xchg mov into mov and call testb push sub fwait out push or push fsubrl xchg imul (bad) rclb imul dec (bad) sbb pop mov mov hlt and popf neg (bad) test movsl dec pop fisttpll add in inc out lds arpl pop fbld jle pop dec xor scas and iret lds lods ret repnz xlat dec add mov ja rorb jno pop mov sbb call xchg mov xchg stos or mov or push xchg mov loop jno fucomp addr16 mov mov pop jmp loop into xchg jecxz fbld sub pop xchg sub sbb mov fstps cmove pop and pop inc out dec fiaddl add dec cmp rorl adc mov and dec (bad) (bad) or addb or mov je lods pop and cmp rorl mov dec push das insb adc dec cmp ds shlb out mov int jl out stos adc sbb sub mov scas nop mov xor jmp jmp push lea je test test add test jmp adc cs out jae lret fdivl shl and mov xor or rcrb add pop xor cmp sub divl data16 dec adc xchg inc cmp ffreep outsl mov rcll jmp jg mov xlat or call in adc fstps stos imul jp test add xor xchg movsl dec pop jp adc cmp lcall xchg call lods sarl jmp jp js pop push pushf repz lea movb mov mov call pusha lea call push lea jae clc bt xor jmp neg cmc pusha mov sub test push call push pushl call jmp stos sbb jp adc out adc inc icebp outsb (bad) push cltd fidivrl xchg movsl pusha fist inc jae push repz stos pushf ljmp imul dec dec push stos add hlt sub lcall lds sub fsubl outsb inc push jl jbe dec jg cmp clc inc jns add test inc call push ja adc std push aaa jl cmpsl dec mov xchg (bad) jae pop adcl and push or sub push aad cwtl out aam clc out pop pusha adc clc mov sub movsl sbb adc and movsl stc jne mov pop loop ret add sbb lea rorb loope in stos rcll lea push mov paddq sub inc imul divb insl xor mov sbb mov test mov sbb push mov add sub jg and leave jno push dec inc fwait inc pop insb cltd sub (bad) idivl lcall add mov into jne test insl fiaddl sub inc fisttpll hlt scas dec add mov stc cmc dec popf inc movsl cmp subl icebp or jmp and inc shl xchg jb out mov ret cmc push jge mov lret pop sub inc sarb add lods out aad pop inc cwtl ror out xchg aas andb mov jb cld cmp es adc inc cmp test test cmp and mov fcomip decl int cmpsb dec adc mov sub xor cmp mov xchg sub sub pop outsb mov mov mov add lcall mov mov adc jmp mov push push inc movsb mov rclb rcrl mov div repz adc mov pop pop sbb popf repz ds sbb and mov cmpsb jns or rcll adc adc mov in fsub jo cmp std int3 xor pop push mov xchg jmp mov pusha lods cmc clc clc cmc xor cmc bt call lea jae call pushf rep call fimull adc insb ret pop insl rcrl dec xchg mov fild pop fcomps in mov mov lods les (bad) clc xchg xchg cmp and push xor gs jl cmpsb (bad) lea imul hlt add mov lods cmp (bad) rorl insb jecxz jns and mov cmp ss in cltd movsl adc popa fist mov hlt aad cltd push push out add cli je test jecxz iret nop loope push insb jge pop push xchg clc ret mov imul sti aaa mov dec mov xor jns inc jns sub adcl add jp xor inc rcr jne pop aas pop aas mov icebp dec aam loopne pop mov cmp stos aam enter xlat insb pop pop sti test inc mov jmp gs push adc mov repz je enter ret cmp and push dec push push dec mov mov lock mov adc sub rcll lea jne not movb pushf pushf lahf mov call pop int mov nop out mov sbbl inc jmp push fcomps push or leave inc fnstenv pop scas and lahf xlat loop iret mov jne icebp lods out push fildl xchg mov or sub aad push adc jno sub jp pop mov mov in (bad) daa jecxz pop (bad) fstl ret std in bound jecxz in jb ret aam pop lret xchg es or ficomp out rorb push in mov cs or xchg jo rcrb dec es mov (bad) jno push xchg std in pusha pushf lea ja call inc xor jno xchg pop jns pop call ja stos test xor pop inc xchg in add andb pop fdivrs shl jo add cld fwait mov fsubr out dec push xchg pop stc sub lret mov add (bad) adc (bad) test pop pusha push cmp sub (bad) cmp mov inc add inc sbb dec (bad) jno (bad) aaa call ficom jecxz test sbb sub push lcall add sub jno dec mov mov xchg inc out jo lea inc mov push mov popf mov pop mov or daa ljmp jno push push pushf lea je clc call mov pushl popl pushf pushf pushf pushl ret movl push jmp mov (bad) and pop aas xchg add inc pop mov sbb dec or cmp flds and inc es (bad) (bad) enter mov rorl sbb ret pop pusha enter lods mov fstpl testl sub imul les xlat sub push push cmpsl mov sub (bad) cmp adc jb mov inc push js icebp mov rcrl repz mov mov and dec xor jns cmp inc test loopne hlt jmp mov repnz out nop fisub jns and pop push push aas loope push pusha lea jne or shl shrd mov stc clc bt push or pusha mov lea je jmp push pusha pushf pushl lea jmp jns cmpsl mov dec fisubrl sbb adc mov inc lds stos adc adc xchg mov and sub (bad) sarl mov mov test fcoms inc mov loope mov stos mov adc imul std sbb add pop xchg sahf fdivrl xchg lcall pop push jae dec adc jae jnp arpl aam jg mov in jno mov pop mov aaa (bad) sub in (bad) enter repnz jns push xor sbb jno jne dec push dec xor push icebp mov fs adc adc lcall xchg test scas adc xchg mov sub out inc pop clc cmpsb mov push loope dec arpl imul dec xor lcall loopne leave or sub fwait popa fstps sub jp mov mov push fnstcw and pusha sbb mov adc push mov lret xchg xor adc jmp in or cmp pop dec (bad) leave push leave pusha lea ja pushf pushl call or cmp inc insb jae js jp adc push lea movsb lret jae addb fldl2e add xchg xchg (bad) fcompl lods push scas out ja fcmovu jae and mov test (bad) lret dec in popa fisub sub out dec ds repz dec mov pop das sub inc cmp mov stc sub lock xor ds xchg scas cltd (bad) popa or sbb or sub jl inc ret pop xchg xchg gs sub sahf push scas sar jns sbb jnp aad insl xlat icebp mov xchg or (bad) shrb fmulp sub ljmp mov adc cwtl mov jno dec ret int3 push out pop and fwait (bad) stos aam aaa pop jns arpl mov mov cmpsl sbb and or fucomp addr16 pop inc js enter (bad) hlt cmpsb sbb and loopne js cwtl test push mov (bad) flds xchg call (bad) push call in push addr16 (bad) (bad) jne in ljmp push outsl bound cmp push dec add stos jg lock iret out sbb xor mov es (bad) fnsave into ror cmp (bad) inc aas pusha jno pop dec mov fild jl mov loop jmp movsl sbb out adc inc nop (bad) xchg dec dec mov stos lock jg (bad) aas lods jae jl dec mov std loop inc xchg je ja outsl push or outsl iret loopne or xor popa mov add shrl ret xlat fcmovb xor shrb add or lcall xlat daa xor scas rol lock call cmpl movsl jns mov add xor or repz andl ds xor lea jmp out inc ret xchg stos test dec push mov mov movb sbb das aas xchg movsb xchg dec cld bound (bad) sbb adc lods shl fdivl mov xlat sbb jns jge jl movsb mov lcall xor in mov int3 ror imul mov fnsave jno dec loop sbb sti mov stc stc test bt cmpb pusha lea jne ror sub call insb je push ljmp clc out add and adc pop inc (bad) cmp cmp xchg fwait test mov mov leave divb jecxz sahf lea lahf add sub test or push insl add sbb sbb inc inc jl (bad) incl mov shll sub test (bad) xor nop aaa or pop mov xlat mov cmp mov ror adc jb fadd fcmovnb xor dec mov out cmp dec and iret loopne add xchg mov sub sbb push popa mov fcomip daa sub push jns lods rcll or pop je rcl dec adc or in mov or push jb ret add push jmp xchg mov xrstors ljmp je imul jl and mov pusha decb loope lahf lock ljmp out cmp dec add push xor cli movsl mov pop dec pop xor dec add jo dec xchg sub shrb push xchg enter scas (bad) jle shl sub js add sbb daa fisubr sbb jbe sbb outsl iret and into nop push insb (bad) pop lcall mov adc and dec lock xchg cmp xchg std or iret mov (bad) sub pop jo je cmovno stos jb rorb and fld xlat cmp sub xor pop dec mov adc add aas add mull pusha stc out addb in or push mov jle push or pop jno xchg xor inc test leave sbb and adc sub (bad) and movb inc lcall enter cmp ja loopne or sub cmp out push movsb mov (bad) (bad) (bad) leave fst call daa clc cmp xor cwtl out cmp negb pop nop imul imul rcll jmp dec jns xchg mov (bad) neg mov mov sbb outsl and cmp fimul xchg stos movsb sbb mov xchg inc adc and dec mov lret bound xchg inc jle (bad) (bad) into loopne mov sbb (bad) lret sarl (bad) aad (bad) hlt ret lods lcall push insl jb lcall mov mov pop dec mov cmpb mov and cmp cwtl (bad) pop outsb pop fcomip xor fistl xor clc or jle xchg stos and ret fwait lahf arpl aam adc jle insb fbld push insb xor jnp sub lahf lahf imulb pusha scas jo mov test cmp ds addr16 mov in cld (bad) ret add mov iret nop adc mov pushf loop pop xchg xchg mov dec adc insb fwait inc addb out call enter into xor and cs cli cwtl pop mov jno inc xchg std leave xchg jp jl jo add jmp sub or push cmp inc xor adc ljmp xor adc jp and pop xchg arpl xchg sbb movsb jp mov or jae sbbb ret aam push pop icebp out (bad) mov jmp push movsl cmp out xchg xchg adc pop xchg adc sbb cmp out repnz insl icebp lock push push stc cmp pop cmpsb jns sahf fbstp inc push jno je lret dec das dec nop mov dec pop lock addl shr scas sarl add stc leave cmc stc inc pop inc sbb sbb jns orl stos (bad) lcall lahf and push xor sbb mov mov lods mov mov or js daa pop adc (bad) xor adc dec lea and pop arpl js ljmp (bad) in shrb (bad) into shl adc mov movsb cmp sbb gs xchg dec mov iret scas rol fisttpll out sub inc xchg (bad) call sub sbb repz mov clc cmc shl mov bswap xchg mov push inc call call push mov lea jne jmp xor faddl (bad) xchg mov or dec xor cmpsb stc adc push mov xchg or mov xlat out mov insl fnsave jg and lods addr16 push xchg inc jge xor call leave clc xor sahf push lret and mov into shlb sbb sbb insl cwtl lcall les jno inc iret sarb cmp mov mov test movb call jmp sbb push pop sti movsb ret gs jo test mov test cld or push inc mov sub (bad) push cs mov cli push aad inc jge shll dec jmp or and addr16 cltd (bad) cwtl xchg lods pop lahf or iret scas shlb mov push jle jecxz inc mov jmp xlat pop mov aaa (bad) jne cwtl aam mov lods stos mov stos mov mov leave or xchg (bad) push lret jo out inc cmp or fldl mov icebp ror fs mov int push pop cwtl insl jle (bad) mov lods xchg fsub loopne (bad) ds jmp inc jl mov (bad) xlat (bad) daa pop scas adc mov jp pusha flds push xchg push xchg leave js mov inc loopne jg (bad) add aaa pop sbb fstpt add and arpl int lahf cmp into lods cmp mov sub inc jne ja call mov movsl rcrb int3 push mov popf or pop pop mov gs stos imul push lock (bad) cli pop pop lcall jno inc push aas adc xor xchg sub pop scas punpckhdq negl mov gs lods xchg out cmp lea mov mov mov mov cmp xor xor inc push scas arpl xlat sbb adcl insl loop mov shll and and fs push dec scas cwtl lea cs notl popf aaa std adc std jle mov cmpsb gs jle dec and or jp lods testl iret inc fcompl jle mov jbe jg mov pop and push fild pop sub and imul (bad) call and mov scas mov push and dec std popa repnz and or xchg stos mov int3 push rcrb into lods (bad) repz fdivl movsl in pop mov icebp sub and pop sub mov popf ret (bad) shl adc mov (bad) std bound sahf rcl sub or lcall fldt xchg movl cmovg push ret jle imul (bad) xor ret in scas mov push mov mov mov into jns mov xlat jbe sub or adc add cmp and pop inc pushf repz inc and pushf lret jmp add inc gs outsl fs gs popa jae dec popa insl gs add add inc outsb jne gs je dec outsl outsl outsb push gs imul aas aas out mull dec iret imul into and adc loope mov add ljmp push or cmp xor push shlb lock mov xor push sarb gs lods fdivs push test adc (bad) jecxz mov leave xchg cmpsb jp sbb js mov daa in mov mov call sbbb push arpl imul lods cmpsb fcomps mov dec inc mov adc jae mov mov or (bad) pop mov loop jmp jno inc mov jae jecxz sbbl mov pop or shrb or aas and pop sti inc push mov jg mov mov adc hlt fcoms ret je pop in lea fcompl push out pop pop lock mov inc jns add out adc sti jg rol (bad) sbb sarl adc std or inc test popf stos push (bad) push mov test xchg mov xchg sbb push dec push pop xchg dec aam imul xchg pop out jno bound lods pop (bad) aaa cmpsl cmpxchg in cmp jno inc lcall fs jb cmc cmp cmpb jmp stc cmp pushf movl lea ja clc imul bt pushf add pusha pushf lea jmp outsl insb xor cs insb add push inc popf sub push push push cmpsl push stos ror popa mov test pop lods cmc ljmp popf sbb xlat outsb shlb (bad) int out loopne fwait adc sbb (bad) gs adc lods fs sub lods (bad) jmp jl enter les imul fnstenv mov cwtl inc push inc cmp push (bad) sarb push pop popf ret ror ror lds adc cmp test aam mov cmp lret xchg add cmpsl cmpxchg mov cwtl cli mov cmpsl jl hlt lret pop in frstor daa and sub push int bound aas fwait hlt lret out repz mov pushf movl pusha call push movzbl cmc push pushf mov cmc test pushf lea jns je xchg inc lea stc mov rcr rcr add clc adc mov pushf test movb lea je dec test rcl or add sub mov cmc clc add stc bt stc mov rcr mov jmp popa enter mov mov (bad) mov mov mov lea stc push sarl lret mov and jmp add dec scas mov inc (bad) ret sbb (bad) in sbbl push add out call fsubrl (bad) fcom test xor call cld inc adcl adc or js mov stc out dec xchg pusha mov arpl jp jle scas pop cmpsl out rclb and mov xchg pop cmpsl rorl xchg jb ljmp push out test cmp imul in incl mov cmp xchg adc (bad) int push mov cmp or jbe jge jecxz lods adc outsl fsub lret mov in stc dec push int3 push sub insl addb sahf fwait mov in mov dec aam sbb (bad) repnz mov int3 rorl pop mov pop mov lret repz jmp mov (bad) xchg lock adc lea imul dec stos xchg movsl or cs push cmpsb jl xchg lret dec shr xor sub incb mov xchg jmp inc mov out insb adc (bad) fstpt mov pop cmp data16 lahf push iret sbb ffree add push (bad) adc iret nop push or pop cmp test xchg push outsb les mov xor call outsb js adc inc mov ja jnp pop daa int dec dec flds pop icebp insl orl inc cld arpl idivb fsts stc and notb lret or xor iret adc xchg mov fwait add pop in push xchg rclb cwtl sbb loope mov outsb lock stos add cmovge cmp lock (bad) (bad) mov in loopne xor aaa test leave sbb push or in int test mov cmp pop mov adc pushf jmp mov ljmp subl mov jne mov lds mov loope cmp add jnp imul jns test aad sbb mov pop mov xor lods push es outsb push gs xor imul pop out (bad) cld or enter imulb scas xchg mov ljmp scas mov testl sub ss pusha je inc push div cmp test (bad) shl ja int3 mov dec repnz xor adc xchg and repnz cmc push faddl mov sahf rcl sti xlat loop dec mov cli push fidiv xchg add xchg cld mov pop ror jbe pusha mov aaa imul arpl fdivrl cmpsb (bad) pushf cmp popf fimul sub jnp dec mov aaa in aam js pop aam cltd imul loop shl mov and xor aas push imul out adc jbe cwtl out in outsb xor out into pop call pushf fnsave fnstsw dec adc push test lcall push mov push mov cmp outsl gs jmp sub push aaa es adc pop mov ja sbb popf lcall repnz jnp std mov cmp adc jmp push pop sbb or std jb or jg pop jmp repnz fs mov inc fld fisub adc inc in mov arpl out (bad) icebp stos ficompl es xlat mov sub mov cwtl fnstcw xor sub and dec bound out popa cmp das cmp leave xchg lds (bad) lcall xchg inc add push or arpl fsubl test les and aas xchg add arpl add addr16 scas adc cld xor or aam dec divb cmp mov leave xchg outsl iret loopne sub mov ja pop xchg stos dec mov fwait add sub inc pop imul inc push scas mov inc pop pop dec push or jmp loopne adc pop cmp clc lea bt cmp pusha lea jb cmp push call add push push push inc jb gs gs outsl jb add loop in pusha pop mov add sbb imul imul or dec pop xchg jg pop les or sbb enter cmp lock lcall and inc sub fcomp push fsubrl fistp sub adc test mov or xchg out mov imul imul push push fcoml (bad) cmp and pushf cmp lcall loope xchg sbb subl inc cld or lahf adc mov aad jp inc add inc ljmp add adc lods mov mov mov repnz std cmp jle incl and iret decb lcall cld adc sbbl inc cmp adcb push xor xor or xor xlat addr16 in xor popa and mov jge mov mov in xor daa jnp jecxz (bad) sub push push cmp push lret pop shlb ds xchg cmpsl call mov insl push lea out jns sbb shrb aad dec mov mov or dec cmpsb pop dec xchg lret rcll lea mov dec ja xchg and cmp mov adcb shrb mov dec push icebp ja outsl adc test lea incl sub cmp dec (bad) movsl cli enter out ret sub repnz test mov incl imul ret and unpcklps rcll cltd jns cltd repz fstl cmp lcall stc inc push xchg mov mov jle fbld add cltd stos sbb daa lahf or or xchg adc push stc mov fcomps mov jge stos in pop cmpl adc mov push dec pop push test sbb adc add or jb scas lock jmp push xorl jno arpl inc inc inc push inc push dec xor cs insb add das push (bad) (bad) jmp jmp cmp pop gs adcl out add call xchg pop cmpsb fs stc es pop loopne imull jge imul jl mov les icebp out dec dec stos xor inc push outsl scas ret ss leave adc jp jae call sahf faddl (bad) fsubrs jbe pop aaa out push (bad) (bad) jae mov jae mov arpl fwait mov addr16 scas cli dec insb lea sbb imul loope or ljmp (bad) fcomip inc cmp ficomp cs rcrl loop scas xor dec push sub test add clc neg mov pushf cmp pushf add pusha cmp jmp out int mov sbb fisub std mov sub in push xchg test outsb cltd inc leave jbe outsb les mov lcall push iret js inc out into outsl cmp dec leave fsubrs addr16 jb jmp mov mov repnz mov inc pop (bad) pop test ja mov insb repnz rorb pop data16 push or data16 pop sub pop xchg andl cmp rorb sbb out and mov jecxz mov mov sbb xor les xor jmp mov loop mov mov imull not cs xchg das fistpll je add insb das push or mov pop inc xor pop cmp les cmp dec mov pop add test adc insl jb loop js fidiv mov (bad) mov nop scas jmp lea inc xchg scas add inc fiadd adc jle (bad) xor jne pop aas xchg push out mov pop es rcrb pop and jp inc sbb push daa cmp jno xor adc adc and je pusha mov bsr movzbw add pushf mov bt jmp push fldenv bound adc lea fsubl inc dec xchg popf (bad) xor sub dec push add sub iret lock enter aad stc mov lcall push in inc inc pop push enter (bad) call das test scas add dec decb fiaddl push hlt push cmp mov or aam (bad) mov add add inc pop mov add dec xchg cwtl vucomisd dec rcr (bad) lock mov mov hlt imul jmp insb mov xchg lds dec lock adc push push cmp (bad) mov not pushl jmp movb movl pusha pushl popl pushl movb pushf pushl ret movl push lea jmp mov movb movb pushl ret mov jg and or xchg dec movsl pusha scas jo js enter dec or mov jmp and es xor icebp xor pop int xchg sbb shr xlat sbb fimull push rcrb jg cmpb popa cmp dec push jno sub lret add test xchg mov (bad) into cli mov inc cld and and les and pop (bad) dec in push xchg sub hlt xor (bad) jmp mov hlt push cmpb jae imul fistpll fwait jecxz in cld aad fildl test cmpsb ret ds cli mov sub inc repnz jle pop inc adc insl daa mov cmp pop pop and loopne sub ds push das scas pushf das (bad) (bad) or loop sbbl pop jo fnstsw sti lds xchg mov jmp popa movsb push xorl dec xchg add add fbstp mov mov sbb sbb stc adc nop iret (bad) enter into (bad) pop xor and loopne pop out mov mov push jb jp sbb ret xor cmp mov in imul inc outsb jno mov rcrl jne mov mov cmp loope pushf push pusha aas cmpb cwtl fstps mov inc cld mov dec mov adc inc hlt dec pop push jmp test idivl dec pop enter arpl jge sbb or sbb lods negl add and mov pop out fsub mov adc xor xchg push sub mov mov mov imul (bad) sbb xchg sub add push add pop pop rorb add shl dec pop in xor ficom cs in mov push cmp mov mov xchg add sbb inc sub inc xor add jmp dec mov (bad) (bad) ds sub mov cmpsl or jp inc dec push arpl sub (bad) adc mov xchg jmp mov test aaa (bad) sub add mov inc pop mov dec xor sbb (bad) jno xor or adc cmp jle lds push ljmp push mov ss dec jmp pop movsl mov lahf rcl mov outsl adc sbb xchg mov mov add sub ljmp mov rcrb das cmp push sahf fwait cmp hlt stc xchg xchg stos int or or jns jl mov jmp mov loope cmp mov and data16 out shll mov in inc les inc aas push scas rep add das adc lock push out aaa inc stos test push je mov xchg scas pop xchg ror mov iret pop test pop dec pushf fsub dec mov pusha test pop or mov into fisttp lods jnp mov lock cmp sahf in fcomps in inc xchg dec mov xchg or push or (bad) jb or cmp xchg and sbb or dec pop movsl shl hlt pushl pop mov xchg mov mov ret in ljmp jmp inc and push movb pushl pushl ret pop mov pop push mov call mov iret pusha mov arpl out (bad) js pop cmpsl sbb or adc (bad) (bad) and scas push popa lret mov je push ljmp loop clc xchg repz add or inc std or mov mov out sub fnsave inc pop dec push lcall dec sbb gs repnz xchg call pop cs mov jb daa sbb pusha arpl xor sbb hlt push js fsubr hlt sub jae jo shr cmp xchg jnp or pop loop das push imul popf jmp cmpsb mov sbb cmpsl fcoms mov sub mov aad xor jecxz xor icebp sub insb jb pop pusha decl xlat call inc andb loopne (bad) lea push lret nop adc test sub fstl mov test popa cmp scas adc je sbb sbb pop loope in sub gs pop imul fmuls xchg mov mov outsl cmpsl xchg ss xor sub mov fnstenv insl stos lods (bad) pop mov (bad) stos addr16 orb mov shll mov add push movsb int loopne in cmp sbb sub or je dec (bad) mov inc lcall pop add pop aad jno pop sub in aaa pop dec mov push mov mov dec rcl push lahf pop (bad) shrl mov add xor hlt sub insb jge repz jb mov outsb jg add dec add xchg out push call push mov (bad) mov ds mov pop js shll and fwait ret inc or mov pusha imul mov lods lahf mov sbb test xor inc push jl sbb test lcall sub cmp dec out pop stos mov aad inc pusha out pop inc mov jno test nop out rorb jmp (bad) mov inc lds stos pop jae stos xchg jmp ficom (bad) bound arpl jno sub popa pop pop inc (bad) ja mov dec sub or inc (bad) xor pusha xor and test cmp test (bad) cmp jno jbe adc adc or lds out jb notb push sub repz fimul mov clc cmp fsubs mov mov mov loop addr16 out mov adc stc out xchg in lahf ret cld fist mov mov push jns loope inc jmp add fisubl and mov jno sub movl je xor push call test jmp add dec gs jae jb gs add xchg repz xor xor fs insb add push or pusha mov add mov xchg push flds inc icebp dec cli test in pop xchg cmp fisubl pushf movsl jp mov (bad) jae cmpsb mov in jae mov mov cmp gs push data16 push jae rorl pop rcl mov add mov addl or (bad) std ret push mov or pusha jg fwait shrl out or mov mov loopne add pop sub push mov add gs push adc fldl fcmovnb test testl repz fbld pushf dec jne inc pushf lods das iret ljmp sub pop push loop out repz sub xor into inc inc insl mov push mov aas mov enter into push cwtl mov lea inc sbb mulb mov insl xor inc into push dec xor data16 jp leave xor loop insl jno sub fldl pusha pop pop push lahf test jnp jbe dec hlt (bad) pop mov cwtl push int3 cmp push push lret push mov pop or out loopne data16 insl bnd pop insl popf mov dec push lret push and dec nop lahf mov mov (bad) or call jmp stc inc leave jbe bound pusha enter and sbb mov or outsb push mov movsl fiaddl nop inc mov daa push adcb xchg jp into (bad) mov cwtl (bad) and xor dec push pushf movl pushf push pushl mov lea jmp pusha inc jmp call mov push pushl pushf pushf mov pushl pushf pushf pushl ret outsb fild push or repnz fld mov icebp dec xchg sub push out ficomp inc cmp jns sbbl lods ljmp out lock push sub push and insl jle inc push sarl mov xchg jbe lret sti xchg fnstsw icebp add aas pop xchg fldl add arpl popf xchg lods push in jnp ret dec nop mov js fwait mov inc out fwait jge lods shrl jecxz (bad) fldcw sub fcomp add xor insl js (bad) cwtl in in adc xor push insb cltd movsl inc lcall in rorb xlat sbb daa cld xchg fldl inc call iret xor and arpl sbb add xor add into clc sub pop lcall add adc out leave ficom cltd es sbb ja imul xor xor aaa incb and sub jbe mov cwtl mov sub xchg xchg mov clc push pop xlat mov jno daa fidivl add add lret jmp aad repz das add dec fmul adc add cmc pop loope adc xor mov enter dec lea jecxz bound xchg push inc adc fld xlat sbb fadds out out or jns int out xchg inc push jae cmp cmpsl xor sub les xchg mov out or rcr outsl lods (bad) loopne arpl in stos xor je fsubrl int3 shrl in xchg stc mov lea mov movsb cli cmp les cli xor mov mov and sub mov (bad) decl test (bad) jmp rcl jmp adc dec mov mov popf inc mov dec or mov rorl xor sti and je lods xchg fs insl fstl dec loopne add idivl addr16 mov push jmp shll in leave (bad) addl mov sbb and outsl ljmp push cmp pop jo test dec jo jne (bad) xlat jno es and lahf mov loop push call mov push xchg mov jno xor push mov dec loope hlt sub xor mov xchg add mov icebp pop (bad) aad das dec cld mov insb push cmp cmp sbbb test push mov insl shll sub xor es xor inc jne pop addl lds in repnz sub push push andb shrb pop inc pop and test ret dec in xchg imul and pop insl jno and lea je call or dec jne cwtl es add mov fs inc jle outsb fadd xchg dec jbe xor int aad mov sbb jno add or call test iret mov enter and cmc push sub cmp lcall push bound push xchg pop jo jno dec negl fs cli pop add fs cmp jp jle xchg in mov lds outsb jg les (bad) loope adc push sbbb (bad) cmp push gs mov pusha jb in mov jne jb (bad) lcall push (bad) das or sarb pop xor and ret pushf bt add pushf pusha lea jmp xor inc xchg mov out call loopne je mov andl mov das mov test fcompl push mov pop mov les in sbb jmp push movsb fucom xor inc xor enter xchg adc clc dec stc pushf je sub and cmp cmpsb clc cmpsb fstps sbb sub mov jl jecxz outsl pop les inc lds mov or pop out jecxz int3 sub xor adc pushf xchg pop outsl (bad) loopne mov xor and push fucom imul jno and jne lea test pushf xchg test mov lret hlt xchg loop add cmpsl call es xor xchg push mov push adc arpl shl cwtl cwtl lcall fnsave sti or shl decb (bad) movsb mov cmp ss ja push add pop and mov repz and push xor sbb flds or pop out shl adc fnsave pop lods in adc inc jno or popa sbb lret pop in test add push loopne (bad) outsl ja ljmp imul icebp mov lds jg mov pmuludq push mov sub pop imul aas inc push ds jno and out scas adc jno and mov (bad) call ds jo fsubr aam xchg dec test cs rorl or aad mov cltd es popa mov ror and jge fisttpll outsb rcll gs scas cltd push faddl jo jo out push movsl sub cmc mov pop mov cmp in sub mov sti (bad) cs fdivr xchg imul push and insl fisubrl negb aaa dec popa mov cmpsb cmpsb xchg repz cmpsb pop inc push adc and jecxz sub out fist scas movsl lcall xor lcall pushl in push rcll cltd insb cmp jmp add add add add add adcb pop cld pop add adc add push and adc adc add adcb flds add adc add mov adc add mov add adc add adc add push add adc add push and dec adcb outsb test adc add cmpsl adc add imul add and adcb insb dec and insb adcb fsub adc je adc add push and jl adc add adcb mov adcb add pop out xor and pushf sub or xlat call push out decl pusha sub das scas adc jmp cmp icebp (bad) stc cld dec mov dec adc xchg xor push insl scas ja fidivrl mov out aas xchg std sub and or or mov (bad) in loope (bad) fneni(8087 dec xchg push cmpsl aaa sti and cmp ficomp push push mov jno je pushf incl dec das mov sbb add sub lahf or clc out shll sbb aas fcomip jno pop and nop outsb call repz sub jp mov mov imul cli adc clc out or gs imul push loopne mov fsub push lea jp cmc and int3 mov addb rclb cmpsb int mov mov mov loopne ret fiadd loopne mov jecxz add push inc cmpsl cwtl scas fnop xchg dec cmp and inc pop dec push mov push push es pop lods pusha sahf daa xchg mov xchg jmp lock stc (bad) cmp and pop push lock movsl lcall adc repz add shr cmc (bad) decl pushl mov push lea call call inc lea (bad) repnz jp inc adc pop ja jae jae mov mov pushf add lcall mov (bad) pop adc dec (bad) sbbb mov mov mov enter and mov popa fidivr or pop loopne inc pop ja push pop xchg jno push dec inc in nop or push push and cmp push or jg lods mov push lods mov (bad) fldl xor imul sarl xor lock fist xlat enter aaa rcrl add xor or jnp (bad) or scas pop and and sub and xchg jl aas jl mov xor add lds hlt or sub or xchg imul xchg lret aad adc xchg in dec xchg sbb add jg repnz js pop data16 cmpsb cmpb sbb sub in xor (bad) xor inc pop ljmp rcrl and and frstor pop adc mov sbb sahf and xchg inc cmp xchg lods mov jp ds mov or cmpsl sti fxam fucom loope fsubrl in xchg ret je push push pop mov nop and movsl push test imul in jno fcmovbe adc pushf mov lret mov icebp mov inc jg,pt cmc leave nop into (bad) btr and sbb fildll add inc imul je outsl outsb inc add xchg pushf lock jmp sar xor movsbw mov push test clc cmpb movb mov lea jne cmc xor lahf stc neg mov cmc (bad) lock movl cmp pusha movb cmp test call add dec outsl popa fs imul add adc dec push lahf data16 call movsb stos jae cmp js mov pop (bad) fisubrl xor sbb rorl jge insb jecxz daa fstpl loopne inc and mov enter mov fadds pushf inc imul popf add jnp iret je dec pop jp imul addl sbb pop adc mov gs jbe mov insl pop adc or (bad) repnz mov lahf and loope sbb push mov outsl movsb fwait add jae fnsave sbb pop push addb push jmp (bad) ret mov fldl hlt leave and jno dec push inc pop push pop pop cmpsb mov hlt push push arpl inc rcl enter popa mov jecxz cmpsb in in jo aaa dec or push mov jg test (bad) jne sub outsb cmp sbb and mov adc adc ficomp test sarl push into loop sub xor mov jns mov ss andl xchg bnd cwtl pop test push insb sahf inc pusha sbb cmc push ja js test xchg cmpsl jno sbb ljmp je mov jmp (bad) pop loop fimull jnp xlat cmpsl mov or test clc xchg jns popf or and cmp mov stos pop in mov pop pop in jb cmpsb out popl jle or sub pop cltd adc jo inc fucomi mov mov xor add jg repnz (bad) popa popa ds xor xchg sub lock jg pop sbb sbb bswap bswap movb not mov push lahf lahf lahf jmp fstps in addr16 fisubrl jbe bound mov aaa pop aas aas jg arpl xchg or cmpsl imull adc jno popa xchg push xor jp mov pop cwtl mov lods scas lock fdivrl jge mov and mulb jmp sti jecxz add xchg stc xor std mov sbb je inc push jnp aam mov mov add sub sub and call cli sub push lret mov and or sbb (bad) (bad) jmp and push pop add ljmp mov add pop movsb jnp pop push cwtl fnstenv sbb push sub pop jecxz mov (bad) fwait mov imul dec push clc cmpsb adc aam test push (bad) loope mov es sbb clc or insb push fs lret adc jb cmpsl xchg and adc mov pop imul dec out adc es pop sbb cltd mov cmp psubusb xor inc push jecxz or sub loopne les outsb js and push test movsb and sub bound test push and inc xor lahf push mov cltd dec jb pop cli sbb jno sbb shr inc fstl cli push push pop cmp mov xchg mov das xor sbb add lock sub add xor mov mov in xor jbe sub in addl adc jns in (bad) adc sub jne jb repz pop enter push lea add orb adc or pop and pop sbb pusha pushf dec push lea jne seto bt xor mov pushf bt cmp jmp add imul fs gs outsb je sub cmp cmp pushf jmp je mov mov or push push xchg dec mov (bad) movsl cli adc mov jl dec jb bound sahf or xchg jmp call in cmpsb jo daa cld inc andl dec xchg stc icebp lock xor js adc jge movsb sub lcall loope stos mov inc dec push mov jmp fs push outsb (bad) ja leave cmp cmp bound mov aas pusha sbb push cwtl xchg stc lods jb addr16 pop pop insb and pusha lea ja dec cmp sub shl add ror shld inc shld mov neg bt mov rcl mov pusha call subl xchg popf pop aas or cmp xorb js push loop arpl cmp dec pop cmp pop pop cmp adcl leave dec loope (bad) loopne test out or adc (bad) add (bad) sbb xchg aam sar xchg (bad) or ds fsubr hlt repnz add idivl cmp mov sahf fistp jbe push ja add les outsl shr jae pop test test pop push push ror inc (bad) dec icebp mov imul ret fmull mov and adc rcrb mov fnstcw lock aaa or xchg mov jo,pn dec push xor add cmp inc (bad) mov ds (bad) mov fildl adc pop lea pop xchg pusha jmp add inc gs outsl fs gs popa outsb fs gs add (bad) aaa inc lahf aas push or aam lock and fadds lock cbtw fwait test xchg addr16 cmpsb sbb cltd pop outsb cmp jbe outsb xchg fs out pop mov add pop aaa mov jecxz sbbl dec xchg in (bad) jne cwtl (bad) insl repnz call jo shrb jecxz mov xor sub int push push sub jl stos mov std or adc lods adc push sub (bad) outsl lfs popa lea stos pop xchg icebp lods inc fnstsw or add sbbb inc xorl sub cli (bad) aad mov push sub dec sub fldt lcall add or pusha jno jno jbe pop xchg xchg dec jno dec jmp ret xlat adc data16 (bad) xlat push sub xor call mov jl outsl or mov mov add cmp movsb jnp movsb into popa adc dec pop ret and jmp sub push out in or and sbb out pop push dec jno out push shrl inc aaa inc xor out jmp lods icebp ror loop cmpsl push inc cmp jno pop adc add pop in or out ljmp insl jb jbe stos clc out (bad) pop loop lret adc pop jb ret loope fiadd aaa dec xchg mov leave cmp ud1 idivb es popa dec cld bound inc cwtl push cwtl out movsl fldl2e and sbb mov inc lret mov pushf lock jecxz mov in mov dec sbb fdiv incl mov cld (bad) enter (bad) jb lock out sbb xor ret popa sbb xchg mov and rolb push (bad) outsl jbe imul xchg cmp or jmp pop adc inc sahf imul xor shr mov icebp scas popa ficom fild mov inc aas ja fs and gs sarl mov cltd ret inc idivl jo cmp push arpl cmp push (bad) mov mov push xor or mov mov roll aas gs push inc jns ss cwtl jecxz (bad) and push fldt adc adc add das inc mov out fistp sbb push xor stc gs dec mov inc pop mov imul outsb fnstcw pop jecxz push inc fdivl inc dec sbbl leave mov pop lods dec push inc adc sbb lods xor jg (bad) and pushf repnz ljmp out push mov jmp shl out xor xchg mov out xor sbb aaa int3 cmp roll inc fdivl loope push les out (bad) pop sub cmp pop xor pop cmpsl mov fldl2t mov jno adc pop out lock dec adc and fsubs fucomi das insb adc jmp pop (bad) pop xor mov lret rep adc data16 jnp jecxz jl aam (bad) jl jne mov cmp inc sub cld imul xchg dec dec addl sbb aaa call xorb pop cltd sti sti les sbb sbb pop xchg outsl cltd vmovapd jns xor in ret sub dec ss (bad) dec icebp gs xlat loop lret adc or push dec lcall or pop adc fs jb test cmpb call mov xchg (bad) outsb fcmovu in leave sbb or int3 repnz rorb decl repz (bad) cld or ficompl xchg shrb inc sbb sub or (bad) enter inc data16 jbe add lret push (bad) mov pop xlat cmp sbb inc negb pop outsl mov dec mov mov add arpl pop jae cmc adc in add lcall int jmp cmp ljmp (bad) push ljmp iret dec jg sub icebp adc in fsub je mov add sub int3 xchg or fbstp sbb add shlb inc and dec push pushf mov jmp pushf push pusha mov inc jmp xchg pushf clc bt xor jmp dec shl mov push pusha mov add pushf jmp mov mov push pushf movb pushf lea jmp pushl pushf pushl popl push push push lea jmp add jmp inc btr cmp mov jmp jmp movzbl test add pushf dec pushf pushf ror cmp bt clc neg pusha jmp push pushl mov lea lea movzbw bswap push repz popl bts push rcr call cmc mov cmp xor pusha mov bt cmp pusha sub pushf mov shr jmp jmp mov mov pushf pushf lea jmp mov pushf clc call shr jmp mov pushf popl mov pushl popl pushl pushf mov lea jmp pushl popl push movb movw push lea jmp call shrd dec mov cmp clc cmc jmp push call push jmp pop inc or and add adc btc pushf mov cmc cmp sub call pushf pushf jmp cmp sub pushf pushf pushf pushf mov mov lea jmp add add rol mov xor bt ror mov cmp sub pusha movb cmc shr pusha pushl call movsbw pushf mov jmp mov pushf mov pushf push pushl ret push mov mov push pushl pusha pushf pushl ret rdtsc mov sar and or mov cmc jle bt pushf sub jmp dec mov jmp call pushf mov push lea jmp div mov mov pushf movl mov pusha pushf popl jmp movzbw pop sbb movzbl cmp clc and xor add pusha adc sub movsbw movsbw rcl ror lea jmp add mov clc call pushf mov mov pushl push lea jmp setbe shl mov cmp jmp pushf lea jne pusha call movsbw shrd pusha or mov sar test inc mov bt mov sub cmc pushf call shl setb jmp dec push movb lea js inc push pushf call mov movw mov call jmp pushl mov pushf pushf pushf popl push push pushf pushl popl push lea jmp bts call pusha lea cpuid pushf sub pusha cmpl movb pushf call jmp mov cmc shrd call pushf jmp lea aad mov jmp mov pushl jmp lea jne bswap ror xorb movsbw movsbw pop push push push lea jmp pushl popl movw pushf lea jmp pushf popl jmp test shl cmp cmp bt shr bt clc bt cmc or cmc jmp mov push pusha mov lea jmp mov movw mov pushf lea jmp movsbw push call pushl popl movl movw lea jmp push push mov push movb pushf lea jmp bt sub pusha shl pushf call stc cmp mov add clc call neg inc movb not push dec (bad) repnz ret bswap call jmp movb mov pushf pushf popl movb call pushf mov mov jmp cwtl cmc sub jmp pusha mov jmp mov push pushf popl pushf mov jmp pushl pushl jmp rcr setns sar mov add ror mov add jmp push bswap clc add cmp add cmc bt sub stc ror jmp shld notl shl mov bt cmp cmc sub push cmp mov pushf and call pushl popl mov movw lea jmp mov inc pushf pushf decl push pusha call call call rol neg mov shl inc stc pushf add call jmp mov push pushl lea jmp jmp mov pusha push pushf mov lea jmp lea jbe pushf call lea push pushf lea jmp mov pushl pusha jmp mov pushl push pusha mov pushl pushf movb lea jmp call pusha pushf popl call cld push push jmp push pushf movw idivl call not jmp cmp aad mov adc adc daa mov jmp call pushf popl jmp jmp push mov mov lea jmp pushf bt add pushf call mov push pushf add call mov mov cwtl setbe mov pushf push divl call pushf pusha mov movb pushf popl mov pushf push movb pushl popl push lea jmp shl jmp pushf lea jnp push pusha pushl push lea jmp pushl test call pusha mov pushf push pushf lea jmp mov movsbw mov mov movw call jmp mov jmp not cmp add clc lea jno add jmp lea jg push pushl popl pusha lea jmp pushl popl pushl lea jmp pushf pushf mov mov jmp jmp bts mov pushf call pushf mov pusha movl pushf pushl ret bt mov cmc stc bt neg mov clc cmc not pushf not stc pusha clc cmp and push jmp movw jmp mov pusha mov pushf pushf pushl lea jmp mov call xor pusha pushl push xchg push movl mov call mov call call rol movzbl setle btr mov push cmc rol cmp sub jg push add jmp pusha mov push pusha lea jmp call pushl popl mov lea jmp das cwtl sub bsr and clc ror lea jmp jmp (bad) icebp add cltd rorb inc (bad) (bad) (bad) stc add bt shrd push call bt push mov stc cmc cmc mov sub pushf pushl pushl call inc stc clc call mov push pushf pushf lea jmp bswap aas bsr mov rcr not pusha mov pushf stc mov mov add jmp mov mov pusha push push lea jmp lea jnp pushf push pushl push pushl pushl popl pushl lea jmp mov call adc mov bt push bt sub clc pushf add movl call mov call lea jne movsbw clc mov call dec cmc pushf stc add pushf add jne clc stc mov clc sub jo mov push pushf pushf lea jmp xor rol sbb clc mov mov setns add pushf ror cmc ror shr call pushl call pushf mov mov lea jmp push ror lea pop dec pusha rol xor or bswap lea shr call jmp pushf push add mov call lea lea jo rol sub call pusha pushf cmp pusha pushf jmp pusha lea jne pusha sar xorb lea not movzbw call push sub jne bswap cmp clc cmp pushf add cmc cmp cmp push add cmp sub call call pushf mov bt rol xchg push movsbw bswap push pushl popl btr xchg stc push not rcr rcr rcl mov mov call add and add movsl sbb add jb add push sbb jb add jno add in sbb ret add adc add lret sbb add add push sbb add popa sbb add sub add xchg sbb pop sbb fstpl ret add cwtl sbb sbbl and sbb mov sbb popa sbb add mov add (bad) sbb lret sbb dec sbb pop sbb adc add dec sbb mov sbb add jno add inc sbb add and add pop sbb xchg sbb push sbb cwtl sbb dec sbb add cmpsl sbb popa sbb add pop push add popa sbb add xor add and add pop push add adc add and sbb jge add sub add pusha sbb push sbb imul add pusha sbb (bad) sbb mov add sub add cltd sbb mov jns add inc sbb add pop sbb add stos sbb ss add pop sbb sub add sub add jge add or add fstpl ret add jae add pusha sbb cmp add cmpsl sbb jno add xchg sbb add sbb (bad) into sbb pop push add mov sbb add add lret sbb fstpl ret add pop sbb add in add xchg sbb or add sub add sub add push sbb sbbl loop sbb add xor add mov add movsl sbb add sbbb mov lret sbb int add imul add jns add in sbb and sbb xor add sub add pusha sbb loop sbb mov popa sbb add cmpsl sbb sbbb loop sbb ret add jns add push sbb add iret sbb bound add inc sbb add or add and add lds add push sbb add jae add mov add cwtl sbb lret sbb and add pop sbb sub add mov sbb add add mov add sub add add add jns add jno add jb add lds add xor add in sbb bound add cltd sbb and sbb jb add adc add jae add mov add pusha sbb mov int add mov sbb add in sbb ret add adc add jge add mov sbb ret add xor add cwtl sbb sbbl mov in sbb add add adc add fstpl add sbb xchg sbb mov add inc sbb add sub add mov add mov add jg add lret sbb mov dec sbb add imul add mov add inc sbb add in add (bad) sbb (bad) sbb jae add dec sbb add and add cmp add pop push add inc sbb add mov sbb stos sbb lret sbb movsl sbb add in add add add sbbl ret add sbbl pusha jmp aas xor mov test add call movw stc lea pushf jmp stc add clc cmp stc add jmp daa pop rol xadd pop bsr rdtsc pop xadd not pop bsf dec pop shl jmp call pushl popf movb movb mov lea jmp rcr ror mov pusha push pushl stc sub stc add push pushf popl push jmp mov pushl jmp push pushf mov pushf pushl call cmp xor test lea pusha bt not pusha xor mov bt push sub call mov movb pusha lea jmp stc clc clc sub stc bt xchg pusha mov cmc jmp pushf pushl inc stc xor jmp pushf pushf mov push push mov push pushf push pushf popl pushf jmp lea pushl pushf mov mov std bswap bswap mov movb jmp call imul jmp add pusha call pushf bswap movsbl bswap mov pushf movsbw lahf movsbw mov jmp mov call pushl popl mov mov lea jmp pushl popl push mov push lea jmp jmp mov pushf lea jmp ror neg sub shl adc xor (bad) (bad) mov pusha test dec jmp mov pushf popl call shl lahf not mov (bad) repnz xor mov (bad) icebp shl test or mov stc jmp call pusha mov movw jmp inc sub mov test pushf push test sub cmc clc push shl pusha push call test add mov movb pushl lea jmp push mov pusha pushf popl movb push push pushl pushl popl push push movw push lea jmp test not jmp pushl pusha pushl pushf popl jmp clc lea jno and stc jne cmp jmp setns movzbl pusha mov bt rol test add pusha mov mov mov mov push pushl ret jmp push pushf jmp push pushl popl mov pushl lea jmp call push bt add pushf jmp mov pushl mov push pushl pushf popl push call xor clc add clc cmp mov sub push mov mov lea jmp pusha mul call call cbtw call movsbw mov jmp jmp clc mov pusha call daa daa mov call add jmp pushf pushl jmp mov pusha pusha lea jmp pushf mov pushf push lea jmp pushl mov push mov jmp push btr push btr mov movzbw push jmp pushf lea jmp call jmp pop pushf pushl ret movb movb pushf popl movb call mov push call mov pushl popl mov pushf pushl lea jmp mov shr clc shl mov call add lea jle mov push lea jmp bts mov sub daa sbb aam mov cmp sub push cmc pusha stc imul call jmp jmp bswap not ror xor (bad) icebp shl add shld sar shr shr movzbl mov lea jmp mov pusha movb lea jmp call push test sub stc mul call bswap cmc bt popf pushf pop jmp movb push jmp jmp clc rdtsc stc sub push mov jmp pushl popl pushf pushf pushf lea jmp bt lea mov pushf mov pusha stc clc add pushf jmp jmp mov pusha pushf popl bswap mov bswap pusha mov lea lea jmp movzbw add sbb mov pusha jmp call rcl mov clc not btr dec add bsf btc sub or mov call movb mov movw movl pushl pushl lea jmp push pushf lea ja sub mov cwtl shrd shrd lea lea jmp stc cmp jmp bt clc or call pusha mov test pushf call rol shr test dec mov bt add push lea jmp stc xor call push mov call pusha call jmp jmp pushf push lea je jmp cmp add movb pushf jmp jmp sub jmp clc sub mov pushf jmp rol mov seto stc jmp pushf mov push pusha movb pushf lea jmp mov pushf movb pushf mov lea jmp pushf pushf mov pushl push pushf lea jmp call cmc sub bt push shr movw mov push mov jmp (bad) lock add (bad) (bad) jmp pushf jmp pushf mov sar mov pushf neg sub js cld pop jmp pusha movb pushf popl call pusha mov movb lea jmp push mov movb pushf lea jmp call (bad) testb mov cmp setp movzbw mov test add pusha pushl mov pushf mov movb push lea jmp sub btr jl mov push adc mov stc add movw jmp jmp mov pusha pushf push pushf lea jmp sub pusha lea jne jmp jmp jmp mov sbb bsr add add shrd cmp bswap shl mov pusha shrd sub bswap not adc ror shl bts neg pushl cmp shrd xor call adc mov call lahf shrd shld mov cmp sub push pusha pusha call mov push mov jmp lea jne clc (bad) repz xorb pusha setbe movsbw bswap mov push push pushl movb lea jmp sub call sar pushf or mov add bsr add push sete inc ror xor mov jmp pushf sub push push call pusha mov mov jmp pusha mov pushl movb pusha lea jmp pusha mov mov pushf lea jmp movb stc sub call pushf mov pushf pusha lea jmp cmc pusha ror cmp cmc xor call mov mov movw mov lea jmp movb not stc cmp add stc test movb call jmp mov jmp mov mov movb pushf push mov lea jmp cmc stc mov stc stc sub pushf mov pusha pusha push lea jmp bswap mov pushf pop mov pushf mov jmp inc neg mov and or stc mov push bt add call pusha pusha not mov movb mov pushf lea jmp dec shr inc add not dec add rcl (bad) mulb push add add pusha mov pushf movb push lea jmp adc mov pushf stc clc cmc sub call pusha push push movb sub pushf call pushf pushf popl call mov jmp bts mov push test pusha call mov pushf jmp bswap bswap neg call call pushf call jmp mov pushl popl movb pushf pushf movb lea jmp clc and jmp stc rcr das movzww stc clc bt jmp bt not mov stc xor stc test clc cwtl pushl jmp pushf pushf pushl popl pushl lea jmp push pusha pushf pushl popl mov stc cmc add cld bt stc pushl popf pushf push lea jmp push lea pusha jmp mov pusha lea jmp pusha mov mov movl lea jmp not and not stc dec dec sub jmp mov dec push movb push push lea jmp lea jne test sub pusha push call movzbl btr not not call pushf pusha call call cmp add cmc call pushf not bt add test clc push test sub jmp call mov pusha push mov pushf lea jmp pushl popl mov mov pusha pushl lea jmp mov pushf jmp pushl popl pushf pushl lea jmp mov jmp cmp pushf call shld push mov mov jmp push push mov pushf pushf pusha lea jmp cmc neg mov stc clc add pusha add jmp jmp mov pusha jmp add add dec rol mov call cmp xor push jmp movzbl bt test add pushf jmp pushf popl pushf pushf mov pushl popl mov lea jmp jmp shrd rol pop sub neg and popf bswap pushf mov pushf mov pushl ret sbb lea cmp cmp jmp mov mov pushf mov pushf pushf lea jmp mov dec call xchg pushf xor pusha ror stc bt pushf lea cmc push clc cmc xor call add movsbw push inc dec jmp call bt btr cmp mov sar rol clc rcl mov bsf or bsf or mov bt sub push mov call rcl rcl mov rcl pop das not jmp shrd bts pusha movzbl movb bt add not sub bts ror inc inc adc and pusha add pop movsbw inc movsbw mov jmp cmc mov btr movsbw mov stc pusha push add call bswap mov pushf mov mov pushl call movb pushl mov movl mov mov push pushl pusha pushf pushl ret pushl mov movb lea jmp stc clc ror stc sub jae xor test pusha stc lea mov not stc clc bt xor pushf call call add pushf pushf popl pushf pushl popl pushf pushl lea jmp imul pushf pusha mov mov jmp pushf rep bswap rol neg cld mov pop shl std pop mov stc movb call mov pushf pushl jmp push jmp pusha jmp sub add mov (bad) repnz mov jmp pusha pusha pushl popl mov lea jmp call bts sub call push mov movb lea jmp pusha jmp bt mov cmc pushf not cmp pushf cmp not pushf sub pushl mov jmp pushf mov pusha push push pushf lea jmp mov cmp cmc sub pushf pushf mov pushf lea jmp jmp pushf popl call mov pushl lea jmp add dec add add addl add xchg add loopne add inc dec add jns add sub add add jbe add xchg ss (bad) ss push aaa add cmp add jnp add in add and add dec cmp cmpb add cmp sub add imul add cmp xor add pop cmp cwtl cmp lret cmp or add dec cmp js add stos cmp or cmp add add cwtl cmp add cmp add cmp add cmp add imul add cmp add pusha ds mov add mov ds es add imul add inc add xor add add jo add mov add or add add jnp add mov add fildl add inc add push inc add mov add inc add sub add add stos inc add incl add add mov add add add add cwtl inc add add add add inc add cld inc adc push (bad) adc 