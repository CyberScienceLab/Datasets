call add push mov sub fnclex fwait smsw test jne smsw test je cltd xor xor xor mov jmp or or or or add add push mov sub push push xor push mov or call mov mov mov add cs mov mov sbb test je das and or push add add adc or or insl out pushl add jo inc loopne rcrb push push mov and int3 dec pop pop mov jg leave ret xor cmp add push jne push int xor jmp push adc lcall clc jmp (bad) outsl add ret mov daa ss ljmp dec xchg xchg add or sbb aas cld mov mov adc movsl test (bad) pop (bad) hlt push lret xor test clc lcall mov pop incl clc mov jne jnp mov add xchg mov js ret mov (bad) push add mov fcompl add sti cld loopne int movb lcall mov int3 push mov rorl mov lods or cmp xor xchg add lock movsb aas test add frstor outsl subl push push movsb loope sti adc adc inc sbb push mov inc cmp mov cmp mov cmp xor mov mov mov ret or mov decl sbb add mov cmp push mov in push pop jl push pop xor div sbb inc cld imul (bad) pushl add mov shl or mov shr and mov sti mov sbb clc aas mov add roll cld jne test fist lods dec add mov dec movb decl adc add ret shr rorl xchg jno add add add rorb pop xor or adc testl out push xor pop jmp push mov add lea sar fbstp push pop (bad) jle cmpb nopl (bad) daa jne mov int3 cmp and cmp shl out lahf js cmpl nop je loope lods pusha fadds ljmp or and xor pop sti fisttpl cmpl and and or push cmp push dec adc fdivr mov inc imul cmp ja xor or push and mov and ret outsl pop or add rcr inc cmp ffreep or (bad) ficompl nop sbb (bad) jl jg xchg jmp mov rcll leave push mov mov imul incl (bad) jl mov insl out outsl jnp xor rcrb test jae adc lret inc adc or leave add out in in and mov inc leave lea or insl mov push test add xchg inc lock xchg xor jl add mov aad pusha mov pop dec or lea push adc adc add pop stos mov lcall xchg lahf pushf xchg mov add add popf pop fs fistp cmp xchg adc mov dec jl lds ret bswap andl inc push and fs cld je mov aaa dec cmp and xor push pop orb xor scas push mov mov lea mov cs clc add jg notb cwtl cmp jae mov sub mov lret arpl push inc adc jge xorl add push cmp cmp hlt mov inc into bound inc push mov divps in andl and mov push (bad) adc clc add or mov push lea and cmpl dec mov pop aaa dec jmp sbb mov push sub mov pushl mov push ds scas push pop mov in pop (bad) call mov ret in cmp cs sbb sbb mov jb cwtl es mov and pop xchg stos loopne shr cmp cmpl mov mov and fmull push fwait mov jae jecxz sub cmpl pop mov jne jle dec ljmp aaa pop mov je mov push mov out shll in xor test mov test pop pop in (bad) mov fldl mov add mov xchg push adc (bad) add leave cmp lea push jle lcall add adc sub mov pop add push hlt movb inc inc fidivl mov ret cmp lea mov lret push loopne xorl adc xchg dec out ret mov je ret inc push sbb add test (bad) sbb sub sub inc loopne (bad) add int3 test cwtl fidivrl ret cmp lahf add cwtl aam push mov and aam sbb xchg push pop xor (bad) dec jne cld call lcall push xor sbb push push scas jge (bad) enter add int3 call xchg mov inc je mov es push or or rorl mov pop cmpb adc jne ret add mov xchg add xchg sbb aaa cmp pop lods inc jle popf cmpl xchg je fsubrs add add xchg mov add loopne sub push or jl aad xor sar mov popl push or xchg lret jne mov cmp test mov add inc inc (bad) pop jl leave cmp stc fistpl inc imul adc push push in cmp and sbb scas mov push (bad) adc lds or mov cmp xor in sub clc push jg adc insl pop mov imul decl jae mov jg mov mov mov dec test push sub lea mov roll push sub cmp ljmp and mov (bad) add sbb or push sub or fldl xchg pop je xor je nop xchg movsb and and and dec push bnd mov je imul cmp shrb arpl dec push stos push sub dec inc push jg sarb adcb ret cmp add jne clc ret incl or inc add stos jo pop or test push into cli lods fisubr cmp div popf shrb ljmp cmp daa jb aam inc adc jno (bad) aaa xchg out add call (bad) or pop mov jne mov sub je jo ss (bad) out xor mov add add shrb sbb repz pop mov test cmp jae cmp je ret inc pushl cmp cmp jl push sbb add sub mov jmp mov add or mov lods rorb (bad) adc mov push clc in cli (bad) fist push pop push xchg push cmp fimul mov mov mov adc xchg and lahf cmp fistpl rcr jge jbe sub shr push xor ljmp and nop mov (bad) aaa add lea orl inc cmp lea fnstsw adc and mov xchg cmp pop pop jle cmpb push push mov mov push inc adc jb mov mov jl mov adc lea lea cmp cld outsl lds es pop sbb jp push adc add xchg mov roll orb movsb sbb and fnstsw lds test mov je pop (bad) lock mov pop test ret sbb shlb jge mov pop sbb movsb or push or or loop xchg push sub mov lock push mov push jge jae fs rcll int3 addb or push xchg in cmpl lock push adc sub push or push push push (bad) je inc cmp push dec dec xchg addl ja push js add xlat int3 pop cmp push adc xor lret aaa mov adc mov mov mov xchg loopne add inc rcrl jle aad mov sbb push fdivs je mov jmp cmp lds stos cld xchg inc cmp sbb pushl inc sbb push jg andl sub ret xor adc mov xor mov (bad) inc xchg push sbb xor cld cmpsb mov jl stos jne sbb sub andl push movsl andl push cmpsl xor int3 mov add push je and icebp (bad) push jle lea leave cmp js cmpl cmp mov sbb jl lea pop in push sbbb mov push sbb or roll pop dec add jne mov cmp sbb imul jl movsl xor cmp xor add cmp jne add cmp mov sbb aam mov fmull xlat arpl mov adc pop ljmp add sub xor xor gs push push sbb int mov adc push sbb sub js pop aam cld jnp inc leave ret xor sub inc hlt mov adc xlat std movsl lds pop push push in inc or cmp int mov push adc and push add roll add das xor push ret mov mov pop mov inc mov (bad) out stos or pop mov push sub push lock push add push adc mov add push sar mov mov ljmp rorb dec or adc jne mov sbb or je cmp repz (bad) mov cmp pop icebp int3 push dec mov sub mov outsl dec cmp aas sub push icebp mov insl bound cld divb addr16 pop call mov xchg and push cmp push push jp jb shr ret push and je (bad) in xlat adc aaa cmp loop icebp (bad) jl jl cltd mov push inc adc aad xor push test inc pop movsb or sbb or das and lock xchg push dec or fimul mov sbb mov (bad) pop mov mov xor cld adc orb jo nop inc pushf out inc adc adc pop lahf pusha adc cmp pop or jbe or stos pop inc aaa push (bad) add mov call or mov fbstp mov cld mov add add aas cmp or jns rcll adc pop adc jo jno push iret cmpl lahf loope fs addl ror dec repnz xchg push imul pop jp mov pop lea sti aas mov dec jns xor sub jnp movsb dec and mov pop fistl stos add dec jns stos push fcoml add mov adc ret mov mov (bad) ljmp add cli push mov icebp push iret out jae or in mov push test scas jmp in call adc fcoml and mov (bad) mov inc iret pop scas pop test sbbb xor mov jo ret sarl fsubrs adc pop mov mov mov in inc rcll dec repnz (bad) pop jmp (bad) icebp cmpsb rcrb inc inc cwtl test fildl jo loopne subb xor push push pop sub addb push test call aaa mull pop fadds jns or sub add sub movsb push push js mov fild adc xor add push push sbb sarb jne pop divb mov pop jmp jbe orb pop lock jne dec orb add mov pop clc push je cmpsb jne add sbb fsubrp subl push push push or hlt mov jmp lea inc sti in inc dec cmp sbbl jnp scas and push imul mov sbb loopne mov dec jnp mov mov (bad) xor or roll bnd inc mov rolb cmp js les pop pop das cmp add jo fistl add outsb js push pop mov or or les sub adc jbe adc sbb pushaw mov and (bad) popf and sub mov cmp jle or xchg clc stos lods add mov jo xor sub push cs pop sbb mov xchg and add inc jl fsubrs add leave insb fsubrs fidivr or add push and loope sub sub and inc dec inc loopne mov lock add mulb mov inc jp push test xchg jae push aam jo popa scas cwtl test (bad) or add jge jno or cmp pop and mov adc outsl movsl out shrb sub mov int3 outsb inc mov mov mov and rolb mov ds int3 loopne fbstp idiv sbb adc (bad) jae push mov push push fs out inc or pop arpl cmp fstps adc sbb xor rcl pop sub addb andb push add and mov xor adcb add int3 adc addr16 or mov (bad) clc xor inc (bad) (bad) jmp add imul add imull ret lcall das pop xor imulb add inc mov add rcrb mov pushl sub sub jne and pop jbe mov insb and push push dec test inc aaa call inc ret push mov push push movsb scas in inc pop jmp dec mov out sub mov pop dec pop cmp mov jne pop enter pop test mov add insb sti jge sti add orl mov jnp pop incl adc pop orl push cmpsb and cmc imul fiadd sbb hlt adc mov shll mov jne stos cli add cmp xchg mov pop xor stc sti test jle enter sub pusha sahf adc and cmpsb cmp xchg push and or sbb push hlt in iret sbb je and cmp std add jne mov hlt jle pop pop movzbl inc jmp repz sbb leave inc cmp jle add int and cvtpi2ps inc adc jge sarl shrb mov mov inc fimul mov mov insl xorl add sbb xor adc scas add or cmp add inc add cmp add xor push xlat maxps add fsubl outsl dec push xor cmp mov add jg js ret sbb push notl dec push decl and test jne dec cmp jl sbb jbe sbb cmp bound mov mov mov (bad) (bad) decl ret jne cmp jne cmp jb cmp jbe cmp push sahf jbe cmp faddp iret aas (bad) jbe cmp clc jbe add cmpsb cwtl pop dec or or or and ret je and cmpsb inc cwtl mov (bad) mov or push rcrb repnz in sbb push ds and sbb sbb iret inc js in pop or mov andl mov dec scas hlt jne jbe xchg imul je add lcall sub in sbb add jmp pop or (bad) ja jne arpl je call and ja push pop lret loopne push add ja rcrb mov shlb push clc pop sbb nop dec adc adc fsubrs js or fwait and fstl add xor sti (bad) xor sub add add insl repz mov or pop cmp mov or sbb push push push cmpsb loopne jne ret lds adc mov js dec or or adc sub sub cmc in or mov jl test mov xchg push sub test (bad) js and sbb lret mov sub sbb mov xor ret mov xor dec add fsubrs push mov push fisubl mov repnz mov (bad) (bad) sbb push imul aad (bad) push jg insb mov pop cld mov jl jle mov push or sarb cmp inc add jo imul push add push jnp aaa xchg cmp jno mov cmp mov lea in sub fdivr fistl popa sbb int shl test sbb xchg pop add ljmp inc fisttpll xchg adc andl aam sub push adc dec mov push lea in add leave negb data16 add xor adc out dec jne sub inc push fdivrl out fld fucomp fcomip into hlt jmp test jp fstp fld1 fxch (bad) jns jns mov scas jb fildl outsb (bad) fmul fcomp jmp ret sbb shrl adc lea add sbb loope idivb clc push adc pop mov jmp incl fstp pop test lret fcompp jmp je xor add sbb mov (bad) fstp stos push lds in ret dec jnp add dec bnd dec in insb adc xchg jg push test jb test pop xchg push cmp add loope adc mov fs xchg and add js bound push and fmull sbb sbb inc add sub jo div imul adc add loopne fmull aaa movsl ret push faddl imul and pop inc clc or add or int3 cmpl jp je fiaddl cs sub or cli cwtl and push loope pop icebp cmp fildll daa clc ja add inc or jo call pop add mov (bad) xor fcmovnbe xor andl mov mov cld push push add or cmp xchg cli mov and fldl cwtl mov xor loopne cmc pop sbb or add adc js xlat push clc jle or push add cmp add ret mov inc mov nop loope inc aaa fildl (bad) scas or or add xor xor jle lea loop hlt mul (bad) shlb cwtl ss sub cmpsl xlat jge mov call pop xor sbb jne clc int3 push push sbb or sarb (bad) enter sub cmp inc lock jl pop mov inc jae add dec pop add test dec or in bound xor rcl jbe push or add jl lcall jp rcll adc add cmp aad mov and cmpb push adc xor clc pop in sbb es loopne jecxz pop adcl pop orl pop sbb test xor mov ret sbb in sub rorl fnsave aam sbb cs mov push lea jmp ljmp push or pop pop jne jmp adcl mov into fcoml pop mov and xor sub std subl dec je add dec jne mov pop jmp mov pop rclb inc xor hlt adc in shll push inc loopne jmp loope mov push loopne pop sbb add outsb push push mov and ficomp pop pop jmp add add adc sbb addr16 sbb neg xor and sbb and inc mov fisttpl or loopne cmp pop ss jne push js je loop data16 subb cli push cmp popa notl sbb pop jne xchg inc dec mov jg setne pop inc mov adc dec cld mov push mov lds add adc je lret or (bad) xchg push out jl ds adc rorl in movsl xchg push dec lahf daa (bad) adc pop dec aad ja outsl xor je divb adc test or (bad) arpl push adc sti inc loopne rol sub fcmovb (bad) enter mov mov inc pushf fisubl je aaa sbb je (bad) jle and adc or mov mov xlat mov test dec rclb push cli add dec push aad hlt push cli jl (bad) in inc test push and mov lods cmp sbb movsl clc loopne push rcrl push js jnp cld mov adcl push dec push (bad) xchg mov add (bad) jb push imul sbb (bad) dec fisubrl or sbb pop lea loopne xchg jae sti sub imul mov loopne insl xchg push (bad) add loope ret addr16 repnz loopne push inc pop pop (bad) jo push mov or sub or loopne mov mov dec (bad) add fstp jbe lods cmp adc pop adc dec sbb (bad) mov das pop pop pop leave ret pshufw js push push or adc adcb add push push rolb cmp js fiaddl andl mov xorl adc sub and imul push (bad) inc bound pop mov iret and test pop or adc daa xchg cs mov out add cmp int3 sbb cli mov ficoml xchg cmp je jle jbe out ret mov dec stc xchg push cmp jne jp test test pop cmp rorb out xlat loope loopne movl decl fucom loopne orl xor jmp outsl inc rcrl sti test je dec mov sub rol out in arpl arpl push push jbe rolb jle mov es dec pusha lcall cmp mov add xor pop dec pop jo test and scas inc out fldt sub sbb pop sub push sti push cmpl push pusha and xchg or pop xor add mov cmp insb xchg pop sbb fcmove or test rorb sub lods mov test push push push gs mov inc lea push or dec push das pop cmp push mov push sar add add push pop adc out dec and push pop xor xchg mov sub push cmp int mov lret sbb jbe je call cwtl shrb mov into push ret jle aam in popa adc aad cmp (bad) jp sub cmp call add add loop outsb clc mov jne jo push into xor cli dec jne int movsl dec adc xchg jbe add push or dec aam pop fsub sub add lds push adc dec enter pop dec loope mov sub push movb (bad) fdivrs pushf xor adc enter xor outsl shrb xchg js cwtl mov cmp pop inc sub shll push pusha jle cmp in daa push lret popf outsb rclb dec add mov (bad) (bad) xor push push mov sbb fcoml xor data16 fchs sti xor xor cmp fiadd push sbb sbb mov dec sbb push sbb dec adc jnp ret inc or in add je dec in ret mov lds xorb push test or ret std das mov enter movb iret aam pop or repz orl outsb pusha add je rcrb mov push int xor and mov enter fldcw fcmovnu inc fldl sub movl (bad) add int3 add mov xor clc sahf mov cs or mov xor ror fstpt dec mov loope clc add mov sti in je add lea jae addl sbb inc mov add popa sti add enter sti popf or push xor mov pop mov mov movsb cmpsb test icebp movsb push dec inc fsubl mov cmp cli arpl inc mov movsb lods add push mov mov insb je lea push push dec in in out arpl mov xor mov jbe mov cld cmp jbe jb dec inc sahf cmp mov lcall jnp xor loope adc mov cmp mov imul ljmp jl mov push add pop pop fcmovu push out add mov dec mov les mov (bad) adc sub int3 adc push sub xor xor fisttpl sub xor rclb adc je outsl push mov sub sub pop mov xlat jmp and mov mov ss ret push sub xor mov cmp push les (bad) in sbb nop lret mov inc sub push push pop push ss enter mov lock sbb test in add imul les push push push sbb sbb dec out or lock add ja bound inc add cmpl dec or inc out inc scas call xor push (bad) sbb mov add sub sbb mov push jno and xchg jbe add adc mov inc aas hlt lock add sub jmp test lret movsl mov add dec or cmp jne mov (bad) mov adc add mov sar inc shl push push jl inc or add pusha cmp jg mov sti dec cmp jne mov mov push adc insl mov jne or jmp xor addl xor push mov push icebp push inc add or add inc dec cmp push or push or sti jl cmp add pop or add pop cmp cmp xor and cmp mov add fdivrl sbb or mov adc pop mov ljmp loope fbstp adc clc pop mov xor fbld push push add js out add ficompl push sbb cmp (bad) notl pusha test push (bad) mov lret pop xchg enter lods ret movsb lock cmp jle lea (bad) loopne bound xor (bad) cmp loop jbe add or mov loopne mov imul mov pop lea les cld jne out pop pop fwait test pop or out mov sub push or mov jbe or inc push sti ja adc dec push and ljmp mov mov xor lret imul sbb jo popa sub and out mov or (bad) xor dec insb stos add out movl push push mov push inc mov mov adc test mov push push rolb cmp cld mov popa lea and aas hlt push mov mov sub push mov (bad) push arpl inc sarl loope das sub add add cmp fcmovnu imul cmp cmpps and push mov dec adc sub push sar push popf lds popa dec mov shl fsubs inc push sahf call adc (bad) adc adc lea cmp je adc clc lea adc xchg push adc mov mov cmp jbe lcall sub cmp mov jmp mov je mov rcrl es mov add pop add dec hlt subl or push hlt jl cmp lea sbb je ret dec clc in mov dec jb out cmp jg (bad) jg clc add sbb popl adc push subl aaa adc mov (bad) add adc cmp and leave mov or lods inc push mov jmp xor sbb insb mov adc std movsb push aad adc aad scas loopne dec inc mov mov mov test mov cmp or in rorb and adc (bad) je jb push xchg xor js notl cmp cmp or add push arpl jge sbb (bad) mov or adc idivb adc push and out lock add xor cld or cmp jae or lock mov push popf rcrl cs cmp aas push xor push sbb lcall xchg mov xchg inc cmp and push push aam sub mov jl mov push jne xor jne (bad) pop add addr16 icebp cmp sub jmp pop add jne jle test jmp jns repnz out dec lret pop sub adc or lea ficompl adc aas mov je or jle mov push outsl ss pop inc or or mov cmp fwait xor pop aad ss pop cld stos mov xor inc xchg jo jge mov cmp roll adc jae or je in dec sub out xchg je adc xlat cmp je add add mov jmp mov out jo add dec (bad) cli pop icebp ds mov scas shll push aaa je push jl inc movsb aaa (bad) lret add mov lds and dec inc rclb dec jl in orb es and call pusha pop push and pusha or pop fildl add loopne cmp shrl decb add push jmp sub jmp (bad) dec add add (bad) cmp pusha loope out fldl ret fs xchg loop dec dec sti loopne pusha loopne pop rolb xchg push mov scas xchg hlt cmc cld xchg dec rclb cmp leave add or out xor pop into push xchg data16 add mov adc sbb mov push push frstor out loop push push cmp push push mov mull outsb xchg cmp sub sbb cwtl sbb cmpsl sbb insb into push adc js or or jmp das push inc loop add sbb arpl and mov dec call shll movsl or clc jge popf aaa out xor sbb xchg and (bad) xor aaa adc dec incl push add or push jmp jg (bad) jo icebp inc es je (bad) jbe push pop mov in (bad) in cmp sbb nop icebp adc lea mov push adcb or xor mov ds inc popa dec hlt cmp jb pop sahf les push loope nop push mov and inc sbb ss push ds pop xchg rorb inc cmp cmp push xor (bad) push dec je cmp sbb add fstps push jmp out dec sub and clc arpl lea pop addr16 out movsl dec mov jo mov pop pop ds in mov push inc push sbb jae imul fdivl enter jne pop push push push sbb push push jo ljmp or sbb mov jge rcll jb daa jecxz pop xchg xchg dec xchg and mov mov or push inc pop pop test (bad) ss push xor or repz cmp jne inc pop sbb push clc cmp inc mov adc outsb add cmp mov adc call cmp sbb mov jbe jmp sub adc or mov lea push mov sbb lea mov push or dec lods pop pop pop ret pop dec push pop add jb pop adc xor or das jae adc in cld cs loop lret sbb xor daa or ljmp xchg ja push ja pop jle jecxz ret jae in gs or lea stos sbb jbe mov mov or and or inc sbbw lock cmp add add cmp pop dec ret xchg or lock or call nopl mov sbb rorb sbb clc je or inc inc push xor adc icebp sbb jmp add sbb pop jecxz insb inc cmpsl and loope div jo loope es mov or clc mov adc push jne aas sub das inc sbb cmp dec inc (bad) xchg and shrl adc incb lock je (bad) mov jmp push nop xchg add cwtl and imul mov outsb lock add jb push push hlt mov ljmp out mov mov ret insl insb (bad) hlt punpckhdq lods adc scas stos sbb fs add imul inc ffree sbb int3 xor add mov shrb cmc adc loop mov or jge pop cmp mov jb ffreep shll clc clc push (bad) cld iret insl aaa mov je add fdivs sahf mov jne inc push push push sbb iret mov jmp xchg inc dec lock mov sbb enter add jecxz add add sub fild cs outsb jl xchg rolb je cmp add mov lds mov pop push sbb mov xchg shlb and je push nop fdivs xor mov pop cs dec in add in (bad) loopne jb pop aam fsubs cmp push shr mov mov fcomps rclb xchg jb ss mov xor push push sub inc xchg cmp fstl add or test sbb ds data16 add (bad) adc call (bad) add fistpl popf sbb sub lret jp pusha cmpsl push nop mov push push sub jmp (bad) add add jno adc clc or movzbl or movsl push test cli sub add clc or and cmp mov xor add mov outsb (bad) pop pop out aaa pusha test (bad) push push add dec bound jno cmp adcl add test push sub cmpl jbe or mov inc mov ds and and cmp in cmp es push clc push jl add mov push mov sub cmp je cmp loop jne mov jmp sub pop cmp jne mov or leave pop hlt subl add (bad) push (bad) incl mov pop cwtl mov and inc mov and jo rep dec ret or or xor push in mov mov mov jge jo inc add adc loope mov mov jmp dec pop fdivr imul ret mov push (bad) dec loopne in cmpsl or adc cmp push push lahf cmp jne xchg fistl jnp push inc push inc insb and dec mov jb cld inc mov sbb insl (bad) sbb cmp pusha sbb std xchg dec clc jne mov lock jmp dec xchg cli sub test sysret sub repnz cli push add incb jmp push push or loope mov lsl repnz xlat test inc add or mov pushf movsl inc lods sub orb jnp ret push pop hlt and popa sbb cmc xchg adcb push fmuls (bad) lds sbb fldl inc or cmp dec pushl push nop xchg mov xchg mov sti xorb sti cmpb mov sbb fwait je (bad) aaa dec dec loope jbe sbb ret cs sbb push jnp push popa jp xor hlt sbb adc sbb adc sub xor pop aaa or push insl sbb clc stos pop push stos pop mov cld xor dec push push clc stos mov mov inc push sbb nop dec sar jmp jg outsl add push or sub cmp jl mov and rorl jno sub loope xchg loope xchg (bad) jae mov pop (bad) and daa push and (bad) xor popf fs je (bad) andw or in clc clc sub mov pushf mov or pop loope lods sbb mov and push push pop pop xchg lcall incl add or mov inc jo repnz sbb adc (bad) dec cmp mov mov sbb push add movsl jmp outsb fldl add mov iret stos clc cltd push pop mull enter fs push mov and mov xor or cmp add pushf and std pop mov sti or dec mov cmpl (bad) iret xor dec inc dec push sub aaa inc push push aam (bad) out incl insb xchg icebp push push jg jmp dec or ja and xor pop mov xchg sub add mov mov cmc nop in test cltd in movsb test ljmp lods mov push push lods mov stc leave xchg hlt hlt sub lods ret jbe or xor inc sti mov lock (bad) dec pop add stos sti cmp ja or push add mov push loope repnz rclb (bad) xor and cmp xor lock loope leave lock xchg cmp je pop pop pop sub ret add push add pop jne mov cmp or push adc pushw (bad) (bad) int3 orl dec xchg push jl jmp cmpl cmp xlat xor sub ds push push fs sahf or mov mov rol push mov mov push push andl gs ja sbb jae mov xchg sub dec (bad) (bad) xlat (bad) xor and xor scas test out push hlt xor and call or aad pop lock imul push rcrb sbb push cld cmc iret sbbb scas pop or push xchg je and (bad) mov push inc mov mov push add lret sbb addr16 or add jl or pop mov inc fsts adcl mov push inc xchg repz sbb push stos lds cmp or xchg into js nop pop repnz pmulhuw cmc and je jbe sub cld mov imul jae add sbb cs lret in adc (bad) out mov dec rcll adc push inc jle cmpsl add and jb push or add fs mov add mov rcll mov (bad) lea hlt in sub and cmpl lahf push sub aad sub adc push xchg into add inc mov hlt sub mov adc inc int3 and clc push fildl adc ret test dec test pop and fwait repnz push dec or add adc (bad) jne push inc push inc cmpsb bsr test jne mov (bad) cmc loope add mov jmp orl cmp cli jno jp in inc jmp add mov pop sbb aaa jge dec adc outsl push negb or mov jg paddsw add and or xor adc push and mov push dec (bad) neg cltd movsb fwait (bad) aas das jo je mov mov jb push aaa sub add cmp jecxz cmp cmc insb xor stos ds test popa imul mov cmpl push inc cmp jne adc insl push dec cmp loope push std mov xorb stos inc (bad) push add xor inc and add cmp outsl outsb add clc test aas arpl push addb hlt and pop stos pop add pop add xchg mov pop add add xor push pop add add push push sbb pop or sbb pop inc (bad) or push push jle,pn adc mov adc adc mov test adc jb push leave lcall push or pop ret inc insb ret pop maxps xor jge jecxz add aam jae xchg mov push wrmsr pop out dec jecxz cmp adc dec loopne mov jle test jmp (bad) mov add push push sti sub push movb mov aaa dec out dec xchg int3 push sub add inc fnstcw jno adc mov fistpl pusha fildl bound push mov xchg cmp mov add hlt cmp neg inc mov cmpl sbb jbe inc mov sbb aaa xor pop jecxz out inc in inc (bad) mov rol pop and push mov fadd jmp push and movsb insl cmp aaa test dec out rclb popa add adc adc in push mov pushf sbb jmp outsb dec in dec push and loope clc and inc repz inc sub inc jmp in or inc sbb dec mov add pop mov jmp adc add cli add mov adc rcrb lahf sbb jmp add test sub mov mov in mov rorb mov lret mov (bad) jge xor insb (bad) mov test gs sbb pushf imul add call rorb movsb mov cmp jge xchg push mov outsl push push adc jl push push scas or inc dec push lcall or push push clc fwait or and xlat jmp cmp lcall inc add add xor xor js or sbb adc push push xor push mov add lahf sub pop mov jmp adc adc pop lea xchg cmp jle xorl cmp xor mov mov ljmp xchg jp pop dec adc out imul and aaa jmp pop or addl adc cltd ss jno rclb sub fidivrl xchg jmp fisttp cwtl cmp sub mov je or or lret pop hlt ja pop (bad) jns (bad) adc push leave cwtl add or xor pop sbb lcall mov and push test sbbb pop pusha movsb scas mov mov mov icebp adc push jno (bad) ds dec imul fidiv push xchg sbb (bad) mulb xchg pop repz mov and xor push ljmp hlt decb xchg adc mov xor and cmp sbb idiv imul and int3 inc hlt je mov push adc dec outsl mov pop push (bad) mov inc push sub pop and dec loopne xor test push fwait ljmp or pop imul sahf and pop ds add mov nop sub push jo push movsb or jnp inc dec push hlt mov push dec or sub dec or sub push ss xchg push jno jp sbb out mov test dec es pop inc ret or repnz je jge and ret rcrb pop and int3 mov pop and or sbb xchg addr16 xchg xchg inc sbb mov sub loop inc pop lock sub mov pop and (bad) movsb outsl mov cmpsb outsl cmp mov dec daa dec inc shrb adc arpl pop call aam inc xchg outsl fmul cmp fldcw mov add jmp scas or fmul mov test movsb push add andl cld call cmp sbb or sub mov (bad) sti dec push or inc fdivrs inc movsl loop mov cltd cmc cmp cmpl or (bad) movsb call mov push xchg add or mov mov mov sbb outsb nop add adc loopne dec and mov fnop fwait test xor add xor sbb pop adc jmp movsbw (bad) sahf shl insb mov jl (bad) fnsave lea push mov aas xchg fisttp push nop test xchg inc sub dec jae sahf call fnop insl lock es iret sbb pop push shl add in dec sbb in xor mov and lcall ret push or mov hlt push fistpl mov fisubl jne hlt cmp ja (bad) mov jns pop jle sub add or into mov je inc cmp and cmpw cmpsb inc inc push add jmp add xchg mov xor fwait imul enter pushl add or push (bad) mov fs sub jmp sub lock ja lret push pop xchg fs xchg cmp or push es push sahf lea pop and sub ret hlt (bad) push cli mov (bad) js lods in cmp (bad) cli ret jecxz incl xchg mov cmpl lea (bad) jne das sbb adc aam fsubrl sbb and push mov clc pushf call push xor add pop pop jns xor fadds les les flds pop jle dec ss mov xchg test bound mov jae inc data16 rorb dec cmp out dec push les sub push out xor inc lret cs sahf dec sbb jnp xor add popf (bad) push movsl add call inc fistpl and xor mov xchg (bad) mov sub incb data16 inc es jno loopne fstpl mov and fldl2e loope push cmp fwait inc fnop mov xor lods push mov inc and push sub lods movl cmp xchg (bad) push sti popl mov loopne push lea mov cs fimul lods mov or add fiaddl pop cld mov adc (bad) daa sarb ret xor into je into ss push mov sti pop mov call add rclb pop sahf imul mov inc adc in stos lods sti push in jb es aas loopne jl pop dec imul out or rclb cmpsl push mov (bad) sub jo dec call lock std ss test jbe aad push es push mov push mov inc jno jnp fcompl inc shr les mov add jbe movsb pop jne adc adc inc inc and shr cmp mov sub jmp add aam and mov shrb ror xor push cmp pop (bad) or aam dec inc in xor push gs add cmp xor gs mov std sbb cmp jne jmp mov fsubs pop sub aam (bad) aaa push pop adc test adc and fs scas (bad) mov call dec (bad) xchg push es test std cmp std gs inc loopne sahf repz popf push push or jne insl mov and pusha mov cmp inc jle (bad) cmp mov xor and rorb mulb adc jle sbb sub xor out arpl push mov push or (bad) adc jl mov push inc lea lods enter push jbe rcl sbb mov add cmp sbbl sub push and loopne sbb icebp nop addb loopne push sbb cli rcrl push call pushl leave rep cmp fadds lea ljmp sub bound scas shrl mov add sarb add loopne test mov pop incb jl inc push les shlb sbb test enter lods push xchg and leave and movsb or nop fsubrs call xor mov cmpsb adc adc (bad) adc rorl sbb push mov xlat mov sbb mov cmp iret cmp or outsb jo xor je push pop pop pop mov jbe push push inc push cltd fs repz fmuls cmp pop mov subl jmp xor shrb push cmpsb push cli sub cmp out inc sti push je mov dec outsl sbbb sub mov rorb ret and outsb or mull dec dec adc test mov push sbb inc add or push pop cmp pop shlb pop xor dec push xchg add jo sub jl out or add or adc push sbb sub aas dec sbb dec mov mov es les adc jo push sbb mov xchg lock sti jb cwtl xor data16 jne inc pop imulb js push push xor push (bad) test add mov push pop jg or inc or add mov pop and scas sbb pop xlat sbb orl xor dec xor test sub push cmp mov or and xchg fisub add sub inc rorl jbe pusha sti cmpl and inc inc sbb cmp negb add sub pop cmp sub loope stos sbb std fdivrs mov lods fs pop jmp ss dec inc hlt loope (bad) sub jne sbb push mov cld addr16 jl jmp mov pop add add lock add sbb add loope iret jns xchg jne or cs (bad) popf (bad) rorb test test jl out mov adc jmp mov repnz dec push or lret adc mov flds loop cmp add adc dec and xchg jb shlb jne jne cld rorl ja cmp cmp mov adc insb xor mov jmp adc je je xchg mov jecxz cmp adc roll push inc inc pusha jne sbb push stos scas add jl cmp add push add cs xchg cmp sbb std cmp dec push pop mov mov mov fmull cmp add insl (bad) (bad) cmp jo cmp sub inc lret pusha add les push cli inc inc push push pushf inc push jle fidivrl push mov gs outsl xchg add arpl aad dec cld pusha mov and and test mov enter fs mov pop push cmp and and push lds add mov push pushf loop popa aaa lea and push imul lcall loopne aad mov dec lock push or xor mov dec mov push push outsl mov ret mov lods jae push add cwtl mov rolb xchg pop pushf cmp cltd inc xorl cs add les pusha lock add clc xor sub lcall pop movb xor inc mov sbb je cmpl pop aas aad enter cltd jmp mov jbe adcl cmp jmp fnop lea add testl loop jo jbe (bad) mov jo pusha ret test cld fisttpl sbb lret push add push push out or cld mov pushf shr cmp jb js add push xchg rclb xor pop adc aam fnstenv (bad) xor dec mov push add cmpsb cmc add call mov inc int cli jns jbe and insl push add jecxz fdivr push cmp inc push adc lea negl ss mov mov mov (bad) lock push std push cmpsl mov cmp pop xchg sub add (bad) sbb ds dec leave and icebp mov mov out mov es int3 mov add hlt fwait inc sub fdivrl and mov (bad) cwtl cmpsl jo jl popl mov int3 add out fmul add hlt pop call pop push mov leave push mov adcl std call das pushl mov mov imul jmp pop pop xor dec mov jo jae jl or test std push mov mov (bad) fisttp mov and dec adc inc jne mov imul cmpsl std std in and or push jmp daa imul sub roll or sub xchg das sbb roll cltd add daa jne orps sbb xor inc and cld stos sub and push and js add inc push adc loopne loope inc add roll ds xchg fcoml add sbb fs je cmpl xor scas add push fs mov in mov mov push ret mov mov inc xchg mov in lret pop xor jb in pop js sbbb jl nop pop loopne lret mov add xchg lret xlat test rorl pop test lret popf js addb sbb xor push add (bad) push push push out loopne loopne pop call add das nop push inc pop mov scas sti ss or addb lahf aam add dec sbb push movsl xor and add inc mov adc lret in fstps sti dec pop je cmp test inc stc loop add cmp and jp pop idivb rclb cli jge aam fnstenv add adc test xor pusha ret jbe and jge rcrb loope add and push insb call int3 cmp jne mov or lock adc aad mov lret cmp dec add movzwl cmp push ds insl movsl in pop jmp sbb push in test jo pop or push daa mov ret jp mov mov add jno xor in or push mov pop push or push sub sbb dec movsl push test mov adc adc inc adc add les subl add add lea add lret adc jl sub arpl repz stos push or movsl push or or push push test add roll add add ret dec adc push out loope mov loope mov or mov mov cmp push add bound cmp lock push (bad) lock sub push or loope xchg push lret adc push fist and sub imul ss orl sub add push mov push mov in mov push sub cmp push adc cmp ja test je adc or xor testl orl ljmp ss enter dec lock inc xchg fdivrs psraw call inc loop xor mov inc lods roll mov xchg push mov or jmp je test sub xor sti add jp adc push adc stos cmp push dec add scas lods pop add test xchg mov lods fmuls dec frstor lret pop push pop lods add mov fisubrl jl add mov xchg aam adc mov mov (bad) adc imul je mov adc jecxz adc psrad outsl xchg lock (bad) test loope adc inc popl push pop or sti iret jecxz adc push add lods insb jge jmp or mov push ja das es adc sub std inc les or add add stos sbb add pop inc pop addl add pop fwait mov pop rclb fldenv (bad) adc xor cmp loopne dec mov add dec push push fs adcb sbb daa (bad) sbb loopne sbb iret ljmp dec cmp sub sub nop fidivl adc insl aam into test adc jno or push clc xchg sbb cld push or xor push ja aaa inc lahf cmp test or jne sub mov and adc setne insb xor (bad) clc push jge push pop lea jp mov divl jns mov (bad) loopne jne test jne and rcr std cld push pop cmp pop inc mov mov cmp cwtl jne mov insb jne sub jmp stc push rdmsr push cld dec push sarb bound add ret push push js mov cli dec cs pop push adc jge xor test cli dec fmull sub mov mov test cmpsb sub dec or lea je mov ljmp mov adc jnp jae lea bound lea push das test inc cmp inc jb call insl test cmpl mov jmp pop mov sbb push out scas pop shlb mov sahf cmp sub add add or and sub pusha jle sub dec adc cmpsb adc jne stc dec fist mov adc shrb push push sbb inc xor inc mov cmp inc sahf xlat gs loope pop sahf cmp or mov and push jle lret push mov cmp add and or xor xlat or sub sbb pop sbb lret xchg jl hlt fdivr push inc clc jg push pop mov and or sbbb (bad) hlt sbb es rcrb jne push lock (bad) (bad) jbe add sub ljmp dec addl adc es les das pushf sbb xor ja xchg jmp lahf out jmp or push mov lods cmp pop push test push aad push hlt sub inc test mov adc pop pusha push pop ror adc push push xlat int3 rorb push jnp andl push and pushf and fldl xor push sbb and inc fmuls sub jbe lahf mov inc mov jb sti test cmp test movsl or jne andl dec test and xchg and and daa and adc and mov xor rorl inc pop in or (bad) out push mov (bad) pop insb xor mov fdivl popl (bad) sbb sbb push xchg xchg mov push xor and (bad) cmpsl pminsw into mov lret out inc sar jne sbb test push cmc arpl add mov add xchg daa adc rorb and negl fadds push or jecxz lock jae popa push xorb scas popf add xor out in mov pop lea jo in je push das and mov mov or ficoml add pop push xadd lock dec mov push mov sti shr dec dec test or lahf xchg ret sbb outsl sbb add cwtl and lds lea push add lahf sbb inc lds or fnstenv lea and imul push adcl mov pusha inc pop sub add mov add adcl mov cmp mov push bound jg push cmpsl and adc test pop mov jo push adc cmp aaa push movd test mov add adc cmpsb loope loope out adc push adc cmp push pxor (bad) and (bad) cwtl cwtl cwtl sbb scas push add dec pop pop insl sti xchg pop xor mov mov jno add and and add push sbb jmp pop jb jno adc int3 add (bad) lods sbb jmp das add push xor pusha fwait jg int loop pop loopne jnp jae or sbb dec jge pushl aad adc add or loop jbe add jnp nop mov (bad) cmp je push push jle inc add and push negb mov lcall or xor lock sbb mov je aaa sbb push dec sub addr16 inc xor dec add mov imul (bad) ret stos testb mul adc std sub inc and arpl loopne ja mov pop lds add mov shrl xchg xor je mov ja jle in push add dec test or shlb mov lea sbb add mov std pop cmp add shlb imul enter xor mov sbb dec dec jne sbb or jmp mov test add aaa jbe pop add sbb fs xchg or add pop ret cld cmp and or push std inc push jp mov pop push std add mov orl add pop ds sub rcrl outsb or loopne daa inc lods mov push jge and and jle mov (bad) push daa sbb pop push repz scas mov stc mov mov cmpsl fist push daa jbe mov push daa inc fildll add xchg push push mov dec dec inc sub push nop imul cmpl adc push push jmp mov adc mov cs lock (bad) or xor xchg inc fsubrs pop dec pop adc adc stos jno dec push adc push stos lds xchg shr outsb fidivrl inc pusha aaa xchg adc stos lahf shl add rol sub pop lods push enter jns mov jne pop sub cmpsl jecxz xor xchg inc je enter fld cmp xor cmp sahf jns sub add cmp cltd sub fmull (bad) (bad) lock push pop xchg xchg ret mov das mov addr16 (bad) or inc add push loope js ret push cmc cmp xchg (bad) dec and add popf add adc xchg pop aam lock roll sub or enter test push push push push stos and shrb fmulp lds jmp jle (bad) sub (bad) and mov add or pop jg or adc popa sbb hlt push loopne enter incb and frstor pop push data16 mov and cld push xchg ret mov pop (bad) sbb add in jge add add add add push fisubr int3 adc push push push jmp (bad) lret or orl jbe nop lea add xchg and xor cmp sarb mov pop sub jge add pop icebp sbb push inc jmp je fimull sub daa fldl mov sbb cmp das and daa or mov lods aam push xchg pop mov pop sbb test and (bad) insb or dec cld lock adc scas xor pop mov jo ja xchg mov fldenv nop enter iret andb cmp sbb push in push adc sbb xchg push dec mov sbb sahf scas inc ret ret rol movb sub cli jle sbb rolb cs cs push les pusha cld sbb adc (bad) pop cli loopne fdivl mov loopne loope cld enter cli call adc xchg push adc roll inc cmp push (bad) xor pop push xor and (bad) (bad) call push or push xchg mov xchg iret cwtl add int jne and sarl adc (bad) push pop push jp aas jle push sbb iret test or jne push rcll daa pusha cmp push push loope repnz fwait add addl adc xor daa inc cmp mov or push xor lret lcall push (bad) (bad) mov xchg mov shlb push inc push cmp aas subb in rorl (bad) leave cmp pop adc inc pop lods subl punpcklwd inc adc aaa mov (bad) rcll je jl xchg pusha sub or stc push add gs or fcoms adc adc add sub inc sbbb push cmp jl mov (bad) hlt pop push lea push push sub and repnz adc dec push cmp lcall frstor cs and inc rol and das arpl cwtl in and xor add sbbb out fidiv push cmp (bad) sbb push mov inc xor ror nop add ss push push aas sub (bad) and and add adc pop (bad) xchg pop add push cmp pop push push mov sahf pushf in pop inc jl or xor push movsb lods out and pop scas pop push mov fadds popf mov inc xor add mov cmp je (bad) ret pop push adc add cmp ljmp notb out mov inc sbb inc add fdivrl add insb cmpsl mov push add mov je dec and leave je repnz hlt add ffree or mov xor push push call sbb movsl xor int3 fldcw dec (bad) lods js movl or test push ret ficompl cmp lods mov mov pop test mov fnstsw lods sbb (bad) ja add jle sub jle push inc and sbb xor insb add cmp and jns push (bad) loopne jl js mov iret mov jge pusha neg movl lds jl stc movq mov and loopne dec adc fldl lcall rclb rolb push (bad) mov xor jle and jp jne mov fstpl pop pushf adc mov sub xor sub ss insl adc jp pcmpeqw push inc arpl add push dec jne out shr pop or or ds inc mov add lock nop pop add pop setne dec mov push xor jg mov xchg scas push or push add jp clc dec insb cmpsl add out sbb inc mov push adc or imul sbb cmovb mov or pop fs imulb mov mov shr rorl adc sbb push lcall jnp out (bad) mov or mov jo mov push and mov jns fadds shl add sbb (bad) je movl and push int3 jge mov push dec cmp mov aad cld nop imul add inc add and fistpl inc add and push push (bad) pushf leave cmp dec or popa add or adc mov xchg sub or leave mov insb pusha fcmovnb xchg mov popa fisubl push leave hlt add imul ja dec inc mov pop or dec xlat push subl jae and leave and or ret or gs mov jge dec pusha mov gs jb push insl ret leave lret sbb add leave adc and sub ret inc add addr16 xor mov sbb push cmp outsl mov xchg dec (bad) mov lret lods loope sub xchg add rclb add sbb pusha cmp xor fimull xor inc pop mov or ret mov or pop mov mov inc (bad) jmp lods aam and cmp mov dec ds push xor jl movsl fisub scas mov and jns lret push cs mov sbb or cmp xchg fdivrs movsl pop push push push sahf int3 xor into scas pop inc scas (bad) cmp push cmp (bad) jl pusha mov pusha mov cmp add jo or xor xor cwtl cmp jne lea mov jbe jns test cmp xchg mov xor push jne sbb mov das arpl jge mov (bad) fnsave dec xchg jl or jg fcompl jne cmp insb (bad) in or movq xor lods sub (bad) out jg daa test push call lret add daa xchg idivb cld cld (bad) outsl lds int lret shl mov hlt and ds dec pop outsb dec cmp call sub icebp (bad) (bad) push mov sbb mov loope ljmp dec sub push je xor stc fsubr mov jl push pop dec inc cmp cmpsb xlat ficompl cmp push xchg and jge mov xchg sbb xor lea push dec push xor mov movsb cmpsl cmp adc push hlt movb mov jg push lea add mov mov dec or lea mov mov outsl mov inc sbb push and pop ret jmp leave cmp push je mov cmp je cmp je or push lret in jmp test sbb xchg mov and test scas mov adc sarl sbb adc mov incl loop add xor push xor and push loope lods repnz pop and aam mov hlt pop popf and xchg dec jae mov fldl jb add sbb jle jnp in jl ret push pop fidivrl in in push dec pushf dec xor dec cmp imul add mov inc sbb sti dec adc outsb stc and jae add js jle pushf ja pop pusha or nop add jecxz sar dec jbe mov pop shl or cmp or mov nop cli mov fcmovb loopne jg sub add push aad cld dec ret ficoml push xor ljmp sub ljmp sbb movl mov dec adc add add ret pop dec dec addr16 ret leave jne cmp in and and pop dec jb dec dec add xor mov or sbb shrb mov jge push pop mov icebp pop jl (bad) inc jmp in and dec sahf or loop movb cld fist add test adc jne cmp jne dec adc sbb add arpl jecxz ret call es mov fimul rcrl jle dec add add test (bad) (bad) xor (bad) clc inc push stos or and pop and push mov ja shr or xor add fldt cmp xor lret push xchg ret pop jmp dec insb dec add pop pop test test push sahf or mov adc inc and sbb fcomps or adc out jns rcl or pop push mov push mov push mov add pop mov lret sti add js add rep sbb (bad) pop lea cli mov jno add mov mov mov fldcw adc fisubrl sbb pop or xlat push push les xor jg ja xchg inc sarl js orl je or insl scas mov hlt je inc jne push dec sub (bad) add xor inc cmp jl push sub cmp dec pop in and mov jge push add aaa out xor fidivl outsb pushf xor std pop ret pop sub inc mov and dec inc shl mov adc push dec clc std push mov and or fldcw stos inc jl adc adc mov sbb dec js push sbb jle sbb push mov rcll fs insb jns pusha imul pusha add js je jo pop pop cmp arpl pop pop mov or or sar ret xchg add xor inc insb sbb fucompp xchg fstpt adc adc gs sub sbb sbb inc xlat outsl adc js mov jb sub mov dec pusha pop dec mov jl cmp (bad) cmc pop inc fstl (bad) jb lds (bad) enter test int pop adc sub sub xchg aam jb imul inc shll push jb sbb push sbb cltd push outsb and je mov aas loopne jno (bad) mov ret rclb inc rcll hlt loop inc shl pop aam xorl lahf or lds call and jp jno roll ret fstps mov sbb xor inc mov dec insb and add lods jo aad add test cli sbb (bad) (bad) mov inc and mov cli sbb (bad) jb mov mov mov lea jbe cmpsb das mov jae dec mov in in fucomip sub mov jae mov dec cmp lds sbbl outsl mov lds fnstcw mov cmc ds mov push fsub popa dec add pusha push lods lcall into add adc les sub mov mov incb jb fcomi (bad) cmpl lea mov incb ja dec add dec add shrl and and mov jae mov inc ret and ret test (bad) pop cli jl add fld (bad) pop or incb sub or inc sbb mov push push mov push push sbbl add lock push les pop inc or inc jmp adc pop mov std nop push push sbb xchg pop mov xor mov and push jg mov inc dec inc (bad) push ud2 jle arpl or jle adc pusha add cmp movl addr16 ret push fs cmp adc or (bad) daa adc pop loope ja mov add and sub pop inc pop and (bad) jo (bad) mov (bad) cmpsb jge scas cmpsb mov cwtl inc sub sub mov repnz and dec add fisttpll inc mov pop pushf mov fsubs adc test cmp aas mov dec and mov in inc jnp mov and call in es dec je xchg or add js sub ficomp jmp ret shlb ja stc jb dec mov icebp test inc cs loope (bad) js jb shl jl (bad) (bad) xor ret nop xchg shrl ret dec inc sbb mov xlat loope out int3 fwait jne mov jnp out mov mov enter cmp pop faddl pop mov xchg dec dec push dec sbb and outsb or stos xor push mov dec (bad) mov nop stos mov jl aam adc stos and or or cli mov sub into sahf popa push inc dec cmp rolb ljmp xor nop xor or in ret add add mov test cmp je int3 test add mov ss sar pop ret add pop xadd inc sbb cltd lret pop pop sub jmp lahf adc add sub mov dec test mov xchg lea xchg cmpb fsubrl sub add or jmp or decl pop jle sub xchg mov test sarb ljmp insb lods fiadd loopne outsb jbe or push ret push jl xor (bad) cmp mov out inc push sbb cmp sbb mov add inc sbb notb mov inc and jne adc sbb xor pop pop fs inc push or (bad) pop sub sub mov out lock xchg aad sbb mov in ljmp sub ljmp pop subb mov push xchg loopne xor sbb lock xchg push test addb ja lds loop popa adc jo add pop dec cmp mov push or loopne dec cwtl or xor sbb dec add xor mov adc leave into enter adc push inc pop mov je syscall mov enter cmp jecxz add icebp add add adc shr xchg sub cmp push jo sbb lret test cmc cmp or insb mov mov std stos add add dec in das cmp xor cli sbb add sahf sbb test mov push insb lea inc add (bad) mov mov ret lock push jle (bad) and jo push xchg or xor rolb add mov inc shlb sbb nop les pop mov push rol loope xor fmul push aaa lret xchg mov xor push mov pusha mov mov loopne sti shrb mov add push add push cmp add push adc push stc adc les jne daa mov and inc dec mov push adc add xchg dec xor popf (bad) imulb je sahf push daa dec inc (bad) dec movsb or ds add mov inc add and push decl mov xor pop clc rol shlb lds ret mov adc jo xor and push pop ret aas push pop pop inc add pop ret clc add add fisubrl sub lcall push mov push sbb mov (bad) jle rcrl inc xor inc cmp dec and adc clc movsb adc aam or fild xor inc xor push aaa adc push push mov add mov dec sub mov mov roll push push and rclb mov push push push sub push pop and cmp mov scas cmp out push sarb addr16 daa nop mov scas icebp mov push in xor cmp or push push inc mov adc xchg (bad) sbb jl cmp inc jae add cld add add inc xchg orl or test iret inc shrb add je and loope pop add pop jns mov fimul push sbb out int loop lds fimul repnz (bad) mov jb mov inc and enter loope out xchg add cmp xabort mov cli sub movl shr shr sub jg loope xchg xchg mov push dec mov and fiaddl xor sbb gs dec fist cmp sbb jp sbb or ret test push mov sub jmp pop sbb and dec (bad) push add (bad) xor mov dec out sbb ret jb cmp imul cmp rol lret jne shrl jbe and loopne add outsl cmp hlt push jge jbe lea test inc cmp adc call jae mov lds rorb pop sub dec test inc adc (bad) in sub jno or xor push push push mov loopnew cmp push jae out or jno jae out dec hlt dec lret cmpsb cld xor test and lock (bad) (bad) movsb mov repnz out aam cmp and pop mov mov xor or cli mov (bad) repnz mov add movsl mov mov sub orb inc add movsb sbb loope push xor sub sub popf (bad) jo loop inc mov push pop das int3 inc sbb test push cld push cs jae mov push mov dec cmp or pop pop dec or inc push rorb (bad) call fidivrl pop cmp push imul into loopne push (bad) or cli mov dec push shr test clc or add push push jo push mov out push mov movl (bad) xchg or inc orl jg add cmp jae test scas ret adc cmpsl aad push or xor mov jne jp pop push test scas sbb mov mov fsubrs xchg push inc ret lods or inc (bad) fsubrl adc jae jns (bad) in adc pusha bound inc outsb inc jb xchg mov fistp and lea inc adc push push movl pop fxam xor sbb jl test inc addr16 add mov loop mov data16 mov femms rcrl cmp jae in mov ret inc dec iret stc addl push mov jnp adc divb push jb out ret jb jae jp xchg rorb or add clc lock (bad) or push lret jp out loope mov testb xor aaa mov fwait je lea sub popf shrl and push movsb rorb jmp dec orl push mov jb mov lret mov pop and add sbb ss xor les aas enter js jno pop mov ret cli add arpl ja mov push add rclb inc ret mov and cld sub in pusha xor rolb (bad) cld out jge jne sub mov xor mov loopne push pop scas adc and push push aam nop or and sub cmpsb mov xchg jecxz (bad) jo inc push add loope inc adc inc or rcrb and add or addl dec xlat jmp mov loopne insb cmp xchg cmp loopne push ret mov ds fs or iret mov dec push push inc inc push push lock loope scas sbb mov loope,pt cmp in sub (bad) adc xchg mov sbb and hlt jp cmp adc inc mov movsb movl lods xchg (bad) mov iret mov sub movsb jmp call mov mov fs and pop add ret jge test xor mov push ja test dec dec sbb add ret std xchg ficomp fsub inc outsl xor popf dec cmp push sub pusha dec xchg add popf dec dec adc mov push jb sub popa dec mov stos shrb mov and je or aam inc sbb negl mov mov jle dec and jbe (bad) and pop cmpsb xor or mov inc mov enter (bad) mov add pop sub add mov push xor pop or xchg push push push test pop (bad) add sub add sub pop dec add sub push push addr16 push popa push test mov cmpsl xchg sahf cwtl js sub sbb push sub adc and xchg pop test ljmp inc push out dec rolb sub test pop adc mov inc inc mov fidivl push shrb movl jge push or pop sbb cld jl sbb push (bad) dec mov jecxz mov adc dec or (bad) adc cmpsl fsts mov test or push iret push insb adc push mov ja shlb jmp inc fs add pop mov push cmp je or aaa jl or mov sbb int3 cs ds mov xchg dec in push int push push int mov push adc mov jp cld or lds add pusha adc push mov lods lret pop cmp sbb push xchg push rcll adc jns aas les push ret inc add push fldcw mov jle int negl add inc mov data16 mov push sarb pop xor cmp sub jg (bad) call and std and lea pop mov iret or sub pop push jmp sbb sub lcall bound mov les fcoms jl in hlt adcl aad fcmovb loop add fs mov and outsb adc add repnz repz cmc (bad) or enter stc xor and and xor int3 push test cmp es (bad) or cwtl mov pop lock jp adc mov ja jnp pop cs cli pop or das pusha lods mov add jno add ret and sbb mov or repnz cmpsl jp nop fimul mov ret sub leave movl mov or mov pop mov gs sub or sbb sub aas add push mov data16 lea add jne sbb and push adc adc mov pusha daa mov or addr16 sahf (bad) mov ret jno sbb or in bound out repnz cmp or (bad) out out adc cwtl adc js dec mov (bad) mov in inc mov or dec sub jbe xchg adc sub pop shr mov adc cmp shl mov mov sbb add sbb fcompl push loope mov dec (bad) push adc cmp mov cmp bound or rorl inc mov inc das or xchg cwtl xchg int3 xor movsl dec shlb xchg pop sbb adc add jle into mov push (bad) imull js ret mov push sarb mov shl and xchg aaa cmp mov sbb pushw cmp addr16 iret lea andl xchg add sbb mov mov push (bad) pop and or lea add ds sbb movl daa inc call fildll frstor xor push aam adc jle add lahf fnsave jns in lea fidivr mov or test inc adc repz or mov shr shr cld inc loopne adc lret jmp lea jle add cli ja test or push push push enter jmp sahf outsl pop jg loop inc sbb add mov in loope shl addr16 push adc push inc mov xchg xchg adc jo nop push imul push repz sub inc jg lods add jae push cmp push add add subl out mov push xor mov inc sub adc sahf pop sbb sahf les arpl cmpsl ret push sahf cmpsl pop scas arpl loop cmpsl adc inc push loopne jbe and cmovno into mov add and or mov sub mov sbb or or or pop test lret sbb cmp adc ds and in inc add xchg jle or xlat aaa mov sbb out mov (bad) hlt andl mov test push adc push pop ljmp out inc fadd jl test aaa imul pop cmp add pusha mov xchg mov lods dec ds sbb mov add jnp jns or add mov add jl outsl mov push pop int mov icebp daa mov mov sar cmp jl dec leave int3 popf adc ja dec and stc adc inc (bad) out arpl insb jo adc mov das adcl and mov sub mov mov push sbb mov mov jo scas add xor mov push lds (bad) jb orl sti pusha xchg jne rorb test inc dec lock add lahf add inc add sbb fdivl sub add loopne lea ret dec or inc push jb or arpl lods xor test and fmull pop add mov ljmp ss adc (bad) popf aaa xor cmpsl ja jge mov mov icebp outsl push (bad) jb jne mov outsl loope or ja inc sub scas mov jne sub pop push and sbb mov rol nop repz or sbb jmp cmp nop mov cmpsl aam cmp add add and mov dec rclb push pop mov les fild mov mov or mov (bad) stc pushf sub in mov mov sub (bad) jp adc imul sub movb pusha mov and mov (bad) push mov adc jl movl or loopne iret mov iret jg and or adc jl mov outsb push stc sub sub adc clc and movl (bad) inc daa dec add and jnp mov pop inc (bad) (bad) mov dec pop lock fistl lock dec ret jmp push sarl pop orl push sahf dec les jo loop scas jmp neg sub push ss add push dec insb push sub test mov mov pop xlat nop mov das cmp out add inc add je xor and in add push ja cmp out jg (bad) ficom pmaxsw cmp mov cmpb out add mov lahf xor dec mov cmpl sti jne push sub dec sbb fimull shlb in and and add or fiadd sub push mov push mov clc shl push movb jmp add or ret jl sub js mov dec (bad) leave je push push dec or stos sub inc inc push pop sbb js add adc adc adc rcrl sbb push adc inc lea adc int and mov js pop cmp inc and mov mov jl nop adc bound pop inc jne dec sbb mov mov adc roll jo mov lret and dec mov mov mov shr out orl mov test data16 add dec cwtl adc mov dec push mov push lea lcall jbe xchg dec add cli ds je cmp jge add xchg mov jmp pop cmp adc cmp je stos daa push xorl cmp jg sbb add leave jne jo sti adc jmp cmp push push or add lds test ljmp mov or xor decl jle add pop push daa adc mov stos xor jle sbb mov sbb popa sbb inc sbb mov les pop mov ljmp add inc inc add dec add inc pushf inc xor in loopne adc jle add enter cmp push nop sbb addl mov mov xchg jge test pop sbb inc fiadd xchg mov push mov stos iret ret mov pop dec lcall sub movsl pop and sbb xor cwtl push xchg xchg rol sbb imul mov sub (bad) jae jns push push cmp jmp inc xchg pop cmp movsl mov rorl jge cmp inc mov fnstsw xchg cmp jge (bad) dec mov push fild mov outsl (bad) cmp jle sysexit or cli outsb dec push mov jmp sub rcrb add mov sub dec loop lea adc and mov orl into aaa dec cmp mov xchg or dec mov shll mov jnp mov add sbb aas data16 sbb cmp push jle loopne out and ds sbb repnz mov subl cld cli or (bad) push add mov in mov or add mov mov loopne jle jl subl and pop cmc (bad) stos lock or movl test into dec outsb scas mov andb loop xlat addl push jp data16 mov cmp jo pusha test je pushf adc cmp mov inc ret dec stos and xchg sbb add xchg push ljmp cmp jle xchg je test shl pop jcxz lret nop push adc ret movsb adc fisttp lret dec cmp pop mov ja sbb xchg add orb add sub fisttpl mov xor push xor aaa out bound int jno pusha and addb test lret cmp mov fsubrs mov rcrb add push or jae mov ja xchg jmp loope lods push aas cmp in loopne xlat xor fsub dec adc add add inc gs mov shll xchg adc fidivr lret adc push pop sbb jmp adc xchg test or or lcall or pop sbb push pop sbb jnp push lock add sbb push push popf pop or (bad) mov jo add (bad) jne lock ror inc mov cs dec repz test dec repnz pop mov roll nop pop push sub add inc push pop out sub or nop xor push sub insb jo nop xor ret ret inc sbb andb (bad) fiadd xchg sbb jae jge add add and pop dec inc gs dec add push pusha dec jno cmp (bad) dec jne push xor xor cmpb sub cmp mov jge mov ljmp (bad) movb shr cmp pop setbe mov sbb add sbb out or sarl inc pop icebp jmp jg shr pop mov add jb cmp jo inc or (bad) sub mov mov inc jnp cmp sar lahf movsb notb loopne mov aas xchg out xor adc or jle outsb mov mov push jmp pop push jg (bad) cmp add pop add xor pop je mov mov cmpl mov inc not lret shr and inc mov sarb cmovp test pop aad dec cwtl pop lea add pop leave popf mov inc cmp faddl fsubrl inc dec push in pop inc fstpt adc sbb pop dec rcl mov mov push add dec mov add loopne mov int3 ret add ret jl add sbbl sub push cmpsl aam mov das mov lods sbb dec and inc and jns insb xor js add xor mov cmp cli mov add aad xor inc add fiaddl push pushf add or cltd sub and mov rorb push xor stos das add inc sbb xchg push pop pop sbb ret leave adcb sbb js mov fmuls in mov inc and jle inc loopne or dec xor xchg notl sbb dec pop xor pop add jp push mov mov shlb or mov jmp push inc or fdivs add fldt out jl dec mov pop push mov lods ret or adc sub or push aad inc outsb sbb adc sub or in fstpl and leave lods mov sub das ret out shrl jge jo stos push cmp mov test je adc es lock dec mov inc jne jne fwait xchg inc mov lea xchg out aas or add mov ds add or dec add xlat or inc or jmp and add sbb add negl jge mov xchg add mov test cvtdq2ps push pop add mov add jnp sub sub dec jae xor lock mov hlt mov (bad) jb adc (bad) xor mov cmp fildl outsl sbb and addr16 mov es dec aam sbb add aad and push loopew fimull in jl cmp sub inc and adc mov add aaa mov inc push (bad) hlt add xchg mov mov and ja jnp ja mov cmp add push stos push and shrl add cltd fsts cmp mov aad add mov (bad) mov mov movl fmuls dec sub pop or int lret push push test pop xor mov jno test jno ret test add dec mov int xlat mov jle test push lcall xor mov stos xchg jg add cmpsl jbe sub push jne sti pop jbe ja shl jle jmp inc dec mov (bad) add leave lret mov rclb sbb int push xchg pop or fnstcw pop and xor (bad) fs add sub inc fcmove outsb dec fistp mov xchg (bad) call in inc out lahf stos mov lock icebp cmp insl ss repnz push hlt push mov dec bound add push cmp icebp push mov push push rcrb das pop insb out fdivrs (bad) add and dec adc inc adc and push mov adc or mov (bad) std fcoms mov rol push mov cmp nop pop pop cwtl cmp je jne insl mov or or std mov mov and sub mov and adc (bad) (bad) out pop xchg adc pop pusha sahf out sahf fs jns adc jl mov adc sbb xor push lea dec mov inc or cmp pop cli sub xchg sbb or cmpb mov xchg hlt sbb jns mov sub xorl packsswb jae mov xor lea dec sub cmp jne test les ljmp ljmp sub out jae lea sub js cmpsb ret add and repnz lahf aam or dec push sub test adc mov pop sbb je xor ret mov sbb xchg lret das jne mov fidivr dec push je sub push cmp mov inc mov test pop inc cmp ss cmp jb sub mov in (bad) xchg in and cli mov and and fisttp sbb sbb add inc adc jg sub and (bad) (bad) pop push push adc je adc add and sub mov mov adc inc ss les sub fisub test fldl int ret jle cmpsb xchg dec cmp test adc js push push and dec sub fisubr decb scas adcl (bad) cld sbb or mov jge (bad) pop sub mov jb mov aas loope ret rolb add jnp iret xor push jno add (bad) repnz mov rorb dec mov je adc dec jecxz jge mov lret sub xchg push inc mov xor xor call sub (bad) mov loope js lock je jmp push pop sbb leave adc or or fdivrs sbb rorl insb xchg das add mov jmp and sbb push push call mov sbb addb idiv loop add push les shl mov sbb jo outsb cmpl push inc inc mov cmp loopne movsb daa sub cs cmp cmp and inc loop sub mov lea xchg cmp out xchg ret idivb or clc shr push jne jne xchg mov lods and mov (bad) test mov pop mov in sub push clc push or jne sti (bad) sub mov mov push mov sbb data16 mov (bad) dec xor cmpsl test hlt adc popa rclb pop mov inc sub and push push push mov cmp add (bad) push or test xor aaa cli cmp sbb push xor outsl push push push mov add ret or or (bad) shrb mov jae sub mov icebp shrb es push xchg add and bound addl ja xchg push pop rolb jmp sub mov inc sbb call or sti jne mov adc cwtl (bad) test ret inc int cs stos mov test adc inc pop add bound or or or movl or movl ret jg movsb pop push dec popa imul inc or std sub sbb sub adc (bad) mov ret push in je sub loope (bad) and andb push adc jne sti sub add mov inc mov pop or enter push mov int idivl mov lret mov mov lds dec sub std sbb mov mov inc xor push or jae jl dec pop jo inc sub int3 movsb sbb push cmp dec push push inc xor push rorl mov add shll xchg xor imul pop jge daa or cmc sahf insb push inc cli push and jno xchg jns stos inc sbb decb sub pop inc jae sub dec cmpsb mov dec sub iret lahf sub mov mov add inc data16 cmp fistpll shl add or inc cmp loope insb push mov and rcrb xor jnp clc xchg call or mov add ljmp jne or (bad) or std pop add add sti scas fs jno je and sub imul (bad) pop inc inc inc add ljmp enter dec inc pop mov movsb into push adc iret stos cmp imul jmp ja movl mov sbb jle adc and add jg mov sub xor cmp sbb mov pop sub add (bad) mov mov out cmp jbe sub mov mov inc inc dec jne xchg fnstsw mov jbe pop dec aam push sbb cmpsb push pushf and mov aaa outsb and add bsf cmpl jb or or stos test cmp mov sub mov add je shrb fstpt push scas icebp inc mov inc mov jbe test cmp loopne add jmp and pop lahf push outsb inc sbb push ss or cmc cmpsl or cs mov jnp mov mov sub or adc and add mov in xchg scas lds sub out cmc mov imul mov mov adc call int xor test aaa add jo xor mov push (bad) jbe cmp add cmpl addb and out xor pop pop push push pop js add ficomp stos neg jne (bad) mov xor mov jmp nop mov mov or loopne out nop mov add jns stc fcoml push cwtl add or int std jmp rorl inc add scas adc (bad) mov add add add sub xor cmp mov sti out push loopne (bad) ss out enter mov repz add in iret repz in lock hlt clc mov repz cld cld lea xlat loopne test add (bad) mov cmp inc mov sub adc inc pop sti and (bad) xor sbb dec jb in lea jl cld or or cld out mov push add enter daa stc sub add mov fadds add (bad) inc xor jl mov xor fidivl push out lods pop jnp push or mov out mov fsubrs push or push fs out insb je test pop aaa sbb sbb sbb adc iret repz adc or push cmp repz add aaa jl fwait and or sub (bad) push aaa outsb push (bad) les inc add push xor mov stos push add or adc js js (bad) and or sbb icebp fildll fimul imul js cmp xor cmc pop jae mov call lock movb adc add in ret test and sub je (bad) mov rcrl cwtl rorl out jecxz mov movl adc xchg pop jmp sbb jmp push push dec xchg mov pop jne push pop pop into or push push and pop push mov mov hlt icebp (bad) in cmovnp clc loop mov ss and ret push cmp or push xor cs flds sbb outsb push pop dec roll mov movb arpl inc and insb mov push nop push cmp mov clc mov jne dec das das mov cmp cwtl js push mov aas or lock (bad) adc jne subl les jmp mov push sbb mov add (bad) pop sub test dec cmp (bad) sti pop xor sub and fidiv mov dec loope bound adc push imull add xor das dec or popa mov sub push add add in int3 stos lcall and scas cmpb je cmp andl mov daa mov xor cmpsl or jge or or push (bad) xor ret jo das scas adc scas loop cld pop std movb insb adc sub add inc mov push sub inc jp clc push jp or push dec fcompl pop bound and andb add push push jmp pop mov stc lods gs or dec dec outsb or xor sarl pop xor inc lea test ja add ret inc fnclex sbbb test mov or out cmp aas push clc or in sbb mov enter xchg repz or push inc cmp sub add cmp mov flds jns sbb pushf or and mov add daa sbb nop adc cmp pusha mov add add jns mov mov push mov sahf out aam in xor add iret jnp sbb sub mov loopne repnz out xor leave push test (bad) push push fldl push pop or xor sbb sbb mov lods adc inc es and outsb pusha lds pusha add pusha or xor ret mov stc movl dec mov aaa in rolb inc fwait aaa sub xor mov push xor xchg mov movl add test jb push cltd inc or stc in outsb lock add clc mov clc inc push xor outsb es sbb jae mov mov std xchg add add and sbb scas cmpl cmpsl adcb mov mov pusha lock mov mov insb popa lods sbb pop int3 add or mov mov and inc push loopne cli mov add cmp xor push jp int3 je sub inc xor add mov cmp aas cmp stos mov dec ljmp adc mov fadds movl dec xor xor or mov mov dec movsb push push pop push or pop push add mov cmp je mov push add repz mov out rcrb mov shrb xor jb mov push pop add add pop enter add repnz jg dec mov cmp jle add lret add add flds add jb mov and xchg pop pop pop out rclb add or pop or sbb pusha fwait dec or cmpb sub or (bad) xor or pop imulb dec in add or or cmpb or cwtl push push ja adc (bad) nopl outsl movsl mov pusha adc sub dec adc repnz adc out test (bad) out adc ret sub pop jo push adc adc adc add pop cltd adc addr16 push push push cmp js pop pop pop xor sbb pop sbb or inc sbb add add pop sbb (bad) xchg inc add sbb pop mov jns sbb jb sbb inc sahf xlat add jge sbb sbb push inc incl pop jne add add cltd adcb xchg iretw cmp xchg add adc mov mov ljmp add cmp je lcall rcr jnp sub lea cwtl aad in in out inc mov jns fwait out (bad) pop (bad) xor mov call in je call dec inc fimul xchg xor add sbb sub sahf xchg or jmp out rolb sub in in cltd push nop ja mov sahf in jns out out jge and pop lock xor lock xor pop enter icebp bswap in jmp repnz out std repz leave std hlt hlt jb sahf cmp or fwait mov cmc dec cmc inc jg iret enter pop div push cmp clc lea popa cmp sahf lret add inc stc lock cli cli loopne cmp sti sti in repnz je adc push pminsw repnz ss xor sbb xlat pop enter je mov jmp xor clc roll ljmp roll xchg and cmp mov aad ret xchg or sbb or jecxz jecxz mov sti in sub fdiv inc nop mov and sti out out inc push fsub cltd outsb call (bad) dec sti sub lcall jmp push mov jmp (bad) in mov mov or sbb inc lcall push jno lock cli or sbb jmp cltd add (bad) push xor scas out inc sbb enter push jo xor add stc pushf and enter lret xchg sti cltd push (bad) inc sbbl ret sbb sti dec dec push inc and test cld sub loop loop jns push loop icebp mul repnz pop (bad) imull push popa mov insb nop cmpsb sbb out cltd bound pop inc testl cmpsb jb imul ljmp testb sub mov xchg negb push sbb or out jno inc cmpsb push nop testb inc dec jno add sbb (bad) repnz test cmc adc fs xchg pop dec adc jae sbb mov jo jmp jo and scas in add pop jo hlt (bad) inc stc jp pop jo adc cli cli cmp jno hlt inc pushf loop dec jne push hlt mov das dec data16 push push (bad) data16 hlt std adc fs (bad) ljmp adc ljmp push loope loope cmc pusha (bad) push pop loop push repnz repz cmpsb loopne or (bad) adc repz stos sub push andl enter sbb (bad) jmp mov add jne repnz adc add add and pop je call loope in roll icebp or dec icebp icebp jns jo mov icebp divl xor icebp xchg xor sub cmc cmp cmc add aam jb cmc jecxz inc and test ret adc stc mov jne cmc add jne lock add push lock xchg je fldl mov fdivs and adc sub out movsl sbb mov in jge push add add inc push nop add push dec add popa pop add inc jnp xor adc rorl dec enter add jmp (bad) and aaa (bad) out dec add adc or sbb test idivb jb adc push xlat sbb out and cmp imul mov lods sbb push ficompl cmp scas adc mov lcall ds jge call push or sub adc jo ds xor popf push or or adc sahf pop sbbb mov fildll add or sbb add pop je inc push imulb pop or movsl fist out incb cmp add mov incb lds sbb out sti inc xor dec pop jne mov sbb push inc shlb ss pop mov (bad) out cmpl xor call loop xchg rorl push push jb jmp push loope adc mov push inc dec bound jp mov push std lock sub call xchg adc aam and xor inc insb pop jl or icebp into loopne sub inc mov jmp adc lock and andb arpl (bad) adc sbb nop mov adc mov or out mull test mov mov adc into cmp xchg inc xchg nop out dec lock sbb or aaa mov add loop push push rorl shlb enter pop stc into (bad) roll mov dec or std in and cmp and je push push xchg mov test mov loopne or mov shll push clc dec adc jge sub outsb out popa and test cs sub mov dec adc in sarl ret call and xchg inc mov adc int mov xchg lock cmp dec mov xor test mov jbe push pop fdivp cmp sub adc add (bad) out push push push mov add push cmp (bad) shll imul sbb mov loopne imul jne stos jo (bad) cld lock je fisttp sub push inc or xchg xor or add mov sbb inc adc fbld jne adc sahf in jmp sub mov push clc xor inc out adc inc ret adc add pusha xor jne add lcall dec xor ret dec orb xorl push cmp sbb loopne loop adc inc aad mov pop inc push push push push mov addr16 jne inc std or das inc fwait adc xor inc fmul dec mov into in add clc (bad) jmp insl xor dec cwtl push std mov loopne arpl push push sbb shrl cltd ljmp jp or jmp lea lahf out sti add outsl push push dec adc push and jg mov dec and push jg outsl inc or ds jl pusha jle xor jg jg scas xchg mov jg lea mov mov pop movsb aaa mov outsb add pop pop and adc cltd pop jae les pushf prefetch cld dec sub cli sub insb or jne add inc into mov jg,pt ja xor adc icebp push push ret lock call enter dec push or shrl rcrl add sub fdivs sti lcall push jmp prefetcht2 mov jne mov movsb (bad) lret rorb and test jnp push or mov ret xchg outsb push push ret stos jmp insl mov sub or (bad) roll andl adc xor add push inc push sti inc mov dec rolb lock jmp das sub inc cwtl mov lock cli add cmp inc adc jl sbb mov xchg mov push push or scas push xor inc add cmp jb (bad) adc orb js int push adc mov sub and pusha and cmp or sbb es mov (bad) mov sub inc sbb xor or or ljmp and inc add in adc push jb je popf test xor in pop mov and lock adc (bad) iret push pushf push mov mov mov shrb or test scas push sub jnp (bad) movl mov inc jo scas push popf mov addr16 scas sbb xchg mov sub and jo xchg inc or add jle mov adc imul inc test pushl cmp fbstp cmc push mov imul xor xor andl pop dec inc jl push cmp cmp or fs outsl sbb (bad) hlt nop orl shrl or and push (bad) ret or pop in daa mov jecxz sbb into push das push push cmp xchg add cwtl adc sbb add nop cmp dec or cmp cltd shlb jle call mov cmc adc and pop push movsl sbb and sbb and cs cmp jns repz hlt push or aaa sub mov pop sbb rorb daa fisttpll push inc pop or pop push or or add (bad) enter mov inc (bad) push in bt mov das xchg test xchg data16 sbb sub adc into jge and mov xor push mov (bad) pop ja push pushf push mov dec xchg pop sti mov notb lcall nop subl mov sub int3 std cmpsl test fstps inc xchg ds sbb jne dec je or fdivl pop iret pop push adc cmp ss dec or cmp push mov xchg cmp add rorb or and jg pushf les rol pop daa or scas fbstp push jo add sbb je,pt mov push mov push mov fildll adc xchg sbb jl test push cmpl jg jg ret or ljmp out or mov lret adc add test loope mov inc adc push and pusha mov add je sbb pop je loop cwtl ss loopne sarb mov roll push nop xchg movsl add adc ret mov negl outsl (bad) lahf add adc dec leave add scas jp jo mov jb add out dec and add rcl and shll jb popl mov into jne add sbb sbb push pop in pop jns addl call leave je xor jp xor sbb pop push cs xchg andb mov pop mov pushw inc jl dec adc (bad) jno push jbe sahf sbb sub shl es (bad) sub mov jae push jb (bad) adc push cmp aad sbb cwtl sub xor nop popl mov dec or (bad) cmp cmpl in sbb outsb andb pop or test mov jo push adc je repnz jne gs ss ljmp inc jnp clc je push cltd jmp push sar (bad) cwtl xlat inc pop push or sub and jo mov sbb and pusha cmp fsubr roll and stc and add sbb xchg or push imul inc cmp pop in fs fisttpl jle gs push (bad) outsl inc ss jo add and or int3 push push sbb xor jnp pushf lea sub xor mov pop mov inc hlt lds gs mov fdivr mov sti push inc fnstsw outsl ret pop adc sub pop pop inc push inc js js push scas mov jae xor test clc (bad) sub sbb pop in add xor (bad) lcall mov pop ljmp add pop push or std incb lea daa mov mov je lea xor fmull fcoms sbb (bad) xlat mov jae jo jge add adcb call push mov or sbb incl (bad) insb cmpl mov add enter and das inc xor nop mov nop adc mov sub es pop mov push mov enter xchg adc inc mov and push outsl addl mov mov cmpl dec mov cmp addr16 and sub mov stos mov je or imul or add push pop or mov je lock push lea test push loopne adc fcoms stos add ds mov mov inc push dec pop inc push lea pop cli mov mov and cli push mov lods and lods icebp mov int or test pop pop jl cld int3 loope cmp sub dec aam inc cmpsl sub cwtl jl adc or mov test and pop mov mov add cmp ja sub inc push (bad) les xor inc mov inc inc mov popf and cld jbe lret aaa jge sub lea mov cmp push sbb cmp inc sub outsb inc add and movzwl (bad) ffreep test je orb mov add or test out pop mov movb xchg outsl pop ret sbbb push orb push sub rorb sbb xchg push mov jmp test push fiaddl ljmp xor cmp cmp call ja pop xor pop popa add sbb mov fnsave pop sbb jg xchg into mov push mov (bad) jmp mov cmp int cld sbb (bad) sarb es mov mov push adc lods sub sbbl dec ss ficoml cmp mov xchg pop add pusha ret and inc mov rolb jmp cwtl adc hlt nop push fsubr fisttpl sub stos cmp insl rcrl lret out shll or aas es fistl add mov sahf ss xchg push push shll adc dec or jl mov es out rol or lock out (bad) std mov inc push jmp xchg sbb (bad) jno cwtl push push cmpxchg rolb das inc sbb movsb cmpsl mov xor inc adc scas cli push call or xchg incl out cmpb iret mov out mov test sbb inc adc aam inc cld test lea xor es mov das jmp mov add nop loopne push add mov cmp mov cmp jbe nop inc inc cmpb add (bad) inc shll sub xlat lods or mov movl inc and fwait or mov push xor inc call lock xchg dec pop cmp add divb nop add ss inc push mov in insb loopne inc add movsb bnd add mov rcrb mov xor daa push test repnz push adc sbb xchg mov mov dec loopne cmc sub pop push lods or mov movsb pop in lock and (bad) pop pop pop lock ret mov sahf je pusha sti rep mov mov clc adc mov dec xor cld aas insb jbe daa inc out mov ss cmpsl mov mov cmc dec adc jl add pop adc pusha inc pusha sbb fstl mov (bad) mov mov jge aaa add pop cld int3 adc dec inc jmp xor inc sbb dec sbb mov add sbb incl inc jo insl adc cmpsl dec rcrb daa push push sub xchg and aad xor and movsb flds xor in xchg cmp cs mov push and out inc and daa or pop std sbb mov mov je cmp jnp push je cmp jne cmp xor sbb mov sub out sub pop mov sbb dec jnp fidiv rolb sub (bad) incl insl fadds (bad) je sub and and shlb js jecxz aam pop cmp aaa insl out sub push pop pop pushl out lea pushf addr16 cli pop cmpl cld or cmp cmp add push push mov jno adc out icebp jg fs lret imul scas sub push sbb mov sbb pop pop hlt (bad) enter mov das cmpl or ret adc fdivs cmp testl jg adc adc and xor cmp push jmp mov sub (bad) rorb push pop mov add xor or cmp jge adc mov jl pusha ret sub sub or rcrb jmp add cltd jmp xchg enter sbb fsubrp or inc icebp ss lahf test arpl push adc icebp push push movsb push push popl orb jne fisttpll lods push mov add scas add pop adc and sbb cmp fdivl fadd jne int3 mov int3 cmp jge inc mov pop jg add mov mov pop inc addr16 cmp inc and xor add sbb adc add call dec aas mov push jle push clc out add aaa lea push test repnz les clc int3 cli jmp lods ret and xchg and mov push test pusha jb pop divl mov test ss push xlat (bad) es gs mov push enter xchg loop cwtl inc (bad) pop testw sub xor dec adc lret and inc and icebp mov or hlt fwait pusha jo cmp push jnp jmp add add stos lods push call adc fildl push push add jmp cmp inc inc aaa push mov mov data16 (bad) jnp movsl pop jbe (bad) push outsb inc pop mov sbb add cmp lds test bound lods in bound dec popa outsb bnd (bad) mov push xchg hlt mov mov jae mov mov sahf ror ret push sub (bad) (bad) lock sub ja add cld test pushf ffree pop sub iret fidiv clc call or add sbb push xchg jecxz add xchg cmp sbb inc mov popa dec test adc or push ljmp js mov mov mov inc lock inc daa std cmp gs jecxz mov int fwait rcll arpl cltd adc push sbbl add sar jge pop loopne push bound add add mov inc cmp ds sti jb lea push adc push pop inc xor ret add shrb pop cmp adc pop dec sbb inc loopne outsl jo lock and mov and lock and pusha pop call dec call (bad) or xchg ja nop mov cmpb jne movsb (bad) dec or push jnp sbb clc push stc cltd xchg or and cld push push test (bad) pop push push cmp cmp jmp sub sbb and and pop popa pop addl daa mov lahf aam inc mov mov or adc or dec or rcrb jbe mov shrb xor jmp mov xor ret int3 aas test ret mov jo sbb or mov in sbb jne sub lretw push inc sbb xor rorb fmuls push lock cmp mov fdivl movsl cmp movsb mov mov out sub mov pop adc orl js and pop fstl or pop jl clc and aad xor xor mov sub add popf pop pop pop mov xchg xor sbb push pop mov push add (bad) xor shrb ss mov jmp mov les cmp dec jne dec sbbb pop jl fsubrs jbe rorb sbb pop cli mov cmp mov lea and mov add loopne xchg sahf adcb inc xor mov rcl in imull mov xor xchg inc clc movsb push cmp xor nop test lds jge adc or fnstsw movb int insb cmp incl or add jae jecxz pop xor jmp cmp or gs inc cwtl jne jmp cmp fistpl fimull pop pop inc dec movsl pop xor pop aas cmp test mov clc dec and in sub pop sti add add add xor ret push inc push test lock cld jb and mov out cmp push jmp int inc dec sub ret adc imul std cld (bad) xchg mov mov push pop (bad) fisttpl jns adc nop mov dec testl jo adc adc orl adc xor test and mov repnz data16 add xchg sub inc add sbb fdivrs pop or fdivp rep mov sbb lock push adc sub push mov faddp jne sub inc add mov inc adc and sti sbb and cmp mov pop pop jp push aam inc int faddl pop ja sbb and push mov jb fbld stos jecxz jp subb or sbb xor and add pop fs je test cmp push aas ljmp sub mov adc cli add movsb mov idivl cli dec movsb movb pop push aad add lods std lret add cli rclb pop mov adc cld inc inc cmp jbe adc sbb push mov loop mov mov enter inc push inc cmp push or dec push pusha jne std add xor add inc inc push xchg sbbb gs mov xor mov push pop pop imul outsb and pop scas dec pop lea xchg (bad) ficompl adc xor cmc je in push daa mov cmp push adc push push jmp mov mov cmp mov cmp push mov fisttpl or fiaddl dec cmp or mov fstps cmp cmp jne mov lret and xor clc xchg mov fsubrp sub fimul fisttpll test mov stc stc out pop std cmp jge imul jle andl cmp pop inc add and sarl add push dec fs movl repnz cmp sub pop orl inc scas ds lea mov popl push xchg pop pop mov jbe inc sub rcl mov jmp leave push test clc cmp pusha dec ret sti dec pop mov sub mov fiaddl mov cmp push sbb lcall (bad) push dec mov ljmp push sarb jmp push pop inc (bad) les xchg mov jae lret ficompl push pop inc repz add ds or mov pop lea adcb movsl fwait jbe push fwait rorb repnz (bad) repnz adcl cmp fimul cld das push push pop cmp push pop je push push push mov jge mov mov cmp jge and sbb add inc fstps ret pushl and dec add es or mov fadd je pop jmp sub adc cmp adc mov sbb adc cmp pop xchg or pop dec lods mov ret push inc xchg inc and adc or ljmp or mov je shrl in jne cmp je sti or pusha test inc or inc incl jo inc or or add insl cmc pop rcr sub cmp sub dec jmp xor or sub stos inc inc push test inc adc add add inc inc inc pop je pop es pop xchg pop fs int add clc es lock xor pushf inc cld mov shr push adc add sbb icebp xchg ss clflush inc or je xor lea (bad) cmp or je leave or rclb jp into inc ret sub out add xor jmp lcall arpl sub xchg cli pop add and fcompl jne sub xor add xor jmp (bad) or (bad) xor xor cmp pop popf loope xor clc rorb js or outsb inc (bad) sub cmp out bound or jae push adc clc out lea into ss pop outsl add sub (bad) cmpsl cmp orl setns or outsl or pusha sub hlt or cmp ret push or cmc add sub (bad) jne add mov lds outsl or push (bad) or mov jae inc cmpsb mov push add adc jne or cmpsl xchg ss push sar inc push inc push dec ljmp xchg ret in scas pop cmpsl mov cmp or push xchg jne xor adc jmp movsb aaa or push mov into test adc mov lods fneni(8087 xor jne or lock (bad) iret rcll lods push aam xchg cmp inc (bad) push push mov sub sbb fcomps inc push jmp or push mov es xor stos jo mov or add xor jb add add add flds and or shlb in or outsl add push loopne jp into pop or or mov xor and mov push (bad) fdivr add loopne pop pop sbb je cs insb sbbl ror add nop and je pusha and and push cmp daa adc (bad) jbe subb out cmp lock add adc test jle outsb jge,pn fildll dec push or je mov test cs jne push movb jp cmp (bad) cmp xor clc add out add pushf jno pusha mov push push (bad) leave pop (bad) jns leave push or sti les hlt inc adcl xchg loope aad movsb repz jo sbb jp orb jmp (bad) xchg addl negb ret dec sub decb (bad) cmc push test adc aas push aaa xor ds jmp xchg pop outsb jne inc add dec add or (bad) popf or mov movl add add mov pushl adc sbb repnz push jne cmp mov mov or mov jg in in shlb push outsl bound cli xchg push mov hlt jl xor add iret and xor mov pop push incb addl sbb insb xchg xor (bad) aam or xchg ret fwait xor mov into jne push out (bad) ffree adc jo adc insb pop cmp fistpll jnp inc push or dec out mov int3 mov ret je not mov push clc cli mov dec sbb (bad) jne (bad) xor or (bad) loop fdivs jecxz dec inc hlt xor and push clc pop enter mov or and insb (bad) or mov rcrl inc ds push mov cmp mov push pop jg fwait mov cmp pushl rcll and add mov and (bad) inc and and loope inc lods aas out sahf clc mov into adc add outsb jne push pop incb add das mov or cmp sarl out pop jb inc out xor push add pop test xor in cmp les fbld (bad) jmp push dec pop xor aad movaps icebp xorl cwtl ds and push jne adc pop adcl iret inc xchg popa outsl out pop in cwtl jmp xchg push xchg adc mov push or and scas mov mov sub inc orl call pop xchg mov dec push bound or dec sbb popl cmp lcall dec into and push add sub in stos push out xlat or add cmp movl or mov enter push or sub push sub (bad) mov inc adc sub (bad) (bad) sub xchg cld shr cmp imul jne jb hlt push dec add or add xor lea movsb fisubl or adc or (bad) (bad) pushl sar dec cmp jbe pop xchg push dec or push and push pop clc pop xorb jmp dec add shll pop mov lock jne add sbb dec loopne popf add cmp subb push mov add hlt mov addl or xchg pop clc and idiv adc and sti add xor dec pop cmp cmp out into pop fimul andb cmp je or aam or fsubl subl mov push jg (bad) and add sbb dec lock mov xor int3 in push inc scas add dec pop add sbbb add or jo add ret into fimull test addr16 mov mov dec pop or or push (bad) loope cmp jne mov mov inc mov push jae cmpb lret iret lock push or pop mov or sbb sub lods dec rolb mov or mov mov sbb push dec cmp fldenv sahf rolb nop loope testb xchg scas shl add scas jp push call aas or pop gs push or adc andl dec inc popa mov adc push sub xor sbb jne push insb mov lahf adc or and mov enter jle inc fldt enter push lea sub les mov jle cmp or enter jg mov daa xor imul jbe in dec (bad) outsl iret xor xchg shr (bad) sub sqrtps cmp sbbb hlt pop push adc mov push pusha lods mov jbe xchg sub dec fldcw mov loope adcb jbe push inc add inc fucomi fwait orl and add or or (bad) movsl test mov sbb xor push mov shr stc mov imul lret cli inc clc pop mov add daa xor clc rorb jne into sti pop addl repnz sub sbb xchg add push mov cli out ja lcall pop incb dec clc incl and (bad) lea push push movl lock call dec jne inc mov add loopne dec or pop pusha sahf dec fsubl adc sub sahf fbld push stos cmp mov pop decl push mov jne or shll shlb push or mov xchg jo adc cwtl jge xlat sub inc lcall insb fldl sub dec cmp sbb (bad) dec adc je dec (bad) mov ret pop inc sbb ss cmp jle cwtl inc sar dec cmp push push dec aad sbb pop inc push cmpsl or mov xbegin inc add shrl pushf jbe pushf nop mov lcall adc mov add mov jo inc outsl ds add incl cmp mov cld aad imulb mov sti jbe mov adc mov or (bad) mov or cmp (bad) jmp sbb adc add and and ucomiss test cmp jg (bad) cld mov (bad) stos insb xor add add mov mov mov clc js jns dec jl lea (bad) pop or mov inc dec insb pop xor or sar dec cmp pop or movsl pop mov loop inc cld or loopne fstpt cwtl inc lock fisttp xor cltd dec push flds push sbb cwtl fidiv inc roll ja stos (bad) adc loope push cmp adc dec lea mov jo fcoms add jns add lods push xor lods push je mov bswap mov dec mov rdmsr cmp and dec inc mov adc pop pusha push add sbb add loope push xor push xor push cmp popa in fs push shr and (bad) pslld or rclb jecxz jmp inc fildl push and and push ds fadds int3 mov or jg sbb xchg jmp jmp mov sub inc lock rcrb lock dec in cmp adc dec icebp push pop (bad) dec pushf pop adc add fs mov cmp je mov cld imul je mov orl jne cmp xor dec push pusha movsl addr16 cmp cs jmp shr dec lock gs and jne mov push pop fdiv int3 sbb inc test inc push pushf mov sub icebp cmp pop lea dec xor dec xchg pop cmp jge add push int3 iret dec ljmp out pop mov decb jne (bad) pop mov or sub dec loopne xor int3 dec mov pop pop js dec pushf dec bound mov clc into and lret scas pop xchg add adc das pop mov add or pop das popa or xor jge inc or ret std hlt icebp out or inc cld or call inc or push add mov adc stos aaa shrb in jne add stos mov xor lock lea jne,pt cmp loope inc cmp add nop or (bad) mov push pop xor out std sub movsb inc je adc or mov mov data16 cmpsb or xchg pop jo je int inc insb gs test das imul test fs outsb add cld push jg,pn or fistl inc rorb push lcall mov in outsb adc sbb push lock xor or bound lahf mov and add pop push mov and (bad) (bad) les repz in xlat lea pushl jmp mov outsb nop sbb inc adc movaps sub xchg imul and mov cmp fisttpll cmp push inc sub mov push sub mov pushf pop mov cli and pushf pop sub je mov popf je cmp into add ss and data16 pop testl loop les xchg and pop add (bad) cmpsb sbb xor xchg cmp or jns push jne call jb pop jno and xchg fldt cmp dec lods add fistpl loop xchg ret (bad) jae and imul dec mov rolb fcom insl stos daa loopne dec cmpsb push or push push push lds iret std imul lahf pushf jnp clc and bnd divl adc icebp push push push cmpsl and shl dec leave cltd adc xchg (bad) xor les in push mov (bad) cmpsb adc and push mov add test jle cltd inc sub (bad) mov inc jp insb outsl lock shr dec fucomp pop ja (bad) push sub jno add pop inc sbbl mov loope (bad) cmp jbe push xchg ret movsb inc and shll nop push les or in lea insb fs and mov jb pop pop ret pop xchg mov cmpl add inc dec jmp lock js or adc pop add inc pushf dec dec enter sub or and push jbe ret mov or stc jb or or fdivrp cli ret shrb (bad) jb push cmp inc int3 add (bad) call pop xchg movsb dec inc xchg neg xor insb xor xchg mov movsl adc (bad) xor inc or or add sub fnsave faddl pop leave dec mov fwait aad sub jae shrb and dec mov jne add (bad) enter idivl int3 or aam mov jo daa jbe mov mov mov imul add xor jmp add pop hlt add inc scas mov pop adc and xor add (bad) rolb test or adc bound and or jne jns cmpl push sub pop lret mov pop mov ja mov pop jge ljmp xchg sub je test or je dec je popa loopne ret sbb scas mov cmp mov or jecxz or dec push ljmp add ret jecxz push jne and and jns or or and adc sti add sbb fisubr aam inc pusha cs dec in inc call movl andl sub adc sbb add cmp int3 or push pop mov fsubr fcmovnu jmp push cmp pusha add jl dec jmp jmp xor (bad) mul inc jns aaa xor sbb sub aas inc and adc arpl call or lds cwtl mov imul mov push add and or or clc inc stc test ss xchg inc adc stc mov jg xchg addl jb (bad) sti mov jne cmp das mov inc and pop sarl in in jge pop adc or lret inc test test or cmp repz shrb int3 test push mov mov push push push push push and and sbb and push lds push jo mov shrb push mov inc in incl bnd lea lea or xor pop sbb int3 movsl loope xchg lret push push (bad) data16 je mov (bad) mov push jo xchg xchg jbe mov and xchg xor cwtl xor inc rorl shrb pop push adc adc and pushf pop inc add mov jno lcall pushl add sub mov add lcall (bad) call and rcrl ljmp push inc cmp mov cmp fwait push rol ret push outsl cmp add push dec push pop outsb ffreep mov mov loopne aam ret mov cmp jg jecxz push (bad) ja push or jo xor (bad) jmp (bad) jnp out imul sub pop sahf and movl mov jns rcrb jns cmpsb outsb sahf sbb stos add decl jg xor push outsl sbb aas push push popf push aam jge cmp arpl rorl mov aas fnsave (bad) jmp sub sbb adc sbb xchg cmpsl ret pushl mov mov cmp dec sbb cltd inc adc lcall mov pop (bad) aam and je repz xchg clc popa adc (bad) lea cmp in stc and dec sbb dec test adc inc outsb xchg ficom pushl (bad) adc xchg xchg adc ss dec dec dec sub xor dec dec dec sbb cmp in (bad) data16 adc and leave leave leave dec push push pop leave leave leave leave pop pusha fs insb jo js xor sarl dec dec xor mov adc leave and xchg cwtl pushf (bad) and dec mov js jns pop xchg xor jbe mov dec and movsb and push add xor xor lods int mov adcl dec dec xor sbb sarb and and pop cltd repnz mov or push dec (bad) cmp fnop cmp je inc jle dec loop or mov mov push lret or aad pop pop or add mov or ret add jmp jl mov inc leave ljmp sbb inc pusha shll and sub push xor dec push fsubrl adc cmpsb aad add pop faddl or aad cwtl push jmp sar adc rcll jo lock mov mov inc inc mov push jmp sbb mov out jns int3 fmuls movb insb adc mov pop add cwtl add mov lock icebp or lea repz add adc sbb test xor add and sahf inc add push cmp xchg pop imul (bad) mov mov pop push rorb shlb push inc push dec int3 mov lcall inc into mov cmp pop pop ret jb mov sub add sbbl pop sub inc adc js push adc and xor sub pop into jle cmp mov (bad) je pop js hlt sub or pop adc ret pushf (bad) sbb xlat adc ficompl jge or add fimull push push dec and outsb popf outsb push pusha std pop jg pop int3 fs jg addr16 dec mov insb mov in loopne pop lcall or inc std pusha pop je push ja jnp xor push je inc push dec sub test add mov into or loopne es rorb adc test rorb push pushf sub lsl sbb or test mov pop rcll (bad) cmc adc add je and nop jo ljmp mov push adc sub push xchg xchg xor ss mov mov sbbb xor add int3 popf xor or in lahf lea psubsb rolb je or jns inc call xor stos mov sbbl mov jnp in cmp mov in insl adc rorb imul mov push (bad) sub or jle ja mov jno pushl sbb push add and push pop aad sbb push dec loopne addr16 imul (bad) or ljmp cmc das (bad) jno cmp orl and inc adc cmp xor and sub pusha es insb and mov inc pop lea rclb imul xor adc xor pop leave pop push mov pop jle stc add push nop push fs ret or sub or arpl add pop (bad) aaa add mov mov test jne sbb xchg mov adc dec dec or and pop je (bad) lret ljmp adc (bad) mov pop addr16 pop pop ret and push insl fdivl rcrl lods or (bad) pop rclb cmc popf xor add adc pop push and in je andl push inc add ret pop pop jbe add dec or push sbb cmp repnz sbb push cmp repnz add stos and mov pop mov mov mov mov push mov push sbb imul pop rclb cmp add mov addb mov cwtl dec fs push gs push lods scas into mov sbb lods cmpl xchg inc push addb push aam mov inc add outsl cmp xchg or jbe sub sub test push fbld and dec cmc icebp cmpsb xor mov pop xchg (bad) push ljmp and dec mov xchg test insl pop movsb mov (bad) mov adc xchg mov pop lock mov je mov dec cmp lds ss cmpl nop test push or push or mov push loopne dec push mov adc xlat mov or push push pop pop pop pop push cmc xor mov or sbb enter ja add je rcrb les (bad) aaa mov xchg cmp ret sub rolb rorb sbb lcall clc mov jnp test mull (bad) cmovns testb out popa pusha data16 inc ljmp ljmp div pop dec adc fucomp or mul pop jb cmp or cmp adc (bad) push jbe dec sub sbb xor lock sbb adc lcall out movsb cmp pop ret loope lds enter ficoml jne mov or dec lahf mov add pop adc push std cli adc push xchg popf fs jg push mov mov add push inc test add xchg clc push js sbb dec or or sub push fistpll and js mov aaa inc clc dec js add push sbb dec sub push cwtl imul imul xchg pusha mov add (bad) incl addb cmp jne orl jmp adc jne adcb (bad) mov inc adc (bad) aaa inc fildl xor jmp adc cmp je cmp and sub adc jmp fbstp out jne pop jne dec add add push push sbb sbb out xchg lret movzwl test je add clc mov (bad) adc sti mov mov sub cmp sub add ret popf in leave cmp jae bound cmc scas xchg mov jb jo jbe sbb mov sbb mov aas add icebp adc jmp mov scas pop jp add fdivr out mov pop adc sbb rorb mov mov js or pop lods xor jbe cmp mov push cmp jecxz call pop mov and mulb and in xchg imull jge jmp mov xor pushf or cld sbb jne push sbb nop sub call lea cli loop dec shrb mov pop mov push es fdivs add cmp and fdivrp jb cmp ja add cmp adc (bad) cmp andb cmp mov idivb idiv rcll adc pop pop pop leave popf int3 out sbbb test imul mov push das je mov mov lret je test push mov mov out shl push add add adc stos or lret (bad) stc xor mov iret xor push and or and mov out jne movsb xchg or add and movsb enter mov repnz fdivl sti jns aam xchg pop addr16 (bad) outsb add jns std cld jmp lahf pop and js jge cmp ret mov movl inc adc out sti mov jle mov xchg (bad) xor adc adc test lea mov or lods adc and addb push and lret add rcl or shr inc add cmp cmpsb sbb add (bad) or add (bad) cs pop je cld inc or and rolb mov ficoml mov sub loopne pop pop xchg push inc mov xchg cltd pusha jnp lock inc clc cwtl orb movntq lods insb mov pop pop add pop cmp xor movl lret arpl pushf mov mov sbb mov push xor xchg adc xor add out insb and and popa jne test push fisubl std mov mov mov add test (bad) fadds cs or xor cmp mov inc dec mov add sbb inc aaa push and mov fucomip adc insl clc xlat inc sbb xor fmull cmp popf sub cmc jge std push rcrb (bad) xor xor push aam pop inc rcr fcoms push xchg sbb mov out xchg add inc adc jo rorl push test or data16 adc fnop xor inc and inc jmp jmp stc mov sbb adc loope popa pop jne adc stos jp js jne (bad) mov test jo push add jnp hlt sbb addb pop arpl cmp sub mov inc dec pop out rol ja mov jmp fs xchg addb sbb dec adc mov cmp ja jle pushf cmp jge cmp decl add or fldt mov adc sbb pop dec cmp jbe andl or mov mov mov int inc add ret aad cwtl bound out cmp je push icebp (bad) lods xlat push inc xchg cmp adc dec int3 push adc mov test add jbe push mov js icebp pop jmp and push repz sbb xor and cmpsl hlt pushf lcall xchg pop (bad) call adc (bad) push pushl lea push or ficomp and xchg inc (bad) sbb and push call sub or mov std mov loopne movsl addl loopne je idivb mov inc mov ror inc inc (bad) pusha cmp cmc pop ret inc xor pop inc xor gs sub pop in mov jo and mov mov jae or mov rclb mov mov lret or scas inc sub (bad) je,pn push push lea mov add pop pop mov xor add mov imul (bad) outsb xor cwtl enter into dec popf pop add int3 sbb ja jnp mov dec je mov jbe,pn pop or icebp mov jmp punpckhdq stos pop sub sbb cs sbb jno jp mov call add lods push and or and inc movzbl addr16 mov mov inc inc lods mov or push mov inc ss add mov cmp cmp cld pop (bad) ret loope mov or fidivl xchg adc inc das jne inc push adc cwtl inc lock vpcmpgtw or out lcall cmp je mov cmp pop jne dec mov inc push in mov or int3 (bad) fldz call fcompl repz add leave push leave jae pop and sub push ljmp fsubr adc (bad) hlt dec cmp and inc adc popf and fnstenv push test out cmc ja push push add push aaa adc fimull pop pop sbb pop (bad) or mov fsubl fidiv push arpl dec mov or cmp jmp add cmp jbe cmp inc pop dec or in adc inc xchg ja push jmp push sub push adc xchg or lahf rolb sub adc add pop xchg out mov (bad) (bad) jge cmpl mov jne movb lea adc and or hlt rol (bad) adc jmp inc and lock call loopne loop lock js lret (bad) jmp sub add pop push lcall mov insl cmp pop inc dec sahf xor push inc xchg push sub inc mov mov neg es in dec movsb rcrb add mov push or jne dec or sub add outsl xor cmp jne mov adc rolb loop xchg test dec xor add or adc push aam sbb addl es jne pusha lcall outsl or jl ss jbe jle lock daa adc jge dec mov scas sub push lahf adc rcl popa fwait cmp xor jecxz cmp mov jmp cmpl pop push mov dec jge mov out add mov js push sarl fcoml add pop adc xor xor lret or jge xchg mov jno test pop icebp mov or in add cmp xchg xor fdivrl cmp push cmp or pop add add addl pusha adc decl push xor lret (bad) mov inc addb mov outsb sar adc pop add xchg jle ljmp sbb iret inc je cmpsl pop mov or cmpb jbe jb rcpps xor mov sarl mov enter and and add sub mov ret inc sub leave and add fs popf popa movb (bad) xorb enter pop sbb in js rolb fistpl and loopne jecxz ljmp dec rorb (bad) jne pop (bad) xor sub pop inc cmp add (bad) xchg aam push dec test dec mov cmp or aaa loopne loopne jmp pop xchg or (bad) add jg ja cmp jbe or hlt xchg das insl popf cli scas jle mov ss bound movswl les loopne into xchg jl add sbb cmp add cli dec sarl insl cld aam hlt shrd push or inc mov mov adc jge sbb mov or rclb cmp ds inc xor xchg adc add dec jmp outsb in sub xchg pop add push inc mov rcll jp or daa fsubrs add (bad) mov pop adc pop jo mov inc out and outsl (bad) jp pop sbb js jg jb push sub (bad) mov cmp fidivrl rorl fistp shlb inc (bad) jb push mov lret jo add incb add andb mov jne and jg mov lods adc dec inc inc inc cmp inc repnz stc dec pop or or or rcrb add daa adc xchg push mov mov stc mov roll add cmp fiaddl int (bad) push lahf and cmp adc cmp mov data16 or mov and sub mov inc push (bad) divb jmp sub inc sub out int3 jge mov mov int3 jbe or sub lods bound mov pop sub or les xor xchg add adcl mov cmp imul in cltd mov repz (bad) sub cmp jg sub mov push cmp jbe mov dec mov inc rclb pusha adc sub add lods xchg push push imul jmp insl jb pushf roll pop clc cld jl add pushw js hlt or mov das loopne in mov fsub into sub mov sbb gs or lods xor imul or pop data16 addb loop (bad) mov jge mov popa je or sbb xchg dec mov xor inc sbb aas jns jmp cmp sarl cmovo test pushf sbb scas add cld or insl xor xchg add fwait cmpsl test add adc cwtl fstp (bad) call jne fmull insl push pop clc fstps or rorb add stc mov das inc dec adc mov push mov pusha sub push jmp jo sbb adc (bad) sti inc inc add dec lea cmpb (bad) (bad) in and je adc push push pop add testb fdivp pop or outsl jae jnp test sbb or mov ljmp sub dec inc loopne cmp or mov out mulb jle sbb lea (bad) sarb xchg mov or push movsbl imul jne imul adc xor cmp jl mov dec ret shl dec or add fdivs rorb jns call movsb fild je into lea aad jmp inc orl lods cld add push pop out (bad) pop jmp sahf adc dec add lds ret dec dec ret add sbb adc stc add imul push sbbb jnp mov mov hlt sbb sarl dec dec or sub movsl mov cmpl sub or mov subl ds lret das mov test and popa add dec jl movsl mov dec or bnd pusha push shll ja jno aas add popl ret loope stos enter rcrb sub arpl inc add dec fdivs push push dec call dec xor adc js or (bad) fstpt xchg hlt (bad) add idivb mov pop mov adc iret popa ret pop mov add xchg call mov fcmove add add cmpsl sbb add int3 push add lock pusha cmp xchg inc shlb add mov loop test inc add xchg fsubs icebp loope pop outsb sbb (bad) inc dec push fidivrl xor lods pop push lahf xchg and cmp sub in mov inc lea (bad) jae add pop insb push iret add roll aam add cmp jae push stos xorb inc push std mov or les push push movsb mov ja adcl add add sbb adc pop mov cmpsl adc push xchg and mov or add pop mov rorl cmpl pushf cmp sub push pop jne dec cmp ret cmpl xchg icebp adc sbb xor movsb push shrb inc cmpsl mov add adc lahf stos inc inc dec inc push pop pop es add cmp adc shlb or (bad) loopne or test fstl mov inc or push sbb jl or ja xchg cmp test push and xor sbb (bad) mov sti repz mov loopne xchg ljmp test je insl stos (bad) cltd mov ja mov inc je out mov dec mov mov jmp cmp jne jnp mov ja popa xchg je mov (bad) pop nop xchg sbb jmp push cmpsb inc xor push testb pop mov add dec cmpsl int3 (bad) adc push insl push dec pop sbb and inc mov pop call jae fs adc adc aam cmp or dec je in cmc pop dec jne xor push pushl scas mov jno push sti jmp xor push add xor mov xor xchg push add std and xchg mov add pop add add pushl ljmp ret into or and insl orl dec or xor pop cwtl jo sarb jo mov and mov add fiaddl (bad) aad arpl cs sbb jnp pop je pop (bad) add push mov fcomps mov rorb inc sbb add sub push sub aad xchg mov mov mov cwtl xor push cmp jl sahf jg pusha inc xchg push add adc loop hlt faddl sar aaa mov nop sub inc jne clc cld jge dec mov data16 push mov in mov cmpsl and adcb add scas push push mov dec push pop ret cli dec clc jl enter or sbb pusha test jb mov in test stos adc or test add into push add xchg test mov movb lea sub cmp test adc fwait mov or push push or sbb into mov mov mov xorl mov add sbb mov xchg sti jnp popa push mov or orb pop mov outsb lods gs add or xor dec add (bad) push or add mov adc sbbb and jno xchg and pop imul hlt add adc xchg xchg mov ret pop cmp (bad) into cmp push adc shlb rolb mov mov pop and jle mov sahf ret pop rorb call ret add inc jg adc orl call jmp sbb push popa jne repz pop push xchg cmp or out pop mov sub mov nop cmpb or jmp bound mov test pop std cmp (bad) hlt mov jmp push cmp stos nop add and pop sub push or adc sub xchg and mov mov or faddl hlt subl aad xchg sbb xchg cmpsl in cmp mov les cmp sub and in (bad) push cmpb sub push cmpl stos dec pop mov movsb jg movsb adc xlat je cmp gs into or inc and lcall add dec inc inc and pusha add sbbl flds push (bad) xor cmpsl jb mov jno dec xor cmp jbe mov add lock or adc enter push loope or rcr jmp popa and mov std cmp mov test mov addr16 outsb test test sbb jo fstpl or in es jmp fs pop xchg pop mov mov sub inc out and and cmp xchg mov and lods pop ret inc push xchg push xchg ror push in inc loopne push addr16 xchg (bad) shll sub sub dec fs loopne (bad) bnd imul icebp push or shll jb push push mov pop testl add mov sub and jnp loopne in push or rclb jge mov jecxz int3 inc stos push add jb pop xor pop arpl push in ret adc inc pop dec push mov repz inc and loopne (bad) jb cmp jb aam pop cmpb loop add inc adc jb nop mov inc insl test add jbe and mov mov add (bad) jbe dec call das clc ljmp test push or mov lahf or in loopne cmc and in ds cmp and pop loopne pop rcrb push ja addl push push sub sub icebp imul rcl mov add pop push mov mov mov clc pop or add insl rorb jbe cmp lock jl xchg cmp mov adc jmp sbb pusha insb push jge sub or inc movsl xor adc lods and sbb or or jle mov mov mov loopne fnop cli xchg cmp jle cs push ja js nop adc leave cmp inc jmp inc pop test push shrb mov adc and add scas imul xor mov add adc push xor test adcb fisubr idiv (bad) pusha imul enter test lcall aam xchg dec in push xchg sarb and xor (bad) ja popf pusha sub pop xor inc inc xor and adc mov push xchg mov adc cmp adc inc jbe push mov jle mov in arpl mov pop add dec adc jp mov fldt sub pop popf loopne jne out adc aas xor les (bad) lsl rolb lahf and sub push cmp pop pop lds shl or fbstp cs push pop push mov fisubl int3 out sti xchg iret add mov les lcall xchg call daa imul sbb add call pusha jl ss xor test dec xor push enter sub (bad) mov xrelease push subl in imul orl rcrb add addb cmp add fisttpll mov imul mov inc mov pop sar (bad) mov cmp lock jl cmpb jl lock fwait mov sahf cmp add push inc xchg sbb jg imul cmpb movzwl push or add push sahf or add mov dec enter adc fldcw and lret fs in pusha push popf push or cmp sub lods xchg sub jne,pn movsb and jbe mov (bad) aam outsb sbb dec dec fistpll popf add (bad) adc pop aam loope or shl test in nop add push icebp sub xchg flds shlb roll leave add jb (bad) enter (bad) or or insb cs push popa mov pop mov ljmp into adc mov outsb in outsb mov cld movsl movsl movsw xor push and pop inc les shrb movswl add aaa or jne ret and js (bad) cmc add test sbb dec les adc jge inc inc cltd dec cld pop jo fdiv fiaddl icebp pop adc int3 les mov sbb fs xor push pop mov adc rcr xor pop xchg cmpsb fcomi sbb bound mov adc (bad) int adc and fildl icebp int dec jns cmp xor mov daa pop pop pop push cmp jae cli mov lods rcl ljmp dec and shr add pushl pop pop idiv and negl dec clc adc push je jmp adc mov push or push sbb add jmp sti (bad) dec sahf inc pop je pop mov jmp jno enter jp jmp push push mov inc and es jbe jb daa push lock add pop je push (bad) or adc out or aaa fildll dec or inc inc or xor mov imul daa add and sarb or push mov fwait mov jne aaa or push lcall jne sbb jl add pop adc adc jge stos stos push stos pop pop andl rcl or outsb jge sub xor mov fstpt pusha lods pop add sub pop hlt aaa loopne rorb fisttpl int3 sub inc sub test fnstcw lret loop rolb mov push in fildl inc wbinvd repz cltd insb pop and insb add push dec or adc clc test push sub and or mov les xor or cmp jmp dec sub jge dec xlat cmp cmp pop add jae dec mov adc ficoml adc jns sub rcrl ds add jge push pop ja enter xor mov ljmp sti cmp dec dec stos push jecxz inc lcall pusha nop loope xorl xor cmp push imul movsl xor xchg cmc mov or iret inc xchg (bad) out and push cld not add cmp les xor (bad) mov ds push or push pop mov and mov jl (bad) push cltd push inc outsb sbb pop sub sarb je mov cltd xchg aam push jge sbb xchg test pop in jnp push dec mov hlt test jb mov pop out push inc mov sub add push xorb maxps daa mov pop or popa call dec sbb ror dec jns adc mov mov or rorl cltd insb inc or add sbb mov xor inc add gs les shll lret (bad) mov andl sub push into out cs (bad) (bad) jle lea and push sub or push sub inc jo cld mov jge sbb nop add aas scas shl xchg neg sbb out mov or or mov sbb cld or cmp pop push or push faddl xchg int3 stc and mov or mov sbbb nop repnz inc push mov pop add xor mov xchg subl dec pushf andl pushf inc or adcl add andl add dec test pop mov push sbb fs pushf cwtl sub xor xor fsts or xor push lods mov mov or cmp jl std sub add jmp xor stc or xchg mov lahf and and pusha mov cmpsb enter lock lret adc jmp pusha and or fs (bad) pusha shrb jge call or cs into jmp clc orl sbb mov sub push jmp cmpsl mov imul xchg sub push sbb mov inc cmp orb jle cmp push xor in sarl push jmp dec push mov xchg jbe sbb jne push sub data16 pop pop arpl add sbb jg cltd hlt adc jae divb out push push pop jge (bad) pop jle scas jnp cmp test out add andb imul xchg aad cmp add and push and push xchg jo dec (bad) xor pop push sub je adc gs orl pop pop andl test jbe lds stc sub cmp jbe jo test mov ret add inc scas call out je mov and insl insb es mov mov sub js adc fadd incl add inc (bad) dec mov jmp jo xor test fsubs sbb or mov cld dec sbb and inc aaa add sub stc fdivl dec mov xchg in das inc pushf jmp push cwtl pop xor xor mov push sub into dec cmpb hlt sahf add jo cmp adc add push rolb xor dec roll adc sub shrl inc sbb xlat test les cmpb mov mov ss lods dec mov and or (bad) push out shrb decl (bad) mov adc out lods sarl add jo and (bad) das or (bad) mov cmpw jb mov xor and mov mov cmp push into ss sub pop jb ss rcrb xlat iret and push imul push lcall adc frstor pop (bad) std mov aas ja fwait enter xchg popaw xor inc testl fmuls les and inc in cld cli jg sbb pop cmp jne cmp jne aad in pop cmp dec in pop cwtl xchg push and (bad) pop pop cwtl dec test leave rcrb and (bad) or push cs fnstenv mov outsb mov or mov lret sbb cmp xorl xor fwait mov pop cld je in addl subl insb fcom sbb sub push mov sbb push les mov mov cmp mov insb shll (bad) sub mov add or adc ljmp or das pop mov sub adc (bad) jg jg sub mov neg inc icebp data16 push add add js sti xor push fcom insl mov pop shr ds pop fstpt dec mov aam sarl jne mov out pop push adc dec jle insb xchg andb bound sub (bad) (bad) fcmove rorb jge in xchg adc dec xchg ljmp or ficompl cmc inc cmp jae es cs out mov (bad) es push jp jge hlt push jo add sub pop sbb adc data16 add insl icebp int3 movzwl jne push lret das loop shl sbb idivb fiadd adc push xor insl imul jge or loopne add or mov popa loop add lcall mov jns sbb push fwait inc and subl jo rorl sub aam js pop loopne mov loop iret sar xor movb push rcl sarl repz aad xlat fsub shl (bad) sti fstpt lcall xchg je movb jmp or xchg rcrb aam cs sub sub cmp enter push test or addl push add add cmp mov imul jle les sub movsl (bad) maskmovq testl xchg pop das push pusha je adc cmpsb or cmp das or sub dec (bad) les push lahf xor mov or sub push test or push outsl push in or es adc lea adc add bound insl test or dec or mov push fdivr adc fnstenv mov mov aad fildl cmp out loop sbb adc insl aas cmc mov push ljmp xor cwtl pop sar add sbb rcr leave inc mov (bad) jle adc mov sub fadd test mov idivb ss xchg into xor mov dec and and xor fisubr and leave sub dec add imul cmp inc cmp lret sbb (bad) cld lods cmp std sbb jne inc imull mov dec add loopne (bad) or mov rolb cmpsb pop dec inc roll xor inc dec and cwtl jne sbb mov loopne fstps clc int cld sub jle lea outsl xor ret mov jne jp (bad) lods data16 jg addb xor add dec inc push imul pushf sbb loope in xchg test lods add add inc push movsb sbb shlb mov mov hlt xchg (bad) sar or jb out adc or xor (bad) add lock add sarb jge mov neg movsl add inc pusha mov pop mov sarl shr scas rcrb mov adc mov pop add mov mov xchg lock sbbl repnz lret aam in idiv sub in cli div mov push sub int3 (bad) fiaddl fsub and rorl sbb jmp inc pushf popa ss les add jg lock shr idiv test push aas mov pop pop sbb cmp mov rorl or rol mov jecxz mov xor sbb pop repz mov or push scas inc inc rcl inc pop mov inc scas dec inc or inc fmuls adc inc inc mov inc mov jo jno lods push mov mov push mov out mov mov push cmp aas mov in fidivrl add movsb mov add jg subl mov xchg das fisttpl ficompl test mov mov leave adc mov rcll neg pop add lahf and push sbb cmp sbb dec (bad) cmp sbb xor xchg lods bnd leave jo sbb adc xchg inc pop (bad) dec sbb xor and or jmp mov in popa sbb stc push fldenv repz addr16 or pop dec loopne mov aam lock je movswl add xchg daa and js lds fwait inc add incb add cmp pop movsb subb add pop push out adc sub mov adc push jge (bad) push loopne call test mov add pop rclb fiaddl neg imul xchg addr16 insl push loopne data16 cli fisttpll push dec test imul add lea mov push jo ret (bad) mov ja jbe dec movsl in xchg loopne add mov mov cmp sub mov pop or pop xchg mov add or test mov rolb ja fcmovu lock inc enter fdivrl xchg mov (bad) jae add push add cmp out add sbb testb mov fdivrp dec mov mov test in inc jmp push adcb dec cmp jge out inc subb xor movb dec cmp lahf (bad) mov incb sub cmpb loopne fdivrs movb dec aad and xor je mov aad jae push jno mov lea dec and or push nop add (bad) in cmpsl or test add or add push add dec inc mov pcmpgtw loopne add push mov mov cli je pcmpeqb pop dec pop xchg into je into adc ljmp insl inc xlat jo or pop jne or int or jmp or lods cmp je adc adc dec test add pop sbb mov add fisubr xchg xchg xchg adc or jae ret pop or (bad) mov mov add xor into pusha sbb inc inc dec ss int3 add shll jp mov adc or xorl out ret or add pop push f2xm1 xor scas pop pop dec aas pushf sbb and jnp (bad) adc add loopne outsl loop add loopne int mov (bad) mov dec lea mov aas pop sbb aad or sbb mov int mov enter mov add jo test mov sbb clc xor insb xor outsb push shlb ret cmp cmp mov push push clc sbb mov mov xor orl out fchs dec xor adc add dec adc mulb addl sarl sbb add inc fnsave decb scas pop jl jnp cmp xor test jns pop test sub or add or push jns add add mov or add ja jns cli je push inc mov jne dec push cs dec mov into mov repz inc pop sub sub loopne pop mov pop out icebp pop test mov and adc (bad) or jle negl add popa mov icebp loopne insl sub adc xchg or mov add in popf lret adc xor mov popa leave leave andl cltd into xlat (bad) jg xchg xchg add lret leave jno sbb xor jbe mov add add sbbb push adc incl add pop push cmpsl push movl dec decb add add and call movsl andl lea lea or inc repz int jle leave or mov test mov shr sub pop lock (bad) xlat bound cmp lods pop sbb and sti pop pop add in mov pop add je xlat jne scas push (bad) loopne test push fimull xorb push cmp aad sbb pop (bad) jmp into push addl or inc cs cmpb cli mov and xorb or adc ret inc pop insb jp adc icebp (bad) pop fwait mov (bad) mov mov jl iret adc jne dec movsl adc cmpsb cmp mov xchg or and push lds cli mov or iret (bad) or lock rolb aad push (bad) (bad) lret test xor xor into dec stos testb add icebp test int test adc je add data16 mov push popa add push (bad) mov (bad) and sbb inc les test inc pop mov and pop push mov into inc mov or sbb sbb or mov ret add mov enter mov scas inc dec and mov push xchg and sbb enter pop mov das mov mov sarl jne sti mov mov push xor js inc jne and inc sub enter lea push fcomps add sbb ss fadds dec (bad) pause inc cmpsb sbb sbb and inc es cli sahf add cli movaps push sbb shrb and xor out push rolb mov mov pushf movsb lea cmp cmc or dec in mov cmp cmp mov push jae and ret cmc sub push popf push jmp add and adc btc or ret sub testl push mov add lods pusha adc jl xor adc add cmp cltd test pop mov fild fs out sub and sti jne in and jnp adc jno jp adc in cld jnp hlt in pop stc jl pcmpeqb adc pusha sti cmp and fs pop sti and iret dec negl jnp and js pop sbb jo push cmpsl js mov test (bad) jne fstl and add movsb sub popf daa addr16 mov add cs cmp arpl push dec ds inc add jo push in dec fimul pop mov mov cltd mov adc icebp pushf cld jo adc jnp dec xchg add adc repnz insl ja incl pop repnz mov push lock mov in (bad) nop xchg sbb (bad) ror add mov imul daa in sub mov dec adc daa fistpl add dec or ja adc mov add mov jnp add add (bad) mov xchg jmp sbb add mov add movl int3 adc inc das out rolb inc add jbe fstl or xchg ja add in pop jl pop jle adc ja add adc negl fstl insb testb addb adc scas fisttpl lret test adcl push cmpsl (bad) ja xchg jnp pop mov popf xchg pop cwtl adc pop pop sbb testb xchg notb movsl sti outsb fldcw lods xor cltd in mov test push jmp popf jne sub dec es jne mov in std mov and je fsubr fdivl mov and mov fidivl hlt jmp jne in insl popl mull push mov xchg xchg pop or xor testl sbb mov push xor notl cmp and push dec add mov pop mov sahf popf add sbb (bad) loope orb xor in aaa test and adc andb dec inc pushf lcall push xor test ret cmp pusha dec sbb mov (bad) (bad) mov fcmovne add pop adc mov xchg sar sar jmp loopne loopne push mov scas loopne adc add inc push dec ljmp lret pop cwtl (bad) repz repz push pop mov mov repz xor push dec pusha jbe out cmp mov int out sahf and pusha xchg pushf into out idivl or (bad) push inc or divl iret insl test xchg mov add sub push incl (bad) jbe fs push dec inc cmpsl inc dec aaa cmp mov call mov imul adc rclb sbbl rorb cmp add xchg test rorb outsl pushl popa je and add inc outsl jo jb addr16 xor pushl xor xor dec gs outsb sub and imul mov add or adc cmp or push add add add mov addb mov (bad) add adc mov add adc adc in out fsubrp push adc or pop or sahf out sahf or js out or and mov add pop jb add or xchg outsb inc push pop pop or dec dec dec dec or or inc adc ljmp notl adc pop or or or (bad) jns out sbb out sahf out in sbb pop sahf out sahf fdivrl jl add out (bad) inc ret out sahf out loop xchg push sahf out sahf (bad) xor sahf out mov sub push sbb sahf fidivrl mov sahf out xchg cmpsb out sahf out out xchg push sahf out sahf (bad) ss (bad) push jns out mov cs out sahf out out push sahf pop sahf out sahf fidivr mov sahf out addl sahf out loope xchg push sahf out sahf (bad) xor sahf out mov sub imul out sahf fnstcw mov sahf out test and out in xchg push sahf out sahf aad mov cmc or lea sub out in sbb jns fnstsw jns pop jb xchg out sahf out push rcl xor mov jae repz out repz mov dec dec lret lret sub stos stos imul sahf out jmp sbb out pop fcmovnu cmp mov jns out sti pop pop xchg inc inc mov sahf daa cmpsl cmpsl addr16 sahf out out pop xchg xchg out sahf out push xlat xlat aaa sahf out sahf aaa mov ja idivl out (bad) (bad) jg out dec iret iret das sahf out sahf das scas scas outsl outsl out jns out out pop pop lahf lahf out sahf out pop (bad) aas sahf out sahf aas mov cmp xlat jns xor and cmp repz jo iret repz dec sub pop cmp repz add and idivl repz xor add addl ret and lock out add out sbb add or add repz or push push repz repz push add or jmp sbb adc lock repz sbb pop xchg out das xor add add add or mov or or sub pushf cmp cmp adc adc test jb sbb inc leave inc sbb mov out xlat lahf in and aas adc adc in in adc push pop sub mov sbb push mov xor add adc dec or jno inc pop idivb mov sbb sub xor mov push pusha jo adc jns mov pusha mov push xlat or mov mov cmpsl pusha xchg sarb mov adc bound jb and insb gs pop or (bad) push push or repz pop and repz repz inc push arpl repz jae mov inc push mov mov add add xlat sbb and out xor add scas add push add add jns out or sbb push xor mov fiaddl or ljmp xchg push outsb imul outsb and arpl je outsl outsb jo fistpll cs imul outsb arpl gs outsl pushf ss (bad) jmp jb dec inc push dec inc dec xor cs dec dec outsl inc divl les inc insb jae jb rcpps push popa insb jne das jb leave inc inc insb insb outsl arpl jb js neg (bad) in je jb gs insl jae jbe fs add orb pop sub add js mov mov (bad) (bad) ljmp and and and es sub sub sub cs xor xor xor ss cmp cmp inc inc inc inc inc inc dec dec dec dec dec dec dec dec jmp lea pop pop pop pop pop aaa cmp add bound sub imul jg insb insl add jb je jbe js jp jl jle add aaa jb mov mov call rclb push and lods pop in (bad) dec dec inc sbb cmp data16 xor xor fnop add sbb popa jo insb imul mov and adc je,pn (bad) int3 lock and inc es push fadds jmp data16 dec cmc aaa sbb push arpl or xorb int3 and arpl daa mov mov sbb xor and insl or or inc cs fwait add xor sub adc mov lcall imul test in mov xchg jbe dec push test or imul fs jg and addr16 and je add dec in ds sub sbb imul pop test pusha xlat insb outsl mov fldenv daa sub add sub arpl lock inc cmp arpl pusha push sub mov outsl jb adc cmp imul out xor int3 or push pop xor sbb popa pop loop push xor mull (bad) xor push mov xor xorl aas (bad) inc add xor hlt pushf insb gs add lds (bad) ja outsl outsl imul shrl lods outsl call jo cli jbe mov sub or inc in xor pop push gs das (bad) or ja or lds (bad) cmp andb outsl xchg imul or arpl stos xchg gs push pop rolb fcmovb dec shr push pop shrl outsb or pop popa pop or cmp (bad) rcll leave (bad) mov insl cmpsb mov arpl cmp xorl addl adc push and or fldl mov addr16 jae scas insb orb mov pusha jo aaa (bad) pop ds fs (bad) xor pusha stos push sub lret inc sub pop mov and or add cmp lock imul inc inc jne (bad) fmuls gs dec and jmp cmp sub push cmp push gs pop ja mov outsl js ljmp ret or and add and add test mov add and push mov (bad) add add ret push ja add push and push and add je inc cmpsb add add decl adc aaa add xchg mov pop add mov rcrb add add addl xchg (bad) nop xchg xchg xchg xchg xchg (bad) (bad) (bad) call fwait pushf popf sahf lahf mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov outsl mov pushl mov ret (bad) (bad) inc (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in (bad) (bad) (bad) jmp out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) jmp push ljmp and xor sbb inc mov inc cli pop add cmp cmp (bad) roll fs dec and jns add inc cmp adc fs dec push sub ds or xor pop dec sbb xchg sub addr16 insb outsl xchg sub lods aam scas inc jo imul sbb daa (bad) bound daa dec popa outsb adc into mov xchg cmp sahf outsb jns jg addr16 popa in fild jb popa xchg adc jae jnp outsl daa push gs sbb dec outsl outsb cmp insb sti and jbe add aas out fimull xchg push and test add lcall jl dec imul push arpl mov dec inc jb jns daa pop bound inc xchg pusha and push jns mov add pusha insl inc insb xorps push cmp mov popa addr16 jbe mov addl gs addr16 jbe in jecxz dec dec push lahf fs or push movsl faddp mov (bad) dec nop popl pop sbb push pop or push add xchg fs outsl lahf lock push xchg pop pop mov stos mov push push jae daa add and pop or pusha insb call cmp subl inc jno and pop mov data16 inc loopne or out das push push push push dec testl dec mov outsb enter movsb xchg or dec gs mov dec imul call add xchg outsl jae popa jb mov xchg das gs imul movsl adc incl dec mov jg sub push jne push or cmp push (bad) je outsl xchg (bad) mov mov popw pop fstpt scas pop push cmp ds je repz and sub inc jl (bad) jae es addr16 jle sub sub add push jl clc out pop and sub es sahf fwait iret sub sub push outsl jo inc push sbb cmp add nop ds push inc in mov ret add jb divb addr16 insl adc xor mov push imul cld sbb or cwtl push popa pop push inc jo es jbe mov jl repz push out sub adc add jns out pop in loopne int3 jns jmp (bad) mov push add fmul mov sahf out mov repz aaa cmp xchg nop cmp repz cmpb cmp repz push cmp xchg push dec dec repz repz inc cmp xor repz xor and sbb iret repz adc or jns loopne add push scas push in out sahf out mov andb jns inc and faddl jns out push cmp and cmp or add push aam cmp repz mov adc ja in pop push movsb adcb out or inc gs or ja loope outsb test push dec jb dec mov add out dec clc mov arpl daa mov lea dec mov mov mov push dec inc test mov push push cmp pop pop push push inc data16 xchg mov dec mov fs (bad) or orb stos mov jecxz aas lret pop add and lret add fwait test inc add test adc or (bad) add adc or jnp cmp and scas and jge les lea daa mov inc popa imull xchg incl add adc mov ja add mov mov incl (bad) add dec add icebp test push dec add cmpsb pop outsb jns loope mov xor arpl fs mov (bad) and add push or out out (bad) ljmp push insb es (bad) cwtl sbb add push push inc out je add mov jb push jns insl scas insl mov jb add nopl or fisttpll cmpsb xor or arpl call arpl dec pop das add and cs insb pop lcall sub out xor cwtl addr16 hlt xor stos and mov fstpt mov jb inc push divl adc popa pop dec add data16 mov sub dec dec inc arpl outsl add ficompl outsb sbb sub xchg lock sub jb push ds pop push mov jge jo pop ret not outsl inc jb push add lods cs fcomps lret push sbb loopne jle bound xor js jo fidivl xor inc outsl (bad) ret imul roll inc xchg pop push inc dec xor adc jmp inc xchg jnp inc scas add mov jb xor loopne add pop xlat jo outsl add adc gs orb inc add adc ss shlb jae or pushf push addr16 outsb sub mov add push (bad) sub or dec popa outsb sub test inc imul jns jns insl sbb insb bound xlat pop adc xor std push push sbb aaa mov arpl test out and and add pop aaa jmp outsb xlat add mov or push (bad) ss out (bad) mov leave xor incl adc xor sbb scas (bad) sahf jne jae out adcl popa jb mov sti loop xor aas ljmp pop ret out push jne push and push cmp push stos jnp je pop cmp add mov aaa jae in ja inc xchg popa mov push vdivpd jae jbe aaa dec sub or das push andl and push push add pop push push dec int add push pop jle movsb je insl push add jnp xor mov mov arpl insl push inc add push ret inc aaa pop add inc jo mov add mov jnp outsl mov rclb and ja add pop ret xor ja loopne add stos outsl add cs cmp addr16 push fdivs jno jae dec fwait sub addr16 xchg daa ds sub (bad) (bad) insl jnp pop dec insl jg sti jo jnp loopne add notl mov pop mov jmp data16 out mov pop pop (bad) out data16 cs scas std js popa (bad) outsl lahf je insb push cmpsl scas jae xchg pop add stos jbe gs push or xchg lods aad out xlat je out xchg xor repz sbb addr16 add (bad) test inc dec arpl jnp inc mov jns imul stos mov outsb add add push xchg iret addr16 (bad) cmc pushl pop imul rcll fwait out mov or scas pusha sbb iret push mov xchg jne pop push cmp xchg xchg inc push test xchg and xchg sbb (bad) adc rcpps shll jecxz push add sub mov sub iret mov ja,pn negb lret sub frstor add cmpsb (bad) dec push das xchg push jns add (bad) jmp mov add or add (bad) out ret add xor cmp cmp jb (bad) pushl sub sub sub xor bound data16 dec mov aaa add inc cmp inc dec aaa xor jle int insb aaa xor xor inc add jb incl inc jb fs outsb push xor out lret mov inc out jnp ror test add inc adc push xor cli dec mov add (bad) mull aaa (bad) js (bad) lcall inc into push idivb push dec ss add inc sbb idivl out outsl add add inc or or inc pop je pusha push lea adc popa outsb arpl inc inc pop shll pop jb or cmpsb xchg dec aas mov ss rcrb push in jge inc push dec inc inc ja xor pop (bad) hlt (bad) out cmovg push cmpsl dec add scas dec add pop jg xchg in ret imul outsl or stos iret inc sub fdivl in sbb jo je add and push adc and mull aad les daa fistpll aam out je je and push dec adc and jb lock jo pop aas jae cmp sahf or das sahf and sbb add push ret or mov test and dec ja inc cs add setbe inc pop icebp outsb xchg jg add mov aaa ret mov out dec jae sbb cmovle and punpcklwd fmulp movsb dec xlat popaw jae mov jb inc outsl insl push fsubs jae jb or xlat (bad) jbe xchg sub (bad) pop cmpb push pop sub dec dec inc dec pop inc push inc inc in fildl dec push dec sub dec dec dec inc loopne movsl sub mov add inc enter (bad) inc mov lods nop testb aaa das and adc pop add aas mov arpl icebp inc adc adc pop adc and hlt xor push push adc loop cs mov dec popl mov jbe insl mov out mov xor sbb add out mov pop push scas dec push pop out add scas push sbb andl cmpl aaa aas (bad) pushl incl inc jmp fadds cmp (bad) decl aam mov inc mov adc bnd mov loope lods inc cmpl test data16 fldl xor fdivrp rorl (bad) ljmp loope and mov mov lret js loope popa pop cs jmp and aad sti scas mov cmp xor mov adc (bad) mulb xlat inc jg xor fs cmp xor sub dec bound arpl or cmpsb cmp test push jge push xor jne push push movsb enter xlat dec and cmp add jnp stos or dec add inc inc arpl push inc bound dec dec add popf add loopne aaa rolb add xor add inc iret lock imull aam or xor outsl mov and fisttpl add lds jae add cmpsl dec push mov add test xchg js pop pop data16 repz adcb lds data16 and push arpl inc push jnp cmp adc cmp xor pop xchg call and adc inc jo fidivr xor xor inc pop jmp mov pop sub xchg data16 cmp into imul add sbb mov dec popa (bad) add pop push aaa js cmpsb int rcll sub cld xlat add popa add jns and jo imul and inc jae test pop repz js fs int push addr16 mov or aaa pop mov mov lea (bad) mov add popl pop pop jae ljmp orl jmp or add bound and inc xchg cmp dec xchg pop scas jmp pop rcrb mov rol out cmp xor cmp cmp add aaa inc pop aaa pop jo pop stos xor push mov scas adc lock and imul into jo imul jecxz jo arpl icebp or xchg jo je insl fist xchg gs dec xlat push sbb addr16 pop imul inc xchg inc sti push push cmp stos ret mov sbb push add mov adc adc adc dec pop add adc sub push xor jecxz dec lds pop aaa inc add clc (bad) mov pop jg and arpl and mov mov pop push add scas test ja fs outsb xorb or jb daa jae outsl add and xchg dec insl mov lock fsubl xor in jae jae daa aas pop add cmpsb push pop dec xlat inc jecxz xchg sub add xlat mov jl mov jns add stos dec push outsl jg out xchg or mov mov push movq sar popa mov aad adc mov hlt push enter add sub inc or pop mov loop or dec das and pop jo scas and or or (bad) push adcl ja jbe push or add in sbbl out ja out jo arpl sub popa nop pop test scas inc lahf test and push adc inc adc ja rcl sub mov pop adc test push addr16 daa pop pusha fwait xchg sbb add pusha fsts cmc dec dec arpl aaa insb btsl cmp sbb or pop jns das sbb divb loop sarb popa insb pop pop pop cs fistpl stos cmpsb jns pop xchg xor cmp out dec add jae jmp arpl inc add inc cmpsl jg sub adc nop (bad) and add sub xor cmp sarb mov inc dec jae adc sbb or add outsb je imul nop movsb add out sahf pop jb or xor push dec inc dec cmovb jnp negb push inc push das add addr16 sbb inc jg in in or inc je pusha test fmuls or adc pop xor jmp (bad) pushf shl rorb loopne push neg lock jo cmp dec add mov cs lock and and dec insb xor xchg maxps inc adc (bad) push (bad) scas mov mov xchg inc jecxz test add rcrl fnstsw aam pop adc inc aas mov jp sbbb mov inc pop and push repz jns or aas out and cmpsb mov sub (bad) xlat pop rorb xor aas dec xor mov aas adc test cmp popf cmpsl or aas aas dec inc iret or outsl mov or aas pop ss inc mov daa inc aas mov push ss mov insl repnz jg push aas scas arpl or mov (bad) gs lods addr16 cmpsl sbb sarb decl adc inc (bad) out sbb dec add aaa ss add push mov addr16 iret (bad) mov or or pop mov inc scas push in popf jge aas add add jmp jg xor sti jge pop and (bad) adc adc inc add cs dec mov dec cs dec pushf sti leave and xchg enter cmp add inc xchg push sub scas jg and ja xor inc scas popf sbb leave and dec cmpsb in mov nop xchg (bad) lock in dec dec cmp sub dec ss xor fist leave andb insl and (bad) outsl push mov aaa cmpl push test mov mov (bad) dec xchg ja iret rclb xchg dec cs leave dec sub adc in mov orb popf mov xchg dec fcomps scas cmp push pop imul jo fcomi outsb pop jge add cmpsl push push add icebp jbe shll leave sub ja ja inc pop mov push orps adc xchg negl push and in (bad) or fist mov adc add pop and inc add mov inc pop add pop xchg xchg xchg scas (bad) xchg jnp dec mov ss aas enter leave nop paddq ja cmp out pushf scas lds mov fidivrl xor add push push dec test stos stos and or lods or adc push add push outsb gs imul ss and arpl lea pop imul test pop fsubs xor jbe push mov aam ja and xor call pop xor addr16 outsl push insl gs fdiv je outsl fs pusha inc bound rcl cmpsb insb outsb xor dec jo popa mov fdivrl outsb jns push test add push mov fistpll insb jae sub jb bound pop jae add (bad) adc xor push add add out jl and inc adc shlb inc xor aaa iret fild pushf xchg push pop jbe jl jmp jb mull data16 stos (bad) jae outsb jo xor outsl jbe daa jmp arpl loope add mov insb gs outsb push mov xor iret add add arpl sbb push out pop mov sbb push add or js pop fist insb in pusha mov push js xchg jo das movsl cmp ds sbb aas negb or push jae ds das fidivr in jo xor or jbe (bad) pusha mov mov mov leave addb jg das pop fstp mov nop or cmp js mov aas rorb adc push jbe aas mov or mov aas lock push unpcklps mov jecxz sub je xor outsb mov in enter fs aas test mov test inc aas call sarl nopl cwtl (bad) cmp aaa das jl in jbe in cmp fdivrs pop das insb cmovle fldt mov dec loopne mov add push movhlps jbe mov jb xor in jbe (bad) decl das bound and fisttpll mov pop add (bad) inc aas in in jbe incl das pop bndldx xchg incl das jp cmp aam insl mov in adc push sub mov outsb mov adc mov dec aas hlt incl das push movhps outsl (bad) fucomi (bad) pushl das jbe ss ljmp fucomi comiss es lods pop outsb mov adc in decl pop jo (bad) pop nopl pushf jmp loopne mov aas fdivr sbb mov in jbe ucomiss mov mov aas cld call jbe pop jno incl pop aad xor jmp and mov add addl loop pop nopl xchg ljmp cmp rcr outsb mov ljmp sub mov test mov mov bnd ja push unpckhps outsl add push (bad) jne xor fucomi jbe (bad) aas stos pop mov test inc aas ljmp nopl lcall in cmp cvtps2pi mov aas mov dec xor aas cli dec adc jbe pop inc pushl xor mov aad decl aas outsb mov (bad) inc aas out jbe test pop bndstx xchg test mov (bad) jnp cmp (bad) incl movntps mov aas mov jbe mov dec aas idiv outsb pop push mov (bad) pushl aaa in jbe fnstsw jmp daa aas in ss scas pop mov (bad) aad lcall pop aas sahf aad jbe (bad) jg aas aas fdivrp mov outsb pop outsl comiss mov inc aas (bad) cmovg (bad) call mov loope es mov icebp cltd dec es leave test jmp fnstcw stc lds in xchg mov mov es es int and es popf fnstsw std ret dec es mov cltd xchg shll dec es mov lret and es mov cltd mov fs cmpsl out and es mov es scas es mov fildll cltd dec mov outsb stos add add outsb pop pop adc mov stos dec push push add jg and scas push (bad) subl lcall ds outsb pop pop movb fldt sbb sbb pop push popa mov add xor and xorl or pop push rcr dec push cmp xchg stos dec test push stos outsl fcomps jle jne bound dec and in add in cmp aam ss sub je mov xchg push add (bad) aas addl js add aas add iret repz pop nopl push insb mov jg outsb aas (bad) dec push sub ucomiss inc std xchg lods push lret inc inc call add xchg adc add cmp aas and add bound add aas sub pop adc add jb add and pushl (bad) jns and cmpsb fisttp mov jb lahf loopne inc jle test shll mov mov (bad) mov mov iret mov in call popf bound push ficompl lahf fidivl push xor fcomp loopne xchg je add jle pop cld pop inc testb push inc add sub or push mov add pop cli xchg incb movsl mov ss push jle ss adc xor jns xlat add lock xchg (bad) sbb cmp adc mov add fisttpll or or ja inc insb pop and scas adc outsb daa mov xlat adc and dec dec inc push addr16 das push paddq in jbe mov insl add jo lahf jb push pop jb pop jo orl pmuludq (bad) xchg add outsb mov pop movsb fbld test mov aas xlat sbb scas imull sbb outsl add clc inc daa xchg fdiv pop clc inc divl push pop cwtl testl insb testl push adc iret jnp in testb push sbb push push sbb push sbb iret loope lcall and fucom cmp fild inc push out sub mov push jns das pushf out jp push cld push mov mov xor add lea and pop (bad) nop and xchg xchg and mov pop scas cwtl push adc orb xchg sub mov das xor pop add rclb (bad) mov or sbb inc fistp jns addr16 xchg cmpb sahf out jo pusha pop sahf out sahf dec inc cmp and sahf out and adc lock out or cld add out push push call jnp pop rorb enter lods repz repz inc sbb iret insb pusha or test das jne jle jg in inc pop xor add xchg xorb sbb lock xchg push push push aas test mov push inc jg addb inc out mov xchg cmp xlat (bad) pop dec seta (bad) out mov adc push pusha fisubrl cmp ja das cmpl iret jnp das push dec insb icebp cmp mov dec pop nop sub adc iret repz and lock iret repz push pushf test jns iret repz loopne push push mov (bad) (bad) (bad) js in push pop insb push push sbb fidivl mov test adc fwait mov (bad) (bad) (bad) pushl mov and fstp push out popf mov ret mov loop (bad) (bad) (bad) lcall and and pop sbb and les lods jno adc fadd loopne cmp (bad) (bad) pushl inc jl popa pop idiv (bad) lahf out jl (bad) jae mov cmp inc add (bad) (bad) (bad) ljmp scas add lret mov pop sub sub into ds out push test (bad) (bad) (bad) mov mov in adc xchg (bad) mov loopne sub test (bad) (bad) (bad) (bad) fdivs out je js cmpsl decl jp add pushl scas sbb (bad) (bad) (bad) (bad) cli (bad) lods insb into dec lahf and .byte .byte call add push mov sub fnclex fwait smsw test jne smsw test je cltd xor xor xor mov jmp or or or or add add push mov sub push push xor push mov or call mov mov mov add cs mov mov sbb test je das and or push add add adc or or insl out pushl add jo inc loopne rcrb push push mov and int3 dec pop pop mov jg leave ret xor cmp add push jne push int xor jmp push adc lcall clc jmp (bad) outsl add ret mov daa ss ljmp dec xchg xchg add or sbb aas cld mov mov adc movsl test (bad) pop (bad) hlt push lret xor test clc lcall mov pop incl clc mov jne jnp mov add xchg mov js ret mov (bad) push add mov fcompl add sti cld loopne int movb lcall mov int3 push mov rorl mov lods or cmp xor xchg add lock movsb aas test add frstor outsl subl push push movsb loope sti adc adc inc sbb push mov inc cmp mov cmp mov cmp xor mov mov mov ret or mov decl sbb add mov cmp push mov in push pop jl push pop xor div sbb inc cld imul (bad) pushl add mov shl or mov shr and mov sti mov sbb clc aas mov add roll cld jne test fist lods dec add mov dec movb decl adc add ret shr rorl xchg jno add add add rorb pop xor or adc testl out push xor pop jmp push mov add lea sar fbstp push pop (bad) jle cmpb nopl (bad) daa jne mov int3 cmp and cmp shl out lahf js cmpl nop je loope lods pusha fadds ljmp or and xor pop sti fisttpl cmpl and and or push cmp push dec adc fdivr mov inc imul cmp ja xor or push and mov and ret outsl pop or add rcr inc cmp ffreep or (bad) ficompl nop sbb (bad) jl jg xchg jmp mov rcll leave push mov mov imul incl (bad) jl mov insl out outsl jnp xor rcrb test jae adc lret inc adc or leave add out in in and mov inc leave lea or insl mov push test add xchg inc lock xchg xor jl add mov aad pusha mov pop dec or lea push adc adc add pop stos mov lcall xchg lahf pushf xchg mov add add popf pop fs fistp cmp xchg adc mov dec jl lds ret bswap andl inc push and fs cld je mov aaa dec cmp and xor push pop orb xor scas push mov mov lea mov cs clc add jg notb cwtl cmp jae mov sub mov lret arpl push inc adc jge xorl add push cmp cmp hlt mov inc into bound inc push mov divps in andl and mov push (bad) adc clc add or mov push lea and cmpl dec mov pop aaa dec jmp sbb mov push sub mov pushl mov push ds scas push pop mov in pop (bad) call mov ret in cmp cs sbb sbb mov jb cwtl es mov and pop xchg stos loopne shr cmp cmpl mov mov and fmull push fwait mov jae jecxz sub cmpl pop mov jne jle dec ljmp aaa pop mov je mov push mov out shll in xor test mov test pop pop in (bad) mov fldl mov add mov xchg push adc (bad) add leave cmp lea push jle lcall add adc sub mov pop add push hlt movb inc inc fidivl mov ret cmp lea mov lret push loopne xorl adc xchg dec out ret mov je ret inc push sbb add test (bad) sbb sub sub inc loopne (bad) add int3 test cwtl fidivrl ret cmp lahf add cwtl aam push mov and aam sbb xchg push pop xor (bad) dec jne cld call lcall push xor sbb push push scas jge (bad) enter add int3 call xchg mov inc je mov es push or or rorl mov pop cmpb adc jne ret add mov xchg add xchg sbb aaa cmp pop lods inc jle popf cmpl xchg je fsubrs add add xchg mov add loopne sub push or jl aad xor sar mov popl push or xchg lret jne mov cmp test mov add inc inc (bad) pop jl leave cmp stc fistpl inc imul adc push push in cmp and sbb scas mov push (bad) adc lds or mov cmp xor in sub clc push jg adc insl pop mov imul decl jae mov jg mov mov mov dec test push sub lea mov roll push sub cmp ljmp and mov (bad) add sbb or push sub or fldl xchg pop je xor je nop xchg movsb and and and dec push bnd mov je imul cmp shrb arpl dec push stos push sub dec inc push jg sarb adcb ret cmp add jne clc ret incl or inc add stos jo pop or test push into cli lods fisubr cmp div popf shrb ljmp cmp daa jb aam inc adc jno (bad) aaa xchg out add call (bad) or pop mov jne mov sub je jo ss (bad) out xor mov add add shrb sbb repz pop mov test cmp jae cmp je ret inc pushl cmp cmp jl push sbb add sub mov jmp mov add or mov lods rorb (bad) adc mov push clc in cli (bad) fist push pop push xchg push cmp fimul mov mov mov adc xchg and lahf cmp fistpl rcr jge jbe sub shr push xor ljmp and nop mov (bad) aaa add lea orl inc cmp lea fnstsw adc and mov xchg cmp pop pop jle cmpb push push mov mov push inc adc jb mov mov jl mov adc lea lea cmp cld outsl lds es pop sbb jp push adc add xchg mov roll orb movsb sbb and fnstsw lds test mov je pop (bad) lock mov pop test ret sbb shlb jge mov pop sbb movsb or push or or loop xchg push sub mov lock push mov push jge jae fs rcll int3 addb or push xchg in cmpl lock push adc sub push or push push push (bad) je inc cmp push dec dec xchg addl ja push js add xlat int3 pop cmp push adc xor lret aaa mov adc mov mov mov xchg loopne add inc rcrl jle aad mov sbb push fdivs je mov jmp cmp lds stos cld xchg inc cmp sbb pushl inc sbb push jg andl sub ret xor adc mov xor mov (bad) inc xchg push sbb xor cld cmpsb mov jl stos jne sbb sub andl push movsl andl push cmpsl xor int3 mov add push je and icebp (bad) push jle lea leave cmp js cmpl cmp mov sbb jl lea pop in push sbbb mov push sbb or roll pop dec add jne mov cmp sbb imul jl movsl xor cmp xor add cmp jne add cmp mov sbb aam mov fmull xlat arpl mov adc pop ljmp add sub xor xor gs push push sbb int mov adc push sbb sub js pop aam cld jnp inc leave ret xor sub inc hlt mov adc xlat std movsl lds pop push push in inc or cmp int mov push adc and push add roll add das xor push ret mov mov pop mov inc mov (bad) out stos or pop mov push sub push lock push add push adc mov add push sar mov mov ljmp rorb dec or adc jne mov sbb or je cmp repz (bad) mov cmp pop icebp int3 push dec mov sub mov outsl dec cmp aas sub push icebp mov insl bound cld divb addr16 pop call mov xchg and push cmp push push jp jb shr ret push and je (bad) in xlat adc aaa cmp loop icebp (bad) jl jl cltd mov push inc adc aad xor push test inc pop movsb or sbb or das and lock xchg push dec or fimul mov sbb mov (bad) pop mov mov xor cld adc orb jo nop inc pushf out inc adc adc pop lahf pusha adc cmp pop or jbe or stos pop inc aaa push (bad) add mov call or mov fbstp mov cld mov add add aas cmp or jns rcll adc pop adc jo jno push iret cmpl lahf loope fs addl ror dec repnz xchg push imul pop jp mov pop lea sti aas mov dec jns xor sub jnp movsb dec and mov pop fistl stos add dec jns stos push fcoml add mov adc ret mov mov (bad) ljmp add cli push mov icebp push iret out jae or in mov push test scas jmp in call adc fcoml and mov (bad) mov inc iret pop scas pop test sbbb xor mov jo ret sarl fsubrs adc pop mov mov mov in inc rcll dec repnz (bad) pop jmp (bad) icebp cmpsb rcrb inc inc cwtl test fildl jo loopne subb xor push push pop sub addb push test call aaa mull pop fadds jns or sub add sub movsb push push js mov fild adc xor add push push sbb sarb jne pop divb mov pop jmp jbe orb pop lock jne dec orb add mov pop clc push je cmpsb jne add sbb fsubrp subl push push push or hlt mov jmp lea inc sti in inc dec cmp sbbl jnp scas and push imul mov sbb loopne mov dec jnp mov mov (bad) xor or roll bnd inc mov rolb cmp js les pop pop das cmp add jo fistl add outsb js push pop mov or or les sub adc jbe adc sbb pushaw mov and (bad) popf and sub mov cmp jle or xchg clc stos lods add mov jo xor sub push cs pop sbb mov xchg and add inc jl fsubrs add leave insb fsubrs fidivr or add push and loope sub sub and inc dec inc loopne mov lock add mulb mov inc jp push test xchg jae push aam jo popa scas cwtl test (bad) or add jge jno or cmp pop and mov adc outsl movsl out shrb sub mov int3 outsb inc mov mov mov and rolb mov ds int3 loopne fbstp idiv sbb adc (bad) jae push mov push push fs out inc or pop arpl cmp fstps adc sbb xor rcl pop sub addb andb push add and mov xor adcb add int3 adc addr16 or mov (bad) clc xor inc (bad) (bad) jmp add imul add imull ret lcall das pop xor imulb add inc mov add rcrb mov pushl sub sub jne and pop jbe mov insb and push push dec test inc aaa call inc ret push mov push push movsb scas in inc pop jmp dec mov out sub mov pop dec pop cmp mov jne pop enter pop test mov add insb sti jge sti add orl mov jnp pop incl adc pop orl push cmpsb and cmc imul fiadd sbb hlt adc mov shll mov jne stos cli add cmp xchg mov pop xor stc sti test jle enter sub pusha sahf adc and cmpsb cmp xchg push and or sbb push hlt in iret sbb je and cmp std add jne mov hlt jle pop pop movzbl inc jmp repz sbb leave inc cmp jle add int and cvtpi2ps inc adc jge sarl shrb mov mov inc fimul mov mov insl xorl add sbb xor adc scas add or cmp add inc add cmp add xor push xlat maxps add fsubl outsl dec push xor cmp mov add jg js ret sbb push notl dec push decl and test jne dec cmp jl sbb jbe sbb cmp bound mov mov mov (bad) (bad) decl ret jne cmp jne cmp jb cmp jbe cmp push sahf jbe cmp faddp iret aas (bad) jbe cmp clc jbe add cmpsb cwtl pop dec or or or and ret je and cmpsb inc cwtl mov (bad) mov or push rcrb repnz in sbb push ds and sbb sbb iret inc js in pop or mov andl mov dec scas hlt jne jbe xchg imul je add lcall sub in sbb add jmp pop or (bad) ja jne arpl je call and ja push pop lret loopne push add ja rcrb mov shlb push clc pop sbb nop dec adc adc fsubrs js or fwait and fstl add xor sti (bad) xor sub add add insl repz mov or pop cmp mov or sbb push push push cmpsb loopne jne ret lds adc mov js dec or or adc sub sub cmc in or mov jl test mov xchg push sub test (bad) js and sbb lret mov sub sbb mov xor ret mov xor dec add fsubrs push mov push fisubl mov repnz mov (bad) (bad) sbb push imul aad (bad) push jg insb mov pop cld mov jl jle mov push or sarb cmp inc add jo imul push add push jnp aaa xchg cmp jno mov cmp mov lea in sub fdivr fistl popa sbb int shl test sbb xchg pop add ljmp inc fisttpll xchg adc andl aam sub push adc dec mov push lea in add leave negb data16 add xor adc out dec jne sub inc push fdivrl out fld fucomp fcomip into hlt jmp test jp fstp fld1 fxch (bad) jns jns mov scas jb fildl outsb (bad) fmul fcomp jmp ret sbb shrl adc lea add sbb loope idivb clc push adc pop mov jmp incl fstp pop test lret fcompp jmp je xor add sbb mov (bad) fstp stos push lds in ret dec jnp add dec bnd dec in insb adc xchg jg push test jb test pop xchg push cmp add loope adc mov fs xchg and add js bound push and fmull sbb sbb inc add sub jo div imul adc add loopne fmull aaa movsl ret push faddl imul and pop inc clc or add or int3 cmpl jp je fiaddl cs sub or cli cwtl and push loope pop icebp cmp fildll daa clc ja add inc or jo call pop add mov (bad) xor fcmovnbe xor andl mov mov cld push push add or cmp xchg cli mov and fldl cwtl mov xor loopne cmc pop sbb or add adc js xlat push clc jle or push add cmp add ret mov inc mov nop loope inc aaa fildl (bad) scas or or add xor xor jle lea loop hlt mul (bad) shlb cwtl ss sub cmpsl xlat jge mov call pop xor sbb jne clc int3 push push sbb or sarb (bad) enter sub cmp inc lock jl pop mov inc jae add dec pop add test dec or in bound xor rcl jbe push or add jl lcall jp rcll adc add cmp aad mov and cmpb push adc xor clc pop in sbb es loopne jecxz pop adcl pop orl pop sbb test xor mov ret sbb in sub rorl fnsave aam sbb cs mov push lea jmp ljmp push or pop pop jne jmp adcl mov into fcoml pop mov and xor sub std subl dec je add dec jne mov pop jmp mov pop rclb inc xor hlt adc in shll push inc loopne jmp loope mov push loopne pop sbb add outsb push push mov and ficomp pop pop jmp add add adc sbb addr16 sbb neg xor and sbb and inc mov fisttpl or loopne cmp pop ss jne push js je loop data16 subb cli push cmp popa notl sbb pop jne xchg inc dec mov jg setne pop inc mov adc dec cld mov push mov lds add adc je lret or (bad) xchg push out jl ds adc rorl in movsl xchg push dec lahf daa (bad) adc pop dec aad ja outsl xor je divb adc test or (bad) arpl push adc sti inc loopne rol sub fcmovb (bad) enter mov mov inc pushf fisubl je aaa sbb je (bad) jle and adc or mov mov xlat mov test dec rclb push cli add dec push aad hlt push cli jl (bad) in inc test push and mov lods cmp sbb movsl clc loopne push rcrl push js jnp cld mov adcl push dec push (bad) xchg mov add (bad) jb push imul sbb (bad) dec fisubrl or sbb pop lea loopne xchg jae sti sub imul mov loopne insl xchg push (bad) add loope ret addr16 repnz loopne push inc pop pop (bad) jo push mov or sub or loopne mov mov dec (bad) add fstp jbe lods cmp adc pop adc dec sbb (bad) mov das pop pop pop leave ret pshufw js push push or adc adcb add push push rolb cmp js fiaddl andl mov xorl adc sub and imul push (bad) inc bound pop mov iret and test pop or adc daa xchg cs mov out add cmp int3 sbb cli mov ficoml xchg cmp je jle jbe out ret mov dec stc xchg push cmp jne jp test test pop cmp rorb out xlat loope loopne movl decl fucom loopne orl xor jmp outsl inc rcrl sti test je dec mov sub rol out in arpl arpl push push jbe rolb jle mov es dec pusha lcall cmp mov add xor pop dec pop jo test and scas inc out fldt sub sbb pop sub push sti push cmpl push pusha and xchg or pop xor add mov cmp insb xchg pop sbb fcmove or test rorb sub lods mov test push push push gs mov inc lea push or dec push das pop cmp push mov push sar add add push pop adc out dec and push pop xor xchg mov sub push cmp int mov lret sbb jbe je call cwtl shrb mov into push ret jle aam in popa adc aad cmp (bad) jp sub cmp call add add loop outsb clc mov jne jo push into xor cli dec jne int movsl dec adc xchg jbe add push or dec aam pop fsub sub add lds push adc dec enter pop dec loope mov sub push movb (bad) fdivrs pushf xor adc enter xor outsl shrb xchg js cwtl mov cmp pop inc sub shll push pusha jle cmp in daa push lret popf outsb rclb dec add mov (bad) (bad) xor push push mov sbb fcoml xor data16 fchs sti xor xor cmp fiadd push sbb sbb mov dec sbb push sbb dec adc jnp ret inc or in add je dec in ret mov lds xorb push test or ret std das mov enter movb iret aam pop or repz orl outsb pusha add je rcrb mov push int xor and mov enter fldcw fcmovnu inc fldl sub movl (bad) add int3 add mov xor clc sahf mov cs or mov xor ror fstpt dec mov loope clc add mov sti in je add lea jae addl sbb inc mov add popa sti add enter sti popf or push xor mov pop mov mov movsb cmpsb test icebp movsb push dec inc fsubl mov cmp cli arpl inc mov movsb lods add push mov mov insb je lea push push dec in in out arpl mov xor mov jbe mov cld cmp jbe jb dec inc sahf cmp mov lcall jnp xor loope adc mov cmp mov imul ljmp jl mov push add pop pop fcmovu push out add mov dec mov les mov (bad) adc sub int3 adc push sub xor xor fisttpl sub xor rclb adc je outsl push mov sub sub pop mov xlat jmp and mov mov ss ret push sub xor mov cmp push les (bad) in sbb nop lret mov inc sub push push pop push ss enter mov lock sbb test in add imul les push push push sbb sbb dec out or lock add ja bound inc add cmpl dec or inc out inc scas call xor push (bad) sbb mov add sub sbb mov push jno and xchg jbe add adc mov inc aas hlt lock add sub jmp test lret movsl mov add dec or cmp jne mov (bad) mov adc add mov sar inc shl push push jl inc or add pusha cmp jg mov sti dec cmp jne mov mov push adc insl mov jne or jmp xor addl xor push mov push icebp push inc add or add inc dec cmp push or push or sti jl cmp add pop or add pop cmp cmp xor and cmp mov add fdivrl sbb or mov adc pop mov ljmp loope fbstp adc clc pop mov xor fbld push push add js out add ficompl push sbb cmp (bad) notl pusha test push (bad) mov lret pop xchg enter lods ret movsb lock cmp jle lea (bad) loopne bound xor (bad) cmp loop jbe add or mov loopne mov imul mov pop lea les cld jne out pop pop fwait test pop or out mov sub push or mov jbe or inc push sti ja adc dec push and ljmp mov mov xor lret imul sbb jo popa sub and out mov or (bad) xor dec insb stos add out movl push push mov push inc mov mov adc test mov push push rolb cmp cld mov popa lea and aas hlt push mov mov sub push mov (bad) push arpl inc sarl loope das sub add add cmp fcmovnu imul cmp cmpps and push mov dec adc sub push sar push popf lds popa dec mov shl fsubs inc push sahf call adc (bad) adc adc lea cmp je adc clc lea adc xchg push adc mov mov cmp jbe lcall sub cmp mov jmp mov je mov rcrl es mov add pop add dec hlt subl or push hlt jl cmp lea sbb je ret dec clc in mov dec jb out cmp jg (bad) jg clc add sbb popl adc push subl aaa adc mov (bad) add adc cmp and leave mov or lods inc push mov jmp xor sbb insb mov adc std movsb push aad adc aad scas loopne dec inc mov mov mov test mov cmp or in rorb and adc (bad) je jb push xchg xor js notl cmp cmp or add push arpl jge sbb (bad) mov or adc idivb adc push and out lock add xor cld or cmp jae or lock mov push popf rcrl cs cmp aas push xor push sbb lcall xchg mov xchg inc cmp and push push aam sub mov jl mov push jne xor jne (bad) pop add addr16 icebp cmp sub jmp pop add jne jle test jmp jns repnz out dec lret pop sub adc or lea ficompl adc aas mov je or jle mov push outsl ss pop inc or or mov cmp fwait xor pop aad ss pop cld stos mov xor inc xchg jo jge mov cmp roll adc jae or je in dec sub out xchg je adc xlat cmp je add add mov jmp mov out jo add dec (bad) cli pop icebp ds mov scas shll push aaa je push jl inc movsb aaa (bad) lret add mov lds and dec inc rclb dec jl in orb es and call pusha pop push and pusha or pop fildl add loopne cmp shrl decb add push jmp sub jmp (bad) dec add add (bad) cmp pusha loope out fldl ret fs xchg loop dec dec sti loopne pusha loopne pop rolb xchg push mov scas xchg hlt cmc cld xchg dec rclb cmp leave add or out xor pop into push xchg data16 add mov adc sbb mov push push frstor out loop push push cmp push push mov mull outsb xchg cmp sub sbb cwtl sbb cmpsl sbb insb into push adc js or or jmp das push inc loop add sbb arpl and mov dec call shll movsl or clc jge popf aaa out xor sbb xchg and (bad) xor aaa adc dec incl push add or push jmp jg (bad) jo icebp inc es je (bad) jbe push pop mov in (bad) in cmp sbb nop icebp adc lea mov push adcb or xor mov ds inc popa dec hlt cmp jb pop sahf les push loope nop push mov and inc sbb ss push ds pop xchg rorb inc cmp cmp push xor (bad) push dec je cmp sbb add fstps push jmp out dec sub and clc arpl lea pop addr16 out movsl dec mov jo mov pop pop ds in mov push inc push sbb jae imul fdivl enter jne pop push push push sbb push push jo ljmp or sbb mov jge rcll jb daa jecxz pop xchg xchg dec xchg and mov mov or push inc pop pop test (bad) ss push xor or repz cmp jne inc pop sbb push clc cmp inc mov adc outsb add cmp mov adc call cmp sbb mov jbe jmp sub adc or mov lea push mov sbb lea mov push or dec lods pop pop pop ret pop dec push pop add jb pop adc xor or das jae adc in cld cs loop lret sbb xor daa or ljmp xchg ja push ja pop jle jecxz ret jae in gs or lea stos sbb jbe mov mov or and or inc sbbw lock cmp add add cmp pop dec ret xchg or lock or call nopl mov sbb rorb sbb clc je or inc inc push xor adc icebp sbb jmp add sbb pop jecxz insb inc cmpsl and loope div jo loope es mov or clc mov adc push jne aas sub das inc sbb cmp dec inc (bad) xchg and shrl adc incb lock je (bad) mov jmp push nop xchg add cwtl and imul mov outsb lock add jb push push hlt mov ljmp out mov mov ret insl insb (bad) hlt punpckhdq lods adc scas stos sbb fs add imul inc ffree sbb int3 xor add mov shrb cmc adc loop mov or jge pop cmp mov jb ffreep shll clc clc push (bad) cld iret insl aaa mov je add fdivs sahf mov jne inc push push push sbb iret mov jmp xchg inc dec lock mov sbb enter add jecxz add add sub fild cs outsb jl xchg rolb je cmp add mov lds mov pop push sbb mov xchg shlb and je push nop fdivs xor mov pop cs dec in add in (bad) loopne jb pop aam fsubs cmp push shr mov mov fcomps rclb xchg jb ss mov xor push push sub inc xchg cmp fstl add or test sbb ds data16 add (bad) adc call (bad) add fistpl popf sbb sub lret jp pusha cmpsl push nop mov push push sub jmp (bad) add add jno adc clc or movzbl or movsl push test cli sub add clc or and cmp mov xor add mov outsb (bad) pop pop out aaa pusha test (bad) push push add dec bound jno cmp adcl add test push sub cmpl jbe or mov inc mov ds and and cmp in cmp es push clc push jl add mov push mov sub cmp je cmp loop jne mov jmp sub pop cmp jne mov or leave pop hlt subl add (bad) push (bad) incl mov pop cwtl mov and inc mov and jo rep dec ret or or xor push in mov mov mov jge jo inc add adc loope mov mov jmp dec pop fdivr imul ret mov push (bad) dec loopne in cmpsl or adc cmp push push lahf cmp jne xchg fistl jnp push inc push inc insb and dec mov jb cld inc mov sbb insl (bad) sbb cmp pusha sbb std xchg dec clc jne mov lock jmp dec xchg cli sub test sysret sub repnz cli push add incb jmp push push or loope mov lsl repnz xlat test inc add or mov pushf movsl inc lods sub orb jnp ret push pop hlt and popa sbb cmc xchg adcb push fmuls (bad) lds sbb fldl inc or cmp dec pushl push nop xchg mov xchg mov sti xorb sti cmpb mov sbb fwait je (bad) aaa dec dec loope jbe sbb ret cs sbb push jnp push popa jp xor hlt sbb adc sbb adc sub xor pop aaa or push insl sbb clc stos pop push stos pop mov cld xor dec push push clc stos mov mov inc push sbb nop dec sar jmp jg outsl add push or sub cmp jl mov and rorl jno sub loope xchg loope xchg (bad) jae mov pop (bad) and daa push and (bad) xor popf fs je (bad) andw or in clc clc sub mov pushf mov or pop loope lods sbb mov and push push pop pop xchg lcall incl add or mov inc jo repnz sbb adc (bad) dec cmp mov mov sbb push add movsl jmp outsb fldl add mov iret stos clc cltd push pop mull enter fs push mov and mov xor or cmp add pushf and std pop mov sti or dec mov cmpl (bad) iret xor dec inc dec push sub aaa inc push push aam (bad) out incl insb xchg icebp push push jg jmp dec or ja and xor pop mov xchg sub add mov mov cmc nop in test cltd in movsb test ljmp lods mov push push lods mov stc leave xchg hlt hlt sub lods ret jbe or xor inc sti mov lock (bad) dec pop add stos sti cmp ja or push add mov push loope repnz rclb (bad) xor and cmp xor lock loope leave lock xchg cmp je pop pop pop sub ret add push add pop jne mov cmp or push adc pushw (bad) (bad) int3 orl dec xchg push jl jmp cmpl cmp xlat xor sub ds push push fs sahf or mov mov rol push mov mov push push andl gs ja sbb jae mov xchg sub dec (bad) (bad) xlat (bad) xor and xor scas test out push hlt xor and call or aad pop lock imul push rcrb sbb push cld cmc iret sbbb scas pop or push xchg je and (bad) mov push inc mov mov push add lret sbb addr16 or add jl or pop mov inc fsts adcl mov push inc xchg repz sbb push stos lds cmp or xchg into js nop pop repnz pmulhuw cmc and je jbe sub cld mov imul jae add sbb cs lret in adc (bad) out mov dec rcll adc push inc jle cmpsl add and jb push or add fs mov add mov rcll mov (bad) lea hlt in sub and cmpl lahf push sub aad sub adc push xchg into add inc mov hlt sub mov adc inc int3 and clc push fildl adc ret test dec test pop and fwait repnz push dec or add adc (bad) jne push inc push inc cmpsb bsr test jne mov (bad) cmc loope add mov jmp orl cmp cli jno jp in inc jmp add mov pop sbb aaa jge dec adc outsl push negb or mov jg paddsw add and or xor adc push and mov push dec (bad) neg cltd movsb fwait (bad) aas das jo je mov mov jb push aaa sub add cmp jecxz cmp cmc insb xor stos ds test popa imul mov cmpl push inc cmp jne adc insl push dec cmp loope push std mov xorb stos inc (bad) push add xor inc and add cmp outsl outsb add clc test aas arpl push addb hlt and pop stos pop add pop add xchg mov pop add add xor push pop add add push push sbb pop or sbb pop inc (bad) or push push jle,pn adc mov adc adc mov test adc jb push leave lcall push or pop ret inc insb ret pop maxps xor jge jecxz add aam jae xchg mov push wrmsr pop out dec jecxz cmp adc dec loopne mov jle test jmp (bad) mov add push push sti sub push movb mov aaa dec out dec xchg int3 push sub add inc fnstcw jno adc mov fistpl pusha fildl bound push mov xchg cmp mov add hlt cmp neg inc mov cmpl sbb jbe inc mov sbb aaa xor pop jecxz out inc in inc (bad) mov rol pop and push mov fadd jmp push and movsb insl cmp aaa test dec out rclb popa add adc adc in push mov pushf sbb jmp outsb dec in dec push and loope clc and inc repz inc sub inc jmp in or inc sbb dec mov add pop mov jmp adc add cli add mov adc rcrb lahf sbb jmp add test sub mov mov in mov rorb mov lret mov (bad) jge xor insb (bad) mov test gs sbb pushf imul add call rorb movsb mov cmp jge xchg push mov outsl push push adc jl push push scas or inc dec push lcall or push push clc fwait or and xlat jmp cmp lcall inc add add xor xor js or sbb adc push push xor push mov add lahf sub pop mov jmp adc adc pop lea xchg cmp jle xorl cmp xor mov mov ljmp xchg jp pop dec adc out imul and aaa jmp pop or addl adc cltd ss jno rclb sub fidivrl xchg jmp fisttp cwtl cmp sub mov je or or lret pop hlt ja pop (bad) jns (bad) adc push leave cwtl add or xor pop sbb lcall mov and push test sbbb pop pusha movsb scas mov mov mov icebp adc push jno (bad) ds dec imul fidiv push xchg sbb (bad) mulb xchg pop repz mov and xor push ljmp hlt decb xchg adc mov xor and cmp sbb idiv imul and int3 inc hlt je mov push adc dec outsl mov pop push (bad) mov inc push sub pop and dec loopne xor test push fwait ljmp or pop imul sahf and pop ds add mov nop sub push jo push movsb or jnp inc dec push hlt mov push dec or sub dec or sub push ss xchg push jno jp sbb out mov test dec es pop inc ret or repnz je jge and ret rcrb pop and int3 mov pop and or sbb xchg addr16 xchg xchg inc sbb mov sub loop inc pop lock sub mov pop and (bad) movsb outsl mov cmpsb outsl cmp mov dec daa dec inc shrb adc arpl pop call aam inc xchg outsl fmul cmp fldcw mov add jmp scas or fmul mov test movsb push add andl cld call cmp sbb or sub mov (bad) sti dec push or inc fdivrs inc movsl loop mov cltd cmc cmp cmpl or (bad) movsb call mov push xchg add or mov mov mov sbb outsb nop add adc loopne dec and mov fnop fwait test xor add xor sbb pop adc jmp movsbw (bad) sahf shl insb mov jl (bad) fnsave lea push mov aas xchg fisttp push nop test xchg inc sub dec jae sahf call fnop insl lock es iret sbb pop push shl add in dec sbb in xor mov and lcall ret push or mov hlt push fistpl mov fisubl jne hlt cmp ja (bad) mov jns pop jle sub add or into mov je inc cmp and cmpw cmpsb inc inc push add jmp add xchg mov xor fwait imul enter pushl add or push (bad) mov fs sub jmp sub lock ja lret push pop xchg fs xchg cmp or push es push sahf lea pop and sub ret hlt (bad) push cli mov (bad) js lods in cmp (bad) cli ret jecxz incl xchg mov cmpl lea (bad) jne das sbb adc aam fsubrl sbb and push mov clc pushf call push xor add pop pop jns xor fadds les les flds pop jle dec ss mov xchg test bound mov jae inc data16 rorb dec cmp out dec push les sub push out xor inc lret cs sahf dec sbb jnp xor add popf (bad) push movsl add call inc fistpl and xor mov xchg (bad) mov sub incb data16 inc es jno loopne fstpl mov and fldl2e loope push cmp fwait inc fnop mov xor lods push mov inc and push sub lods movl cmp xchg (bad) push sti popl mov loopne push lea mov cs fimul lods mov or add fiaddl pop cld mov adc (bad) daa sarb ret xor into je into ss push mov sti pop mov call add rclb pop sahf imul mov inc adc in stos lods sti push in jb es aas loopne jl pop dec imul out or rclb cmpsl push mov (bad) sub jo dec call lock std ss test jbe aad push es push mov push mov inc jno jnp fcompl inc shr les mov add jbe movsb pop jne adc adc inc inc and shr cmp mov sub jmp add aam and mov shrb ror xor push cmp pop (bad) or aam dec inc in xor push gs add cmp xor gs mov std sbb cmp jne jmp mov fsubs pop sub aam (bad) aaa push pop adc test adc and fs scas (bad) mov call dec (bad) xchg push es test std cmp std gs inc loopne sahf repz popf push push or jne insl mov and pusha mov cmp inc jle (bad) cmp mov xor and rorb mulb adc jle sbb sub xor out arpl push mov push or (bad) adc jl mov push inc lea lods enter push jbe rcl sbb mov add cmp sbbl sub push and loopne sbb icebp nop addb loopne push sbb cli rcrl push call pushl leave rep cmp fadds lea ljmp sub bound scas shrl mov add sarb add loopne test mov pop incb jl inc push les shlb sbb test enter lods push xchg and leave and movsb or nop fsubrs call xor mov cmpsb adc adc (bad) adc rorl sbb push mov xlat mov sbb mov cmp iret cmp or outsb jo xor je push pop pop pop mov jbe push push inc push cltd fs repz fmuls cmp pop mov subl jmp xor shrb push cmpsb push cli sub cmp out inc sti push je mov dec outsl sbbb sub mov rorb ret and outsb or mull dec dec adc test mov push sbb inc add or push pop cmp pop shlb pop xor dec push xchg add jo sub jl out or add or adc push sbb sub aas dec sbb dec mov mov es les adc jo push sbb mov xchg lock sti jb cwtl xor data16 jne inc pop imulb js push push xor push (bad) test add mov push pop jg or inc or add mov pop and scas sbb pop xlat sbb orl xor dec xor test sub push cmp mov or and xchg fisub add sub inc rorl jbe pusha sti cmpl and inc inc sbb cmp negb add sub pop cmp sub loope stos sbb std fdivrs mov lods fs pop jmp ss dec inc hlt loope (bad) sub jne sbb push mov cld addr16 jl jmp mov pop add add lock add sbb add loope iret jns xchg jne or cs (bad) popf (bad) rorb test test jl out mov adc jmp mov repnz dec push or lret adc mov flds loop cmp add adc dec and xchg jb shlb jne jne cld rorl ja cmp cmp mov adc insb xor mov jmp adc je je xchg mov jecxz cmp adc roll push inc inc pusha jne sbb push stos scas add jl cmp add push add cs xchg cmp sbb std cmp dec push pop mov mov mov fmull cmp add insl (bad) (bad) cmp jo cmp sub inc lret pusha add les push cli inc inc push push pushf inc push jle fidivrl push mov gs outsl xchg add arpl aad dec cld pusha mov and and test mov enter fs mov pop push cmp and and push lds add mov push pushf loop popa aaa lea and push imul lcall loopne aad mov dec lock push or xor mov dec mov push push outsl mov ret mov lods jae push add cwtl mov rolb xchg pop pushf cmp cltd inc xorl cs add les pusha lock add clc xor sub lcall pop movb xor inc mov sbb je cmpl pop aas aad enter cltd jmp mov jbe adcl cmp jmp fnop lea add testl loop jo jbe (bad) mov jo pusha ret test cld fisttpl sbb lret push add push push out or cld mov pushf shr cmp jb js add push xchg rclb xor pop adc aam fnstenv (bad) xor dec mov push add cmpsb cmc add call mov inc int cli jns jbe and insl push add jecxz fdivr push cmp inc push adc lea negl ss mov mov mov (bad) lock push std push cmpsl mov cmp pop xchg sub add (bad) sbb ds dec leave and icebp mov mov out mov es int3 mov add hlt fwait inc sub fdivrl and mov (bad) cwtl cmpsl jo jl popl mov int3 add out fmul add hlt pop call pop push mov leave push mov adcl std call das pushl mov mov imul jmp pop pop xor dec mov jo jae jl or test std push mov mov (bad) fisttp mov and dec adc inc jne mov imul cmpsl std std in and or push jmp daa imul sub roll or sub xchg das sbb roll cltd add daa jne orps sbb xor inc and cld stos sub and push and js add inc push adc loopne loope inc add roll ds xchg fcoml add sbb fs je cmpl xor scas add push fs mov in mov mov push ret mov mov inc xchg mov in lret pop xor jb in pop js sbbb jl nop pop loopne lret mov add xchg lret xlat test rorl pop test lret popf js addb sbb xor push add (bad) push push push out loopne loopne pop call add das nop push inc pop mov scas sti ss or addb lahf aam add dec sbb push movsl xor and add inc mov adc lret in fstps sti dec pop je cmp test inc stc loop add cmp and jp pop idivb rclb cli jge aam fnstenv add adc test xor pusha ret jbe and jge rcrb loope add and push insb call int3 cmp jne mov or lock adc aad mov lret cmp dec add movzwl cmp push ds insl movsl in pop jmp sbb push in test jo pop or push daa mov ret jp mov mov add jno xor in or push mov pop push or push sub sbb dec movsl push test mov adc adc inc adc add les subl add add lea add lret adc jl sub arpl repz stos push or movsl push or or push push test add roll add add ret dec adc push out loope mov loope mov or mov mov cmp push add bound cmp lock push (bad) lock sub push or loope xchg push lret adc push fist and sub imul ss orl sub add push mov push mov in mov push sub cmp push adc cmp ja test je adc or xor testl orl ljmp ss enter dec lock inc xchg fdivrs psraw call inc loop xor mov inc lods roll mov xchg push mov or jmp je test sub xor sti add jp adc push adc stos cmp push dec add scas lods pop add test xchg mov lods fmuls dec frstor lret pop push pop lods add mov fisubrl jl add mov xchg aam adc mov mov (bad) adc imul je mov adc jecxz adc psrad outsl xchg lock (bad) test loope adc inc popl push pop or sti iret jecxz adc push add lods insb jge jmp or mov push ja das es adc sub std inc les or add add stos sbb add pop inc pop addl add pop fwait mov pop rclb fldenv (bad) adc xor cmp loopne dec mov add dec push push fs adcb sbb daa (bad) sbb loopne sbb iret ljmp dec cmp sub sub nop fidivl adc insl aam into test adc jno or push clc xchg sbb cld push or xor push ja aaa inc lahf cmp test or jne sub mov and adc setne insb xor (bad) clc push jge push pop lea jp mov divl jns mov (bad) loopne jne test jne and rcr std cld push pop cmp pop inc mov mov cmp cwtl jne mov insb jne sub jmp stc push rdmsr push cld dec push sarb bound add ret push push js mov cli dec cs pop push adc jge xor test cli dec fmull sub mov mov test cmpsb sub dec or lea je mov ljmp mov adc jnp jae lea bound lea push das test inc cmp inc jb call insl test cmpl mov jmp pop mov sbb push out scas pop shlb mov sahf cmp sub add add or and sub pusha jle sub dec adc cmpsb adc jne stc dec fist mov adc shrb push push sbb inc xor inc mov cmp inc sahf xlat gs loope pop sahf cmp or mov and push jle lret push mov cmp add and or xor xlat or sub sbb pop sbb lret xchg jl hlt fdivr push inc clc jg push pop mov and or sbbb (bad) hlt sbb es rcrb jne push lock (bad) (bad) jbe add sub ljmp dec addl adc es les das pushf sbb xor ja xchg jmp lahf out jmp or push mov lods cmp pop push test push aad push hlt sub inc test mov adc pop pusha push pop ror adc push push xlat int3 rorb push jnp andl push and pushf and fldl xor push sbb and inc fmuls sub jbe lahf mov inc mov jb sti test cmp test movsl or jne andl dec test and xchg and and daa and adc and mov xor rorl inc pop in or (bad) out push mov (bad) pop insb xor mov fdivl popl (bad) sbb sbb push xchg xchg mov push xor and (bad) cmpsl pminsw into mov lret out inc sar jne sbb test push cmc arpl add mov add xchg daa adc rorb and negl fadds push or jecxz lock jae popa push xorb scas popf add xor out in mov pop lea jo in je push das and mov mov or ficoml add pop push xadd lock dec mov push mov sti shr dec dec test or lahf xchg ret sbb outsl sbb add cwtl and lds lea push add lahf sbb inc lds or fnstenv lea and imul push adcl mov pusha inc pop sub add mov add adcl mov cmp mov push bound jg push cmpsl and adc test pop mov jo push adc cmp aaa push movd test mov add adc cmpsb loope loope out adc push adc cmp push pxor (bad) and (bad) cwtl cwtl cwtl sbb scas push add dec pop pop insl sti xchg pop xor mov mov jno add and and add push sbb jmp pop jb jno adc int3 add (bad) lods sbb jmp das add push xor pusha fwait jg int loop pop loopne jnp jae or sbb dec jge pushl aad adc add or loop jbe add jnp nop mov (bad) cmp je push push jle inc add and push negb mov lcall or xor lock sbb mov je aaa sbb push dec sub addr16 inc xor dec add mov imul (bad) ret stos testb mul adc std sub inc and arpl loopne ja mov pop lds add mov shrl xchg xor je mov ja jle in push add dec test or shlb mov lea sbb add mov std pop cmp add shlb imul enter xor mov sbb dec dec jne sbb or jmp mov test add aaa jbe pop add sbb fs xchg or add pop ret cld cmp and or push std inc push jp mov pop push std add mov orl add pop ds sub rcrl outsb or loopne daa inc lods mov push jge and and jle mov (bad) push daa sbb pop push repz scas mov stc mov mov cmpsl fist push daa jbe mov push daa inc fildll add xchg push push mov dec dec inc sub push nop imul cmpl adc push push jmp mov adc mov cs lock (bad) or xor xchg inc fsubrs pop dec pop adc adc stos jno dec push adc push stos lds xchg shr outsb fidivrl inc pusha aaa xchg adc stos lahf shl add rol sub pop lods push enter jns mov jne pop sub cmpsl jecxz xor xchg inc je enter fld cmp xor cmp sahf jns sub add cmp cltd sub fmull (bad) (bad) lock push pop xchg xchg ret mov das mov addr16 (bad) or inc add push loope js ret push cmc cmp xchg (bad) dec and add popf add adc xchg pop aam lock roll sub or enter test push push push push stos and shrb fmulp lds jmp jle (bad) sub (bad) and mov add or pop jg or adc popa sbb hlt push loopne enter incb and frstor pop push data16 mov and cld push xchg ret mov pop (bad) sbb add in jge add add add add push fisubr int3 adc push push push jmp (bad) lret or orl jbe nop lea add xchg and xor cmp sarb mov pop sub jge add pop icebp sbb push inc jmp je fimull sub daa fldl mov sbb cmp das and daa or mov lods aam push xchg pop mov pop sbb test and (bad) insb or dec cld lock adc scas xor pop mov jo ja xchg mov fldenv nop enter iret andb cmp sbb push in push adc sbb xchg push dec mov sbb sahf scas inc ret ret rol movb sub cli jle sbb rolb cs cs push les pusha cld sbb adc (bad) pop cli loopne fdivl mov loopne loope cld enter cli call adc xchg push adc roll inc cmp push (bad) xor pop push xor and (bad) (bad) call push or push xchg mov xchg iret cwtl add int jne and sarl adc (bad) push pop push jp aas jle push sbb iret test or jne push rcll daa pusha cmp push push loope repnz fwait add addl adc xor daa inc cmp mov or push xor lret lcall push (bad) (bad) mov xchg mov shlb push inc push cmp aas subb in rorl (bad) leave cmp pop adc inc pop lods subl punpcklwd inc adc aaa mov (bad) rcll je jl xchg pusha sub or stc push add gs or fcoms adc adc add sub inc sbbb push cmp jl mov (bad) hlt pop push lea push push sub and repnz adc dec push cmp lcall frstor cs and inc rol and das arpl cwtl in and xor add sbbb out fidiv push cmp (bad) sbb push mov inc xor ror nop add ss push push aas sub (bad) and and add adc pop (bad) xchg pop add push cmp pop push push mov sahf pushf in pop inc jl or xor push movsb lods out and pop scas pop push mov fadds popf mov inc xor add mov cmp je (bad) ret pop push adc add cmp ljmp notb out mov inc sbb inc add fdivrl add insb cmpsl mov push add mov je dec and leave je repnz hlt add ffree or mov xor push push call sbb movsl xor int3 fldcw dec (bad) lods js movl or test push ret ficompl cmp lods mov mov pop test mov fnstsw lods sbb (bad) ja add jle sub jle push inc and sbb xor insb add cmp and jns push (bad) loopne jl js mov iret mov jge pusha neg movl lds jl stc movq mov and loopne dec adc fldl lcall rclb rolb push (bad) mov xor jle and jp jne mov fstpl pop pushf adc mov sub xor sub ss insl adc jp pcmpeqw push inc arpl add push dec jne out shr pop or or ds inc mov add lock nop pop add pop setne dec mov push xor jg mov xchg scas push or push add jp clc dec insb cmpsl add out sbb inc mov push adc or imul sbb cmovb mov or pop fs imulb mov mov shr rorl adc sbb push lcall jnp out (bad) mov or mov jo mov push and mov jns fadds shl add sbb (bad) je movl and push int3 jge mov push dec cmp mov aad cld nop imul add inc add and fistpl inc add and push push (bad) pushf leave cmp dec or popa add or adc mov xchg sub or leave mov insb pusha fcmovnb xchg mov popa fisubl push leave hlt add imul ja dec inc mov pop or dec xlat push subl jae and leave and or ret or gs mov jge dec pusha mov gs jb push insl ret leave lret sbb add leave adc and sub ret inc add addr16 xor mov sbb push cmp outsl mov xchg dec (bad) mov lret lods loope sub xchg add rclb add sbb pusha cmp xor fimull xor inc pop mov or ret mov or pop mov mov inc (bad) jmp lods aam and cmp mov dec ds push xor jl movsl fisub scas mov and jns lret push cs mov sbb or cmp xchg fdivrs movsl pop push push push sahf int3 xor into scas pop inc scas (bad) cmp push cmp (bad) jl pusha mov pusha mov cmp add jo or xor xor cwtl cmp jne lea mov jbe jns test cmp xchg mov xor push jne sbb mov das arpl jge mov (bad) fnsave dec xchg jl or jg fcompl jne cmp insb (bad) in or movq xor lods sub (bad) out jg daa test push call lret add daa xchg idivb cld cld (bad) outsl lds int lret shl mov hlt and ds dec pop outsb dec cmp call sub icebp (bad) (bad) push mov sbb mov loope ljmp dec sub push je xor stc fsubr mov jl push pop dec inc cmp cmpsb xlat ficompl cmp push xchg and jge mov xchg sbb xor lea push dec push xor mov movsb cmpsl cmp adc push hlt movb mov jg push lea add mov mov dec or lea mov mov outsl mov inc sbb push and pop ret jmp leave cmp push je mov cmp je cmp je or push lret in jmp test sbb xchg mov and test scas mov adc sarl sbb adc mov incl loop add xor push xor and push loope lods repnz pop and aam mov hlt pop popf and xchg dec jae mov fldl jb add sbb jle jnp in jl ret push pop fidivrl in in push dec pushf dec xor dec cmp imul add mov inc sbb sti dec adc outsb stc and jae add js jle pushf ja pop pusha or nop add jecxz sar dec jbe mov pop shl or cmp or mov nop cli mov fcmovb loopne jg sub add push aad cld dec ret ficoml push xor ljmp sub ljmp sbb movl mov dec adc add add ret pop dec dec addr16 ret leave jne cmp in and and pop dec jb dec dec add xor mov or sbb shrb mov jge push pop mov icebp pop jl (bad) inc jmp in and dec sahf or loop movb cld fist add test adc jne cmp jne dec adc sbb add arpl jecxz ret call es mov fimul rcrl jle dec add add test (bad) (bad) xor (bad) clc inc push stos or and pop and push mov ja shr or xor add fldt cmp xor lret push xchg ret pop jmp dec insb dec add pop pop test test push sahf or mov adc inc and sbb fcomps or adc out jns rcl or pop push mov push mov push mov add pop mov lret sti add js add rep sbb (bad) pop lea cli mov jno add mov mov mov fldcw adc fisubrl sbb pop or xlat push push les xor jg ja xchg inc sarl js orl je or insl scas mov hlt je inc jne push dec sub (bad) add xor inc cmp jl push sub cmp dec pop in and mov jge push add aaa out xor fidivl outsb pushf xor std pop ret pop sub inc mov and dec inc shl mov adc push dec clc std push mov and or fldcw stos inc jl adc adc mov sbb dec js push sbb jle sbb push mov rcll fs insb jns pusha imul pusha add js je jo pop pop cmp arpl pop pop mov or or sar ret xchg add xor inc insb sbb fucompp xchg fstpt adc adc gs sub sbb sbb inc xlat outsl adc js mov jb sub mov dec pusha pop dec mov jl cmp (bad) cmc pop inc fstl (bad) jb lds (bad) enter test int pop adc sub sub xchg aam jb imul inc shll push jb sbb push sbb cltd push outsb and je mov aas loopne jno (bad) mov ret rclb inc rcll hlt loop inc shl pop aam xorl lahf or lds call and jp jno roll ret fstps mov sbb xor inc mov dec insb and add lods jo aad add test cli sbb (bad) (bad) mov inc and mov cli sbb (bad) jb mov mov mov lea jbe cmpsb das mov jae dec mov in in fucomip sub mov jae mov dec cmp lds sbbl outsl mov lds fnstcw mov cmc ds mov push fsub popa dec add pusha push lods lcall into add adc les sub mov mov incb jb fcomi (bad) cmpl lea mov incb ja dec add dec add shrl and and mov jae mov inc ret and ret test (bad) pop cli jl add fld (bad) pop or incb sub or inc sbb mov push push mov push push sbbl add lock push les pop inc or inc jmp adc pop mov std nop push push sbb xchg pop mov xor mov and push jg mov inc dec inc (bad) push ud2 jle arpl or jle adc pusha add cmp movl addr16 ret push fs cmp adc or (bad) daa adc pop loope ja mov add and sub pop inc pop and (bad) jo (bad) mov (bad) cmpsb jge scas cmpsb mov cwtl inc sub sub mov repnz and dec add fisttpll inc mov pop pushf mov fsubs adc test cmp aas mov dec and mov in inc jnp mov and call in es dec je xchg or add js sub ficomp jmp ret shlb ja stc jb dec mov icebp test inc cs loope (bad) js jb shl jl (bad) (bad) xor ret nop xchg shrl ret dec inc sbb mov xlat loope out int3 fwait jne mov jnp out mov mov enter cmp pop faddl pop mov xchg dec dec push dec sbb and outsb or stos xor push mov dec (bad) mov nop stos mov jl aam adc stos and or or cli mov sub into sahf popa push inc dec cmp rolb ljmp xor nop xor or in ret add add mov test cmp je int3 test add mov ss sar pop ret add pop xadd inc sbb cltd lret pop pop sub jmp lahf adc add sub mov dec test mov xchg lea xchg cmpb fsubrl sub add or jmp or decl pop jle sub xchg mov test sarb ljmp insb lods fiadd loopne outsb jbe or push ret push jl xor (bad) cmp mov out inc push sbb cmp sbb mov add inc sbb notb mov inc and jne adc sbb xor pop pop fs inc push or (bad) pop sub sub mov out lock xchg aad sbb mov in ljmp sub ljmp pop subb mov push xchg loopne xor sbb lock xchg push test addb ja lds loop popa adc jo add pop dec cmp mov push or loopne dec cwtl or xor sbb dec add xor mov adc leave into enter adc push inc pop mov je syscall mov enter cmp jecxz add icebp add add adc shr xchg sub cmp push jo sbb lret test cmc cmp or insb mov mov std stos add add dec in das cmp xor cli sbb add sahf sbb test mov push insb lea inc add (bad) mov mov ret lock push jle (bad) and jo push xchg or xor rolb add mov inc shlb sbb nop les pop mov push rol loope xor fmul push aaa lret xchg mov xor push mov pusha mov mov loopne sti shrb mov add push add push cmp add push adc push stc adc les jne daa mov and inc dec mov push adc add xchg dec xor popf (bad) imulb je sahf push daa dec inc (bad) dec movsb or ds add mov inc add and push decl mov xor pop clc rol shlb lds ret mov adc jo xor and push pop ret aas push pop pop inc add pop ret clc add add fisubrl sub lcall push mov push sbb mov (bad) jle rcrl inc xor inc cmp dec and adc clc movsb adc aam or fild xor inc xor push aaa adc push push mov add mov dec sub mov mov roll push push and rclb mov push push push sub push pop and cmp mov scas cmp out push sarb addr16 daa nop mov scas icebp mov push in xor cmp or push push inc mov adc xchg (bad) sbb jl cmp inc jae add cld add add inc xchg orl or test iret inc shrb add je and loope pop add pop jns mov fimul push sbb out int loop lds fimul repnz (bad) mov jb mov inc and enter loope out xchg add cmp xabort mov cli sub movl shr shr sub jg loope xchg xchg mov push dec mov and fiaddl xor sbb gs dec fist cmp sbb jp sbb or ret test push mov sub jmp pop sbb and dec (bad) push add (bad) xor mov dec out sbb ret jb cmp imul cmp rol lret jne shrl jbe and loopne add outsl cmp hlt push jge jbe lea test inc cmp adc call jae mov lds rorb pop sub dec test inc adc (bad) in sub jno or xor push push push mov loopnew cmp push jae out or jno jae out dec hlt dec lret cmpsb cld xor test and lock (bad) (bad) movsb mov repnz out aam cmp and pop mov mov xor or cli mov (bad) repnz mov add movsl mov mov sub orb inc add movsb sbb loope push xor sub sub popf (bad) jo loop inc mov push pop das int3 inc sbb test push cld push cs jae mov push mov dec cmp or pop pop dec or inc push rorb (bad) call fidivrl pop cmp push imul into loopne push (bad) or cli mov dec push shr test clc or add push push jo push mov out push mov movl (bad) xchg or inc orl jg add cmp jae test scas ret adc cmpsl aad push or xor mov jne jp pop push test scas sbb mov mov fsubrs xchg push inc ret lods or inc (bad) fsubrl adc jae jns (bad) in adc pusha bound inc outsb inc jb xchg mov fistp and lea inc adc push push movl pop fxam xor sbb jl test inc addr16 add mov loop mov data16 mov femms rcrl cmp jae in mov ret inc dec iret stc addl push mov jnp adc divb push jb out ret jb jae jp xchg rorb or add clc lock (bad) or push lret jp out loope mov testb xor aaa mov fwait je lea sub popf shrl and push movsb rorb jmp dec orl push mov jb mov lret mov pop and add sbb ss xor les aas enter js jno pop mov ret cli add arpl ja mov push add rclb inc ret mov and cld sub in pusha xor rolb (bad) cld out jge jne sub mov xor mov loopne push pop scas adc and push push aam nop or and sub cmpsb mov xchg jecxz (bad) jo inc push add loope inc adc inc or rcrb and add or addl dec xlat jmp mov loopne insb cmp xchg cmp loopne push ret mov ds fs or iret mov dec push push inc inc push push lock loope scas sbb mov loope,pt cmp in sub (bad) adc xchg mov sbb and hlt jp cmp adc inc mov movsb movl lods xchg (bad) mov iret mov sub movsb jmp call mov mov fs and pop add ret jge test xor mov push ja test dec dec sbb add ret std xchg ficomp fsub inc outsl xor popf dec cmp push sub pusha dec xchg add popf dec dec adc mov push jb sub popa dec mov stos shrb mov and je or aam inc sbb negl mov mov jle dec and jbe (bad) and pop cmpsb xor or mov inc mov enter (bad) mov add pop sub add mov push xor pop or xchg push push push test pop (bad) add sub add sub pop dec add sub push push addr16 push popa push test mov cmpsl xchg sahf cwtl js sub sbb push sub adc and xchg pop test ljmp inc push out dec rolb sub test pop adc mov inc inc mov fidivl push shrb movl jge push or pop sbb cld jl sbb push (bad) dec mov jecxz mov adc dec or (bad) adc cmpsl fsts mov test or push iret push insb adc push mov ja shlb jmp inc fs add pop mov push cmp je or aaa jl or mov sbb int3 cs ds mov xchg dec in push int push push int mov push adc mov jp cld or lds add pusha adc push mov lods lret pop cmp sbb push xchg push rcll adc jns aas les push ret inc add push fldcw mov jle int negl add inc mov data16 mov push sarb pop xor cmp sub jg (bad) call and std and lea pop mov iret or sub pop push jmp sbb sub lcall bound mov les fcoms jl in hlt adcl aad fcmovb loop add fs mov and outsb adc add repnz repz cmc (bad) or enter stc xor and and xor int3 push test cmp es (bad) or cwtl mov pop lock jp adc mov ja jnp pop cs cli pop or das pusha lods mov add jno add ret and sbb mov or repnz cmpsl jp nop fimul mov ret sub leave movl mov or mov pop mov gs sub or sbb sub aas add push mov data16 lea add jne sbb and push adc adc mov pusha daa mov or addr16 sahf (bad) mov ret jno sbb or in bound out repnz cmp or (bad) out out adc cwtl adc js dec mov (bad) mov in inc mov or dec sub jbe xchg adc sub pop shr mov adc cmp shl mov mov sbb add sbb fcompl push loope mov dec (bad) push adc cmp mov cmp bound or rorl inc mov inc das or xchg cwtl xchg int3 xor movsl dec shlb xchg pop sbb adc add jle into mov push (bad) imull js ret mov push sarb mov shl and xchg aaa cmp mov sbb pushw cmp addr16 iret lea andl xchg add sbb mov mov push (bad) pop and or lea add ds sbb movl daa inc call fildll frstor xor push aam adc jle add lahf fnsave jns in lea fidivr mov or test inc adc repz or mov shr shr cld inc loopne adc lret jmp lea jle add cli ja test or push push push enter jmp sahf outsl pop jg loop inc sbb add mov in loope shl addr16 push adc push inc mov xchg xchg adc jo nop push imul push repz sub inc jg lods add jae push cmp push add add subl out mov push xor mov inc sub adc sahf pop sbb sahf les arpl cmpsl ret push sahf cmpsl pop scas arpl loop cmpsl adc inc push loopne jbe and cmovno into mov add and or mov sub mov sbb or or or pop test lret sbb cmp adc ds and in inc add xchg jle or xlat aaa mov sbb out mov (bad) hlt andl mov test push adc push pop ljmp out inc fadd jl test aaa imul pop cmp add pusha mov xchg mov lods dec ds sbb mov add jnp jns or add mov add jl outsl mov push pop int mov icebp daa mov mov sar cmp jl dec leave int3 popf adc ja dec and stc adc inc (bad) out arpl insb jo adc mov das adcl and mov sub mov mov push sbb mov mov jo scas add xor mov push lds (bad) jb orl sti pusha xchg jne rorb test inc dec lock add lahf add inc add sbb fdivl sub add loopne lea ret dec or inc push jb or arpl lods xor test and fmull pop add mov ljmp ss adc (bad) popf aaa xor cmpsl ja jge mov mov icebp outsl push (bad) jb jne mov outsl loope or ja inc sub scas mov jne sub pop push and sbb mov rol nop repz or sbb jmp cmp nop mov cmpsl aam cmp add add and mov dec rclb push pop mov les fild mov mov or mov (bad) stc pushf sub in mov mov sub (bad) jp adc imul sub movb pusha mov and mov (bad) push mov adc jl movl or loopne iret mov iret jg and or adc jl mov outsb push stc sub sub adc clc and movl (bad) inc daa dec add and jnp mov pop inc (bad) (bad) mov dec pop lock fistl lock dec ret jmp push sarl pop orl push sahf dec les jo loop scas jmp neg sub push ss add push dec insb push sub test mov mov pop xlat nop mov das cmp out add inc add je xor and in add push ja cmp out jg (bad) ficom pmaxsw cmp mov cmpb out add mov lahf xor dec mov cmpl sti jne push sub dec sbb fimull shlb in and and add or fiadd sub push mov push mov clc shl push movb jmp add or ret jl sub js mov dec (bad) leave je push push dec or stos sub inc inc push pop sbb js add adc adc adc rcrl sbb push adc inc lea adc int and mov js pop cmp inc and mov mov jl nop adc bound pop inc jne dec sbb mov mov adc roll jo mov lret and dec mov mov mov shr out orl mov test data16 add dec cwtl adc mov dec push mov push lea lcall jbe xchg dec add cli ds je cmp jge add xchg mov jmp pop cmp adc cmp je stos daa push xorl cmp jg sbb add leave jne jo sti adc jmp cmp push push or add lds test ljmp mov or xor decl jle add pop push daa adc mov stos xor jle sbb mov sbb popa sbb inc sbb mov les pop mov ljmp add inc inc add dec add inc pushf inc xor in loopne adc jle add enter cmp push nop sbb addl mov mov xchg jge test pop sbb inc fiadd xchg mov push mov stos iret ret mov pop dec lcall sub movsl pop and sbb xor cwtl push xchg xchg rol sbb imul mov sub (bad) jae jns push push cmp jmp inc xchg pop cmp movsl mov rorl jge cmp inc mov fnstsw xchg cmp jge (bad) dec mov push fild mov outsl (bad) cmp jle sysexit or cli outsb dec push mov jmp sub rcrb add mov sub dec loop lea adc and mov orl into aaa dec cmp mov xchg or dec mov shll mov jnp mov add sbb aas data16 sbb cmp push jle loopne out and ds sbb repnz mov subl cld cli or (bad) push add mov in mov or add mov mov loopne jle jl subl and pop cmc (bad) stos lock or movl test into dec outsb scas mov andb loop xlat addl push jp data16 mov cmp jo pusha test je pushf adc cmp mov inc ret dec stos and xchg sbb add xchg push ljmp cmp jle xchg je test shl pop jcxz lret nop push adc ret movsb adc fisttp lret dec cmp pop mov ja sbb xchg add orb add sub fisttpl mov xor push xor aaa out bound int jno pusha and addb test lret cmp mov fsubrs mov rcrb add push or jae mov ja xchg jmp loope lods push aas cmp in loopne xlat xor fsub dec adc add add inc gs mov shll xchg adc fidivr lret adc push pop sbb jmp adc xchg test or or lcall or pop sbb push pop sbb jnp push lock add sbb push push popf pop or (bad) mov jo add (bad) jne lock ror inc mov cs dec repz test dec repnz pop mov roll nop pop push sub add inc push pop out sub or nop xor push sub insb jo nop xor ret ret inc sbb andb (bad) fiadd xchg sbb jae jge add add and pop dec inc gs dec add push pusha dec jno cmp (bad) dec jne push xor xor cmpb sub cmp mov jge mov ljmp (bad) movb shr cmp pop setbe mov sbb add sbb out or sarl inc pop icebp jmp jg shr pop mov add jb cmp jo inc or (bad) sub mov mov inc jnp cmp sar lahf movsb notb loopne mov aas xchg out xor adc or jle outsb mov mov push jmp pop push jg (bad) cmp add pop add xor pop je mov mov cmpl mov inc not lret shr and inc mov sarb cmovp test pop aad dec cwtl pop lea add pop leave popf mov inc cmp faddl fsubrl inc dec push in pop inc fstpt adc sbb pop dec rcl mov mov push add dec mov add loopne mov int3 ret add ret jl add sbbl sub push cmpsl aam mov das mov lods sbb dec and inc and jns insb xor js add xor mov cmp cli mov add aad xor inc add fiaddl push pushf add or cltd sub and mov rorb push xor stos das add inc sbb xchg push pop pop sbb ret leave adcb sbb js mov fmuls in mov inc and jle inc loopne or dec xor xchg notl sbb dec pop xor pop add jp push mov mov shlb or mov jmp push inc or fdivs add fldt out jl dec mov pop push mov lods ret or adc sub or push aad inc outsb sbb adc sub or in fstpl and leave lods mov sub das ret out shrl jge jo stos push cmp mov test je adc es lock dec mov inc jne jne fwait xchg inc mov lea xchg out aas or add mov ds add or dec add xlat or inc or jmp and add sbb add negl jge mov xchg add mov test cvtdq2ps push pop add mov add jnp sub sub dec jae xor lock mov hlt mov (bad) jb adc (bad) xor mov cmp fildl outsl sbb and addr16 mov es dec aam sbb add aad and push loopew fimull in jl cmp sub inc and adc mov add aaa mov inc push (bad) hlt add xchg mov mov and ja jnp ja mov cmp add push stos push and shrl add cltd fsts cmp mov aad add mov (bad) mov mov movl fmuls dec sub pop or int lret push push test pop xor mov jno test jno ret test add dec mov int xlat mov jle test push lcall xor mov stos xchg jg add cmpsl jbe sub push jne sti pop jbe ja shl jle jmp inc dec mov (bad) add leave lret mov rclb sbb int push xchg pop or fnstcw pop and xor (bad) fs add sub inc fcmove outsb dec fistp mov xchg (bad) call in inc out lahf stos mov lock icebp cmp insl ss repnz push hlt push mov dec bound add push cmp icebp push mov push push rcrb das pop insb out fdivrs (bad) add and dec adc inc adc and push mov adc or mov (bad) std fcoms mov rol push mov cmp nop pop pop cwtl cmp je jne insl mov or or std mov mov and sub mov and adc (bad) (bad) out pop xchg adc pop pusha sahf out sahf fs jns adc jl mov adc sbb xor push lea dec mov inc or cmp pop cli sub xchg sbb or cmpb mov xchg hlt sbb jns mov sub xorl packsswb jae mov xor lea dec sub cmp jne test les ljmp ljmp sub out jae lea sub js cmpsb ret add and repnz lahf aam or dec push sub test adc mov pop sbb je xor ret mov sbb xchg lret das jne mov fidivr dec push je sub push cmp mov inc mov test pop inc cmp ss cmp jb sub mov in (bad) xchg in and cli mov and and fisttp sbb sbb add inc adc jg sub and (bad) (bad) pop push push adc je adc add and sub mov mov adc inc ss les sub fisub test fldl int ret jle cmpsb xchg dec cmp test adc js push push and dec sub fisubr decb scas adcl (bad) cld sbb or mov jge (bad) pop sub mov jb mov aas loope ret rolb add jnp iret xor push jno add (bad) repnz mov rorb dec mov je adc dec jecxz jge mov lret sub xchg push inc mov xor xor call sub (bad) mov loope js lock je jmp push pop sbb leave adc or or fdivrs sbb rorl insb xchg das add mov jmp and sbb push push call mov sbb addb idiv loop add push les shl mov sbb jo outsb cmpl push inc inc mov cmp loopne movsb daa sub cs cmp cmp and inc loop sub mov lea xchg cmp out xchg ret idivb or clc shr push jne jne xchg mov lods and mov (bad) test mov pop mov in sub push clc push or jne sti (bad) sub mov mov push mov sbb data16 mov (bad) dec xor cmpsl test hlt adc popa rclb pop mov inc sub and push push push mov cmp add (bad) push or test xor aaa cli cmp sbb push xor outsl push push push mov add ret or or (bad) shrb mov jae sub mov icebp shrb es push xchg add and bound addl ja xchg push pop rolb jmp sub mov inc sbb call or sti jne mov adc cwtl (bad) test ret inc int cs stos mov test adc inc pop add bound or or or movl or movl ret jg movsb pop push dec popa imul inc or std sub sbb sub adc (bad) mov ret push in je sub loope (bad) and andb push adc jne sti sub add mov inc mov pop or enter push mov int idivl mov lret mov mov lds dec sub std sbb mov mov inc xor push or jae jl dec pop jo inc sub int3 movsb sbb push cmp dec push push inc xor push rorl mov add shll xchg xor imul pop jge daa or cmc sahf insb push inc cli push and jno xchg jns stos inc sbb decb sub pop inc jae sub dec cmpsb mov dec sub iret lahf sub mov mov add inc data16 cmp fistpll shl add or inc cmp loope insb push mov and rcrb xor jnp clc xchg call or mov add ljmp jne or (bad) or std pop add add sti scas fs jno je and sub imul (bad) pop inc inc inc add ljmp enter dec inc pop mov movsb into push adc iret stos cmp imul jmp ja movl mov sbb jle adc and add jg mov sub xor cmp sbb mov pop sub add (bad) mov mov out cmp jbe sub mov mov inc inc dec jne xchg fnstsw mov jbe pop dec aam push sbb cmpsb push pushf and mov aaa outsb and add bsf cmpl jb or or stos test cmp mov sub mov add je shrb fstpt push scas icebp inc mov inc mov jbe test cmp loopne add jmp and pop lahf push outsb inc sbb push ss or cmc cmpsl or cs mov jnp mov mov sub or adc and add mov in xchg scas lds sub out cmc mov imul mov mov adc call int xor test aaa add jo xor mov push (bad) jbe cmp add cmpl addb and out xor pop pop push push pop js add ficomp stos neg jne (bad) mov xor mov jmp nop mov mov or loopne out nop mov add jns stc fcoml push cwtl add or int std jmp rorl inc add scas adc (bad) mov add add add sub xor cmp mov sti out push loopne (bad) ss out enter mov repz add in iret repz in lock hlt clc mov repz cld cld lea xlat loopne test add (bad) mov cmp inc mov sub adc inc pop sti and (bad) xor sbb dec jb in lea jl cld or or cld out mov push add enter daa stc sub add mov fadds add (bad) inc xor jl mov xor fidivl push out lods pop jnp push or mov out mov fsubrs push or push fs out insb je test pop aaa sbb sbb sbb adc iret repz adc or push cmp repz add aaa jl fwait and or sub (bad) push aaa outsb push (bad) les inc add push xor mov stos push add or adc js js (bad) and or sbb icebp fildll fimul imul js cmp xor cmc pop jae mov call lock movb adc add in ret test and sub je (bad) mov rcrl cwtl rorl out jecxz mov movl adc xchg pop jmp sbb jmp push push dec xchg mov pop jne push pop pop into or push push and pop push mov mov hlt icebp (bad) in cmovnp clc loop mov ss and ret push cmp or push xor cs flds sbb outsb push pop dec roll mov movb arpl inc and insb mov push nop push cmp mov clc mov jne dec das das mov cmp cwtl js push mov aas or lock (bad) adc jne subl les jmp mov push sbb mov add (bad) pop sub test dec cmp (bad) sti pop xor sub and fidiv mov dec loope bound adc push imull add xor das dec or popa mov sub push add add in int3 stos lcall and scas cmpb je cmp andl mov daa mov xor cmpsl or jge or or push (bad) xor ret jo das scas adc scas loop cld pop std movb insb adc sub add inc mov push sub inc jp clc push jp or push dec fcompl pop bound and andb add push push jmp pop mov stc lods gs or dec dec outsb or xor sarl pop xor inc lea test ja add ret inc fnclex sbbb test mov or out cmp aas push clc or in sbb mov enter xchg repz or push inc cmp sub add cmp mov flds jns sbb pushf or and mov add daa sbb nop adc cmp pusha mov add add jns mov mov push mov sahf out aam in xor add iret jnp sbb sub mov loopne repnz out xor leave push test (bad) push push fldl push pop or xor sbb sbb mov lods adc inc es and outsb pusha lds pusha add pusha or xor ret mov stc movl dec mov aaa in rolb inc fwait aaa sub xor mov push xor xchg mov movl add test jb push cltd inc or stc in outsb lock add clc mov clc inc push xor outsb es sbb jae mov mov std xchg add add and sbb scas cmpl cmpsl adcb mov mov pusha lock mov mov insb popa lods sbb pop int3 add or mov mov and inc push loopne cli mov add cmp xor push jp int3 je sub inc xor add mov cmp aas cmp stos mov dec ljmp adc mov fadds movl dec xor xor or mov mov dec movsb push push pop push or pop push add mov cmp je mov push add repz mov out rcrb mov shrb xor jb mov push pop add add pop enter add repnz jg dec mov cmp jle add lret add add flds add jb mov and xchg pop pop pop out rclb add or pop or sbb pusha fwait dec or cmpb sub or (bad) xor or pop imulb dec in add or or cmpb or cwtl push push ja adc (bad) nopl outsl movsl mov pusha adc sub dec adc repnz adc out test (bad) out adc ret sub pop jo push adc adc adc add pop cltd adc addr16 push push push cmp js pop pop pop xor sbb pop sbb or inc sbb add add pop sbb (bad) xchg inc add sbb pop mov jns sbb jb sbb inc sahf xlat add jge sbb sbb push inc incl pop jne add add cltd adcb xchg iretw cmp xchg add adc mov mov ljmp add cmp je lcall rcr jnp sub lea cwtl aad in in out inc mov jns fwait out (bad) pop (bad) xor mov call in je call dec inc fimul xchg xor add sbb sub sahf xchg or jmp out rolb sub in in cltd push nop ja mov sahf in jns out out jge and pop lock xor lock xor pop enter icebp bswap in jmp repnz out std repz leave std hlt hlt jb sahf cmp or fwait mov cmc dec cmc inc jg iret enter pop div push cmp clc lea popa cmp sahf lret add inc stc lock cli cli loopne cmp sti sti in repnz je adc push pminsw repnz ss xor sbb xlat pop enter je mov jmp xor clc roll ljmp roll xchg and cmp mov aad ret xchg or sbb or jecxz jecxz mov sti in sub fdiv inc nop mov and sti out out inc push fsub cltd outsb call (bad) dec sti sub lcall jmp push mov jmp (bad) in mov mov or sbb inc lcall push jno lock cli or sbb jmp cltd add (bad) push xor scas out inc sbb enter push jo xor add stc pushf and enter lret xchg sti cltd push (bad) inc sbbl ret sbb sti dec dec push inc and test cld sub loop loop jns push loop icebp mul repnz pop (bad) imull push popa mov insb nop cmpsb sbb out cltd bound pop inc testl cmpsb jb imul ljmp testb sub mov xchg negb push sbb or out jno inc cmpsb push nop testb inc dec jno add sbb (bad) repnz test cmc adc fs xchg pop dec adc jae sbb mov jo jmp jo and scas in add pop jo hlt (bad) inc stc jp pop jo adc cli cli cmp jno hlt inc pushf loop dec jne push hlt mov das dec data16 push push (bad) data16 hlt std adc fs (bad) ljmp adc ljmp push loope loope cmc pusha (bad) push pop loop push repnz repz cmpsb loopne or (bad) adc repz stos sub push andl enter sbb (bad) jmp mov add jne repnz adc add add and pop je call loope in roll icebp or dec icebp icebp jns jo mov icebp divl xor icebp xchg xor sub cmc cmp cmc add aam jb cmc jecxz inc and test ret adc stc mov jne cmc add jne lock add push lock xchg je fldl mov fdivs and adc sub out movsl sbb mov in jge push add add inc push nop add push dec add popa pop add inc jnp xor adc rorl dec enter add jmp (bad) and aaa (bad) out dec add adc or sbb test idivb jb adc push xlat sbb out and cmp imul mov lods sbb push ficompl cmp scas adc mov lcall ds jge call push or sub adc jo ds xor popf push or or adc sahf pop sbbb mov fildll add or sbb add pop je inc push imulb pop or movsl fist out incb cmp add mov incb lds sbb out sti inc xor dec pop jne mov sbb push inc shlb ss pop mov (bad) out cmpl xor call loop xchg rorl push push jb jmp push loope adc mov push inc dec bound jp mov push std lock sub call xchg adc aam and xor inc insb pop jl or icebp into loopne sub inc mov jmp adc lock and andb arpl (bad) adc sbb nop mov adc mov or out mull test mov mov adc into cmp xchg inc xchg nop out dec lock sbb or aaa mov add loop push push rorl shlb enter pop stc into (bad) roll mov dec or std in and cmp and je push push xchg mov test mov loopne or mov shll push clc dec adc jge sub outsb out popa and test cs sub mov dec adc in sarl ret call and xchg inc mov adc int mov xchg lock cmp dec mov xor test mov jbe push pop fdivp cmp sub adc add (bad) out push push push mov add push cmp (bad) shll imul sbb mov loopne imul jne stos jo (bad) cld lock je fisttp sub push inc or xchg xor or add mov sbb inc adc fbld jne adc sahf in jmp sub mov push clc xor inc out adc inc ret adc add pusha xor jne add lcall dec xor ret dec orb xorl push cmp sbb loopne loop adc inc aad mov pop inc push push push push mov addr16 jne inc std or das inc fwait adc xor inc fmul dec mov into in add clc (bad) jmp insl xor dec cwtl push std mov loopne arpl push push sbb shrl cltd ljmp jp or jmp lea lahf out sti add outsl push push dec adc push and jg mov dec and push jg outsl inc or ds jl pusha jle xor jg jg scas xchg mov jg lea mov mov pop movsb aaa mov outsb add pop pop and adc cltd pop jae les pushf prefetch cld dec sub cli sub insb or jne add inc into mov jg,pt ja xor adc icebp push push ret lock call enter dec push or shrl rcrl add sub fdivs sti lcall push jmp prefetcht2 mov jne mov movsb (bad) lret rorb and test jnp push or mov ret xchg outsb push push ret stos jmp insl mov sub or (bad) roll andl adc xor add push inc push sti inc mov dec rolb lock jmp das sub inc cwtl mov lock cli add cmp inc adc jl sbb mov xchg mov push push or scas push xor inc add cmp jb (bad) adc orb js int push adc mov sub and pusha and cmp or sbb es mov (bad) mov sub inc sbb xor or or ljmp and inc add in adc push jb je popf test xor in pop mov and lock adc (bad) iret push pushf push mov mov mov shrb or test scas push sub jnp (bad) movl mov inc jo scas push popf mov addr16 scas sbb xchg mov sub and jo xchg inc or add jle mov adc imul inc test pushl cmp fbstp cmc push mov imul xor xor andl pop dec inc jl push cmp cmp or fs outsl sbb (bad) hlt nop orl shrl or and push (bad) ret or pop in daa mov jecxz sbb into push das push push cmp xchg add cwtl adc sbb add nop cmp dec or cmp cltd shlb jle call mov cmc adc and pop push movsl sbb and sbb and cs cmp jns repz hlt push or aaa sub mov pop sbb rorb daa fisttpll push inc pop or pop push or or add (bad) enter mov inc (bad) push in bt mov das xchg test xchg data16 sbb sub adc into jge and mov xor push mov (bad) pop ja push pushf push mov dec xchg pop sti mov notb lcall nop subl mov sub int3 std cmpsl test fstps inc xchg ds sbb jne dec je or fdivl pop iret pop push adc cmp ss dec or cmp push mov xchg cmp add rorb or and jg pushf les rol pop daa or scas fbstp push jo add sbb je,pt mov push mov push mov fildll adc xchg sbb jl test push cmpl jg jg ret or ljmp out or mov lret adc add test loope mov inc adc push and pusha mov add je sbb pop je loop cwtl ss loopne sarb mov roll push nop xchg movsl add adc ret mov negl outsl (bad) lahf add adc dec leave add scas jp jo mov jb add out dec and add rcl and shll jb popl mov into jne add sbb sbb push pop in pop jns addl call leave je xor jp xor sbb pop push cs xchg andb mov pop mov pushw inc jl dec adc (bad) jno push jbe sahf sbb sub shl es (bad) sub mov jae push jb (bad) adc push cmp aad sbb cwtl sub xor nop popl mov dec or (bad) cmp cmpl in sbb outsb andb pop or test mov jo push adc je repnz jne gs ss ljmp inc jnp clc je push cltd jmp push sar (bad) cwtl xlat inc pop push or sub and jo mov sbb and pusha cmp fsubr roll and stc and add sbb xchg or push imul inc cmp pop in fs fisttpl jle gs push (bad) outsl inc ss jo add and or int3 push push sbb xor jnp pushf lea sub xor mov pop mov inc hlt lds gs mov fdivr mov sti push inc fnstsw outsl ret pop adc sub pop pop inc push inc js js push scas mov jae xor test clc (bad) sub sbb pop in add xor (bad) lcall mov pop ljmp add pop push or std incb lea daa mov mov je lea xor fmull fcoms sbb (bad) xlat mov jae jo jge add adcb call push mov or sbb incl (bad) insb cmpl mov add enter and das inc xor nop mov nop adc mov sub es pop mov push mov enter xchg adc inc mov and push outsl addl mov mov cmpl dec mov cmp addr16 and sub mov stos mov je or imul or add push pop or mov je lock push lea test push loopne adc fcoms stos add ds mov mov inc push dec pop inc push lea pop cli mov mov and cli push mov lods and lods icebp mov int or test pop pop jl cld int3 loope cmp sub dec aam inc cmpsl sub cwtl jl adc or mov test and pop mov mov add cmp ja sub inc push (bad) les xor inc mov inc inc mov popf and cld jbe lret aaa jge sub lea mov cmp push sbb cmp inc sub outsb inc add and movzwl (bad) ffreep test je orb mov add or test out pop mov movb xchg outsl pop ret sbbb push orb push sub rorb sbb xchg push mov jmp test push fiaddl ljmp xor cmp cmp call ja pop xor pop popa add sbb mov fnsave pop sbb jg xchg into mov push mov (bad) jmp mov cmp int cld sbb (bad) sarb es mov mov push adc lods sub sbbl dec ss ficoml cmp mov xchg pop add pusha ret and inc mov rolb jmp cwtl adc hlt nop push fsubr fisttpl sub stos cmp insl rcrl lret out shll or aas es fistl add mov sahf ss xchg push push shll adc dec or jl mov es out rol or lock out (bad) std mov inc push jmp xchg sbb (bad) jno cwtl push push cmpxchg rolb das inc sbb movsb cmpsl mov xor inc adc scas cli push call or xchg incl out cmpb iret mov out mov test sbb inc adc aam inc cld test lea xor es mov das jmp mov add nop loopne push add mov cmp mov cmp jbe nop inc inc cmpb add (bad) inc shll sub xlat lods or mov movl inc and fwait or mov push xor inc call lock xchg dec pop cmp add divb nop add ss inc push mov in insb loopne inc add movsb bnd add mov rcrb mov xor daa push test repnz push adc sbb xchg mov mov dec loopne cmc sub pop push lods or mov movsb pop in lock and (bad) pop pop pop lock ret mov sahf je pusha sti rep mov mov clc adc mov dec xor cld aas insb jbe daa inc out mov ss cmpsl mov mov cmc dec adc jl add pop adc pusha inc pusha sbb fstl mov (bad) mov mov jge aaa add pop cld int3 adc dec inc jmp xor inc sbb dec sbb mov add sbb incl inc jo insl adc cmpsl dec rcrb daa push push sub xchg and aad xor and movsb flds xor in xchg cmp cs mov push and out inc and daa or pop std sbb mov mov je cmp jnp push je cmp jne cmp xor sbb mov sub out sub pop mov sbb dec jnp fidiv rolb sub (bad) incl insl fadds (bad) je sub and and shlb js jecxz aam pop cmp aaa insl out sub push pop pop pushl out lea pushf addr16 cli pop cmpl cld or cmp cmp add push push mov jno adc out icebp jg fs lret imul scas sub push sbb mov sbb pop pop hlt (bad) enter mov das cmpl or ret adc fdivs cmp testl jg adc adc and xor cmp push jmp mov sub (bad) rorb push pop mov add xor or cmp jge adc mov jl pusha ret sub sub or rcrb jmp add cltd jmp xchg enter sbb fsubrp or inc icebp ss lahf test arpl push adc icebp push push movsb push push popl orb jne fisttpll lods push mov add scas add pop adc and sbb cmp fdivl fadd jne int3 mov int3 cmp jge inc mov pop jg add mov mov pop inc addr16 cmp inc and xor add sbb adc add call dec aas mov push jle push clc out add aaa lea push test repnz les clc int3 cli jmp lods ret and xchg and mov push test pusha jb pop divl mov test ss push xlat (bad) es gs mov push enter xchg loop cwtl inc (bad) pop testw sub xor dec adc lret and inc and icebp mov or hlt fwait pusha jo cmp push jnp jmp add add stos lods push call adc fildl push push add jmp cmp inc inc aaa push mov mov data16 (bad) jnp movsl pop jbe (bad) push outsb inc pop mov sbb add cmp lds test bound lods in bound dec popa outsb bnd (bad) mov push xchg hlt mov mov jae mov mov sahf ror ret push sub (bad) (bad) lock sub ja add cld test pushf ffree pop sub iret fidiv clc call or add sbb push xchg jecxz add xchg cmp sbb inc mov popa dec test adc or push ljmp js mov mov mov inc lock inc daa std cmp gs jecxz mov int fwait rcll arpl cltd adc push sbbl add sar jge pop loopne push bound add add mov inc cmp ds sti jb lea push adc push pop inc xor ret add shrb pop cmp adc pop dec sbb inc loopne outsl jo lock and mov and lock and pusha pop call dec call (bad) or xchg ja nop mov cmpb jne movsb (bad) dec or push jnp sbb clc push stc cltd xchg or and cld push push test (bad) pop push push cmp cmp jmp sub sbb and and pop popa pop addl daa mov lahf aam inc mov mov or adc or dec or rcrb jbe mov shrb xor jmp mov xor ret int3 aas test ret mov jo sbb or mov in sbb jne sub lretw push inc sbb xor rorb fmuls push lock cmp mov fdivl movsl cmp movsb mov mov out sub mov pop adc orl js and pop fstl or pop jl clc and aad xor xor mov sub add popf pop pop pop mov xchg xor sbb push pop mov push add (bad) xor shrb ss mov jmp mov les cmp dec jne dec sbbb pop jl fsubrs jbe rorb sbb pop cli mov cmp mov lea and mov add loopne xchg sahf adcb inc xor mov rcl in imull mov xor xchg inc clc movsb push cmp xor nop test lds jge adc or fnstsw movb int insb cmp incl or add jae jecxz pop xor jmp cmp or gs inc cwtl jne jmp cmp fistpl fimull pop pop inc dec movsl pop xor pop aas cmp test mov clc dec and in sub pop sti add add add xor ret push inc push test lock cld jb and mov out cmp push jmp int inc dec sub ret adc imul std cld (bad) xchg mov mov push pop (bad) fisttpl jns adc nop mov dec testl jo adc adc orl adc xor test and mov repnz data16 add xchg sub inc add sbb fdivrs pop or fdivp rep mov sbb lock push adc sub push mov faddp jne sub inc add mov inc adc and sti sbb and cmp mov pop pop jp push aam inc int faddl pop ja sbb and push mov jb fbld stos jecxz jp subb or sbb xor and add pop fs je test cmp push aas ljmp sub mov adc cli add movsb mov idivl cli dec movsb movb pop push aad add lods std lret add cli rclb pop mov adc cld inc inc cmp jbe adc sbb push mov loop mov mov enter inc push inc cmp push or dec push pusha jne std add xor add inc inc push xchg sbbb gs mov xor mov push pop pop imul outsb and pop scas dec pop lea xchg (bad) ficompl adc xor cmc je in push daa mov cmp push adc push push jmp mov mov cmp mov cmp push mov fisttpl or fiaddl dec cmp or mov fstps cmp cmp jne mov lret and xor clc xchg mov fsubrp sub fimul fisttpll test mov stc stc out pop std cmp jge imul jle andl cmp pop inc add and sarl add push dec fs movl repnz cmp sub pop orl inc scas ds lea mov popl push xchg pop pop mov jbe inc sub rcl mov jmp leave push test clc cmp pusha dec ret sti dec pop mov sub mov fiaddl mov cmp push sbb lcall (bad) push dec mov ljmp push sarb jmp push pop inc (bad) les xchg mov jae lret ficompl push pop inc repz add ds or mov pop lea adcb movsl fwait jbe push fwait rorb repnz (bad) repnz adcl cmp fimul cld das push push pop cmp push pop je push push push mov jge mov mov cmp jge and sbb add inc fstps ret pushl and dec add es or mov fadd je pop jmp sub adc cmp adc mov sbb adc cmp pop xchg or pop dec lods mov ret push inc xchg inc and adc or ljmp or mov je shrl in jne cmp je sti or pusha test inc or inc incl jo inc or or add insl cmc pop rcr sub cmp sub dec jmp xor or sub stos inc inc push test inc adc add add inc inc inc pop je pop es pop xchg pop fs int add clc es lock xor pushf inc cld mov shr push adc add sbb icebp xchg ss clflush inc or je xor lea (bad) cmp or je leave or rclb jp into inc ret sub out add xor jmp lcall arpl sub xchg cli pop add and fcompl jne sub xor add xor jmp (bad) or (bad) xor xor cmp pop popf loope xor clc rorb js or outsb inc (bad) sub cmp out bound or jae push adc clc out lea into ss pop outsl add sub (bad) cmpsl cmp orl setns or outsl or pusha sub hlt or cmp ret push or cmc add sub (bad) jne add mov lds outsl or push (bad) or mov jae inc cmpsb mov push add adc jne or cmpsl xchg ss push sar inc push inc push dec ljmp xchg ret in scas pop cmpsl mov cmp or push xchg jne xor adc jmp movsb aaa or push mov into test adc mov lods fneni(8087 xor jne or lock (bad) iret rcll lods push aam xchg cmp inc (bad) push push mov sub sbb fcomps inc push jmp or push mov es xor stos jo mov or add xor jb add add add flds and or shlb in or outsl add push loopne jp into pop or or mov xor and mov push (bad) fdivr add loopne pop pop sbb je cs insb sbbl ror add nop and je pusha and and push cmp daa adc (bad) jbe subb out cmp lock add adc test jle outsb jge,pn fildll dec push or je mov test cs jne push movb jp cmp (bad) cmp xor clc add out add pushf jno pusha mov push push (bad) leave pop (bad) jns leave push or sti les hlt inc adcl xchg loope aad movsb repz jo sbb jp orb jmp (bad) xchg addl negb ret dec sub decb (bad) cmc push test adc aas push aaa xor ds jmp xchg pop outsb jne inc add dec add or (bad) popf or mov movl add add mov pushl adc sbb repnz push jne cmp mov mov or mov jg in in shlb push outsl bound cli xchg push mov hlt jl xor add iret and xor mov pop push incb addl sbb insb xchg xor (bad) aam or xchg ret fwait xor mov into jne push out (bad) ffree adc jo adc insb pop cmp fistpll jnp inc push or dec out mov int3 mov ret je not mov push clc cli mov dec sbb (bad) jne (bad) xor or (bad) loop fdivs jecxz dec inc hlt xor and push clc pop enter mov or and insb (bad) or mov rcrl inc ds push mov cmp mov push pop jg fwait mov cmp pushl rcll and add mov and (bad) inc and and loope inc lods aas out sahf clc mov into adc add outsb jne push pop incb add das mov or cmp sarl out pop jb inc out xor push add pop test xor in cmp les fbld (bad) jmp push dec pop xor aad movaps icebp xorl cwtl ds and push jne adc pop adcl iret inc xchg popa outsl out pop in cwtl jmp xchg push xchg adc mov push or and scas mov mov sub inc orl call pop xchg mov dec push bound or dec sbb popl cmp lcall dec into and push add sub in stos push out xlat or add cmp movl or mov enter push or sub push sub (bad) mov inc adc sub (bad) (bad) sub xchg cld shr cmp imul jne jb hlt push dec add or add xor lea movsb fisubl or adc or (bad) (bad) pushl sar dec cmp jbe pop xchg push dec or push and push pop clc pop xorb jmp dec add shll pop mov lock jne add sbb dec loopne popf add cmp subb push mov add hlt mov addl or xchg pop clc and idiv adc and sti add xor dec pop cmp cmp out into pop fimul andb cmp je or aam or fsubl subl mov push jg (bad) and add sbb dec lock mov xor int3 in push inc scas add dec pop add sbbb add or jo add ret into fimull test addr16 mov mov dec pop or or push (bad) loope cmp jne mov mov inc mov push jae cmpb lret iret lock push or pop mov or sbb sub lods dec rolb mov or mov mov sbb push dec cmp fldenv sahf rolb nop loope testb xchg scas shl add scas jp push call aas or pop gs push or adc andl dec inc popa mov adc push sub xor sbb jne push insb mov lahf adc or and mov enter jle inc fldt enter push lea sub les mov jle cmp or enter jg mov daa xor imul jbe in dec (bad) outsl iret xor xchg shr (bad) sub sqrtps cmp sbbb hlt pop push adc mov push pusha lods mov jbe xchg sub dec fldcw mov loope adcb jbe push inc add inc fucomi fwait orl and add or or (bad) movsl test mov sbb xor push mov shr stc mov imul lret cli inc clc pop mov add daa xor clc rorb jne into sti pop addl repnz sub sbb xchg add push mov cli out ja lcall pop incb dec clc incl and (bad) lea push push movl lock call dec jne inc mov add loopne dec or pop pusha sahf dec fsubl adc sub sahf fbld push stos cmp mov pop decl push mov jne or shll shlb push or mov xchg jo adc cwtl jge xlat sub inc lcall insb fldl sub dec cmp sbb (bad) dec adc je dec (bad) mov ret pop inc sbb ss cmp jle cwtl inc sar dec cmp push push dec aad sbb pop inc push cmpsl or mov xbegin inc add shrl pushf jbe pushf nop mov lcall adc mov add mov jo inc outsl ds add incl cmp mov cld aad imulb mov sti jbe mov adc mov or (bad) mov or cmp (bad) jmp sbb adc add and and ucomiss test cmp jg (bad) cld mov (bad) stos insb xor add add mov mov mov clc js jns dec jl lea (bad) pop or mov inc dec insb pop xor or sar dec cmp pop or movsl pop mov loop inc cld or loopne fstpt cwtl inc lock fisttp xor cltd dec push flds push sbb cwtl fidiv inc roll ja stos (bad) adc loope push cmp adc dec lea mov jo fcoms add jns add lods push xor lods push je mov bswap mov dec mov rdmsr cmp and dec inc mov adc pop pusha push add sbb add loope push xor push xor push cmp popa in fs push shr and (bad) pslld or rclb jecxz jmp inc fildl push and and push ds fadds int3 mov or jg sbb xchg jmp jmp mov sub inc lock rcrb lock dec in cmp adc dec icebp push pop (bad) dec pushf pop adc add fs mov cmp je mov cld imul je mov orl jne cmp xor dec push pusha movsl addr16 cmp cs jmp shr dec lock gs and jne mov push pop fdiv int3 sbb inc test inc push pushf mov sub icebp cmp pop lea dec xor dec xchg pop cmp jge add push int3 iret dec ljmp out pop mov decb jne (bad) pop mov or sub dec loopne xor int3 dec mov pop pop js dec pushf dec bound mov clc into and lret scas pop xchg add adc das pop mov add or pop das popa or xor jge inc or ret std hlt icebp out or inc cld or call inc or push add mov adc stos aaa shrb in jne add stos mov xor lock lea jne,pt cmp loope inc cmp add nop or (bad) mov push pop xor out std sub movsb inc je adc or mov mov data16 cmpsb or xchg pop jo je int inc insb gs test das imul test fs outsb add cld push jg,pn or fistl inc rorb push lcall mov in outsb adc sbb push lock xor or bound lahf mov and add pop push mov and (bad) (bad) les repz in xlat lea pushl jmp mov outsb nop sbb inc adc movaps sub xchg imul and mov cmp fisttpll cmp push inc sub mov push sub mov pushf pop mov cli and pushf pop sub je mov popf je cmp into add ss and data16 pop testl loop les xchg and pop add (bad) cmpsb sbb xor xchg cmp or jns push jne call jb pop jno and xchg fldt cmp dec lods add fistpl loop xchg ret (bad) jae and imul dec mov rolb fcom insl stos daa loopne dec cmpsb push or push push push lds iret std imul lahf pushf jnp clc and bnd divl adc icebp push push push cmpsl and shl dec leave cltd adc xchg (bad) xor les in push mov (bad) cmpsb adc and push mov add test jle cltd inc sub (bad) mov inc jp insb outsl lock shr dec fucomp pop ja (bad) push sub jno add pop inc sbbl mov loope (bad) cmp jbe push xchg ret movsb inc and shll nop push les or in lea insb fs and mov jb pop pop ret pop xchg mov cmpl add inc dec jmp lock js or adc pop add inc pushf dec dec enter sub or and push jbe ret mov or stc jb or or fdivrp cli ret shrb (bad) jb push cmp inc int3 add (bad) call pop xchg movsb dec inc xchg neg xor insb xor xchg mov movsl adc (bad) xor inc or or add sub fnsave faddl pop leave dec mov fwait aad sub jae shrb and dec mov jne add (bad) enter idivl int3 or aam mov jo daa jbe mov mov mov imul add xor jmp add pop hlt add inc scas mov pop adc and xor add (bad) rolb test or adc bound and or jne jns cmpl push sub pop lret mov pop mov ja mov pop jge ljmp xchg sub je test or je dec je popa loopne ret sbb scas mov cmp mov or jecxz or dec push ljmp add ret jecxz push jne and and jns or or and adc sti add sbb fisubr aam inc pusha cs dec in inc call movl andl sub adc sbb add cmp int3 or push pop mov fsubr fcmovnu jmp push cmp pusha add jl dec jmp jmp xor (bad) mul inc jns aaa xor sbb sub aas inc and adc arpl call or lds cwtl mov imul mov push add and or or clc inc stc test ss xchg inc adc stc mov jg xchg addl jb (bad) sti mov jne cmp das mov inc and pop sarl in in jge pop adc or lret inc test test or cmp repz shrb int3 test push mov mov push push push push push and and sbb and push lds push jo mov shrb push mov inc in incl bnd lea lea or xor pop sbb int3 movsl loope xchg lret push push (bad) data16 je mov (bad) mov push jo xchg xchg jbe mov and xchg xor cwtl xor inc rorl shrb pop push adc adc and pushf pop inc add mov jno lcall pushl add sub mov add lcall (bad) call and rcrl ljmp push inc cmp mov cmp fwait push rol ret push outsl cmp add push dec push pop outsb ffreep mov mov loopne aam ret mov cmp jg jecxz push (bad) ja push or jo xor (bad) jmp (bad) jnp out imul sub pop sahf and movl mov jns rcrb jns cmpsb outsb sahf sbb stos add decl jg xor push outsl sbb aas push push popf push aam jge cmp arpl rorl mov aas fnsave (bad) jmp sub sbb adc sbb xchg cmpsl ret pushl mov mov cmp dec sbb cltd inc adc lcall mov pop (bad) aam and je repz xchg clc popa adc (bad) lea cmp in stc and dec sbb dec test adc inc outsb xchg ficom pushl (bad) adc xchg xchg adc ss dec dec dec sub xor dec dec dec sbb cmp in (bad) data16 adc and leave leave leave dec push push pop leave leave leave leave pop pusha fs insb jo js xor sarl dec dec xor mov adc leave and xchg cwtl pushf (bad) and dec mov js jns pop xchg xor jbe mov dec and movsb and push add xor xor lods int mov adcl dec dec xor sbb sarb and and pop cltd repnz mov or push dec (bad) cmp fnop cmp je inc jle dec loop or mov mov push lret or aad pop pop or add mov or ret add jmp jl mov inc leave ljmp sbb inc pusha shll and sub push xor dec push fsubrl adc cmpsb aad add pop faddl or aad cwtl push jmp sar adc rcll jo lock mov mov inc inc mov push jmp sbb mov out jns int3 fmuls movb insb adc mov pop add cwtl add mov lock icebp or lea repz add adc sbb test xor add and sahf inc add push cmp xchg pop imul (bad) mov mov pop push rorb shlb push inc push dec int3 mov lcall inc into mov cmp pop pop ret jb mov sub add sbbl pop sub inc adc js push adc and xor sub pop into jle cmp mov (bad) je pop js hlt sub or pop adc ret pushf (bad) sbb xlat adc ficompl jge or add fimull push push dec and outsb popf outsb push pusha std pop jg pop int3 fs jg addr16 dec mov insb mov in loopne pop lcall or inc std pusha pop je push ja jnp xor push je inc push dec sub test add mov into or loopne es rorb adc test rorb push pushf sub lsl sbb or test mov pop rcll (bad) cmc adc add je and nop jo ljmp mov push adc sub push xchg xchg xor ss mov mov sbbb xor add int3 popf xor or in lahf lea psubsb rolb je or jns inc call xor stos mov sbbl mov jnp in cmp mov in insl adc rorb imul mov push (bad) sub or jle ja mov jno pushl sbb push add and push pop aad sbb push dec loopne addr16 imul (bad) or ljmp cmc das (bad) jno cmp orl and inc adc cmp xor and sub pusha es insb and mov inc pop lea rclb imul xor adc xor pop leave pop push mov pop jle stc add push nop push fs ret or sub or arpl add pop (bad) aaa add mov mov test jne sbb xchg mov adc dec dec or and pop je (bad) lret ljmp adc (bad) mov pop addr16 pop pop ret and push insl fdivl rcrl lods or (bad) pop rclb cmc popf xor add adc pop push and in je andl push inc add ret pop pop jbe add dec or push sbb cmp repnz sbb push cmp repnz add stos and mov pop mov mov mov mov push mov push sbb imul pop rclb cmp add mov addb mov cwtl dec fs push gs push lods scas into mov sbb lods cmpl xchg inc push addb push aam mov inc add outsl cmp xchg or jbe sub sub test push fbld and dec cmc icebp cmpsb xor mov pop xchg (bad) push ljmp and dec mov xchg test insl pop movsb mov (bad) mov adc xchg mov pop lock mov je mov dec cmp lds ss cmpl nop test push or push or mov push loopne dec push mov adc xlat mov or push push pop pop pop pop push cmc xor mov or sbb enter ja add je rcrb les (bad) aaa mov xchg cmp ret sub rolb rorb sbb lcall clc mov jnp test mull (bad) cmovns testb out popa pusha data16 inc ljmp ljmp div pop dec adc fucomp or mul pop jb cmp or cmp adc (bad) push jbe dec sub sbb xor lock sbb adc lcall out movsb cmp pop ret loope lds enter ficoml jne mov or dec lahf mov add pop adc push std cli adc push xchg popf fs jg push mov mov add push inc test add xchg clc push js sbb dec or or sub push fistpll and js mov aaa inc clc dec js add push sbb dec sub push cwtl imul imul xchg pusha mov add (bad) incl addb cmp jne orl jmp adc jne adcb (bad) mov inc adc (bad) aaa inc fildl xor jmp adc cmp je cmp and sub adc jmp fbstp out jne pop jne dec add add push push sbb sbb out xchg lret movzwl test je add clc mov (bad) adc sti mov mov sub cmp sub add ret popf in leave cmp jae bound cmc scas xchg mov jb jo jbe sbb mov sbb mov aas add icebp adc jmp mov scas pop jp add fdivr out mov pop adc sbb rorb mov mov js or pop lods xor jbe cmp mov push cmp jecxz call pop mov and mulb and in xchg imull jge jmp mov xor pushf or cld sbb jne push sbb nop sub call lea cli loop dec shrb mov pop mov push es fdivs add cmp and fdivrp jb cmp ja add cmp adc (bad) cmp andb cmp mov idivb idiv rcll adc pop pop pop leave popf int3 out sbbb test imul mov push das je mov mov lret je test push mov mov out shl push add add adc stos or lret (bad) stc xor mov iret xor push and or and mov out jne movsb xchg or add and movsb enter mov repnz fdivl sti jns aam xchg pop addr16 (bad) outsb add jns std cld jmp lahf pop and js jge cmp ret mov movl inc adc out sti mov jle mov xchg (bad) xor adc adc test lea mov or lods adc and addb push and lret add rcl or shr inc add cmp cmpsb sbb add (bad) or add (bad) cs pop je cld inc or and rolb mov ficoml mov sub loopne pop pop xchg push inc mov xchg cltd pusha jnp lock inc clc cwtl orb movntq lods insb mov pop pop add pop cmp xor movl lret arpl pushf mov mov sbb mov push xor xchg adc xor add out insb and and popa jne test push fisubl std mov mov mov add test (bad) fadds cs or xor cmp mov inc dec mov add sbb inc aaa push and mov fucomip adc insl clc xlat inc sbb xor fmull cmp popf sub cmc jge std push rcrb (bad) xor xor push aam pop inc rcr fcoms push xchg sbb mov out xchg add inc adc jo rorl push test or data16 adc fnop xor inc and inc jmp jmp stc mov sbb adc loope popa pop jne adc stos jp js jne (bad) mov test jo push add jnp hlt sbb addb pop arpl cmp sub mov inc dec pop out rol ja mov jmp fs xchg addb sbb dec adc mov cmp ja jle pushf cmp jge cmp decl add or fldt mov adc sbb pop dec cmp jbe andl or mov mov mov int inc add ret aad cwtl bound out cmp je push icebp (bad) lods xlat push inc xchg cmp adc dec int3 push adc mov test add jbe push mov js icebp pop jmp and push repz sbb xor and cmpsl hlt pushf lcall xchg pop (bad) call adc (bad) push pushl lea push or ficomp and xchg inc (bad) sbb and push call sub or mov std mov loopne movsl addl loopne je idivb mov inc mov ror inc inc (bad) pusha cmp cmc pop ret inc xor pop inc xor gs sub pop in mov jo and mov mov jae or mov rclb mov mov lret or scas inc sub (bad) je,pn push push lea mov add pop pop mov xor add mov imul (bad) outsb xor cwtl enter into dec popf pop add int3 sbb ja jnp mov dec je mov jbe,pn pop or icebp mov jmp punpckhdq stos pop sub sbb cs sbb jno jp mov call add lods push and or and inc movzbl addr16 mov mov inc inc lods mov or push mov inc ss add mov cmp cmp cld pop (bad) ret loope mov or fidivl xchg adc inc das jne inc push adc cwtl inc lock vpcmpgtw or out lcall cmp je mov cmp pop jne dec mov inc push in mov or int3 (bad) fldz call fcompl repz add leave push leave jae pop and sub push ljmp fsubr adc (bad) hlt dec cmp and inc adc popf and fnstenv push test out cmc ja push push add push aaa adc fimull pop pop sbb pop (bad) or mov fsubl fidiv push arpl dec mov or cmp jmp add cmp jbe cmp inc pop dec or in adc inc xchg ja push jmp push sub push adc xchg or lahf rolb sub adc add pop xchg out mov (bad) (bad) jge cmpl mov jne movb lea adc and or hlt rol (bad) adc jmp inc and lock call loopne loop lock js lret (bad) jmp sub add pop push lcall mov insl cmp pop inc dec sahf xor push inc xchg push sub inc mov mov neg es in dec movsb rcrb add mov push or jne dec or sub add outsl xor cmp jne mov adc rolb loop xchg test dec xor add or adc push aam sbb addl es jne pusha lcall outsl or jl ss jbe jle lock daa adc jge dec mov scas sub push lahf adc rcl popa fwait cmp xor jecxz cmp mov jmp cmpl pop push mov dec jge mov out add mov js push sarl fcoml add pop adc xor xor lret or jge xchg mov jno test pop icebp mov or in add cmp xchg xor fdivrl cmp push cmp or pop add add addl pusha adc decl push xor lret (bad) mov inc addb mov outsb sar adc pop add xchg jle ljmp sbb iret inc je cmpsl pop mov or cmpb jbe jb rcpps xor mov sarl mov enter and and add sub mov ret inc sub leave and add fs popf popa movb (bad) xorb enter pop sbb in js rolb fistpl and loopne jecxz ljmp dec rorb (bad) jne pop (bad) xor sub pop inc cmp add (bad) xchg aam push dec test dec mov cmp or aaa loopne loopne jmp pop xchg or (bad) add jg ja cmp jbe or hlt xchg das insl popf cli scas jle mov ss bound movswl les loopne into xchg jl add sbb cmp add cli dec sarl insl cld aam hlt shrd push or inc mov mov adc jge sbb mov or rclb cmp ds inc xor xchg adc add dec jmp outsb in sub xchg pop add push inc mov rcll jp or daa fsubrs add (bad) mov pop adc pop jo mov inc out and outsl (bad) jp pop sbb js jg jb push sub (bad) mov cmp fidivrl rorl fistp shlb inc (bad) jb push mov lret jo add incb add andb mov jne and jg mov lods adc dec inc inc inc cmp inc repnz stc dec pop or or or rcrb add daa adc xchg push mov mov stc mov roll add cmp fiaddl int (bad) push lahf and cmp adc cmp mov data16 or mov and sub mov inc push (bad) divb jmp sub inc sub out int3 jge mov mov int3 jbe or sub lods bound mov pop sub or les xor xchg add adcl mov cmp imul in cltd mov repz (bad) sub cmp jg sub mov push cmp jbe mov dec mov inc rclb pusha adc sub add lods xchg push push imul jmp insl jb pushf roll pop clc cld jl add pushw js hlt or mov das loopne in mov fsub into sub mov sbb gs or lods xor imul or pop data16 addb loop (bad) mov jge mov popa je or sbb xchg dec mov xor inc sbb aas jns jmp cmp sarl cmovo test pushf sbb scas add cld or insl xor xchg add fwait cmpsl test add adc cwtl fstp (bad) call jne fmull insl push pop clc fstps or rorb add stc mov das inc dec adc mov push mov pusha sub push jmp jo sbb adc (bad) sti inc inc add dec lea cmpb (bad) (bad) in and je adc push push pop add testb fdivp pop or outsl jae jnp test sbb or mov ljmp sub dec inc loopne cmp or mov out mulb jle sbb lea (bad) sarb xchg mov or push movsbl imul jne imul adc xor cmp jl mov dec ret shl dec or add fdivs rorb jns call movsb fild je into lea aad jmp inc orl lods cld add push pop out (bad) pop jmp sahf adc dec add lds ret dec dec ret add sbb adc stc add imul push sbbb jnp mov mov hlt sbb sarl dec dec or sub movsl mov cmpl sub or mov subl ds lret das mov test and popa add dec jl movsl mov dec or bnd pusha push shll ja jno aas add popl ret loope stos enter rcrb sub arpl inc add dec fdivs push push dec call dec xor adc js or (bad) fstpt xchg hlt (bad) add idivb mov pop mov adc iret popa ret pop mov add xchg call mov fcmove add add cmpsl sbb add int3 push add lock pusha cmp xchg inc shlb add mov loop test inc add xchg fsubs icebp loope pop outsb sbb (bad) inc dec push fidivrl xor lods pop push lahf xchg and cmp sub in mov inc lea (bad) jae add pop insb push iret add roll aam add cmp jae push stos xorb inc push std mov or les push push movsb mov ja adcl add add sbb adc pop mov cmpsl adc push xchg and mov or add pop mov rorl cmpl pushf cmp sub push pop jne dec cmp ret cmpl xchg icebp adc sbb xor movsb push shrb inc cmpsl mov add adc lahf stos inc inc dec inc push pop pop es add cmp adc shlb or (bad) loopne or test fstl mov inc or push sbb jl or ja xchg cmp test push and xor sbb (bad) mov sti repz mov loopne xchg ljmp test je insl stos (bad) cltd mov ja mov inc je out mov dec mov mov jmp cmp jne jnp mov ja popa xchg je mov (bad) pop nop xchg sbb jmp push cmpsb inc xor push testb pop mov add dec cmpsl int3 (bad) adc push insl push dec pop sbb and inc mov pop call jae fs adc adc aam cmp or dec je in cmc pop dec jne xor push pushl scas mov jno push sti jmp xor push add xor mov xor xchg push add std and xchg mov add pop add add pushl ljmp ret into or and insl orl dec or xor pop cwtl jo sarb jo mov and mov add fiaddl (bad) aad arpl cs sbb jnp pop je pop (bad) add push mov fcomps mov rorb inc sbb add sub push sub aad xchg mov mov mov cwtl xor push cmp jl sahf jg pusha inc xchg push add adc loop hlt faddl sar aaa mov nop sub inc jne clc cld jge dec mov data16 push mov in mov cmpsl and adcb add scas push push mov dec push pop ret cli dec clc jl enter or sbb pusha test jb mov in test stos adc or test add into push add xchg test mov movb lea sub cmp test adc fwait mov or push push or sbb into mov mov mov xorl mov add sbb mov xchg sti jnp popa push mov or orb pop mov outsb lods gs add or xor dec add (bad) push or add mov adc sbbb and jno xchg and pop imul hlt add adc xchg xchg mov ret pop cmp (bad) into cmp push adc shlb rolb mov mov pop and jle mov sahf ret pop rorb call ret add inc jg adc orl call jmp sbb push popa jne repz pop push xchg cmp or out pop mov sub mov nop cmpb or jmp bound mov test pop std cmp (bad) hlt mov jmp push cmp stos nop add and pop sub push or adc sub xchg and mov mov or faddl hlt subl aad xchg sbb xchg cmpsl in cmp mov les cmp sub and in (bad) push cmpb sub push cmpl stos dec pop mov movsb jg movsb adc xlat je cmp gs into or inc and lcall add dec inc inc and pusha add sbbl flds push (bad) xor cmpsl jb mov jno dec xor cmp jbe mov add lock or adc enter push loope or rcr jmp popa and mov std cmp mov test mov addr16 outsb test test sbb jo fstpl or in es jmp fs pop xchg pop mov mov sub inc out and and cmp xchg mov and lods pop ret inc push xchg push xchg ror push in inc loopne push addr16 xchg (bad) shll sub sub dec fs loopne (bad) bnd imul icebp push or shll jb push push mov pop testl add mov sub and jnp loopne in push or rclb jge mov jecxz int3 inc stos push add jb pop xor pop arpl push in ret adc inc pop dec push mov repz inc and loopne (bad) jb cmp jb aam pop cmpb loop add inc adc jb nop mov inc insl test add jbe and mov mov add (bad) jbe dec call das clc ljmp test push or mov lahf or in loopne cmc and in ds cmp and pop loopne pop rcrb push ja addl push push sub sub icebp imul rcl mov add pop push mov mov mov clc pop or add insl rorb jbe cmp lock jl xchg cmp mov adc jmp sbb pusha insb push jge sub or inc movsl xor adc lods and sbb or or jle mov mov mov loopne fnop cli xchg cmp jle cs push ja js nop adc leave cmp inc jmp inc pop test push shrb mov adc and add scas imul xor mov add adc push xor test adcb fisubr idiv (bad) pusha imul enter test lcall aam xchg dec in push xchg sarb and xor (bad) ja popf pusha sub pop xor inc inc xor and adc mov push xchg mov adc cmp adc inc jbe push mov jle mov in arpl mov pop add dec adc jp mov fldt sub pop popf loopne jne out adc aas xor les (bad) lsl rolb lahf and sub push cmp pop pop lds shl or fbstp cs push pop push mov fisubl int3 out sti xchg iret add mov les lcall xchg call daa imul sbb add call pusha jl ss xor test dec xor push enter sub (bad) mov xrelease push subl in imul orl rcrb add addb cmp add fisttpll mov imul mov inc mov pop sar (bad) mov cmp lock jl cmpb jl lock fwait mov sahf cmp add push inc xchg sbb jg imul cmpb movzwl push or add push sahf or add mov dec enter adc fldcw and lret fs in pusha push popf push or cmp sub lods xchg sub jne,pn movsb and jbe mov (bad) aam outsb sbb dec dec fistpll popf add (bad) adc pop aam loope or shl test in nop add push icebp sub xchg flds shlb roll leave add jb (bad) enter (bad) or or insb cs push popa mov pop mov ljmp into adc mov outsb in outsb mov cld movsl movsl movsw xor push and pop inc les shrb movswl add aaa or jne ret and js (bad) cmc add test sbb dec les adc jge inc inc cltd dec cld pop jo fdiv fiaddl icebp pop adc int3 les mov sbb fs xor push pop mov adc rcr xor pop xchg cmpsb fcomi sbb bound mov adc (bad) int adc and fildl icebp int dec jns cmp xor mov daa pop pop pop push cmp jae cli mov lods rcl ljmp dec and shr add pushl pop pop idiv and negl dec clc adc push je jmp adc mov push or push sbb add jmp sti (bad) dec sahf inc pop je pop mov jmp jno enter jp jmp push push mov inc and es jbe jb daa push lock add pop je push (bad) or adc out or aaa fildll dec or inc inc or xor mov imul daa add and sarb or push mov fwait mov jne aaa or push lcall jne sbb jl add pop adc adc jge stos stos push stos pop pop andl rcl or outsb jge sub xor mov fstpt pusha lods pop add sub pop hlt aaa loopne rorb fisttpl int3 sub inc sub test fnstcw lret loop rolb mov push in fildl inc wbinvd repz cltd insb pop and insb add push dec or adc clc test push sub and or mov les xor or cmp jmp dec sub jge dec xlat cmp cmp pop add jae dec mov adc ficoml adc jns sub rcrl ds add jge push pop ja enter xor mov ljmp sti cmp dec dec stos push jecxz inc lcall pusha nop loope xorl xor cmp push imul movsl xor xchg cmc mov or iret inc xchg (bad) out and push cld not add cmp les xor (bad) mov ds push or push pop mov and mov jl (bad) push cltd push inc outsb sbb pop sub sarb je mov cltd xchg aam push jge sbb xchg test pop in jnp push dec mov hlt test jb mov pop out push inc mov sub add push xorb maxps daa mov pop or popa call dec sbb ror dec jns adc mov mov or rorl cltd insb inc or add sbb mov xor inc add gs les shll lret (bad) mov andl sub push into out cs (bad) (bad) jle lea and push sub or push sub inc jo cld mov jge sbb nop add aas scas shl xchg neg sbb out mov or or mov sbb cld or cmp pop push or push faddl xchg int3 stc and mov or mov sbbb nop repnz inc push mov pop add xor mov xchg subl dec pushf andl pushf inc or adcl add andl add dec test pop mov push sbb fs pushf cwtl sub xor xor fsts or xor push lods mov mov or cmp jl std sub add jmp xor stc or xchg mov lahf and and pusha mov cmpsb enter lock lret adc jmp pusha and or fs (bad) pusha shrb jge call or cs into jmp clc orl sbb mov sub push jmp cmpsl mov imul xchg sub push sbb mov inc cmp orb jle cmp push xor in sarl push jmp dec push mov xchg jbe sbb jne push sub data16 pop pop arpl add sbb jg cltd hlt adc jae divb out push push pop jge (bad) pop jle scas jnp cmp test out add andb imul xchg aad cmp add and push and push xchg jo dec (bad) xor pop push sub je adc gs orl pop pop andl test jbe lds stc sub cmp jbe jo test mov ret add inc scas call out je mov and insl insb es mov mov sub js adc fadd incl add inc (bad) dec mov jmp jo xor test fsubs sbb or mov cld dec sbb and inc aaa add sub stc fdivl dec mov xchg in das inc pushf jmp push cwtl pop xor xor mov push sub into dec cmpb hlt sahf add jo cmp adc add push rolb xor dec roll adc sub shrl inc sbb xlat test les cmpb mov mov ss lods dec mov and or (bad) push out shrb decl (bad) mov adc out lods sarl add jo and (bad) das or (bad) mov cmpw jb mov xor and mov mov cmp push into ss sub pop jb ss rcrb xlat iret and push imul push lcall adc frstor pop (bad) std mov aas ja fwait enter xchg popaw xor inc testl fmuls les and inc in cld cli jg sbb pop cmp jne cmp jne aad in pop cmp dec in pop cwtl xchg push and (bad) pop pop cwtl dec test leave rcrb and (bad) or push cs fnstenv mov outsb mov or mov lret sbb cmp xorl xor fwait mov pop cld je in addl subl insb fcom sbb sub push mov sbb push les mov mov cmp mov insb shll (bad) sub mov add or adc ljmp or das pop mov sub adc (bad) jg jg sub mov neg inc icebp data16 push add add js sti xor push fcom insl mov pop shr ds pop fstpt dec mov aam sarl jne mov out pop push adc dec jle insb xchg andb bound sub (bad) (bad) fcmove rorb jge in xchg adc dec xchg ljmp or ficompl cmc inc cmp jae es cs out mov (bad) es push jp jge hlt push jo add sub pop sbb adc data16 add insl icebp int3 movzwl jne push lret das loop shl sbb idivb fiadd adc push xor insl imul jge or loopne add or mov popa loop add lcall mov jns sbb push fwait inc and subl jo rorl sub aam js pop loopne mov loop iret sar xor movb push rcl sarl repz aad xlat fsub shl (bad) sti fstpt lcall xchg je movb jmp or xchg rcrb aam cs sub sub cmp enter push test or addl push add add cmp mov imul jle les sub movsl (bad) maskmovq testl xchg pop das push pusha je adc cmpsb or cmp das or sub dec (bad) les push lahf xor mov or sub push test or push outsl push in or es adc lea adc add bound insl test or dec or mov push fdivr adc fnstenv mov mov aad fildl cmp out loop sbb adc insl aas cmc mov push ljmp xor cwtl pop sar add sbb rcr leave inc mov (bad) jle adc mov sub fadd test mov idivb ss xchg into xor mov dec and and xor fisubr and leave sub dec add imul cmp inc cmp lret sbb (bad) cld lods cmp std sbb jne inc imull mov dec add loopne (bad) or mov rolb cmpsb pop dec inc roll xor inc dec and cwtl jne sbb mov loopne fstps clc int cld sub jle lea outsl xor ret mov jne jp (bad) lods data16 jg addb xor add dec inc push imul pushf sbb loope in xchg test lods add add inc push movsb sbb shlb mov mov hlt xchg (bad) sar or jb out adc or xor (bad) add lock add sarb jge mov neg movsl add inc pusha mov pop mov sarl shr scas rcrb mov adc mov pop add mov mov xchg lock sbbl repnz lret aam in idiv sub in cli div mov push sub int3 (bad) fiaddl fsub and rorl sbb jmp inc pushf popa ss les add jg lock shr idiv test push aas mov pop pop sbb cmp mov rorl or rol mov jecxz mov xor sbb pop repz mov or push scas inc inc rcl inc pop mov inc scas dec inc or inc fmuls adc inc inc mov inc mov jo jno lods push mov mov push mov out mov mov push cmp aas mov in fidivrl add movsb mov add jg subl mov xchg das fisttpl ficompl test mov mov leave adc mov rcll neg pop add lahf and push sbb cmp sbb dec (bad) cmp sbb xor xchg lods bnd leave jo sbb adc xchg inc pop (bad) dec sbb xor and or jmp mov in popa sbb stc push fldenv repz addr16 or pop dec loopne mov aam lock je movswl add xchg daa and js lds fwait inc add incb add cmp pop movsb subb add pop push out adc sub mov adc push jge (bad) push loopne call test mov add pop rclb fiaddl neg imul xchg addr16 insl push loopne data16 cli fisttpll push dec test imul add lea mov push jo ret (bad) mov ja jbe dec movsl in xchg loopne add mov mov cmp sub mov pop or pop xchg mov add or test mov rolb ja fcmovu lock inc enter fdivrl xchg mov (bad) jae add push add cmp out add sbb testb mov fdivrp dec mov mov test in inc jmp push adcb dec cmp jge out inc subb xor movb dec cmp lahf (bad) mov incb sub cmpb loopne fdivrs movb dec aad and xor je mov aad jae push jno mov lea dec and or push nop add (bad) in cmpsl or test add or add push add dec inc mov pcmpgtw loopne add push mov mov cli je pcmpeqb pop dec pop xchg into je into adc ljmp insl inc xlat jo or pop jne or int or jmp or lods cmp je adc adc dec test add pop sbb mov add fisubr xchg xchg xchg adc or jae ret pop or (bad) mov mov add xor into pusha sbb inc inc dec ss int3 add shll jp mov adc or xorl out ret or add pop push f2xm1 xor scas pop pop dec aas pushf sbb and jnp (bad) adc add loopne outsl loop add loopne int mov (bad) mov dec lea mov aas pop sbb aad or sbb mov int mov enter mov add jo test mov sbb clc xor insb xor outsb push shlb ret cmp cmp mov push push clc sbb mov mov xor orl out fchs dec xor adc add dec adc mulb addl sarl sbb add inc fnsave decb scas pop jl jnp cmp xor test jns pop test sub or add or push jns add add mov or add ja jns cli je push inc mov jne dec push cs dec mov into mov repz inc pop sub sub loopne pop mov pop out icebp pop test mov and adc (bad) or jle negl add popa mov icebp loopne insl sub adc xchg or mov add in popf lret adc xor mov popa leave leave andl cltd into xlat (bad) jg xchg xchg add lret leave jno sbb xor jbe mov add add sbbb push adc incl add pop push cmpsl push movl dec decb add add and call movsl andl lea lea or inc repz int jle leave or mov test mov shr sub pop lock (bad) xlat bound cmp lods pop sbb and sti pop pop add in mov pop add je xlat jne scas push (bad) loopne test push fimull xorb push cmp aad sbb pop (bad) jmp into push addl or inc cs cmpb cli mov and xorb or adc ret inc pop insb jp adc icebp (bad) pop fwait mov (bad) mov mov jl iret adc jne dec movsl adc cmpsb cmp mov xchg or and push lds cli mov or iret (bad) or lock rolb aad push (bad) (bad) lret test xor xor into dec stos testb add icebp test int test adc je add data16 mov push popa add push (bad) mov (bad) and sbb inc les test inc pop mov and pop push mov into inc mov or sbb sbb or mov ret add mov enter mov scas inc dec and mov push xchg and sbb enter pop mov das mov mov sarl jne sti mov mov push xor js inc jne and inc sub enter lea push fcomps add sbb ss fadds dec (bad) pause inc cmpsb sbb sbb and inc es cli sahf add cli movaps push sbb shrb and xor out push rolb mov mov pushf movsb lea cmp cmc or dec in mov cmp cmp mov push jae and ret cmc sub push popf push jmp add and adc btc or ret sub testl push mov add lods pusha adc jl xor adc add cmp cltd test pop mov fild fs out sub and sti jne in and jnp adc jno jp adc in cld jnp hlt in pop stc jl pcmpeqb adc pusha sti cmp and fs pop sti and iret dec negl jnp and js pop sbb jo push cmpsl js mov test (bad) jne fstl and add movsb sub popf daa addr16 mov add cs cmp arpl push dec ds inc add jo push in dec fimul pop mov mov cltd mov adc icebp pushf cld jo adc jnp dec xchg add adc repnz insl ja incl pop repnz mov push lock mov in (bad) nop xchg sbb (bad) ror add mov imul daa in sub mov dec adc daa fistpl add dec or ja adc mov add mov jnp add add (bad) mov xchg jmp sbb add mov add movl int3 adc inc das out rolb inc add jbe fstl or xchg ja add in pop jl pop jle adc ja add adc negl fstl insb testb addb adc scas fisttpl lret test adcl push cmpsl (bad) ja xchg jnp pop mov popf xchg pop cwtl adc pop pop sbb testb xchg notb movsl sti outsb fldcw lods xor cltd in mov test push jmp popf jne sub dec es jne mov in std mov and je fsubr fdivl mov and mov fidivl hlt jmp jne in insl popl mull push mov xchg xchg pop or xor testl sbb mov push xor notl cmp and push dec add mov pop mov sahf popf add sbb (bad) loope orb xor in aaa test and adc andb dec inc pushf lcall push xor test ret cmp pusha dec sbb mov (bad) (bad) mov fcmovne add pop adc mov xchg sar sar jmp loopne loopne push mov scas loopne adc add inc push dec ljmp lret pop cwtl (bad) repz repz push pop mov mov repz xor push dec pusha jbe out cmp mov int out sahf and pusha xchg pushf into out idivl or (bad) push inc or divl iret insl test xchg mov add sub push incl (bad) jbe fs push dec inc cmpsl inc dec aaa cmp mov call mov imul adc rclb sbbl rorb cmp add xchg test rorb outsl pushl popa je and add inc outsl jo jb addr16 xor pushl xor xor dec gs outsb sub and imul mov add or adc cmp or push add add add mov addb mov (bad) add adc mov add adc adc in out fsubrp push adc or pop or sahf out sahf or js out or and mov add pop jb add or xchg outsb inc push pop pop or dec dec dec dec or or inc adc ljmp notl adc pop or or or (bad) jns out sbb out sahf out in sbb pop sahf out sahf fdivrl jl add out (bad) inc ret out sahf out loop xchg push sahf out sahf (bad) xor sahf out mov sub push sbb sahf fidivrl mov sahf out xchg cmpsb out sahf out out xchg push sahf out sahf (bad) ss (bad) push jns out mov cs out sahf out out push sahf pop sahf out sahf fidivr mov sahf out addl sahf out loope xchg push sahf out sahf (bad) xor sahf out mov sub imul out sahf fnstcw mov sahf out test and out in xchg push sahf out sahf aad mov cmc or lea sub out in sbb jns fnstsw jns pop jb xchg out sahf out push rcl xor mov jae repz out repz mov dec dec lret lret sub stos stos imul sahf out jmp sbb out pop fcmovnu cmp mov jns out sti pop pop xchg inc inc mov sahf daa cmpsl cmpsl addr16 sahf out out pop xchg xchg out sahf out push xlat xlat aaa sahf out sahf aaa mov ja idivl out (bad) (bad) jg out dec iret iret das sahf out sahf das scas scas outsl outsl out jns out out pop pop lahf lahf out sahf out pop (bad) aas sahf out sahf aas mov cmp xlat jns xor and cmp repz jo iret repz dec sub pop cmp repz add and idivl repz xor add addl ret and lock out add out sbb add or add repz or push push repz repz push add or jmp sbb adc lock repz sbb pop xchg out das xor add add add or mov or or sub pushf cmp cmp adc adc test jb sbb inc leave inc sbb mov out xlat lahf in and aas adc adc in in adc push pop sub mov sbb push mov xor add adc dec or jno inc pop idivb mov sbb sub xor mov push pusha jo adc jns mov pusha mov push xlat or mov mov cmpsl pusha xchg sarb mov adc bound jb and insb gs pop or (bad) push push or repz pop and repz repz inc push arpl repz jae mov inc push mov mov add add xlat sbb and out xor add scas add push add add jns out or sbb push xor mov fiaddl or ljmp xchg push outsb imul outsb and arpl je outsl outsb jo fistpll cs imul outsb arpl gs outsl pushf ss (bad) jmp jb dec inc push dec inc dec xor cs dec dec outsl inc divl les inc insb jae jb rcpps push popa insb jne das jb leave inc inc insb insb outsl arpl jb js neg (bad) in je jb gs insl jae jbe fs add orb pop sub add js mov mov (bad) (bad) ljmp and and and es sub sub sub cs xor xor xor ss cmp cmp inc inc inc inc inc inc dec dec dec dec dec dec dec dec jmp lea pop pop pop pop pop aaa cmp add bound sub imul jg insb insl add jb je jbe js jp jl jle add aaa jb mov mov call rclb push and lods pop in (bad) dec dec inc sbb cmp data16 xor xor fnop add sbb popa jo insb imul mov and adc je,pn (bad) int3 lock and inc es push fadds jmp data16 dec cmc aaa sbb push arpl or xorb int3 and arpl daa mov mov sbb xor and insl or or inc cs fwait add xor sub adc mov lcall imul test in mov xchg jbe dec push test or imul fs jg and addr16 and je add dec in ds sub sbb imul pop test pusha xlat insb outsl mov fldenv daa sub add sub arpl lock inc cmp arpl pusha push sub mov outsl jb adc cmp imul out xor int3 or push pop xor sbb popa pop loop push xor mull (bad) xor push mov xor xorl aas (bad) inc add xor hlt pushf insb gs add lds (bad) ja outsl outsl imul shrl lods outsl call jo cli jbe mov sub or inc in xor pop push gs das (bad) or ja or lds (bad) cmp andb outsl xchg imul or arpl stos xchg gs push pop rolb fcmovb dec shr push pop shrl outsb or pop popa pop or cmp (bad) rcll leave (bad) mov insl cmpsb mov arpl cmp xorl addl adc push and or fldl mov addr16 jae scas insb orb mov pusha jo aaa (bad) pop ds fs (bad) xor pusha stos push sub lret inc sub pop mov and or add cmp lock imul inc inc jne (bad) fmuls gs dec and jmp cmp sub push cmp push gs pop ja mov outsl js ljmp ret or and add and add test mov add and push mov (bad) add add ret push ja add push and push and add je inc cmpsb add add decl adc aaa add xchg mov pop add mov rcrb add add addl xchg (bad) nop xchg xchg xchg xchg xchg (bad) (bad) (bad) call fwait pushf popf sahf lahf mov movsl cmpsb cmpsl test stos stos lods lods scas scas mov mov mov outsl mov pushl mov ret (bad) (bad) inc (bad) enter int3 int iret rcl rcl aam (bad) xlat fcomp fcmovu (bad) (bad) loopne loop in (bad) (bad) (bad) jmp out jmp out out lock repnz cmc div clc stc cli sti cld std (bad) jmp push ljmp and xor sbb inc mov inc cli pop add cmp cmp (bad) roll fs dec and jns add inc cmp adc fs dec push sub ds or xor pop dec sbb xchg sub addr16 insb outsl xchg sub lods aam scas inc jo imul sbb daa (bad) bound daa dec popa outsb adc into mov xchg cmp sahf outsb jns jg addr16 popa in fild jb popa xchg adc jae jnp outsl daa push gs sbb dec outsl outsb cmp insb sti and jbe add aas out fimull xchg push and test add lcall jl dec imul push arpl mov dec inc jb jns daa pop bound inc xchg pusha and push jns mov add pusha insl inc insb xorps push cmp mov popa addr16 jbe mov addl gs addr16 jbe in jecxz dec dec push lahf fs or push movsl faddp mov (bad) dec nop popl pop sbb push pop or push add xchg fs outsl lahf lock push xchg pop pop mov stos mov push push jae daa add and pop or pusha insb call cmp subl inc jno and pop mov data16 inc loopne or out das push push push push dec testl dec mov outsb enter movsb xchg or dec gs mov dec imul call add xchg outsl jae popa jb mov xchg das gs imul movsl adc incl dec mov jg sub push jne push or cmp push (bad) je outsl xchg (bad) mov mov popw pop fstpt scas pop push cmp ds je repz and sub inc jl (bad) jae es addr16 jle sub sub add push jl clc out pop and sub es sahf fwait iret sub sub push outsl jo inc push sbb cmp add nop ds push inc in mov ret add jb divb addr16 insl adc xor mov push imul cld sbb or cwtl push popa pop push inc jo es jbe mov jl repz push out sub adc add jns out pop in loopne int3 jns jmp (bad) mov push add fmul mov sahf out mov repz aaa cmp xchg nop cmp repz cmpb cmp repz push cmp xchg push dec dec repz repz inc cmp xor repz xor and sbb iret repz adc or jns loopne add push scas push in out sahf out mov andb jns inc and faddl jns out push cmp and cmp or add push aam cmp repz mov adc ja in pop push movsb adcb out or inc gs or ja loope outsb test push dec jb dec mov add out dec clc mov arpl daa mov lea dec mov mov mov push dec inc test mov push push cmp pop pop push push inc data16 xchg mov dec mov fs (bad) or orb stos mov jecxz aas lret pop add and lret add fwait test inc add test adc or (bad) add adc or jnp cmp and scas and jge les lea daa mov inc popa imull xchg incl add adc mov ja add mov mov incl (bad) add dec add icebp test push dec add cmpsb pop outsb jns loope mov xor arpl fs mov (bad) and add push or out out (bad) ljmp push insb es (bad) cwtl sbb add push push inc out je add mov jb push jns insl scas insl mov jb add nopl or fisttpll cmpsb xor or arpl call arpl dec pop das add and cs insb pop lcall sub out xor cwtl addr16 hlt xor stos and mov fstpt mov jb inc push divl adc popa pop dec add data16 mov sub dec dec inc arpl outsl add ficompl outsb sbb sub xchg lock sub jb push ds pop push mov jge jo pop ret not outsl inc jb push add lods cs fcomps lret push sbb loopne jle bound xor js jo fidivl xor inc outsl (bad) ret imul roll inc xchg pop push inc dec xor adc jmp inc xchg jnp inc scas add mov jb xor loopne add pop xlat jo outsl add adc gs orb inc add adc ss shlb jae or pushf push addr16 outsb sub mov add push (bad) sub or dec popa outsb sub test inc imul jns jns insl sbb insb bound xlat pop adc xor std push push sbb aaa mov arpl test out and and add pop aaa jmp outsb xlat add mov or push (bad) ss out (bad) mov leave xor incl adc xor sbb scas (bad) sahf jne jae out adcl popa jb mov sti loop xor aas ljmp pop ret out push jne push and push cmp push stos jnp je pop cmp add mov aaa jae in ja inc xchg popa mov push vdivpd jae jbe aaa dec sub or das push andl and push push add pop push push dec int add push pop jle movsb je insl push add jnp xor mov mov arpl insl push inc add push ret inc aaa pop add inc jo mov add mov jnp outsl mov rclb and ja add pop ret xor ja loopne add stos outsl add cs cmp addr16 push fdivs jno jae dec fwait sub addr16 xchg daa ds sub (bad) (bad) insl jnp pop dec insl jg sti jo jnp loopne add notl mov pop mov jmp data16 out mov pop pop (bad) out data16 cs scas std js popa (bad) outsl lahf je insb push cmpsl scas jae xchg pop add stos jbe gs push or xchg lods aad out xlat je out xchg xor repz sbb addr16 add (bad) test inc dec arpl jnp inc mov jns imul stos mov outsb add add push xchg iret addr16 (bad) cmc pushl pop imul rcll fwait out mov or scas pusha sbb iret push mov xchg jne pop push cmp xchg xchg inc push test xchg and xchg sbb (bad) adc rcpps shll jecxz push add sub mov sub iret mov ja,pn negb lret sub frstor add cmpsb (bad) dec push das xchg push jns add (bad) jmp mov add or add (bad) out ret add xor cmp cmp jb (bad) pushl sub sub sub xor bound data16 dec mov aaa add inc cmp inc dec aaa xor jle int insb aaa xor xor inc add jb incl inc jb fs outsb push xor out lret mov inc out jnp ror test add inc adc push xor cli dec mov add (bad) mull aaa (bad) js (bad) lcall inc into push idivb push dec ss add inc sbb idivl out outsl add add inc or or inc pop je pusha push lea adc popa outsb arpl inc inc pop shll pop jb or cmpsb xchg dec aas mov ss rcrb push in jge inc push dec inc inc ja xor pop (bad) hlt (bad) out cmovg push cmpsl dec add scas dec add pop jg xchg in ret imul outsl or stos iret inc sub fdivl in sbb jo je add and push adc and mull aad les daa fistpll aam out je je and push dec adc and jb lock jo pop aas jae cmp sahf or das sahf and sbb add push ret or mov test and dec ja inc cs add setbe inc pop icebp outsb xchg jg add mov aaa ret mov out dec jae sbb cmovle and punpcklwd fmulp movsb dec xlat popaw jae mov jb inc outsl insl push fsubs jae jb or xlat (bad) jbe xchg sub (bad) pop cmpb push pop sub dec dec inc dec pop inc push inc inc in fildl dec push dec sub dec dec dec inc loopne movsl sub mov add inc enter (bad) inc mov lods nop testb aaa das and adc pop add aas mov arpl icebp inc adc adc pop adc and hlt xor push push adc loop cs mov dec popl mov jbe insl mov out mov xor sbb add out mov pop push scas dec push pop out add scas push sbb andl cmpl aaa aas (bad) pushl incl inc jmp fadds cmp (bad) decl aam mov inc mov adc bnd mov loope lods inc cmpl test data16 fldl xor fdivrp rorl (bad) ljmp loope and mov mov lret js loope popa pop cs jmp and aad sti scas mov cmp xor mov adc (bad) mulb xlat inc jg xor fs cmp xor sub dec bound arpl or cmpsb cmp test push jge push xor jne push push movsb enter xlat dec and cmp add jnp stos or dec add inc inc arpl push inc bound dec dec add popf add loopne aaa rolb add xor add inc iret lock imull aam or xor outsl mov and fisttpl add lds jae add cmpsl dec push mov add test xchg js pop pop data16 repz adcb lds data16 and push arpl inc push jnp cmp adc cmp xor pop xchg call and adc inc jo fidivr xor xor inc pop jmp mov pop sub xchg data16 cmp into imul add sbb mov dec popa (bad) add pop push aaa js cmpsb int rcll sub cld xlat add popa add jns and jo imul and inc jae test pop repz js fs int push addr16 mov or aaa pop mov mov lea (bad) mov add popl pop pop jae ljmp orl jmp or add bound and inc xchg cmp dec xchg pop scas jmp pop rcrb mov rol out cmp xor cmp cmp add aaa inc pop aaa pop jo pop stos xor push mov scas adc lock and imul into jo imul jecxz jo arpl icebp or xchg jo je insl fist xchg gs dec xlat push sbb addr16 pop imul inc xchg inc sti push push cmp stos ret mov sbb push add mov adc adc adc dec pop add adc sub push xor jecxz dec lds pop aaa inc add clc (bad) mov pop jg and arpl and mov mov pop push add scas test ja fs outsb xorb or jb daa jae outsl add and xchg dec insl mov lock fsubl xor in jae jae daa aas pop add cmpsb push pop dec xlat inc jecxz xchg sub add xlat mov jl mov jns add stos dec push outsl jg out xchg or mov mov push movq sar popa mov aad adc mov hlt push enter add sub inc or pop mov loop or dec das and pop jo scas and or or (bad) push adcl ja jbe push or add in sbbl out ja out jo arpl sub popa nop pop test scas inc lahf test and push adc inc adc ja rcl sub mov pop adc test push addr16 daa pop pusha fwait xchg sbb add pusha fsts cmc dec dec arpl aaa insb btsl cmp sbb or pop jns das sbb divb loop sarb popa insb pop pop pop cs fistpl stos cmpsb jns pop xchg xor cmp out dec add jae jmp arpl inc add inc cmpsl jg sub adc nop (bad) and add sub xor cmp sarb mov inc dec jae adc sbb or add outsb je imul nop movsb add out sahf pop jb or xor push dec inc dec cmovb jnp negb push inc push das add addr16 sbb inc jg in in or inc je pusha test fmuls or adc pop xor jmp (bad) pushf shl rorb loopne push neg lock jo cmp dec add mov cs lock and and dec insb xor xchg maxps inc adc (bad) push (bad) scas mov mov xchg inc jecxz test add rcrl fnstsw aam pop adc inc aas mov jp sbbb mov inc pop and push repz jns or aas out and cmpsb mov sub (bad) xlat pop rorb xor aas dec xor mov aas adc test cmp popf cmpsl or aas aas dec inc iret or outsl mov or aas pop ss inc mov daa inc aas mov push ss mov insl repnz jg push aas scas arpl or mov (bad) gs lods addr16 cmpsl sbb sarb decl adc inc (bad) out sbb dec add aaa ss add push mov addr16 iret (bad) mov or or pop mov inc scas push in popf jge aas add add jmp jg xor sti jge pop and (bad) adc adc inc add cs dec mov dec cs dec pushf sti leave and xchg enter cmp add inc xchg push sub scas jg and ja xor inc scas popf sbb leave and dec cmpsb in mov nop xchg (bad) lock in dec dec cmp sub dec ss xor fist leave andb insl and (bad) outsl push mov aaa cmpl push test mov mov (bad) dec xchg ja iret rclb xchg dec cs leave dec sub adc in mov orb popf mov xchg dec fcomps scas cmp push pop imul jo fcomi outsb pop jge add cmpsl push push add icebp jbe shll leave sub ja ja inc pop mov push orps adc xchg negl push and in (bad) or fist mov adc add pop and inc add mov inc pop add pop xchg xchg xchg scas (bad) xchg jnp dec mov ss aas enter leave nop paddq ja cmp out pushf scas lds mov fidivrl xor add push push dec test stos stos and or lods or adc push add push outsb gs imul ss and arpl lea pop imul test pop fsubs xor jbe push mov aam ja and xor call pop xor addr16 outsl push insl gs fdiv je outsl fs pusha inc bound rcl cmpsb insb outsb xor dec jo popa mov fdivrl outsb jns push test add push mov fistpll insb jae sub jb bound pop jae add (bad) adc xor push add add out jl and inc adc shlb inc xor aaa iret fild pushf xchg push pop jbe jl jmp jb mull data16 stos (bad) jae outsb jo xor outsl jbe daa jmp arpl loope add mov insb gs outsb push mov xor iret add add arpl sbb push out pop mov sbb push add or js pop fist insb in pusha mov push js xchg jo das movsl cmp ds sbb aas negb or push jae ds das fidivr in jo xor or jbe (bad) pusha mov mov mov leave addb jg das pop fstp mov nop or cmp js mov aas rorb adc push jbe aas mov or mov aas lock push unpcklps mov jecxz sub je xor outsb mov in enter fs aas test mov test inc aas call sarl nopl cwtl (bad) cmp aaa das jl in jbe in cmp fdivrs pop das insb cmovle fldt mov dec loopne mov add push movhlps jbe mov jb xor in jbe (bad) decl das bound and fisttpll mov pop add (bad) inc aas in in jbe incl das pop bndldx xchg incl das jp cmp aam insl mov in adc push sub mov outsb mov adc mov dec aas hlt incl das push movhps outsl (bad) fucomi (bad) pushl das jbe ss ljmp fucomi comiss es lods pop outsb mov adc in decl pop jo (bad) pop nopl pushf jmp loopne mov aas fdivr sbb mov in jbe ucomiss mov mov aas cld call jbe pop jno incl pop aad xor jmp and mov add addl loop pop nopl xchg ljmp cmp rcr outsb mov ljmp sub mov test mov mov bnd ja push unpckhps outsl add push (bad) jne xor fucomi jbe (bad) aas stos pop mov test inc aas ljmp nopl lcall in cmp cvtps2pi mov aas mov dec xor aas cli dec adc jbe pop inc pushl xor mov aad decl aas outsb mov (bad) inc aas out jbe test pop bndstx xchg test mov (bad) jnp cmp (bad) incl movntps mov aas mov jbe mov dec aas idiv outsb pop push mov (bad) pushl aaa in jbe fnstsw jmp daa aas in ss scas pop mov (bad) aad lcall pop aas sahf aad jbe (bad) jg aas aas fdivrp mov outsb pop outsl comiss mov inc aas (bad) cmovg (bad) call mov loope es mov icebp cltd dec es leave test jmp fnstcw stc lds in xchg mov mov es es int and es popf fnstsw std ret dec es mov cltd xchg shll dec es mov lret and es mov cltd mov fs cmpsl out and es mov es scas es mov fildll cltd dec mov outsb stos add add outsb pop pop adc mov stos dec push push add jg and scas push (bad) subl lcall ds outsb pop pop movb fldt sbb sbb pop push popa mov add xor and xorl or pop push rcr dec push cmp xchg stos dec test push stos outsl fcomps jle jne bound dec and in add in cmp aam ss sub je mov xchg push add (bad) aas addl js add aas add iret repz pop nopl push insb mov jg outsb aas (bad) dec push sub ucomiss inc std xchg lods push lret inc inc call add xchg adc add cmp aas and add bound add aas sub pop adc add jb add and pushl (bad) jns and cmpsb fisttp mov jb lahf loopne inc jle test shll mov mov (bad) mov mov iret mov in call popf bound push ficompl lahf fidivl push xor fcomp loopne xchg je add jle pop cld pop inc testb push inc add sub or push mov add pop cli xchg incb movsl mov ss push jle ss adc xor jns xlat add lock xchg (bad) sbb cmp adc mov add fisttpll or or ja inc insb pop and scas adc outsb daa mov xlat adc and dec dec inc push addr16 das push paddq in jbe mov insl add jo lahf jb push pop jb pop jo orl pmuludq (bad) xchg add outsb mov pop movsb fbld test mov aas xlat sbb scas imull sbb outsl add clc inc daa xchg fdiv pop clc inc divl push pop cwtl testl insb testl push adc iret jnp in testb push sbb push push sbb push sbb iret loope lcall and fucom cmp fild inc push out sub mov push jns das pushf out jp push cld push mov mov xor add lea and pop (bad) nop and xchg xchg and mov pop scas cwtl push adc orb xchg sub mov das xor pop add rclb (bad) mov or sbb inc fistp jns addr16 xchg cmpb sahf out jo pusha pop sahf out sahf dec inc cmp and sahf out and adc lock out or cld add out push push call jnp pop rorb enter lods repz repz inc sbb iret insb pusha or test das jne jle jg in inc pop xor add xchg xorb sbb lock xchg push push push aas test mov push inc jg addb inc out mov xchg cmp xlat (bad) pop dec seta (bad) out mov adc push pusha fisubrl cmp ja das cmpl iret jnp das push dec insb icebp cmp mov dec pop nop sub adc iret repz and lock iret repz push pushf test jns iret repz loopne push push mov (bad) (bad) (bad) js in push pop insb push push sbb fidivl mov test adc fwait mov (bad) (bad) (bad) pushl mov and fstp push out popf mov ret mov loop (bad) (bad) (bad) lcall and and pop sbb and les lods jno adc fadd loopne cmp (bad) (bad) pushl inc jl popa pop idiv (bad) lahf out jl (bad) jae mov cmp inc add (bad) (bad) (bad) ljmp scas add lret mov pop sub sub into ds out push test (bad) (bad) (bad) mov mov in adc xchg (bad) mov loopne sub test (bad) (bad) (bad) (bad) fdivs out je js cmpsl decl jp add pushl scas sbb (bad) (bad) (bad) (bad) cli (bad) lods insb into dec lahf and mov int and sub fcoml cmpsl (bad) (bad) (bad) decl bound sbb outsb into movsb adc dec repnz sbb insb stos xchg sti inc data16 (bad) (bad) (bad) push xor xchg or and ret push xchg xor stc call scas inc mov pop (bad) (bad) (bad) push mov sub add lds and lds xor inc jns (bad) (bad) inc adc inc pop out push xchg push cld push fiadd lcall and jl jp lds popa dec (bad) ds xchg jg and std into inc in and push xchg xchg pop adc (bad) in pushl insb dec dec or mov cmpsl ror sub rorl mov (bad) (bad) jmp test jbe mov lcall in lods xor and mov or xchg (bad) (bad) jg push jne loop leave jns popa aad (bad) cmp push jecxz scas xchg pop out pop mov test incl push dec mov sub mov insb pop mov rcr (bad) (bad) ljmp fiadd hlt xchg or negl xchg dec jbe out jo mov mov pop test cs (bad) (bad) decl in sbb cmc pop call sub push pop (bad) dec adc sub (bad) (bad) incl (bad) sbb subl xchg les aam cwtl imul (bad) (bad) mov dec hlt jne js loope cmp add notb push inc lock push (bad) incl popf add and dec lods lods (bad) cmp lahf cmc cmpsl mov mov clc les stc mov out xchg adc cmpsl stos cmp push in (bad) (bad) call pop mov in push lods outsb test pop fisttpll ds call adc mov (bad) js sbb push sbb gs js rcr negl mov jg xchg clc and adc stc dec sbb sbb push sub inc ja (bad) call fmuls call das (bad) mov xchg ja,pt unpcklps xor mov (bad) repnz xchg jp pop mov outsl add gs scas mov out cli (bad) incl jns cmp jmp and sub (bad) (bad) incl push dec scas push or (bad) jp pop push sbb in mov xor push mov insl and (bad) (bad) ljmp cmp nop sbb pop mov xchg mulb mov mov cmp (bad) (bad) lcall jmp jbe and mov xor or xchg nop adc and (bad) (bad) fcomip jp and push inc adc pop int3 pop (bad) shrl lds push (bad) (bad) (bad) push (bad) jmp cli dec fadds in (bad) test push inc inc adc jecxz jbe ja inc fidiv in fsubrs dec loope dec arpl push and movsl (bad) (bad) (bad) ljmp out cwtl mov inc xchg adc pop jbe cmp mov and and mov (bad) jb inc mov loop aaa aaa mov jge pop out jbe,pt (bad) (bad) (bad) jp and jnp xchg jl cmp and sub or dec hlt mov ja (bad) (bad) dec out mov sub dec jb xchg dec and mov xor outsl into push std scas clc (bad) jmp in loope xchg adc xchg mov adc cmp cmp (bad) (bad) (bad) ljmp cmp jns cwtl paddusw (bad) std cmc or push int adc push fiadd mov fcos (bad) (bad) ljmp jl adc jae nop out jl adc (bad) xor fidivrl jge movsb cli in (bad) (bad) (bad) lcall out into mov pushf adc aas arpl mov dec add test mul (bad) (bad) incl cltd or (bad) aaa arpl jge xor cmp jae inc (bad) dec (bad) int3 jmp (bad) (bad) (bad) mov sti movsb sti mov mov mull shrl jno ja (bad) (bad) call cmp pop loopne jo mov sub sub pop lock (bad) (bad) jg push and mov or aaa icebp in mov aas mov inc cmp or xlat pop (bad) ljmp dec outsl adc in fisub adc lea mov ja or (bad) decl cmp sub test jo mov (bad) sahf push int (bad) incl xor aas clc add jo aas loopne inc aam arpl add or lea adc mov xchg repz jbe adc xor cld mov pushf (bad) jae push lock cmp out jge mov pop dec xchg (bad) ljmp inc and lock sub xchg rorb dec xor mov cmp mov out push lds or rcrl out pop xlat (bad) (bad) mov xchg dec leave dec push ds mov fildl sbb popa (bad) (bad) (bad) (bad) mov repnz inc ret xor xchg stos pop insb int3 lret mov sbb xor (bad) (bad) (bad) (bad) ljmp mov jo mov outsl rcrb (bad) lret insl ficom push out lcall xor (bad) je pusha pop (bad) mov or sbb mov jnp pop adc pop je popa (bad) (bad) (bad) pushl arpl (bad) mov mov lods xchg or jne jle push jp movsl les (bad) (bad) (bad) pushl or test std mov xchg js shrb mov lods subb xchg (bad) pushl fistpll out lock add dec dec sub mov (bad) mov aad dec pop jb arpl sbb (bad) push lock (bad) jg jno enter loopne jbe jle jbe cmpsb mov jo lock jo out inc (bad) (bad) ljmp pop push fwait mov jle add pop mov inc (bad) (bad) (bad) (bad) in adc xchg insl mov mov dec mov imul lret jecxz xchg pop jle das daa or xchg (bad) je mov sbb push mov pop movsb mov add push fbstp mov jl fwait aam xor (bad) (bad) (bad) pushl xor cmpsb jno imul mov cwtl mov lahf xor jb out xchg cmpsb jae (bad) (bad) lcall out add inc into in enter mov ds into push xchg (bad) je push sbb outsl lcall movsb xchg (bad) and inc fwait xorl out push sub push gs (bad) (bad) decl dec xchg cmp cmpsb cld adc pop int inc add and cwtl (bad) (bad) (bad) (bad) push jb mov mov sub dec stc das dec ror cmp adc (bad) mov (bad) (bad) (bad) cld pop jmp pushf (bad) mov jge cmp xor mov ds cmpsb cwtl cli jge ljmp (bad) fnsave pop outsl adc cmp daa repz addr16 pop ret jbe (bad) (bad) incl mov cmovae ret cmp (bad) std repnz pop fwait dec rolb dec (bad) (bad) (bad) dec lds cmpsl pushl dec xor insl iret sahf fs icebp pusha mov insb leave iret (bad) (bad) (bad) (bad) jmp data16 jle (bad) jnp enter mov test mov pushl sets xor je xor sahf leave inc movsb cwtl or (bad) mov ror mov fisttpl sbb rcrl in cmp dec (bad) (bad) (bad) jg (bad) aas stos ret adc push xchg mov lods add mov aas bnd out ja lahf inc push sub sub cmp gs aam sbb (bad) (bad) fbld add jecxz loopne jecxz push (bad) adc (bad) (bad) mov pop add out mov lods inc int sub ss mov xor mov pop psrad (bad) ljmp arpl push shlb push pop xchg jecxz sub outsb mov inc xchg (bad) (bad) (bad) mov mov jecxz pushf fiaddl sbb into stos popf loop pop xor cmc sub push (bad) mov adc lea mov and pop xlat cmc leave mov pop (bad) (bad) (bad) call push imul sbb lods cs (bad) rclb test jns (bad) (bad) (bad) incl mov test loop mov xor test lods fcomip (bad) decl imul jne inc push enter add (bad) (bad) mov inc (bad) (bad) (bad) inc scas adc stos (bad) mov dec shll lods ljmp dec ja pop insb sub loope (bad) (bad) ficom lods xchg push adc (bad) cmc xor xchg jnp repnz cmpsl jae (bad) (bad) mov push mov mov test or and bound jne lcall imul mov sbb sbb sbb jl cmp (bad) pushl int jp mov jbe scas or out or or pop test add (bad) (bad) (bad) jmp outsb push dec xchg adc pop dec and and movsb mov push iret xchg adc xchg mov add ljmp mov or into adc mov pop mov mov test push xor aas xchg adc in mov pop xchg fisubr (bad) ss divb pop pop loop (bad) (bad) ljmp sbb xchg lcall push xlat pop dec outsl fwait mov (bad) mov (bad) jg incl mov dec das ret dec jmp scas sbb sub adc xor mov jne fistpll sar (bad) incl mov jle sti jge iret ja stc cmp daa cmp jnp mov mov lret std cmp shlb sahf mov or lods (bad) push mov (bad) (bad) ljmp xchg dec sbb or loope mov stc inc xchg xor pop test (bad) (bad) push loop mov into lods lock xorl nop loop scas int and fisttpl (bad) jmp adcl inc insb fstps pop push fprem xchg sbb jge popf insl pop icebp frstor (bad) (bad) (bad) jmp xchg mov fildl pusha in mov (bad) lods cmp sub movsb xor jae dec add jmp dec xchg inc and xor in jp xor lock (bad) (bad) (bad) mov or faddl les addl (bad) decl out jmp mov mov pop pop fdivrs push mov adc test xchg ret (bad) repnz pop enter hlt pop imul aas mov in hlt popa xchg ljmp push push stos xchg jbe rcll pop lcall gs cltd inc dec lcall (bad) (bad) js in xor in repnz adc fmull xor mov mov mov mov dec cltd (bad) scas push ror in aaa mov lcall (bad) incl dec addr16 insl loop neg out std mov mov pop into (bad) (bad) (bad) dec mov mov addr16 mov xor js xor dec mov pop pop xchg aad pop (bad) (bad) (bad) dec iret xchg jge repnz cmc stc enter popf adc mov cmp mov xor (bad) (bad) ljmp sub nop in or leave jns pop push xchg into lcall push out clc (bad) incl sbb fadds sub into pusha (bad) adc mov lret mov sub test mov bound xchg mov pop cmc out adc (bad) (bad) lcall push clc sahf adc outsl and lret jae and out mov fdiv jb mov mov (bad) jne push (bad) pop pop and push mov cltd sub adc es (bad) lcall sarb leave pusha lahf in cmp push ss insl in mov cmpsl lea ljmp (bad) nop lea std repnz push pop rcrl (bad) gs cmp (bad) jg lcall pop outsb loope gs sbb mov sar sbb mov outsl (bad) (bad) (bad) cmp and (bad) out cmpb pop add add push in notb sbb (bad) (bad) pushl xor jp jbe loopne push cmc pop lea arpl xor mov pop or adc cmp push jne push cmc or hlt push sub sbb xchg sahf push (bad) (bad) decl icebp dec push add cwtl pop mov sahf mov dec mov aaa cld mov jno sarl mov push test rcll sbb mul push lods cmc call incl sub mov jmp push xchg bound adc cmc (bad) (bad) (bad) jmp xchg cmp sub stos scas enter push xchg cmc mov mov data16 or sar (bad) (bad) call cmp sub pop in dec push push cli rcr push inc ror idiv (bad) pushl mov por mov mov repnz xchg (bad) sahf in push sub jmp cmp push bound xchg dec inc aas sbb lock dec shrb das add xor (bad) xchg (bad) (bad) (bad) call mov arpl pushf mov xlat xchg insl shl and jg test loopne (bad) (bad) decl addr16 jae add jg mov insb push sahf pop jbe test (bad) (bad) incl xor or or ret addr16 xor mov test inc rorb fsubl push mov inc or or daa fwait incb (bad) (bad) pushl mov push imul insl lods hlt (bad) (bad) mov xchg gs outsl lods xor pop pop scas pop dec pop cltd movsl (bad) (bad) (bad) fistp xchg fcoml enter fs sbb pop jne xor jg (bad) adc mov enter or ljmp ljmp jge (bad) push sbb loopne fistpll idivl sub jle fcomip jmp and jo sub add xor mov (bad) cs dec cmp fadds daa sbb sbb cmpsl mov xchg popa xor stos mov sub xchg (bad) out (bad) (bad) (bad) lcall jne xor jne arpl jno pop jecxz xlat fldenv jl cmpsl sbb (bad) (bad) (bad) stc inc std jmp adc in test in insb xor push jne insl lret jo int in sbb add ss push xchg dec sbb das mov mov mov stos roll mov out popf in jo (bad) jl push push (bad) jge dec dec in (bad) (bad) (bad) fstpl sarb lods js loopne lock dec lods movsl cli sti in aam or (bad) (bad) jge and repnz pop or call add stos out popf insl mov (bad) (bad) (bad) pushl dec cmpsb nop stos jle scas icebp sub push cmp push out mov inc ljmp jp (bad) (bad) lcall dec cmpsl jmp gs pop push negb and hlt push add divl into mov (bad) (bad) (bad) fistpll imul mov or or pushf pop sbb jae or push jmp cltd out (bad) (bad) (bad) pushl ds xchg frstor leave sub adcl mul xor push pop mov outsl (bad) (bad) jmp sarl das stos lods inc stos jno loopne imul scas xchg (bad) dec xorl push shr call out mov cmp leave pop add mov clc sbb (bad) jmp adc repnz cltd mov push cmpsb sub mov mov fdivrp (bad) (bad) call lds xor and outsb pop lret mov pop and in pop addr16 jp mov (bad) ljmp push outsl fld dec adc dec sbb and loope lcall or popf (bad) (bad) mov mov test sahf neg addl out pop jno mov (bad) incl push int3 xchg inc pop or cmp rclb mov sub out mov add adc in in push in (bad) cmp xor gs enter ljmp fisttpl popa sbb sbb mov push sub inc adc and pop out pop lret mov jbe (bad) lcall push lret xor xchg (bad) mov push scas (bad) aas cmp adc jmp ss mov addr16 mov and push cmc sub (bad) cli dec aam in sahf ret (bad) jl (bad) (bad) (bad) fldt (bad) repnz mov xor cltd cmp push adc dec mov push (bad) (bad) and inc negb adcl js (bad) test mov insl (bad) dec (bad) mov push shlb js pop je popf cmp (bad) (bad) fistp decb xor jp in stos subb ret dec fistpll cmp out shrb gs mov sti in (bad) (bad) (bad) (bad) clc int inc mov inc push jo imulb mov inc xchg mov enter (bad) dec mov sub gs xchg push mov int mov (bad) arpl js xchg push (bad) (bad) (bad) call scas shlb push adc cmp fwait xchg cmp inc mov aam (bad) (bad) jmp mov and std sbb sbb sub push xor sub dec out call call mov pop lahf enter mov add lcall inc int mov stos movsw fcomip (bad) (bad) mov xchg popa adc push inc ficoml in jecxz cmpb (bad) ljmp xchg push mov sbb jl (bad) inc xchg sub std mov sahf stos icebp add scas (bad) decl aaa fiadd lock mov xchg sahf rclb mov (bad) (bad) decl ljmp sbb cmp std addr16 ds jge in das out std aad add scas or dec or dec (bad) (bad) mov shrb stos ja jne fcompl insl out cmp pmaxsw (bad) (bad) (bad) decl icebp xchg outsb mov jbe addr16 cmp in and xchg and xor and xchg imul dec ds xchg xor add mov mov jecxz dec inc imul lods mov dec repz pop jb sub shrl jb (bad) jne dec (bad) clc (bad) (bad) lcall lret mov stos push repz orb xchg xor hlt push lods fimull dec sar or out mov fcoms out xor sbb jecxz out clc (bad) push data16 lahf dec cli xor sbb mov out adc sub stos hlt jns (bad) (bad) fcomip inc es aam mov adc jmp fsubrp inc push mov iret (bad) jecxz and (bad) (bad) ljmp or pop scas sarb sub mov aas pop pop subl (bad) pop loopne cld hlt jnp sbb mov adc cmpsl mov (bad) (bad) (bad) call mov lret push sbb sbb in inc xchg mov test (bad) mov (bad) (bad) (bad) jmp popa (bad) and pop pushf pop sti adc mov iret ja flds cld ja pop (bad) xor mov repz (bad) inc add frstor mov in push mov mov mov test subl sbb rcll jno mov lods mov cmpsb xchg lods cmpsb in or inc sbb xchg test out jecxz stos mov dec xchg shlb inc jb (bad) jmp inc psrlw movl xor arpl inc aaa dec fwait sub (bad) mov bound mov or mov (bad) (bad) (bad) (bad) call mov fchs cld mov add lcall mov cmp push bound mov add mov and mov adc cmpsl mov push lret (bad) (bad) jmp mov dec mov sub pop mov push push push xchg roll into hlt fcomi out (bad) (bad) ljmp iret push mov dec out pop loop idivw dec ljmp js in pop icebp add into dec into iret sub sub dec int3 dec lods mov (bad) ljmp cmc jns repnz push mov andl test push in test inc cli xor push inc adc sbb xor mov daa jl inc shrb call push xor cmp (bad) (bad) mov sub sub pusha in mov sub inc inc leave mov lds cmp pop pusha jecxz jmp or sbb mov cmpsl frndint (bad) (bad) pushl mov lea in dec dec add push test rorl fcomip add adc jo sbb (bad) (bad) (bad) fucomip movsl mov (bad) lea pop loop adc outsl je mov test cwtl dec insl (bad) (bad) (bad) call inc push mov test dec push lret pop jno aaa inc dec jno or sti in pop outsb fsts dec subl sti push dec sbb clc (bad) mov dec imul in int pop (bad) fsubrl ljmp leave push xchg popf jno outsb lahf and and cli mov and push scas (bad) ja (bad) (bad) pushl test flds inc dec xchg push inc xchg int3 inc dec xor jg dec mov je test push loope inc dec cltd jmp mov ret (bad) (bad) incl loope xor pop adc xchg sbb jl lea mov mov mov inc loop adc jbe (bad) (bad) pushl adc pop fsubrl pop add mov rcl outsb fildl popf or (bad) fcomip (bad) mov mov sahf fcoms xchg inc sub pop mov mov stc xor sar repnz jns call int3 mov (bad) lcall loope lock jecxz jl gs bound (bad) (bad) sub mov (bad) dec sub int3 mov dec adc (bad) dec mov (bad) ljmp out jp mov cmp (bad) and cmc push cs push push add mov dec (bad) decl idiv pop out mov jo mul or dec loop xchg bound (bad) pushl add dec inc sbb rolb pop and fcmovu cmc pop into aam mov (bad) (bad) lcall push adc and xchg pop pop mov jo inc inc jle dec xor bound movsl jae outsb push pop push or or insb jo pushl mov sub jns and add mov scas add lahf in push fisub aas pop fwait push fisttpl dec or (bad) (bad) jmp mov mov (bad) fcompl pop (bad) mov jne cmpsb mov sbb jne (bad) jg sbb lds pop js jno sub xor sbb (bad) (bad) jmp addl cmpsb fs lock lock scas mov inc aam (bad) (bad) popf in out stc (bad) (bad) (bad) dec cmp std repz and add mov add mov sub (bad) call lahf aaa mov (bad) jno sbb cmp sbb enter lds decl mov xlat adc xchg in stc xchg mov mov adc fs addr16 (bad) (bad) decl stc in and mov dec mov fadds out xor pop cmpl mov pop push and sub xor bound adc push push add (bad) (bad) (bad) stc (bad) bound mov leave int3 subl cmp push clc rolb push (bad) ljmp cmpb push bound xor lret les xchg in mov (bad) (bad) (bad) ljmp data16 jns,pt sti mov sub repz xor cmpsl loope decl test int3 icebp cltd inc mov sbb push roll or push inc (bad) stos push (bad) call test push inc lret test (bad) (bad) (bad) pushl push pushf fwait jle pop fildl xchg (bad) fisubrl aas sahf cld lods cmp fistp pop pop js test clc or pop push mov out dec hlt fiadd and xchg jae call std dec jecxz cli pop lahf lcall (bad) sbb popa jno or inc lcall aas mov or sub leave cmpsb ljmp xlat or add sub das cli outsl out and or and xor mov fiadd pop mov lods pop xor lahf push mov and mov test repnz push cld jg es xor mov imul fs sbb xor in ja jmp in push xor arpl sbb clc xchg sub (bad) (bad) decl outsb inc adc adc push cld pop adc sub lds push dec test fcomip push mov inc dec jmp insb jg jg in (bad) xchg dec aas mov (bad) (bad) (bad) lcall or sbb popa gs add or loope movsl rcrb fcomip pop adc jmp xchg jge loop ja sbb cli push cmpsb add (bad) (bad) (bad) mov gs mov xchg xor sahf mov xchg pop es cmp incl xchg mov in push out pushf enter (bad) aam enter cmp (bad) pushl movsl int3 imulb push repnz sarl (bad) pop fbstp fmuls daa jb push mov repnz jle (bad) (bad) (bad) decl das inc je and lret sub lods adc jbe mov sbb (bad) (bad) (bad) pushl insl in into (bad) js test add jge daa dec dec fimul and xchg jmp (bad) (bad) (bad) dec aad insl push cmp cltd fwait dec leave cmp xchg decb (bad) ja sti mov xchg fwait std (bad) (bad) (bad) decl inc sub stc imul enter (bad) rcll std scas cmpsb imul (bad) jg inc ja ss insl (bad) lods xor xor inc in and sar push jecxz mov loopne add add je push shrb outsl xorb (bad) lret sbbb (bad) (bad) (bad) incl push test leave or inc in dec or adc push (bad) jecxz loope sbb (bad) (bad) jmp repz xchg lret rcll cmp pop pop sar cs cli enter mov xchg jmp (bad) in sbb jns (bad) pop xlat cmpl loop mov xor pop xchg jmp clc mov mov mull (bad) (bad) decl cmp aaa in xor jmp pop jl dec dec mov sbb (bad) (bad) (bad) incl fwait pop mov sub addr16 shlb xchg dec pop sbb cmp repz (bad) (bad) decl mov les sub mov dec mov mov and in hlt xchg inc or hlt (bad) (bad) jmp or movsb mov leave dec xchg cs jnp movsb leave dec mov (bad) (bad) (bad) fist sub dec or mov sbb pop out mov or sbb add (bad) push leave (bad) push mov jbe daa cmp je fstps xchg xchg call dec cli (bad) ljmp jp mov hlt mov or leave xchg mov repnz jmp mov xor (bad) (bad) call in out div scas mov imulb mov pop pop adc jbe jecxz sub iret ljmp lcall mov xchg hlt adc jp cmpsl pop fdivs adc lods (bad) std xchg or push dec shrl (bad) (bad) pushl fwait xor dec int jae fcompl (bad) (bad) es test mov (bad) jne imul xlat movsb (bad) (bad) (bad) (bad) fimul xor arpl push mov cmp xor (bad) jg sbb jg mov inc fsqrt inc in stc pop dec xorb das mov fdivrp jg xchg mov setl insl fwait call (bad) (bad) decl xchg mov orl adc mov push push loope sub gs (bad) (bad) (bad) out pop aaa pushf dec sub dec mov lock repz xchg fistpll jno pop sub negb jp push push pop mov jle es out fstps jecxz out fwait incl test xor cmp cmpsb push jno lret fwait idiv (bad) (bad) call (bad) pushf arpl pushf mov sbb je xchg je jo inc popf fdivrs adc inc pushl mov clc fs xchg test jae (bad) (bad) (bad) decl repnz (bad) fstl and inc dec gs mov test mov cmp push in adc pop ja jle pop cs cmpsb jp pushl xchg loop (bad) std mov ret scas pop (bad) int3 mov cmp (bad) ljmp inc cmp cmp xor sahf (bad) mov mov push (bad) (bad) (bad) ljmp stc ret mov xchg cmc push push sahf jl outsb or or cmc and (bad) ljmp sub mov popa adc pop jl mov dec push int3 mov pushl or in fstpt rorl (bad) and dec ret in movsb movnti call pop push dec fldt fisubr mov std or or jns aas (bad) xchg dec mov sbb sub imulb popa stc sahf and scas (bad) lcall fiaddl xor xchg in pop add fstpt negl (bad) incl fs out dec mov pop pusha jge xor or jmp pop jno add xchg jp in jmp in daa ss or (bad) (bad) call adc sbb stos in push imul dec (bad) out or adc add (bad) (bad) (bad) call ret fimul in leave mov push into subl xchg jae leave movsb lret and (bad) (bad) ljmp loope mov sbb (bad) (bad) and dec inc cli sbb sbb pop cmp ficom jb push cmp in sbb sbb (bad) (bad) call xchg pushf jle push xlat shrl dec (bad) (bad) jg faddp sti jmp gs xorb lock (bad) pushl mov add mov push dec xchg cmpsl mov sub das clc or inc cmp sub or (bad) (bad) (bad) ret fild push and mov nop popa in mov pop lock cli imul sub rolb les adc cwtl push std (bad) jmp sahf cs je rolb mov pusha adc (bad) (bad) (bad) (bad) std hlt or adc fild and cmp arpl sub (bad) (bad) (bad) (bad) lcall js sbb or in add ror nop and roll clc mov lret loopne cmpl inc cs lods (bad) (bad) ljmp sti or cmc xor or sbb xchg jg shr mov push pop rorl fiaddl int3 push and xchg push or ja jmp mov push cmp insb pop push push xor mov (bad) dec out mov test out push icebp mov pop arpl dec leave push mov scas clc lcall rcrb sub lret les lahf sbb (bad) (bad) (bad) call fsubs in add test aad cmp cmp jbe push jns cmc (bad) mov or insb and lret (bad) jecxz daa dec das xor fwait (bad) mov add lcall daa lds fist out stc xor (bad) (bad) (bad) cld cmp cmp xor decl lret test test fsubrs enter adc mov push or ret or test xchg mov inc mov (bad) mov fwait les bound dec or call (bad) testl pcmpgtb movsb pop pop mov cs fldcw mov mov jbe sub idivb pop and fistl fisub lock cmpsl add nop add subb add push add mov js in jge inc adc mov sub rolb lods (bad) les (bad) jmp adc mov pop pop pop pop and dec add adc int3 clc rorl leave cmpsb (bad) (bad) (bad) pushl lods dec lcall or inc mov dec push sub (bad) incl mov or cmc (bad) mov cmp fmulp out jae data16 mov ret (bad) (bad) jg call xchg enter out jle sbb jmp adc ds jl sar jnp push jno mov cmpsl pusha mov arpl (bad) (bad) call mov lret gs xchg dec repz ret push push xchg icebp pop sbb (bad) call out scas mov cmp in arpl jp or mov cli (bad) int3 decb cmc (bad) (bad) (bad) or pop cld push lds fstpl adcb xchg fnstcw (bad) incl sbb xor cs popa dec and loopne add mov cwtl push lods dec push jo pop xor fadds jg mov data16 push test jae push cld pusha pop cmc (bad) (bad) fcomps add xchg das fcmovb cmpl pop inc test adc inc (bad) (bad) (bad) jp or add sbb ss fimull test (bad) mov (bad) ljmp cmc xchg (bad) xor xchg outsl fs sti or fildll faddl sub (bad) (bad) (bad) (bad) jg das pop out adc xlat cmp mov mov push pop pop addr16 mov imul jbe xor ljmp ret clc cli icebp ja,pt (bad) ffreep jmp fdivrl xor movl jg mov ja (bad) icebp lahf pop loop xchg in jbe outsl mov xchg insb popf dec testb mov fwait outsb jmp inc fs mov jg (bad) incl jnp mov enter popa popf add sub jbe loopne (bad) call cld mov in outsb hlt sbb es mov enter and dec jb sub (bad) (bad) mov fbld xlat jle mov mov imul pushl in or fisub (bad) pop inc ret dec xchg call fsin push xchg pushf std les test (bad) (bad) jmp imul pop cmp xchg cmp cvtpi2ps xchg repz aad (bad) (bad) ljmp xchg cmpl pop sbb mov (bad) mov pop movsl aas daa (bad) inc (bad) jmp pop (bad) aaa mov lds add push (bad) xchg fst (bad) cmpsl (bad) (bad) (bad) (bad) jge lret ss lods insb (bad) lret fstps pop insl push loope sub cli cmp (bad) (bad) cmp cli mov xchg dec out jbe addr16 xchg cmpsb lods mov inc (bad) (bad) (bad) decl add xor sahf popa dec xor mov push add dec std xchg add xchg (bad) pop in aam insl xchg mov insb xorl xchg mov mov idiv or popa loop in notb pop lahf (bad) and fsubs ds (bad) call in sbb or mov mov ror fs jmp dec insb push (bad) sub inc gs mov icebp add addr16 or sti in inc aas add and sbb (bad) (bad) (bad) inc ds fs (bad) je aam jge repz dec insl out adc sbb std push lods (bad) (bad) (bad) jmp dec inc jno (bad) xor inc cmc or xchg in push fsincos and or (bad) (bad) incl xor mov push stos ret jge cmp sbb imul jge aaa (bad) (bad) (bad) incl mov mov add insl test imul dec fisttpl (bad) (bad) (bad) incl mov add sbb pop add xchg ficoml adc bound mov sub (bad) incl dec mov movsb add inc test xor dec cld and push or (bad) (bad) jmp inc inc stos cmp das (bad) popf inc cs outsb mov (bad) (bad) jmp dec aam jge hlt inc fcmovnu mov add jg cmp and pop and sbb (bad) ljmp aam xor cmp xchg pop xchg push mov notb (bad) (bad) cmp pusha fidiv in jecxz stos xlat inc pop popa in sbb sbb (bad) jmp rcrb cwtl mov sbb (bad) (bad) ljmp lods sbb mov fistl cli adc repz xchg xchg shlb xchg xlat (bad) jg (bad) (bad) jmp xchg cwtl push mov xor add (bad) decl dec push dec imul stos mov aaa mov push cmp lock jecxz push dec hlt dec mov data16 (bad) (bad) jg fcmovbe sbb movl dec xchg jb jne sub jae icebp (bad) mov push enter ret push (bad) (bad) add (bad) fbstp das push adc inc loop and shll into hlt (bad) cmp push pop js push fimull (bad) aaa pushf push cmp (bad) lcall and pusha pusha mov push xchg and jmp pop push fwait mov aaa (bad) (bad) (bad) jmp and lea fistpl xchg (bad) rol scas jmp lea xor rorb push push imul idivb into cwtl push loopne push (bad) (bad) (bad) decl or test jmp (bad) and or push repnz inc cmp ret inc push dec inc mov sub push test cmp int3 inc int sub ss sbb xor mov (bad) jmp shll sub in adc or cmpl insb sbb icebp (bad) call jnp push pop ret xchg add outsb test fs cld repz mov cmp (bad) (bad) jmp js out push popf out lahf sub mov dec inc jno into mov or pop fwait dec (bad) call cld cmp cltd or xchg xor andl add adc pop fcomip mov aas imul or cs (bad) pushl out pop mov lahf into pop mov push ds pop icebp ja or cmc lds loopne sbb jge sub (bad) mov xor leave adc rclb sub cltd (bad) (bad) (bad) fbld pop sbb fadds ss or inc daa sub mov lds (bad) (bad) jmp call aaa mov icebp mov fildll aas push ljmp ljmp push scas sbb dec jae (bad) out xorl inc pop mov les push pusha push pop stc add cwtl xor jmp sub imul mov (bad) cmp (bad) cli shld jbe ds out jp adc lds adc (bad) jp pop and call sub mov pop or repnz nop lret mov cli push ret ds outsl (bad) leave enter xchg xor xchg dec mov (bad) lcall ret pop mov gs dec addl mov dec or (bad) (bad) ljmp xor fst shlb or shr sarl test mov dec mov fbld add cmpsl add xchg lods (bad) (bad) (bad) (bad) jge das mov aam lds or push dec jp mov imul cmc icebp mov in (bad) (bad) dec out or daa jp xor inc pop mov je (bad) jl mov (bad) aaa mov addr16 dec icebp push jge inc or jbe dec test push test adc mov incl dec fwait lods push cmp or out cmp (bad) aam leave repnz rorl jmp in cld cli push cmpsb or out adc fcompl mov in (bad) jg (bad) pop xchg rolb push push mov mov inc xchg cmpsb xor xchg scas cli inc dec aam mov daa sub xbegin ds xchg (bad) (bad) jne das (bad) (bad) (bad) call cltd popa negb add xchg mov mov and ret dec outsb lcall incl ljmp mov push xor popa cmp scas xor sub (bad) ja push decl add pop cmp xchg mov out and cwtl mov add adc xor xchg mov inc cs test adc out lret negb incl cld ljmp add mov ds sbb pop in lock (bad) (bad) mov loopne in sub mov pop jno stos dec popa mov mov in mov rorb inc frstor adc and ds dec and mov xchg iret mov (bad) dec jg repz add mov xor aaa rcrb push (bad) (bad) (bad) jmp mov jae mov or sub xorl pop sub add call dec bound xchg fsubrs out xchg dec or and add push ljmp cmpsb inc lahf jp sub hlt mov adc ljmp (bad) (bad) in cmpsl lcall cltd xchg and and sbb mov and movsl sub stos ljmp mov add or add or (bad) (bad) (bad) jmp mov aaa fs jl mov inc xor sbb lahf sub iret push sub das clc ljmp mov lds clc mov jecxz (bad) (bad) (bad) jg mov jb dec inc jecxz cmpsb adc lahf jl movsl or push mov hlt incl mov jge scas into xchg mov call ret ljmp sbb mov cmc out into test rcrl lcall pop ror mov dec mov xchg pop arpl inc mov es sahf sti push je bound je xlat fsubl imul ljmp nop add outsl cmp (bad) adc (bad) (bad) incl xchg cwtl push xchg scas mov jmp inc or (bad) cmc (bad) ljmp add rclb fimull jmp addr16 (bad) (bad) (bad) cmp or leave aad jo dec roll cld roll xor sub aas scas inc mov ss cmpsb cmpsl (bad) jmp lods into or pusha stos push adc cmc (bad) ljmp mov push (bad) push (bad) (bad) mov xlat pop inc add cmc nop iret movsl push push inc test xchg cmp inc scas cmpsl (bad) (bad) (bad) jmp inc jl imul (bad) mov jno push inc jne dec push mov sub (bad) (bad) (bad) pushl and dec jae leave cmpsl pop adc pop iret popa mov (bad) pop ficomp in inc lcall and int3 jb cmp adc add clc or scas push xchg sub (bad) (bad) pushl sub and in sub xchg sub dec and pop cs dec inc mov mov push scas push pop push xor fnstsw ret (bad) (bad) decl out inc and pop cmpsb rclb inc jecxz push jecxz (bad) sbb sti fs (bad) (bad) mov xchg sbb cmp jnp shll xchg sub (bad) (bad) call pop inc xor mov fisub (bad) les (bad) jmp or (bad) (bad) incl icebp popf push sti std ret shlb mov cmp mov mov (bad) (bad) (bad) decl dec push mov mov dec push pushf mov sbb aaa xchg add jo or mov xor sbb aas (bad) and or idivb and sar ljmp pop or mov xchg jb push push ljmp dec mov adc lret inc inc sahf inc ret bound mov je sub xchg loop cmpsb lock icebp push loop jge push mov (bad) mov xor test jb jecxz dec xor jnp push jae shrl add add push cmp ljmp mov (bad) ljmp xor fsub add or pop lcall (bad) (bad) lcall pop lds test xor lods dec insb out stos ss sub je sub (bad) (bad) (bad) incl rcll outsl stos leave sub dec sahf mov xchg xchg mov and (bad) (bad) lcall sbb xor adc adc jecxz push test cmpsl ret out sarl lcall (bad) push jb lret mov push add das push jb lret aad test (bad) (bad) (bad) (bad) jl and loop sbb loopne jb inc sbb inc and call mov fisubl (bad) (bad) fistl jg or adcl mov add jle cmp cmpsb jb sbb and fs mov es lcall ret test push mov icebp fsubl adc or fwait sub fisubl imul xchg test decl lock push testl jbe pushf frstor test push ds (bad) jle lds push xor fidivrl jecxz arpl pop pop adc pushl std ljmp addr16 fcomp (bad) or movsb ljmp push dec fwait and (bad) (bad) incl clc or dec inc push test stos iret mov pop xor aam push rclb (bad) (bad) (bad) (bad) call aam cmp scas push mov leave add lahf subb addl jecxz (bad) xchg and lcall sub xchg xchg in les gs (bad) pushl (bad) adc xor inc sbb sbb cmp in xor mov stos adc je push test mov sub repz (bad) (bad) ljmp es into mov icebp in sbb in stc sahf cmpsl and test jnp stos mov adc (bad) (bad) mov popa in sub and cld adc movsb jg (bad) jg xchg mov cmp cwtl ficomp movsl push insb push or xlat and mov cmp and repnz outsb add das dec cmp lds lret loope call sub nop lock fild (bad) es pop test ljmp bound pop insb pop sbb aad adc aas dec push pop adc add xor sar (bad) (bad) call sub pop xchg jge fld in cwtl sub cwtl adc daa mov dec or out int and (bad) (bad) pushl mov mov fsubrs jp inc push push inc sahf jle jmp sarb incl inc (bad) imul jle popl or push add test pop lock pop inc xor pushl mov xlat lret repz and aad (bad) jb jns adc bound xchg pop xor cmp cmp in lret sub xor cmpsb mov es (bad) lcall push add scas lea xor mov sti lock ljmp cmp repnz js jp pushf mov jnp lods push mov add mov (bad) call shrb jnp pop dec pop xorb xchg (bad) mov repnz mov jmp xor repz faddl enter (bad) (bad) (bad) pushl lock cmpsl ja in fbld (bad) jb lds (bad) lret iret imul ljmp imul adc push lods les ficoml mov mov dec xor stos (bad) (bad) (bad) jmp push add adc lods xor adc cs (bad) xor (bad) (bad) (bad) (bad) cld xchg sarb cs mov sbb mov (bad) add or or (bad) (bad) call cli mov sub popf rcl cmpl repnz xchg jb mov jg jnp rcrb mov dec dec insl mov pop rcr test inc mov (bad) (bad) (bad) lcall push (bad) sub sbb inc add stos pusha icebp outsb nop rorb pop outsb pop jb test sub lods stos xchg mov je hlt mov mov insl test shlb (bad) incl jmp punpcklbw jecxz ret pusha out inc test adc inc xchg jl adc jecxz outsl mov inc mov pop lfs (bad) pushl mov scas sub es add (bad) cld cmpsb adc pop xchg scas mov (bad) (bad) (bad) lcall push nop pushf push jmp pushf cwtl (bad) arpl cli or push movsl (bad) out xor mov push scas lcall (bad) rcl fcomps push arpl xchg jno xor hlt out clc incl add xor xor out je mov daa enter dec das xchg (bad) lcall sbb jns cmp es sub inc into sbbl (bad) (bad) call push xor sub add adc leave sub xchg xchg ret sub cmp (bad) sbb dec cmpsb inc ret stos cmp out jb mov (bad) (bad) lcall jl lret xchg push lock dec lock addb adc sub (bad) lcall in lret (bad) xchg jl test repz (bad) aad outsb push std (bad) (bad) (bad) (bad) std fdivl aaa inc or movsb xchg inc dec xor and lds (bad) call jl fs clc xchg flds aad clc jge sub ds ficoml (bad) (bad) pushl mov in pop sub pop pop mov ret xor mov mov (bad) pushf cmp imul inc psrld lods (bad) cltd pop sbb stos sub push (bad) (bad) (bad) pushl jae xchg sti mov xchg lcall out movaps or nop movsl cmp (bad) (bad) incl jmp sbb jo mov movsb clc ret inc pop xchg add fbld (bad) (bad) (bad) mov popf nop sbbl jne loop push add sbbb movsb cmp (bad) (bad) ljmp or ljmp mov je lea or popf outsl mov (bad) (bad) lcall jb xchg xchg mov mov int3 bound inc sub fs jge (bad) call std das cmpsb cmp icebp stos je ret enter mov out adc mov (bad) (bad) (bad) sub inc jne aaa out sbb mov add sti arpl and outsl and (bad) (bad) decl xor xchg dec outsl sub movsb lret pop jmp pop dec xchg push pop ret fnsave xor (bad) (bad) decl xor cwtl scas insl ret cmpsl (bad) or pop insb (bad) dec loope test clc cld jecxz js mov (bad) (bad) (bad) ljmp aam jge jp xor (bad) div std mov xchg jo xchg fcmovu push (bad) (bad) (bad) (bad) ficoml adc dec aaa out repz fdivp dec js orl cltd xchg mov mov (bad) decl and xor adc adc cmpsl xor dec subl jnp (bad) (bad) fcomip mov les (bad) xchg cmp lods mov push decl push push push jl push iret jmp push les inc pop lret push sub negb aam push sub and call fwait js aam xchg and in fstpt (bad) les dec add inc out sbbb mov jo (bad) (bad) ljmp repz sub pusha fist mov lahf mov jmp rcr adc (bad) pushl (bad) repz out movsl in fldenv sub movb push lock movl (bad) (bad) ljmp cs dec jg push stos xor or jle inc scas push adc loopne (bad) (bad) decl fmuls icebp rcrl jbe cmc dec jle hlt aaa mov movsb adc xlat sarl nop mov imul insl jp (bad) (bad) lcall (bad) imul fild outsl out pop shrb stos mov ret (bad) jmp jp,pn imul cltd jle push or or xchg mov int3 stc dec jecxz jae test das (bad) (bad) (bad) ljmp dec imul lods test mov jb ret xor xchg leave adc ret or sar (bad) (bad) call mov cltd rorl mov pusha push scas xor shl add xchg insb fldl repnz inc mov jmp clc stc ret mov aas rorl cmp inc lret in pop hlt mov xchg mov dec (bad) (bad) (bad) (bad) ficompl movsb int and cmp xor dec and andl (bad) (bad) pushl mov (bad) out cmp loop cmp sahf fwait out lea pop aam ljmp push das aam mov sarl sarb leave decw mov adc testl sahf xchg add push pop jb popw data16 lahf icebp sub xor (bad) jmp xchg jns ret das sti or int3 sbbb cld add rclb inc and jae pop xor add cmp lcall adc sbb les mov iret inc imul rcrl (bad) (bad) jmp jp mov and fldl xor ret and rorb mov cmc mov fmull das adc ret (bad) jmp pop dec lcall and (bad) in out sbb sbb mov pop mov mov loopne sub (bad) (bad) dec (bad) insl mov jmp inc mov mov cmp adc mov call test jmp popa xchg xchg lahf aaa pop or (bad) add sti fucomp push cld (bad) mov out mov pop inc push xchg int jg ficompl subl or xorb fildll ja sbb arpl scas (bad) (bad) incl je fwait insb cltd mov das repz lods jge adc lea adc scas jmp inc ja sbb arpl out adcl bound test imul mov into lds xchg and and mov popa js add sbb push es repnz (bad) fisubl sbb push jp xor lea xchg addr16 xor in xlat sub jmp cmp fimul jbe (bad) push fistpl fadds pop (bad) insb inc dec xchg mov (bad) mov (bad) (bad) push mov mov dec cmp pop ja xor push xor push (bad) (bad) (bad) decl fistpl pushf (bad) adc js fisub push add xor (bad) pushf pop inc sbb ret (bad) (bad) (bad) call aam push mov imul dec adc dec push in xchg shlb jle inc fcomp jmp (bad) (bad) (bad) jmp mov mov sbb out mov jno xchg jl push jns stc inc stos hlt xor aad (bad) (bad) mov push scas dec bound xchg lods lea mov mov mov fiaddl movsl cmp (bad) (bad) (bad) (bad) call mov push push outsb xor jecxz mov sahf inc movsl adc inc mov scas cli (bad) decl iret lcall dec dec dec cmp mov mov xor xor (bad) call std and adc mov out cmp les out cs (bad) xchg push (bad) (bad) (bad) pushl inc into dec sbb inc lahf (bad) daa loopne or dec sbb imul adc rcll aas (bad) incl xor sub push mov add lock fcomi xor in mov test pushl std decl inc jae xlat fisubl inc ret cli lret lahf addr16 xchg (bad) jl shlb dec jae push dec mov push cmpsb inc cmpsl pop std (bad) (bad) in or jns jae mov inc mov jb sbb insb push push aad (bad) lcall insl (bad) mov xchg sub ja jmp lods mov (bad) sbb incl les pop repnz inc jns insb outsl repz inc sbb inc aaa add and loopne ljmp incl xchg les mov jnp push insb insl dec leave pop jle iret jge xor xlat mov xor daa sahf push js fcompl mov mov mov sbb out add testb cmp aas cmpsl push clc (bad) (bad) call (bad) mov scas scas dec fisttpll jmp aaa cmp sbb and add addr16 stos fidivl (bad) jb xchg call or rcrb pop and cmc repz aad fsubrs cmpsl cmp push movsb fcoml das xchg xor add clc push adc int push push jmp iret inc mov adc (bad) (bad) lcall push data16 in mov nop mov inc mov inc push dec adc fimul mov call ljmp or jb mov bound adc cltd in ds sbb inc jp sbb jmp outsl sub cmp (bad) xchg jbe xchg sub ljmp fstpl adc add xchg shl and pop (bad) (bad) (bad) cmp sbb xor popl pop jge dec xor (bad) jg decl mov inc and int xlat andb outsl test pop movsb or (bad) (bad) (bad) dec lods test stc pop and dec aaa lret ret orl sbb cmp sbb decl add jg push sti mov cmp les push sbb cmp (bad) jmp cmpsl cmp je dec (bad) (bad) mov in in push in (bad) jbe pop sbb cld (bad) (bad) (bad) pushl fcmovnbe (bad) cmp dec xchg (bad) jecxz pusha jge fidivrl push mov test or and (bad) mov imul inc or mov stos bts pop and ljmp lock jecxz xchg jo movsl (bad) (bad) push popa mov push cmpsl dec xchg mov insb mov iret or inc stos das inc adc sar test xor push enter int3 mov and cli (bad) incl mov stos loopne cmp rcrb lret push cld lcall pop dec cli loop jmp repz mov lea popa adc ret sbb add pop xor int3 addr16 xchg push lret imul add jo add scas ror push inc xchg xor add das mov (bad) (bad) jmp xchg (bad) sahf out lea test cmp push pop push fstl cmpsl test not pop inc fdivrp (bad) mov es flds movsl out icebp loope and or cwtl cmp cmp mov pop mov push cmpsl (bad) (bad) (bad) jmp mov daa imul (bad) pop xor mov mov jb dec test (bad) push xor (bad) (bad) (bad) mov and fcmovb xchg out or lock fnstcw cmpl adc (bad) lcall pop inc leave shr mov add xlat clc inc mov jmp ja mov dec mov jecxz xlat mov sti jae xchg rorl or mulb subb add decl rorb sub vpackssdw mov adc out lret jge mov (bad) (bad) jmp (bad) push mov test xchg nop xor stos (bad) shlb and dec outsl cmpsb (bad) (bad) incl push shlb fs lret pop loope ljmp nop (bad) (bad) (bad) dec jmp sub mov add inc jle seto and les cmp mov lcall test ret mov cld in outsb enter jle (bad) mull incl lds push test icebp add push orb (bad) xor xchg test roll or (bad) (bad) jg push fadd negb jp xchg imul xlat shl pusha dec xchg (bad) (bad) sub insl scas xor loope jmp xchg jmp sub jle (bad) (bad) (bad) call ret rcrl mov cmp push dec cmp xorps rcr iret imul (bad) (bad) lcall std cmp outsb dec adc xor ja pusha cld or sbb push sbbl lods xlat mov bound (bad) (bad) (bad) call scas rclb sbbl pavgw dec lds shll (bad) jle outsb pop (bad) (bad) ljmp cmpsl mov mov aaa popf dec dec cld dec mov sar fwait (bad) jmp out cmp or ret (bad) and and xlat (bad) (bad) (bad) pushl push loopne or bound cli fyl2x and ds into pop mov mov (bad) (bad) jmp cmp cmp pop cmp xchg mov flds (bad) rsm loop (bad) call cmp ja adc cmp cmpsb fsts xor (bad) das adcb dec lcall mov pop in adc lret dec ficom mov (bad) cli push and (bad) (bad) (bad) aas adc repnz pop mov dec testb ja jl repnz cmp cld add outsl cli mov xchg push mov jo leave pop imul movsl (bad) (bad) (bad) lcall aaa sbbb aaa cmp lock test hlt js stos (bad) pushl int xor loop push imul rcll insb jle sbb test js xchg into mov loopne pop push loope sub and (bad) (bad) (bad) (bad) mov out pop inc xchg lcall ss inc scas or lods xor imul mov aad xchg or mov jns stos jg bound mov out clc mov cld test aaa pusha (bad) and and std repnz andl push mov ret arpl push sbb insb pop pop pop push push jecxz add mov or push lock push dec popa (bad) lcall clc js jae cwtl test int3 daa adc or push lcall (bad) pushl insb out daa and (bad) push jno arpl dec test aaa pshufw mov (bad) (bad) jmp mov fmull mov arpl inc mov (bad) nop mov mov lret inc jmp xor jge loopne ja push repnz and adc pop mov add outsl xchg jl pushf mov es (bad) (bad) ljmp popf cmp xchg push lock sub or push fcmovnb inc hlt push fisttp (bad) (bad) decl int3 shrl call shrl decl ljmp (bad) (bad) (bad) jmp mov mov and rorb fnstenv mov cmpsb imul decl stos push push pop pop mov mov and jbe sti repz sbb (bad) imul (bad) ljmp sbb call lret jmp test dec cmpsl inc pop lcall mov sbb and dec dec inc adc shr rclb mov dec cwtl xchg pop mov add fstps sub repnz mov sub xor sahf ficomp (bad) incl jmp mov xor cmp ret jae arpl mov arpl xchg xlat xchg (bad) (bad) (bad) call das push fcmovne pusha fcoml xor das push out push (bad) mov (bad) (bad) (bad) incl xor aam ss jnp jp mov mov pop xor sarb ret lret or xlat ret lods ss scas push add push sbb push push imul push pop ja das rcr mov mov push pushf pop fnstsw (bad) (bad) (bad) cmp push cmp stos add add sbb imul sar cmc dec jns (bad) sbb outsl clc pushl push addr16 test inc mov fnstenv imul (bad) (bad) jmp jns and (bad) adc xor fmuls and fmul stc scas jbe addr16 or (bad) mov push add (bad) add (bad) rorl sbb lods shr or inc inc daa ljmp data16 jp fisub in imul dec lret sbb jecxz test fcoml (bad) scas movsl fwait (bad) (bad) (bad) lcall mov fs fstps sbb fstpl adc (bad) lea test (bad) call sbb jo dec jl adc in or dec dec (bad) (bad) (bad) out es fstpt (bad) mov sub jge fcoml dec test (bad) fcomip pushl pop push push add jns lret jnp cs mov push mov add or jno and dec ret daa daa xchg rolb mov (bad) call pop pop inc sti scas push nop xor data16 repz push xchg clc or mov add (bad) jg data16 sub repz inc insl test jmp push neg inc mov (bad) (bad) (bad) pop lock and cmp cmp and adc and (bad) mov in scas (bad) jg call xorb (bad) call cmp mov movsl daa fldl sbb jg xlat add mov enter mov xor cld adc incl cld inc xchg fistp mov mov repnz xor lret inc (bad) (bad) cmp jle les pop mov in xchg pop pop out lret outsb (bad) mov lret out xorl cmp ljmp mov mov jo push movsl adc sub mov or dec jb (bad) lret rcl ret pop (bad) mov rclb and cmp clc (bad) ljmp add pusha sahf das mov sub cmpsb ss cmp (bad) (bad) (bad) jmp shlb (bad) addr16 test mov mov or hlt xchg (bad) (bad) (bad) inc fdivrp xchg pop decl push jg sbb or inc mov cmc mov jo push cld cli (bad) (bad) jmp xor lret (bad) arpl test adc leave add xchg rclb ret (bad) fisub jecxz and jns mov loop daa loopne fidiv add xor sub stos jecxz jb xchg cmp and (bad) (bad) call push or xor cmp dec inc out push dec push out sahf mov lods (bad) out add mov jae pop ret (bad) (bad) ljmp jge aam pop lea xchg cld adc out (bad) xchg pop pop mov (bad) (bad) (bad) jmp push test loop sub pop fstpl leave outsl (bad) stos sub jge and xchg and insl sub sub jb frstor jb cmpsb jg (bad) jg jb xchg xchg xlat out sbb sub cmp mov sbb pop fs mov jl notl fidivl shrb call mov xchg mov out inc add mov dec sahf stc add pushl in aam nop jge xchg lahf push aas lcall aas xchg fmull repnz (bad) (bad) ljmp adc iret and dec std cmp jecxz sub push jg ljmp lcall mov xchg ror jne dec xchg test dec (bad) push fild aam dec sar scas inc test mov add lcall (bad) (bad) incl mov cli cmp mov cmc ja add xchg jg out push cwtl cli and mov lock in sti (bad) call and mov (bad) rolb psrlw xor xor xlat sub xor (bad) lcall sub dec push mov mov or adc push push mov rorb aas inc (bad) (bad) call std ret xor mov cmp add in stos cmpsl pushf outsb (bad) call mov scas (bad) lret pop mov sbb push mov xchg fildll pushl lret dec pushf xor push push int3 (bad) push mov mov cmpsb insb mov mov sbb loop sahf xchg (bad) (bad) (bad) fistpl mov call sub xchg das and lahf sarb inc push dec (bad) jae js (bad) lcall jmp dec ds push pop mov shr scas ljmp (bad) (bad) out xchg scas pop sub xchg adc out pop mov dec add jg (bad) aad (bad) jmp into rcrb ds aad popa popf icebp dec ss hlt (bad) rolb jg mov xor clc lret inc cwtl in jmp jp adc xor sti (bad) (bad) jmp adc insb mov movsb outsl jae or in dec pop xchg lods fwait call (bad) (bad) jg dec shl or add xchg mov mov sbb adc push repnz (bad) cmp xchg lds gs sbb push loop (bad) cmpsb lods jmp (bad) decl fs sbb stos mov imul icebp fcmovnu push shrb push in cli in inc sti jno adc jge (bad) mov or xor sbb and lds lods rcrl (bad) mov das sar mov rcrl cld fsubrl iret pop das jo jmp (bad) (bad) push cmp (bad) in insl mov jbe mov mov cld orl cli (bad) jmp xchg xchg xor pusha cmp aas mov add cmp aas (bad) jg decl std and and loope jmp cli hlt adc std (bad) push fsubrs push sbb cmp inc test pop jno popa (bad) (bad) pushl adc push sbb icebp xor ljmp add ror pop cmc imulb mov push mov dec shlb pop clc pop adc fisttp loopne (bad) idivl das scas pop cmc pop cli lods xor dec mov xor incl cmp insl fiaddl fisubr sub rcll add mov inc xchg pop sbb roll je aas mov xchg test idivb xchg out jb incb (bad) in cmp idiv sbb jno rcrb dec adc push outsl add pushf cli je xchg adc cmc (bad) (bad) (bad) jmp push xchg jp push ljmp rorl push add mov adc or (bad) call icebp imul out xlat push lods mov arpl push pop push push pop cmp (bad) (bad) (bad) mov les lods jecxz popl lock stc push lock das clc fwait mov movl mov sbb xor (bad) (bad) call xor je (bad) roll (bad) cltd icebp insb outsl and addl test ret (bad) call hlt and xchg jne sub std cmp mov insb fs call das (bad) jmp fnstenv xchg stos jle sub (bad) divl dec (bad) jg (bad) outsl insb repnz pop or mov mov push mov andb jmp push (bad) xor mov or or mov shrb sub push movsb ret in dec jno sbb mov daa or out inc mov call jmp insb outsb mov mov sbb mov xor dec test jb (bad) jmp jecxz inc stc fucom mov pop lock lcall and mov daa and jmp (bad) (bad) (bad) jmp mov ret mov (bad) jae daa lock fcomps or (bad) das (bad) (bad) (bad) jmp lret cmp pop ret das cwtl sub leave outsl sahf hlt jns inc fcomp xchg xchg xlat sbb cmpsb (bad) jg incl add mov or loop data16 mov sahf inc jbe repnz (bad) (bad) (bad) mov pop mov js loop daa pop push lcall (bad) mov or scas das hlt inc dec jecxz mov adc ficom and (bad) (bad) (bad) pushl mov (bad) adc popf lods cmc dec dec mov mov mov fistpll stc push out sti xchg jns aaa push iret or stos mov repz xchg (bad) (bad) (bad) jmp push (bad) cmpsb xor add icebp pusha stos stos fwait adc jmp (bad) sbb adc (bad) jmp mov inc jae sub hlt or lock loopne or dec cmp add test mov dec leave jp pop lea mov subl mov enter lret (bad) (bad) mov sbb rcrb mov leave hlt dec popa push pop (bad) pop xchg int3 or cmp scas clc ja push out cmpsb shrb dec les aas xor xor lcall cmp xchg lods jo cwtl jb pop cmp dec int pop lods ret (bad) cwtl inc push inc stos sbb xor test jno (bad) (bad) (bad) (bad) fisttpl les jl jb xor inc jns sub xor (bad) cmp jae push stc (bad) (bad) incl test sub inc je sbb push xchg or cmp push imul outsb mov (bad) jmp int xor mov (bad) hlt mov xor (bad) (bad) mov shlb mov adc mov sbb add test dec mov mov fimull push pop dec loope cmp (bad) (bad) inc lret sbb or push mov adc sbb cmpsb xchg out mov (bad) (bad) push enter out loopw dec xchg push dec cmp adc (bad) fbld (bad) in sbb fs and rorb bts (bad) (bad) jl jge push inc aad mov jno add lock xchg push pop pop decl and inc jp shrb mov xor jo (bad) (bad) (bad) incl sti arpl fistpll imul cmp movsl cmpsb lds lahf (bad) (bad) (bad) jmp (bad) jne adc mov cltd sar push jae (bad) mov fcoms test lret push (bad) incl pop sub xchg imull mov repz pop int3 mov jg pushl cli ljmp mov aaa (bad) xor push aad dec adc jg add pusha idivb dec and bound mov loop mov pusha jp push in xchg outsb jns pop cld mov imul and outsb (bad) jne icebp ds and adc stc mov sub add (bad) fnstsw inc pop (bad) mov pop insl or (bad) (bad) (bad) mov pop jmp dec dec push cmc fstpt in sub fimul jo push rcrl mov dec bound jo ret jnp jmp es adcb xor cmp (bad) (bad) mov (bad) idivl (bad) dec cltd or das sub xchg repz (bad) (bad) jmp sub addr16 jb imul pop dec imul in xchg or (bad) cmp sub lret stos stos push mov jnp in jge lcall push (bad) (bad) (bad) call nop sbb jae cmp data16 and inc mov mov lods mov jge or mov clc mov loope test test mov sbb fsts fmuls xchg fbld ret add sub xor nop add incl cwtl push cli jno jns push inc push mov gs call mov add xchg sbbl or mov push sbb (bad) (bad) jmp in dec dec jl adc xchg cmpsl int inc (bad) mov jb arpl mov repz call dec (bad) ja lods push daa scas xor fdivrl inc adc and test (bad) call orl (bad) add pop sub dec getsec sbb mov in or cmp lret and mov sub sub icebp dec (bad) repnz pushf cmpsb mov in add sub fs dec jmp sub (bad) (bad) pushl inc dec jns mov inc lods lods ret add add inc popa lods iret and lds inc and jmp les inc and lods nop mov sbb jecxz and (bad) decl test call inc xchg dec xor loop test (bad) (bad) call ja dec fwait bound ficom test lret dec xchg xchg add push insb jle add (bad) (bad) pushl test iret testl inc cltd repnz pop stos sbb sub jns ljmp je in push rcl mov cmp inc dec pop mov and cmp enter inc mov or inc xchg sub push pop sub cld (bad) add mov ficompl xchg jne imul xchg in popf xor (bad) (bad) decl loope add mov inc adc xchg adc adc xchg lcall pop mov leave xchg movsl in sub sub adc int add dec icebp mov test push push cmpsl loope scas jb incb dec fs stos sub push (bad) (bad) lcall jo gs lods inc dec ljmp add les incl pop lods rcrl xchg sbb mov pop jl test mov pop ja hlt lcall je dec mov adc cmpsb movsb ja test jnp stos (bad) (bad) (bad) mov pop and fcomps push adc lds loop dec cmp and push mov mov int sub mov jp mov add dec or jbe cmpsl test (bad) (bad) pushl jp repnz pop addr16 fildl mov std insl (bad) out out ret jae (bad) (bad) call mov test dec sub call je call pxor (bad) (bad) (bad) call cmp (bad) div lods fsubr roll js imul mov (bad) cs insb xchg pop add loopne loope pop cwtl pop (bad) enter jp xor incl ret push mov (bad) adc cmc (bad) (bad) (bad) (bad) dec dec imul repnz and or jo xor and aas (bad) idivl (bad) (bad) (bad) (bad) fnsave mov insl (bad) in fidiv inc mov mov cmp jle xchg dec mov adc call sub sub (bad) cmp imul (bad) (bad) incl lds pop pusha and insb imul stc and cli xchg stos cld fmuls loope ret (bad) mov out pop incl xchg clc dec popl lods jg or in push mov xchg sub rcrb popa lods cmc test push ret push (bad) (bad) (bad) jmp les int3 (bad) dec fsubl sub inc loope xor ss xchg jnp (bad) (bad) decl push cmpsl jecxz hlt mov mov mov js or in or (bad) (bad) (bad) inc mov aas aam xlat aaa fldt xchg aam cltd les popf in mov jbe (bad) (bad) (bad) mov pop xchg loope mov not mov mov je xlat add jne stos aas (bad) (bad) (bad) inc (bad) or popf pushf (bad) fwait mov icebp or xchg mov push scas int (bad) (bad) decl add pop mov xor push xlat stc jge push adc enter hlt lcall je pop data16 insl mov enter out and sahf (bad) clc inc jecxz (bad) (bad) lcall ds add pop lds repnz (bad) aad pop dec jecxz mov rsm (bad) (bad) (bad) out insb mov insl inc jmp mov jecxz mov nop nop pop stos inc mov lcall xchg lret adc es in mov xor mov aaa jecxz (bad) (bad) lcall clc sbb (bad) push mov enter das out jp pop int3 xchg (bad) (bad) (bad) lcall out imul (bad) xor sahf scas xor lods lea adc jmp or inc jno (bad) (bad) ljmp push mov pop dec cmp sbb popa cmc push (bad) jmp mov loopne cmc fmul mov push jecxz lahf (bad) cmp pop mov adc (bad) ljmp stc sahf das rcrb cs adc pop je aam outsl adc popa lea xor inc mov decl mov jmp cmpl inc lock icebp mov dec (bad) (bad) (bad) (bad) mov push push jbe loopne pusha lret cmp jmp mov fwait dec hlt das mov inc ja add (bad) (bad) (bad) mov lret push (bad) loop cmp stos rclb jae mov (bad) lcall stos cs pushf aaa idivb dec andl mov pop repz mov leave dec das xchg xchg je aaa push lods pop repz loop test jae out ret mov adc popf jmp out xchg cwtl ss xchg sub xor jb movsb (bad) (bad) (bad) call jge inc ja mov dec dec scas out xlat fisub and or xchg rcll ss (bad) (bad) push pop mov adc mov js pop mov jp (bad) (bad) (bad) jmp nop loop clc pop add jae jge sbb aad mov and mov cmp push fst out (bad) (bad) (bad) ljmp cli mov push jle jecxz adc faddl fldenv (bad) pop mov adc pop push mov (bad) decl mov dec fdivrs popa fist movsl inc sbb cmpsb xor rclb fdivs cmp rclb xchg push shrl clc xchg inc push cmc cmp cmc jg test (bad) xor inc add or addr16 jmp jmp mov ds (bad) (bad) mov jp adc orl and mov mov jl or pop cmc jmp sahf xor sbb xchg mov add add lock ret divl sbb jecxz ret repnz fisttp inc in ds add (bad) (bad) decl cmpl js mov jecxz mov testl ljmp pop hlt inc adc cmpsb pop xchg outsl fdivs outsl cld idivl and addr16 incl lock in sbb das mov mov nop sbb add (bad) (bad) incl mov insb shr dec jae cmp cmc in enter icebp lea jno (bad) out cli mov pop js fmulp cwtl jp dec std out xchg into repnz jge mov enter (bad) (bad) decl jo outsl (bad) adc ljmp mov xchg out pop clc sar (bad) (bad) (bad) jmp fs sub insb xchg cmp adc in fs xchg test sub push jo add es (bad) (bad) incl lock and and cwtl pop addr16 call push rclb push (bad) (bad) (bad) incl sbb inc xor les enter cmpsb adc call mov mov (bad) jg cli outsb hlt cmpsb pop inc in lret in xchg nop fsubr (bad) cld xor rcrl test fcomip xor pop and sarl push faddl (bad) incl gs stc and mov pushf sbb mov (bad) decl sbb push pop inc repnz push jmp push sub (bad) ljmp and jl,pt push popa lahf mul ret pop jns jnp cmp ljmp jmp cmp out sbb mov ss sbb dec or mov cmp jnp or pop cld xchg sarb ds (bad) pushl in sbb sub push dec pop push in test ret xchg dec (bad) (bad) decl test addr16 jp xor mov stos (bad) leave divb js xor (bad) (bad) (bad) call jl leave dec push mov pop imul fldcw mov sub pushl and and fldt sub mov rcl inc cwtl sbb jle enter pop pusha pushl mov add out out fisttp call push insl push fisttp (bad) (bad) (bad) jg inc inc lret shl mov mov into fstl mov jmp ret fimul (bad) jmp adc pop push adc inc jle inc cmc int and sub sbb fidivr in (bad) (bad) mov pushf mov cmp (bad) xor mov xor (bad) cmpsl pop loopne (bad) fmuls pop mov mov pop push xchg inc fcomps pop (bad) (bad) (bad) dec stos jecxz jb jl pushf sbb fwait mov ficom jo push mov push iret adc call (bad) jp gs pop popa adc sti inc dec lods mov pop jmp mov hlt (bad) (bad) dec (bad) pop negl xor fwait pushf sub add out cli lods add mov add (bad) test shl or cmp pop int3 loop dec call cli (bad) mov addr16 and adc cmp mov sub xor test mov lcall inc cmp imul xlat sub sub ja and sbb (bad) (bad) jmp popa xchg leave jbe cmp das icebp dec add jnp adc daa (bad) rclb mov and (bad) (bad) mov js mov cmp test dec pop les ljmp ljmp sahf pop xchg movsl lock mov ret pop loopne mov and (bad) lcall aaa imul dec int3 jno ljmp lods (bad) (bad) lcall xlat add out subl sbb xchg insb lods mov fisubrl (bad) mov dec mov lcall ss mov (bad) push or repz pop cmp ret dec cmp stos mov subl mov xor (bad) (bad) dec or insb cmpsl nop ljmp loopne test fnstsw xor hlt cmpsb (bad) (bad) (bad) dec aad dec fldl hlt lret aas dec mov mov pushf andl (bad) (bad) (bad) incl jge mov push frstor add pop jo in (bad) (bad) ljmp push jb lock and aad mov in arpl lds adc pop xchg movsl xchg or jnp (bad) (bad) incl sub push sbb addl adc jle or stc mov add (bad) (bad) (bad) call add xor fs shll mov adc insb aas cs (bad) (bad) decl mov mov popa loopne aad dec loope sbb aaa std mov mov cmp call (bad) (bad) fmull push and push mov lret push rolb fcmovnbe fcoms out or (bad) (bad) (bad) (bad) decb or or cmp data16 daa push pop (bad) jae inc hlt cmc nop push mov sub insb flds (bad) popf adc pushf pop mov cmpsl outsl and ja mov jmp ljmp cmc cmp out push sbb lahf enter incl sbb or repnz pop or inc cld fs lcall xchg (bad) (bad) mov push ror loop lock movsb imulb mov (bad) (bad) (bad) fstl leave jmp jge hlt shld mov clc cmp lock fmuls xor and out nop add into inc add fcmovnu sbb inc or lahf push cwtl or (bad) (bad) (bad) (bad) ljmp fmuls adc push and std push jnp repnz je loope push add (bad) (bad) lcall sti or lret cmp ficomp sub cmp xsaveopt mov sbb (bad) stc std add das push add jns adc dec add hlt jg push pop pop icebp scas jl (bad) leave or pop mov push fcompl cmp (bad) (bad) add pop sahf mov cmp cwtl and sahf push loope jg jg mov push insl lcall div add loopne pop ja (bad) (bad) (bad) ljmp jo (bad) mov jmp repz jne inc movsl xchg or pop loopne pop fstpl jae and (bad) mov emms repnz bound hlt in add stc aad shrl cmc jne cwtl dec cli (bad) lcall popf cmpl cmp mov cmpsl clc adc sub (bad) (bad) incl aas std test test mov (bad) mov pop mov in sbb fdivl push mov jbe in lahf push ss lds in fbstp cld es (bad) pushl (bad) jnp lods (bad) (bad) jo mov pop pop push mov mov (bad) (bad) (bad) (bad) jg mov sarl pushf lock or lret bound adc lahf (bad) das sar cmp mov adc insl shrl add stc cwtl cmpsb xor mov imul xor (bad) icebp dec sbb add (bad) decl mov iret test clc imul xchg sbb inc stc (bad) decl data16 (bad) or mov xchg imul incl out stos test test push xor dec dec adc xor (bad) (bad) (bad) decl outsb xchg add sub pop xor add (bad) aad mov shlb movl js cld (bad) (bad) ljmp inc out imul xor test inc ror js js push call not xchg add xorl and push sahf sti int scas xor (bad) pushl jmp and faddl jmp lret enter push inc inc test mov (bad) call pminub addr16 inc pusha mov cmpsb pop rcrl clc enter xchg sbb lcall nop push das add add fcompl mov out sarb test ret (bad) adc test xchg and aaa jl pop (bad) js sar (bad) (bad) (bad) out cwtl push push adc outsb add in push lock insl out fnstenv push (bad) mov jecxz aam ss mov fs push out xor icebp cmpsb insb aad lock mov jle js loop add cmpsb loope mov or pop fcoml aas inc loope lods jl mov (bad) (bad) (bad) inc lret cmp gs sbb mov cmp mov push imul add add (bad) (bad) call (bad) ss mov andl fistpl add xchg sub mov or fild jb (bad) (bad) jmp adc arpl sbb cmp movsl mov sbb lcall push mov (bad) (bad) inc std inc daa pop pop and push cmp xor push mov pushf mov sti incl dec stos repz test out pop and add out insl ret ljmp or rcll jl dec clc dec test jno mov pop clc jae or adc xor pop xchg mov lcall ljmp cli cli adc clc sbb cmp jno hlt std (bad) (bad) decl cmp je sahf xchg mov pusha cmpb lahf lock (bad) (bad) (bad) mov adc ljmp adc hlt jle fldt jle enter in (bad) (bad) (bad) pushl es or add sub in aas add addr16 daa sbb (bad) lcall jge aas mov fisub adc std out push outsb insl insb inc mov (bad) pushl std dec add push loop fstpl (bad) sub (bad) mov cmpsb (bad) iret dec scas adc or pop xor js (bad) (bad) inc in pop dec mov cwtl (bad) or jb loop ror outsb daa rcl or out iret icebp sbb cmp xlat lcall pushf rclb (bad) cld es fdivrp cmc cld iret clc jmp (bad) das lock popa xor add nop je xchg ret xchg out inc stc jmp pushf xchg sbb sub sbb (bad) push mov push repnz (bad) lahf (bad) (bad) and cmpl xor jmp addr16 loop add add push mov sub loopne add push jo cmpl or pop pop or (bad) (bad) in inc or pop fsubrl shrl (bad) mov (bad) decl dec dec loopne (bad) jae lret pop push or jnp test sti mov loopne subl sbb push fmull (bad) (bad) jg repnz add pop jo add sarl lret lahf pop clc test (bad) incl sarl mov fsubr inc hlt insb push cmp adc (bad) (bad) pushl xor (bad) pop cmp dec out xlat dec mov scas mov (bad) (bad) (bad) jmp xchg xor gs loop fwait out int cs pop mov aam pop cli rorb (bad) dec mov pop jmp popf in lret jnp fidivl ss (bad) (bad) (bad) mov push xchg cmp xchg xchg push fsubr test mov (bad) ficomp stos jbe jg test stos sbb or jl pop lock into fdivr (bad) (bad) lcall data16 xor lds jp gs (bad) (bad) out mov out sub adc js sub imul iret xor sti (bad) (bad) jg push push (bad) mov cwtl ja lret push push xor data16 xchg fxch xchg xor add xchg (bad) (bad) (bad) jg dec sub mov test cld xchg pop loopne iret std sub mov jae clc mov fcomip in inc loope add (bad) ret xor cld mov sbb outsl fcmovb or (bad) (bad) aas repz xchg inc incl xchg call jl mov (bad) jmp shrb push or mov add lret add xor xchg into rorb sbb sbb pop repnz decl fistpll jmp decb loopne fnstsw in clc iret les mov fild stos ja sub std cmp (bad) push clc rorl ds jg (bad) clc mov lahf (bad) in loope loop (bad) in sti aad inc pop jnp xlat dec cld out (bad) (bad) pushl (bad) loope addr16 jge stc pop pop cmp lock xchg pop jns popl fdiv (bad) (bad) (bad) (bad) cli sbb sub (bad) mov fistpll clc mov dec sahf cli sar pop mov clc shr xor clc (bad) (bad) (bad) ljmp insl lahf jl pop sti pop aas incl cld fistl ja std sti mov (bad) push negb test nop push sahf add (bad) jmp jmp sub cli (bad) jg lcall mov dec add xor loope mov ja ljmp stos jbe dec test sub or fmuls movsb mov (bad) scas cli lcall mov and inc addr16 cmp sub cs repnz rorl movsl (bad) (bad) (bad) mov and pop push js rorl mov js loop jp shrl mov (bad) (bad) call shll mov cmc arpl cmc pusha sbb and pushf add (bad) (bad) (bad) jmp imul imul pop fs xchg in xor sub add (bad) mov sbb and jecxz,pt lret int out (bad) cmpsl faddl push push mov shr push push xor cmp rclb pop das pop xor scas (bad) (bad) (bad) call xor inc inc imul mov xor sub pop inc cmp les dec jl mov int3 mov inc (bad) out (bad) pushl cld mov cmp negb (bad) lret (bad) repnz add (bad) (bad) call jle movsl mov testl es jle mov loopne or push lds mov inc iret adc and add insl ja lret xor insb fsubp sub or adc lcall sub dec mov or out test dec xchg or push int3 pop pop xchg push jg push pop (bad) call decl (bad) jne pop and mov lahf mov (bad) jno imul fwait add and or out int3 sub leave mov (bad) (bad) call add dec aaa outsb sub pop push pop pop push push push iret cmc out inc flds push mov (bad) (bad) inc and xchg mov cwtl loope int sub jge jle (bad) jle loopne (bad) incl ja sub or push push jb xchg pop push cmp mov (bad) (bad) incl jge push pop outsl aad xchg fidivr pop xor mov add orl push mov popa mov cmp mov idiv ljmp ds faddl lret int bound lret or jp movsl fadd ret or movsl addl and adc adc ja push add stos fwait adcb jns loop std mov xchg mov mov icebp mov or aad mov add mov sub sub or xor fistl xchg cld xchg lock rcl sub lds aam pop cs jl inc adc enter and mov lock cli push and mov cld or cli (bad) fcomip call adc shrl add popa out adc adcb cmc push jns add mov lods incb pushl cld lcall add popa push sub call fwait pop lds rorb push push jp pop or xor fs push pop outsl ss (bad) call lret inc sub flds push sub popa lcall jecxz ljmp or shr mov lcall inc (bad) (bad) (bad) jmp orl pop pusha xchg or jp push ret jle lock (bad) cmc cmp mov in popf cmp and addr16 push jns ficom cmp insb nop adc xor lea inc add sbb (bad) ljmp mov mov dec mov mov xor pop cmpsb mov mov or cwtl cli popa jg jle or je pop push (bad) (bad) (bad) out lret movsl stc hlt stos pop sbb dec mov jp sub std fwait daa or aas je (bad) (bad) (bad) pushl idiv add sbb fcompl outsb sbb sarl outsl bound mov inc out lods mov ljmp jno (bad) mov sbb insl repz mov je adc cld jecxz repnz jl stc mov xchg ljmp incl (bad) jno es mov rcll mov xchg outsl jne sbb (bad) inc xor clc fcomi inc ret cwtl idivb cmp xchg cmp mov mov (bad) (bad) lcall sbb mov dec xchg push popa mov call sub pushl xchg adc cmp sub adc and cwtl lcall (bad) stc or pop xchg or dec insl outsl sbb outsl xchg (bad) cmp xor lcall ret jge pushf xor or popa fcomip (bad) (bad) cmp push cmp inc cli sub cmp (bad) xor bts ds ljmp sub (bad) xchg fs pxor ret int3 popa push pop in lret into (bad) cwtl mov fwait mov ja (bad) incl call test xor out movsl inc loop stos add cli (bad) (bad) push rcrb ss mov fisttpl mov icebp jmp cmp fwait push enter sbb fsubrp ss mov or pop dec push fcomps adc aad outsl sbb les pop push xorb inc pushf jl lcall ja ljmp pop add push add or jg cmp push stos pop lods xor inc aam bound (bad) incl or bound daa (bad) idivb out popa pop mov push and stc push fwait push pop pop xchg ljmp in mov cmp xor cmp xor movsb push dec add adc dec add leave popa pop stos int mov (bad) (bad) (bad) jns cmp xor or mov sbb or mov (bad) (bad) out pusha and hlt (bad) mov repz dec data16 mov call aad sub add leave sub xor xchg cltd inc add (bad) call rcr cwtl pop xchg dec sub rol xchg nop int3 iret sub pop sbb mov sarb out jne pop cltd mov pusha pop imul (bad) (bad) (bad) lcall xor mov xor loop mov mov pop ret imul (bad) (bad) (bad) incl ret jbe popa imul js add ja inc repz movsb (bad) (bad) (bad) pushl jbe cmpsb xor rorb std dec jns lds rcll jne (bad) cmp xor (bad) (bad) dec lret out adc mov and repnz adc aaa (bad) mov mov xor mov jmp (bad) lods xchg jmp push lcall ficoml mov adc push nop clc lret (bad) pushl or cmpsl ret push dec inc jg push cmp rcll stos xor (bad) out cli jmp arpl ds xchg repnz push out lret out mov lcall cmpsl dec loopne lcall aas sbbl pop jns bnd (bad) (bad) (bad) mov xor call mov test out xchg dec jg das (bad) decl xor (bad) lret lods push lret ljmp fidivrl rcr (bad) (bad) (bad) (bad) test or clc ja aad stos stos cltd mov in xchg jmp mov popl xchg call leave inc mov xchg fsqrt jno jns mov (bad) (bad) call jns push pop jecxz push out pop cld daa rcll dec out mov xor mov ljmp xchg xor ljmp dec (bad) mov jecxz sub psrlq out mov hlt lcall push dec xchg outsl jecxz loope (bad) (bad) lcall popa dec repz push lret sbb xchg aaa inc sub movsb movsl lea aaa pop jae ds xchg mov loop js push ja gs push dec int (bad) jmp fisubrl aad aaa rcll push aas mov (bad) xlat jo shl stos decl (bad) pushl fstpl test xlat push push fsubrl mov ds (bad) (bad) push jle movsl pop (bad) lock lret incl (bad) or (bad) mov shld jg jmp decl xor cmpsb cmc sbbl jecxz cmpsb pop sub or jg xor in dec nop stc ds xor jmp xlat sub jnp mov clc (bad) (bad) jg rcrl sarl sbb mov pop jo loopne (bad) (bad) incl cmp pop add loopne enter sbb push lahf ja clc incl outsb push mov loop cld int3 adc clc (bad) (bad) lcall mov sarl xchg gs or ficoml mov outsb je add mov dec jnp xor outsl cli testl (bad) (bad) (bad) push sarl xchg iret or and mov push add sub aaa add jne push movl shr (bad) xor push div (bad) (bad) jg xchg pop pop call cltd or push das arpl (bad) (bad) incl outsl mov cmp in add jno fimull into sahf adc pop std (bad) lcall mov jae adc stos sti bound out call not (bad) arpl stos lahf bound test sbb cltd ss jo jo int3 inc cli stos incl leave sti (bad) jno lds jo gs sub insl (bad) or (bad) (bad) jmp cmp incl mov lret hlt mov lock (bad) call enter outsb dec cwtl lahf jo ret and lcall test data16 jnp (bad) (bad) pushl xchg imul pop mov push mov bound imul pop lods decl out cltd repz int3 icebp dec daa mov (bad) (bad) (bad) jmp cmp jno loop les adc dec cld imul pop aas notl (bad) jg ja (bad) mov xchg and rcrb repz cmp push jecxz (bad) incl arpl cs lods pop pop (bad) cmp in sub (bad) mov enter push jb adc std inc cvttps2pi rcll (bad) (bad) pushl cltd add xchg mov loope ret mov cmp (bad) fdecstp fldz fsts mov int jg adc in xchg mov int3 (bad) fs in (bad) fbld pop or test jae int3 pop push pop mulb mov cmp fidivrl out aam (bad) (bad) (bad) call mov jle pop fs mov mov ret add xchg adc test call mov push adc jecxz or (bad) call lahf les xor mov dec rorb mov pop (bad) dec xor pushl sub add jae fbstp imul pop icebp mov pop jl mov inc loop (bad) (bad) (bad) decl lret cmp mov xchg add pushf sub mov xchg xor aaa lret pop in pop and (bad) jg dec lret fldcw adc dec dec xor aam jne mov loop inc (bad) (bad) (bad) (bad) cmp mov rcll popf mov shl jp fisub mov (bad) (bad) ljmp rol fs hlt xchg popa add loope or inc adc (bad) jns (bad) (bad) call movsl mov push ret xchg pusha aas pushf test es dec xchg shll (bad) (bad) (bad) ljmp fwait add dec pop pop adc ret clc fnstcw xchg or mov add (bad) (bad) (bad) incl sbb jle aam mov mov or pop jo cld (bad) (bad) (bad) out mov es add jle xchg loopne js (bad) sbb hlt (bad) (bad) call mov mov lods and cmp push cli xor inc daa sarl jle (bad) (bad) (bad) inc sub push fstpl pop aas xchg roll lret ds mov aad jbe sub (bad) (bad) decl cmp sahf ret or cmp bound andl (bad) pushl push sub aam jne inc mov and mov cmc ja jnp (bad) (bad) (bad) lcall icebp xor or rolb xor (bad) into testb (bad) push mov add mov sarl ljmp inc adc mov out or pusha jae das cmp mov fistpl jge stos inc push push add loope (bad) (bad) (bad) jmp ja jge or subl movsb cmp arpl jmp or pop xchg sbb pushl cltd dec xor sub adc or pop dec adc bound (bad) (bad) (bad) (bad) in movsl test lods (bad) test cmc xchg pop scas lret mov push sbb mull int3 xchg mov (bad) (bad) incl push ret push icebp out ror or out rcll push push mov push (bad) (bad) decl or lds (bad) mov ss mov (bad) mov call jne push cmp lret shlb hlt mov cmpsb push into cmpsl push lods mov (bad) (bad) (bad) ljmp sbb (bad) sub aad jge flds or mul test loope stc push sahf int lock stc xchg xchg inc div mov in xchg (bad) (bad) (bad) jmp test pusha ret mov mov pop sub inc test jmp inc movsb sti ret (bad) out clc (bad) cld insb jg aas lret aas loop repnz clc and pop cmc inc or xlat push jo xchg (bad) (bad) (bad) pushl ss adc or shrb in sub pop sbb or (bad) decl xchg sbb or sbb mov (bad) push cmp testl (bad) (bad) decl sub lods mov jle lods je pop rorl push and mov lcall pushl das xchg sub push cs lret push inc xchg push fcmovnbe jne,pt std cmpsb lcall scas scas (bad) (bad) (bad) jnp jmp and and sub cmp je imul test (bad) (bad) fsubs mov in push fldt lea pop jl test mov xchg (bad) ljmp cmpsl mov jno mov (bad) sbb loope scas and ds cmp inc ret inc dec sub mov (bad) pushl faddl imul sbb cli ss dec aas je mov sbb jbe and jmp push insb aaa mov mov xchg mov inc lods inc fmulp out idivb mov cmp fmull and jmp mov mov xor push cmp (bad) shrb mov sarl xchg les inc das arpl pop sub (bad) xchg jns mov adc jnp pop sub mov (bad) dec and jmp jae int3 xchg add add addr16 pop xchg cmp lods xchg mov pop mov shr arpl pop jge xlat (bad) pushl mov aad mov stos outsb aam or inc mov xchg or inc (bad) (bad) (bad) call and ja dec inc push and inc push mov dec dec dec pusha xor (bad) incl add adc xor es push sub (bad) (bad) jmp aad cltd or fsubs xor in pop xor test mov mov lods add (bad) scas (bad) sqrtps cmp scas clc mov inc push adc jb pop xor (bad) (bad) decl addr16 or sub mov lods sub fcmovne or aam adc (bad) (bad) (bad) fistpl add push dec lret xchg adc hlt sti jle ret (bad) cld xlat cmp cmp aas cmp (bad) mov std mov into jb add test adc decl mov sub ficom mov aas shrl push cmp fild mov cmp dec pop dec cld decl push inc das jbe pop push xor sahf xlat jbe (bad) (bad) (bad) lcall pop cld sub shr xlat mov or cwtl jbe ljmp mov push outsb jae lods call aaa jnp mov fcmovu (bad) pop fldl2e push sti scas cld sysenter (bad) fild dec loopne jno sub and sbb jg push lods in mov jmp pusha and sub out inc (bad) (bad) (bad) incl cld dec (bad) jg (bad) (bad) jge int3 mov iret jg add cli idiv (bad) (bad) (bad) fdivrl (bad) jmp repz mov jmp lods loop sbb cmpb mov push fsubl mov mov jp jl push in inc cld (bad) mov sbb clc aas sub mov and mov add out jne (bad) jg jl mov int3 call push or sub or inc (bad) call sbb add iret fimull or faddl push xchg lods push xor inc xchg add (bad) dec mov sti mov mov add fcomip adc loop ret out jae stos sbb (bad) fldt stos (bad) (bad) (bad) pushl sub lahf push lret das jg xchg mov xor lret aaa jo outsb (bad) mov ss mov clc inc sub test ds jmp (bad) movsb (bad) (bad) (bad) mov and push test outsb and repz pop xchg sub pop push sbb jb xchg and (bad) (bad) decl stos ret popa fsubrl push stos sarb cmp mov sub hlt xor nop sbb (bad) (bad) decl (bad) repz jno sti and popf and xor cld lods sub (bad) (bad) (bad) jmp jnp es decl sub adc add mov test in loope outsl cli (bad) (bad) out cmp add sub add icebp push jno dec jge mov scas mov cli add (bad) out cmp pop adc loop mov adc add mov (bad) (bad) dec push sti (bad) pushf push out orl jle aas dec sub and loop xchg (bad) call mov js dec test call (bad) inc lret pop and je pusha push je fcoms cli cmpsl pop rclb sub add mov adc jmp stc push and mov push cld jg std mov (bad) or pop in sbb jbe fmulp in push pop sub (bad) (bad) (bad) in dec stc fsubrs aas daa ss repnz lret shr pop shrb ret js xchg aas and lods stos mov sub ljmp adc lahf inc repz loop pop call fisubrl push out pop scas mov mov or pop leave es (bad) (bad) jmp ret mov xchg xor movsb mov in mov mov shll cmc (bad) (bad) call test jno fwait adc sbb cmp into repz add out pop cld ffreep and mov cmp aam decb cmp das inc ret xchg mov das sub push xor sub push mov sbb mov sub dec xchg dec adc (bad) lcall cli test sete xchg or add (bad) (bad) (bad) pushl mov xor int3 dec shrl outsb and js ja insb insb (bad) (bad) (bad) (bad) mov movsb and jge pop scas call jb jns test inc mov cmp fcompl fisubr dec (bad) mov adc es jns sahf sbb aaa cld pushl mov xor pusha cmp dec iret cmpsl mov dec fwait adc sub (bad) (bad) jg jbe adc or scas pop sub ret cltd add (bad) (bad) (bad) incl movsl pushf sti leave sti cld (bad) sbb push mov test std mov mov arpl stc xchg (bad) (bad) (bad) pushl mov rolb xor push (bad) xor inc negl or inc or dec ljmp mov sub mov adc mov out js jbe (bad) ret inc (bad) mov dec out jne adc loop push in dec repnz int3 iret repnz ljmp add or cltd sahf add jo xchg xchg pop je push or (bad) jg dec imul cmp pop mov (bad) mov (bad) call xor lea aaa imul fcompl xor shlb insb xchg fld (bad) (bad) jmp repz sarl xor lds dec scas mov (bad) (bad) (bad) jg mov in jge pop les cld cld and test fwait in enter jecxz xchg lock mov movl (bad) mov or jno mov pop lahf getsec xor icebp (bad) (bad) int (bad) (bad) (bad) lcall scas dec popf ds pop mov lea push mov enter ds ja lcall mov (bad) mov vmread (bad) mov decb in (bad) (bad) (bad) jmp xchg mov xor xchg cmp pop pop mov mov movsb pop pop repz (bad) (bad) (bad) lcall pushl or ret pushf addr16 shll xchg dec jae lret (bad) (bad) incl mov xchg adc add cmc mov lret fsubrs addr16 jae clc sbb (bad) mov xchg insl push or jns push xlat rcl xlat sub lret jb and (bad) (bad) lcall cs je cmp and mov insl (bad) mov add cmp cs idiv fistpll call clc or cmp pop sbb dec push or test lock (bad) lcall jne dec int3 mov push stos lahf stos adc ljmp fwait mov (bad) fist xchg mov fs sub (bad) cmp mov pop inc sub dec cmp and (bad) lcall jo mov cmpl lea lds daa sahf lods out xor (bad) fcomip decl xor ja jae loopne aad pop (bad) rol and jp (bad) (bad) (bad) cmp fmull std adc xor push addr16 push cld call push scas in (bad) mov cmp (bad) dec outsb test neg adc ret push cli loop sub cmp ja jge (bad) ss fs (bad) jmp jmp negb adc ret iret jecxz fimull lcall cmp sbb (bad) pop (bad) mov lret sbb hlt mov or mov and imul or call jne add outsb push call push nop (bad) scas shll fiaddl (bad) (bad) lcall sbb shll pop addr16 bound and inc lret outsb into (bad) jmp mov inc fptan add rcr cmpsb leave jge push (bad) (bad) (bad) (bad) mov lahf fs adc aad adc (bad) xor jae cmp xchg jg (bad) (bad) jg pop sti sahf cmpsl jl adc push fisttp rcll shlb (bad) (bad) call mov (bad) cltd aas mov mov xchg sub push xchg adc in jb xchg lds dec scas sub icebp (bad) (bad) (bad) (bad) jg popa scas sub dec and or cmpsl cmc lods fnsave inc cmp or pop cld jmp push cs jmp xchg cmpsl or mov ljmp (bad) (bad) incl stos add dec xchg outsb add sub pop cmpl push imul shrl int3 push nop (bad) (bad) (bad) ljmp insl fcompl mov mov dec out mov lret adc ja into sub (bad) (bad) (bad) jmp mov push jecxz xchg jne (bad) fs xor popl and xchg add aaa sbb loopne lcall cld xor dec imul push repnz xchg adc or fbld movsb les pop fisubl inc sbb push pusha std push dec jmp (bad) (bad) jg pcmpeqw push push incl stc mov inc mov mov roll insl ss incb (bad) daa fadds call add pop insb add je (bad) mov and and ja in dec mov (bad) sub test (bad) (bad) (bad) decl les repz int outsb mov pop test clc pop imul lcall mov insb scas dec adc jge adc mov mov jbe xor sbb adcl fsubr (bad) add sub xor es xchg mov sub ja pop int stos cmp les add mov xchg xor add (bad) (bad) call sub xchg into adc je stos das test loope xchg jns pop popf jns mov mov (bad) ljmp inc jb fcmovbe push cmp jns sbb loope add pop add push out clc (bad) lcall push enter mov mov add sbb add adc adc cli ja repz ret cmc andl mov mov out cli inc stos (bad) sbb popf int cs fildl daa test or inc sbb mov (bad) (bad) call mov stc sti call (bad) int xor div push mov add mov lret stos leave mov test ljmp or (bad) enter icebp fsub pop je dec jne into (bad) cmp mov jb cld (bad) inc mov cwtl in das jb mov sbb mov or call outsl outsb pusha inc lret insb ficomp sar ja jb sti das aam stc ret insl pushl jmp dec jno inc fisttp aaa outsl hlt in out inc fstpl ret in pop out mov (bad) (bad) (bad) (bad) in insl jo scas cmp mov jecxz push int and xchg ljmp in dec ja scas in rol decl mov push (bad) (bad) (bad) jmp cmp scas cmp xor call les js jmp pop insb (bad) (bad) (bad) (bad) mov xor lret lds xlat inc fs xor lahf adc int3 push pop jno in loopne (bad) (bad) (bad) lcall xchg sahf jg mov adc cmpsl flds out mov es xor (bad) ret in mov dec mov sbb pop adc sub sub (bad) or adc adc sbb and adc into (bad) ljmp jno int and mov mov pushf jnp aas mov (bad) (bad) (bad) incl sub imul lahf ja mov (bad) out dec jb sbb cmp std or (bad) (bad) cmp cwtl lock pusha dec inc sub sub idiv (bad) (bad) pushl shrl jg dec sbb sahf pop fbstp mov call cmpsb lods xchg std loope aaa cld mov outsb lock loopne popf inc outsl ret ljmp stc dec (bad) (bad) mov fs test scas negl adc add mov (bad) (bad) fsubs sub (bad) ss int3 sub and jl test xor (bad) ljmp lcall add mov mov je enter (bad) inc test outsb popf xchg ret (bad) cld and lea arpl idivb push dec sar decl push dec pop xor xor dec mov adc pop lcall push movsl int push mov cmpsl test cmp nop xchg add add and push rcrl (bad) (bad) cld cmp lock or or pop jmp fisttp add les inc scas pop (bad) jg (bad) cmp cltd dec add jmp je add sub pop ja (bad) xor (bad) (bad) incl xor mov adc mov out adc adc jbe sbb (bad) addr16 (bad) (bad) (bad) (bad) mov and mov xchg push cli sti xchg add movaps xor sbb inc cli fcoml mov pop mov test xchg xchg insl test inc dec sbb lcall lcall (bad) cmc test loopne sbb scas (bad) (bad) (bad) (bad) mov shll aaa or clc seto mov cli cmp xchg (bad) (bad) (bad) incl xchg cmpsb mov sub and or test add test (bad) (bad) call mov adc imul hlt jp data16 sbb add mov es cmpsl xchg aas mov xor ret jge loope adc jmp loopne (bad) xlat sbb data16 fildll xchg or gs (bad) (bad) push inc mov xor dec xor stos mov in orl pop or loopne lods push out (bad) (bad) ljmp inc lock fwait outsl insb mov jge sbb sahf dec pop add ja lcall mov adc push jmp jb std roll (bad) ljmp lock add pop mov sbb jo xor (bad) incl mov mov mov addb inc dec mov (bad) (bad) (bad) lcall loop in es mov sbb les jae loope loop lods mov (bad) (bad) incl add cmp mov sti add cwtl cmc jmp rorb (bad) (bad) (bad) std ja fwait inc jl loop or sti div pop aad bound outsb pop ja repz (bad) (bad) ljmp fmull push fidivrl insb xchg mov add sub (bad) (bad) jg adc stc cmp lock in mov or dec mov push dec outsl clc mov pop inc add dec ret pop push out bound (bad) fcomip xchg inc mov jg lret incl cs jbe jns insl mov (bad) mov out pop push cmp inc or (bad) rol mov dec mov lret bound mov push imul movsl lret cmovnp (bad) (bad) (bad) (bad) ljmp (bad) adc sub pop dec (bad) or or adc mov (bad) (bad) (bad) jmp cmp test sub inc mov xchg mov pop mull nop pushf je mov ljmp sbb dec push (bad) imul (bad) in inc (bad) clc js insb or jle pop jl hlt pop or (bad) (bad) pushl scas mov cmpsb imul dec rol or (bad) fstl inc mov mov pushl cmp pop xchg push fbld pop jnp test xor (bad) (bad) jmp repz roll xchg enter inc inc shll aaa cld lcall test pop aaa mov lret or xchg ljmp (bad) (bad) (bad) (bad) ljmp daa pop or pop loopne cmp es je lahf cmc mov gs jnp fdivrs sar (bad) (bad) decl mov dec mov mov pop jl or and add jbe (bad) mov incl mov sahf popa mov adc ret pop pop adc (bad) (bad) jns pop mov popf sub xchg ds sbb cmp stc js pop jns adc (bad) (bad) call xor push cmp dec cmp lods jns jmp pusha xchg (bad) (bad) (bad) (bad) (bad) dec sub jge pop (bad) pop clc ret pop loop cli jb pop and std imul in mov pop add out push int hlt pop (bad) (bad) (bad) call inc inc jg lods les jnp mov mov fmuls out mov jb (bad) (bad) (bad) ljmp sbbb in mov roll int3 jbe xor jnp mov inc pushf xchg mov cmc test lret rcr cmp test push or sar leave jns in stc mov dec mov hlt pop pop aaa inc sub mov (bad) (bad) cld lret out outsb dec in mov (bad) xor and cmpsb insb jg jns push sbb jmp das cli xchg push mov jnp mov mov mov mov decl das cmp xchg fistp fsub lock mov sbb dec jp (bad) (bad) incl icebp xchg imul repz stc (bad) jae popa and dec icebp adc cmp cmp (bad) clc push das pop adc cmp nop aas push push push push jecxz pop lret mov incl lahf out popf fisttpll sbb fildll sar pop sarb insb inc int icebp lahf adc and popa fisttpl pushl sub cmp xor sbb (bad) (bad) (bad) (bad) (bad) jge mov mov mov cli push lahf xor fdivrs shrb rolb cld (bad) push gs (bad) mov mov xchg popa cmpsb mov cwtl (bad) (bad) (bad) jmp cmp ret imul push jo sub push or cmp outsl je (bad) (bad) decl sub mov xchg repnz lds ja jge dec jno mov fsubp (bad) pushf jmp push fs hlt adc pop inc xor jle fneni(8087 or shlb (bad) (bad) (bad) jmp jl add (bad) lods aad cli mov push adc pusha lcall mov cmp (bad) (bad) (bad) (bad) out loop aaa mov inc dec sbb outsb sbb adc jp xlat repnz (bad) (bad) (bad) call (bad) std scas inc scas mov cmp pop or pop xchg cwtl xchg decl lret pop rclw push in cmpsb enter mov roll pop sbb mov nop flds jecxz ljmp xor xchg adc ljmp fwait mov inc push loop out add je jnp push int3 shr ds jbe (bad) repnz (bad) (bad) (bad) lcall mov das mov lahf test push into (bad) js mov into rclb xor add jecxz bound dec xlat ljmp and movsl icebp insb in jmp lret and or sbb push jge lcall xor aam repnz test out xchg (bad) lcall es mov ds clc sahf push sarl xchg rolb (bad) cmc sub stos incl cld scas rcrl nop ret out jne or lods push sbb (bad) out cli cmpsb movsb cli (bad) ja sub xorl addr16 mov ss std (bad) call std jae mov jb cltd test jne (bad) in cmp (bad) (bad) jmp cmpsb fwait enter lret lahf fldenv push mov jle ds cmp jnp movsl (bad) incl mov dec loopne ficompl repnz ret lods lods pop jns std (bad) (bad) clc dec imul mov les or (bad) mov push fcmove test arpl std call mov nop inc enter mov shll xor aam xchg mov xchg mov fsubs and (bad) (bad) (bad) jmp mov mov pop in ficoml xchg outsb mov mov jge lds mov cmp pop xlat lret imulb (bad) (bad) jmp mov xchg outsl xor repnz mov ror lret ljmp (bad) mov testl movb cmpsl jl push sub (bad) (bad) (bad) call movsl pop insl hlt stc push adc jmp nop (bad) (bad) fsubrp ja call outsb pop cwtl mov xchg adc cmp sub enter scas imul mov in in fldl push xchg lock inc fnstsw adc pavgw (bad) (bad) jmp imul dec nopl inc in test orl cltd das outsb cmp and (bad) in or frstor mov data16 (bad) (bad) lcall data16 sbb or rcrl cltd arpl jmp jmp pusha jae or (bad) (bad) (bad) jmp or jno inc mov mov fadd rcl fmull push cli inc stos xor and (bad) pushl mov out imul bound repz (bad) ljmp pusha test js es pop sti mov (bad) mov jmp (bad) cltd dec addl xor push and mov mov inc xchg or xchg adc fdivs jae xorl sub mov xchg fldt sbb mov test inc sbb fstl std lcall push push push xcrypt-ecb cmpsl dec push sbb mov mov (bad) (bad) pushl sarb cwtl movsb pushf cmp int3 mov cmpsl cld dec jne mov sar cld (bad) (bad) (bad) lcall add inc mov scas in xor inc jns sbb (bad) loop scas (bad) (bad) (bad) (bad) fisttpll jnp push in mov cmp cli ja fdivrs jp pushf mov inc adc (bad) (bad) ljmp inc push out or jecxz pop jg adc xchg (bad) dec jo cmp (bad) (bad) ljmp xchg pushf je cltd pop push adc pop (bad) ja push xchg lcall fsincos hlt or stc jecxz push mov lock lock (bad) call xor xchg xlat cmp in mov pop cmp mov mov ljmp xor gs sub or into jle (bad) (bad) (bad) jmp jbe jg mov cmp xchg icebp push xchg clc mov sbb xor (bad) (bad) (bad) jmp dec addr16 jnp in add popl mov (bad) mov and (bad) jg das sub lret mov xchg and adc (bad) pushl shlb sub jmp or mov push mov (bad) fbld mov pop add jo push loop jmp icebp sar (bad) pushl hlt mov stos fimull sub mov (bad) fcmovne add jb mov (bad) (bad) jg adc sbb fdivs lock fld and outsb aas mov xchg inc daa insb jne test call insb push or mov pop jle pusha xor in inc cmp test mov push icebp cmp repz mov sub (bad) (bad) (bad) call inc insb mov jns sbb jg pop out ror daa xor clc loope ret (bad) (bad) jmp push push insb (bad) fldt aas xchg mov xchg lcall (bad) (bad) jmp mov jp jno test pop in test pop out test cltd mov inc stc rcl pop add (bad) (bad) (bad) (bad) incl xchg lods dec mov mov dec popa in leave add jo inc push idiv (bad) (bad) decl mov mov xor xchg sub xchg pusha adc movsb pop lret js clc (bad) jmp js lret fadd cwtl cli ret imul into mov (bad) (bad) (bad) fild (bad) pop sbb cwtl lcall push ja (bad) (bad) xor sar ljmp mov iret mov or jbe inc cmp stc sahf mov (bad) (bad) push push mov sbb nop mov jns cmp add pop pop imul pushf insl and mov in incl ret jl (bad) insb jle xchg and mov clc cmp mov mov aam jmp adc sahf push (bad) ds dec in push mov pop ljmp ret cmc mov aad inc out push push xlat mov lds repz (bad) (bad) mov mov mov pop dec adc pop inc test sbb xor sub out cmpsb (bad) decl daa inc jo push sti xchg iret stos push cmc sub push lock enter fcomp lock lock out sbb sbb enter sbb pop sub or jg push test jb mov mov push or cli (bad) (bad) jmp sbb mov mov rorl mov add jp xchg das lcall mov test (bad) push gs sbb das clc (bad) mov mov movsl (bad) jne inc (bad) ljmp fdivrp cltd (bad) jo push gs in nop push push adc incl dec (bad) fstp inc and repz xchg mov lea pop pop dec inc mov jle (bad) lcall mov mov jge lret mov adc fisttpl (bad) outsb lret (bad) (bad) lcall push mov pop sub imul mov sbb pop roll sahf aas xchg fdivr jg jmp cmp push cmp popa jae adcl sbb rcrb (bad) (bad) (bad) jmp loope aam pop lods cmp lods rol xchg das ja xchg adc int mov out mov xor pop (bad) dec add add jmp outsb shlb fidiv sbb (bad) (bad) (bad) dec andl stos sub mov mov fs (bad) sbb xor dec mov pushl mov js shrl adc mov pop test sarb into mov mov inc outsl mov rcrb data16 aam pop fxch push add (bad) (bad) (bad) call js movsb cmc cmp mov jge repnz mov push ret (bad) (bad) (bad) (bad) pushl fcompl loope enter dec add jmp hlt ficoml mov (bad) js inc popf pop daa hlt sub (bad) (bad) (bad) (bad) mov movmskps out jns fs pop dec movl mov pop (bad) (bad) (bad) jmp (bad) jle pop xchg (bad) pop stos cs cltd lret test or stc xor nop daa or ficomp std out lods dec add loop (bad) (bad) jmp cmp loope sub inc or lcall and xchg (bad) push orl dec repz inc pop dec and jg (bad) call jl test push add pop jl loope xchg insl mov pop add mov cs imull imul cld cwtl pop fstp jns je push gs js push add (bad) (bad) jmp int inc jl add adc pop push stos in pop ficoml sarl adc (bad) fcomi push movsl cmp sub add and sbb ret push or scas sahf mov lret test aaa dec or inc cmpb sub push addl (bad) aaa jnp aaa out aas sub (bad) (bad) call inc xchg pop loopnew pop mov roll push iret loopne or ret xchg (bad) (bad) (bad) decl jmp dec inc mov sub popf jno enter out jbe pop lcall call je sbb xor rorb clc aam (bad) (bad) das out pop out int (bad) (bad) decl rcrb inc mov jnp enter mov icebp movsb je outsl loop sub lcall sahf and and lcall iret outsl out ds ljmp rclb js cmp jmp pop push test dec repz outsb test scas cli decl movsb stos xchg dec xchg inc (bad) inc or rcrl outsl xor mov push addr16 or iret jnp xchg pop test mov dec leave mov (bad) (bad) jmp leave mov addr16 pusha insb js xor xor push (bad) mov (bad) (bad) (bad) call data16 (bad) icebp adc cmp mov or fistl or xor mov (bad) (bad) (bad) ds mov cmc dec sbb xchg imulb xchg pop pop lods sbb stc push xor rol (bad) (bad) (bad) pushl pop sub rcrb sbb fnstsw sub imul xlat mov ds pop cmc (bad) ljmp cli mov mov cmpsl inc dec lods mov rorb jl (bad) (bad) (bad) pushl sbb loope jle push adc js cmpsb push xor push push sub and (bad) (bad) (bad) decl pop or and stos xor out ja push push imul (bad) (bad) ljmp jno mov iret pop test cli (bad) cwtl mov hlt bound ror rcrl and (bad) (bad) jmp dec in jns fsubl int dec lret xchg adc mov jno jecxz (bad) cmc in xchg mov (bad) fistpll ret cwtl adc notl mov mov in push jg cmp ret mov jno (bad) (bad) ljmp adc test and xor rcll movsb xchg ret sahf pop (bad) (bad) (bad) mov sub test mov hlt push hlt jo loopne mov ljmp mov pop addr16 sub or or or jb cmp pop pop cmp xorb xchg xchg and push std stos decb sub inc stos (bad) cmpsl jp xor (bad) call push pushf es dec not in mov pop cmp push fldt (bad) (bad) (bad) lcall test into cmp mov icebp and mov call xchg into clc sub test and (bad) in dec ja fmull loope stos sub in (bad) (bad) fnop (bad) cmp and cltd ljmp imul out test dec pop xchg (bad) (bad) (bad) jmp mov (bad) xor ja outsb dec movsl fucompp jp pop popa stc or fs jne or cld adc sub push pop inc insb pop jb xor or jns cmp xchg mov decl fsubrl dec test (bad) nop das mov ljmp pop xchg and ficompl hlt mov dec fcoml inc mov add dec mov out sub (bad) (bad) mov and popf stos push jg ja inc sub mov cmc sub adc call cld testb fdivrl mov in jno (bad) (bad) (bad) aas je mov add in addr16 sbb test xor (bad) cmp inc (bad) (bad) (bad) dec sarb xchg xchg outsb mov mov cmp ja pop imul sub imul pop sub std or roll jo outsl push out (bad) fisub push dec inc (bad) (bad) (bad) call ja jne cld xchg xlat movsb (bad) push imul lea (bad) xor adc (bad) pusha mov fwait (bad) dec push pusha cmc sbb loope lods pop sti jp stos xor testl std xchg jb movsl out pop es dec pop movl mov ja cmp add (bad) fildll jo (bad) sub lret or (bad) sbb fcomip fildll add xchg mov sarl jp jmp or mov (bad) sahf mov jge mov (bad) call and xor jl adcl loope stc and je (bad) lcall add addr16 enter ret lds gs jo out (bad) (bad) incl inc data16 mov xorl add ret popa jp lcall pop mov push movsw mov js jo or idivl jne add (bad) (bad) incl inc and outsb addl jnp ds inc jg sbb inc repz adc aam mov jg mov and xlat and or in pop sahf cmp push insb scas push std lcall inc cmp push dec aad jge jg push shrb pop and icebp imul sub mov loop test movsb push cmp cli adcl jns (bad) (bad) lcall cmp mov xchg push lret sbbl xor jg pusha jecxz jne pop dec ljmp xor jo cltd push clc inc mov sbb mov in in sbb (bad) lcall add stos ss lcall test into pop ja or jmp cltd cmp hlt call out fbstp ja call les xlat dec stos popa push mov jns sbb cmp jnp fst test adc enter mov (bad) fstpl cld gs and mov das outsl xchg push adc (bad) (bad) incl cmp jge ds enter stos test jl aas (bad) pushl sbb cs dec out mov fcomps ds sbb aas enter test xor jb lahf popa pop jne sub push out scas jge cwtl lret loope mov (bad) incl jge cmc jmp les loope dec leave fucom fwait dec cmpsb dec sub arpl (bad) fidiv (bad) loopne or pop (bad) mov lock outsl add lcall outsb in ret push std cltd adc ja icebp inc (bad) add pushl (bad) mov jle add ja lock ljmp sarb add movsb sbb loop pop xchg cmp (bad) mov (bad) (bad) out and sbb jae cmpl ret mov mov mov cmpb dec jl dec sti aam sbb les aam and ror ss inc cltd push push (bad) (bad) (bad) ljmp mov stos push xchg mov jg adc mov and lock cmp jmp sbb push lods imull sbb lds hlt xchg push jl mov ret (bad) mov add (bad) call cmpsb aas lcall xor xor jns in out pop dec pusha sbb ss (bad) (bad) lcall int3 adc or sti sti dec push in lods test imul cmc (bad) (bad) (bad) (bad) sti xchg sahf xchg iret rcl leave inc xor add ja loope aam call (bad) mov scas call pop orb nop push mov jmp adc or int3 cmp (bad) jmp and mov in pushf nop pop addr16 xlat ljmp cmpl (bad) (bad) jmp movsb sarb enter dec imul (bad) xor sarb (bad) (bad) fist inc enter sub aam movsl stos add push push outsl (bad) (bad) dec call icebp lcall mov jp notb push sbb sub (bad) (bad) call nop outsb or dec ja imul addr16 xchg testl push es (bad) jne (bad) (bad) (bad) inc sub incb pop mov cs iret fbstp mov ret leave leave loopne (bad) jmp dec mov fnop out mov aas arpl cmp icebp ljmp push adc cli loop sbb mov xlat xchg sbb es (bad) lcall mov xchg mov add mov (bad) sbb mov cmp inc std incl push mov movsb (bad) or dec xchg dec jns mov (bad) (bad) (bad) push xchg in xor mov sbb pop mov (bad) sbb inc push clc sti mov pop jb (bad) (bad) ljmp fisub sbb ror mov shrl rcrl movsl lods sub add mov scas cli mov in adc xchg pop sbb aad fucom and (bad) mov pop clc dec dec jle add je xor cmp (bad) decl mov cmp (bad) fisttp fistpll data16 (bad) (bad) jmp outsl (bad) divb repz ljmp imul inc pushf call test (bad) in ret mov cwtl test or scas ljmp iret sub aas pop jl jbe enter hlt mov push inc (bad) pushl int3 xchg mov ja ret (bad) clc out cmpsb jmp pop xlat sub mov popa and cmpsl out test jnp pop aad push imul es out dec sub jbe xor (bad) ljmp insb loopne mov sub lret (bad) fildl stos dec or dec sar mov psllq scas mov add push add enter loopne jmp push repnz mov (bad) ret xor test (bad) push push adc and sti xchg mov dec outsb movsb rorl fyl2xp1 sti enter (bad) mov sar cmp xor arpl add add inc clc in pop call or gs jp scas jns add sub (bad) (bad) incl mov rolb subl inc xchg iret dec xchg setne cmp into (bad) call je pop jmp or mov adc inc (bad) es xchg mov and or jp in loop mov sbb fwait inc cmpb daa jge jecxz (bad) (bad) (bad) lcall xor sbb jno mov inc mov popf adc pop (bad) jmp cld mov cmp xlat jne sub mov enter pop incl lods push xchg mov ljmp push jmp out cli lahf imul test xchg sbb ljmp lods rolb push jb out adc pop scas sbb clc lods inc ja jne iret xchg gs push dec lods mov outsl cld or (bad) cli frstor insl lcall out sarb mov mov xor inc jg,pt mov and xor push (bad) (bad) pushl sahf cmpsl cmp add adc dec or fs adc fnstenv push cld pushl aam setge xlat sbb inc in nop inc lods movsl aaa jmp iret xchg lods das sar das add lahf adc add dec repnz (bad) and pop push adc clc (bad) (bad) ljmp cmpxchg sub dec xor ds fnop xchg in mov inc push mov cmpsb (bad) out in int mov cmc fwait push inc xchg sarl mov or (bad) call fdivl scas adc je out xchg jo in mov jbe sub pop cmc (bad) fisubrl in jmp mov jnp mov lahf imul pushl cwtl cmp mov sbb std jle pop hlt cli fcmovne bound cmp mov call pusha inc or cmpsb mov lahf clc add mov testl rorb iret aam or add insl mov sbb cmp pop inc cmc repz lock (bad) pop dec inc pop scas push dec pop pop (bad) out clc incl or pop js add mov pop or mov decl (bad) jge sub push cmp pop repnz and jl jno test sbb cli (bad) pushl (bad) push or and and cmp mov ret (bad) (bad) mov xchg bound scas into gs mov repz jmp (bad) (bad) (bad) cmp das into inc lea sbbl and fwait aaa fbstp cmpsl (bad) (bad) (bad) (bad) js mov mov fisubr in test addb cmpsb iret xor ffreep cmc and (bad) (bad) pushl fst ficompl push mov xchg lret add pop lcall mov add in ret cli incl dec (bad) stc pop jno or jb inc jo pop push lods dec mov jecxz nop dec icebp (bad) (bad) (bad) decl add mov ret cmp aaa incb or jecxz dec mov and cmp incl dec mov or jns dec cmp sub sub (bad) (bad) (bad) out xor aas or scas xlat sub stc adc mov mov mov or outsb cmpsl push (bad) (bad) lcall in in pop (bad) pop repz mov sub pusha cs pop test ljmp ja in dec xchg mov xlat inc xchg fildl dec fcomip iret (bad) mov pushf mov (bad) ljmp call out pop imull fadd not pop inc int3 lds popf mov stos (bad) (bad) (bad) call cmc mov sahf outsl ja daa push xchg popa scas add push lcall mov (bad) inc test jne jo fbld pop add add or fsubrs and scas lcall es push (bad) aaa loop jne lea pop pop pop mov xchg jle and sarb (bad) (bad) (bad) call or sbb insl movsb cmp aad test jge cmp mov push rep pop sahf sar (bad) incl jno xchg pop in pushf pop inc dec lock test cs ja lahf jb pop sbb xchg (bad) (bad) (bad) lcall bound ss xor pop (bad) rcl add mov pop (bad) (bad) (bad) lcall jns add inc outsl rorb (bad) push cwtl fwait ja pushf xor mov xlat mov fdivl loop fmuls (bad) jb jno mov ret ljmp ss sbb bound mov jae scas dec xor mov dec xchg jo sub (bad) decl test das stos sbb es xchg cs add loopnew pusha pusha mov cmpsb sub mov cmp and push mov fs (bad) (bad) decl push pop xchg mov jno popa iret movsl jb lds mov ret out inc sbb (bad) (bad) (bad) decl loopne int sub push outsb pushf movsl mov loopne leave xor mov nop sbb xchg jg (bad) (bad) (bad) (bad) mov mov lods or sahf in aad shlb xor les jae lcall xacquire jns outsl pop dec fldl2e (bad) (bad) (bad) mov push inc bound mov pop (bad) into add inc mov fmull add (bad) (bad) (bad) push cmpl fwait jne sbb jecxz and js mov inc push sub std (bad) pushl icebp sbb push (bad) cmp mov (bad) jo push pusha rclb or jge ljmp inc mov lea js mov xchg cs add rorb jge test aaa insb movsl (bad) (bad) (bad) jmp inc or or mov jae push call and sahf mov daa ret iret cmp push (bad) (bad) (bad) (bad) mov cmp adc outsb cmc jge mov xchg das icebp sub cmc (bad) (bad) (bad) out loopne lods xlat sub xchg cwtl rcll sahf lret xor mov ret cmpsl dec rol fmuls (bad) lcall cs jl sub daa add jne xor out and push (bad) (bad) (bad) incl add mov hlt dec mov shrb mov clc pop mov lods or (bad) decl std push mov mov aas xorl or mov (bad) (bad) (bad) pushl inc test test js aaa cld mov sti arpl in or jecxz or (bad) decl push jp dec cmovb aaa dec add (bad) mov push insb gs loop mov jmp push dec jp push ds mov cld (bad) (bad) lcall cmpl in push inc pop rcr enter das inc sub sub (bad) call jne adc push fcoms jns xchg mov mov inc movsb dec das (bad) (bad) (bad) jmp nop/reserved add lods scas xor fidivr test mov cmp push or icebp sub lock dec out rcl cli in scas es fcmovnb jae add mov sub aaa rcrl in mov jo jae push ret jp pop orl inc lds call xchg cmc add push mov (bad) mov rcll into cmp mov pop mov stc (bad) (bad) (bad) call int dec xchg mov inc sub pop xchg sbb inc lcall stos sbb (bad) (bad) ljmp sub jnp pop mov or cmp int3 scas movsl das add ds pop aad loopne ljmp jg adc cmpsl imul or pop and mov jo or (bad) (bad) (bad) jmp je inc (bad) adc in pop xchg xchg xchg xor jo xor fs loope pop ljmp xchg jns dec cltd leave hlt dec dec sti mov jmp pop ret mov fldt xchg cmp cmp mov cmc in shrb push and xchg xlat mov lcall fmul std sub (bad) pop cmp pop dec push jns sahf or pop outsb pop jg (bad) jmp loope push pop sbb push inc rcrb clc mov mov in add stc add dec cmp push imul xor mov (bad) call test sub je arpl dec sub xchg dec cmp mov sub fdivr mov xor pop insl push data16 cltd mov pop adc (bad) mov add fdivrs pop pop sub mov jg jbe fidiv dec lods mov (bad) call jl lods rcrb stos xchg imul or loope or dec mov leave xchg add (bad) (bad) call movsl pop shlb jne lods leave out ror sub mov dec scas sti push mov add ljmp hlt push jae addr16 gs das lahf pop jne lahf cmp in mov mov dec pop mov shll push cltd mov insl loopne lea nop mov lret scas sbb push pop xchg push mov add add enter mov (bad) ljmp rcr xlat push xchg xchg sbb stc rolb repz pop (bad) clc ljmp cmpsb inc aad push xor js dec mov (bad) (bad) ljmp mov xor mov (bad) cli cmp lret cld bound sbb (bad) (bad) call loope ficompl sti gs cwtl cmp out cmpsb and std test decl jle sbb mov or aas mov mov jb test (bad) (bad) (bad) call mov push stos (bad) stos cmp cmp rcrb push das frstor (bad) (bad) (bad) incl cmp jbe sbb sahf js repnz pop jmp int3 inc mov (bad) in cmp daa cmp inc outsb jp jns mov (bad) call loope pop xor pop hlt xchg (bad) decl inc xor out cmp repnz pop ljmp imul (bad) incl sub inc cmpb add mov mov push out in mov (bad) (bad) call lret fidivrl leave pop fisub dec xchg mov inc pop out loop cs ljmp inc inc and mov push pop inc mov add ja fbld pop jge sbbl adc jl pop (bad) jbe jl (bad) (bad) (bad) ljmp cmpsl int3 xor lea addr16 scas push sbb shl loopne test (bad) (bad) ljmp pusha idiv xor cli es or call popf cmp aas mov (bad) lcall call adc jl ret pop mov jmp dec or stc mov push pop addr16 ljmp cli ljmp popf aaa add jb pop or (bad) cmp mov xchg lds js cmp (bad) lcall add rclb sbbl cmp or mov cld (bad) (bad) lcall xchg int3 notl sbb sub inc rolb nop adc mov (bad) (bad) pushl dec fs lret jb cmp sub xor sbb (bad) lcall sbb aad imull xchg sub dec sbb dec ret mov mov fcomip (bad) push hlt out ret ljmp call xchg add aaa out sar ljmp in das outsb pop cld fcmovbe ror stc ror and dec and mov push clc out in fwait gs jg dec ja push (bad) xchg fbstp cmp (bad) (bad) (bad) lcall or insl arpl jnp pop mov stc icebp push scas nop dec add cli pusha dec scas mov xchg popa arpl inc in pop bnd xlat in (bad) cmc adc es pop (bad) mov push int xor jmp fcoms or push push cmpsl adc sahf scas jb fistl xchg into das (bad) (bad) (bad) call lds ret fisubrl out jecxz add (bad) mov inc sbb (bad) (bad) decl push dec lods subl jge adc daa jb mov mov (bad) fcomip cld aam lods scas fstl dec icebp dec imul fldenv pop lret mov mov (bad) pushl test add jno pop mov stos jns jge std insb (bad) (bad) fbld add mov ljmp xchg mov jg lock call and aam sub (bad) (bad) (bad) cld pop sar daa dec clc cli test xor or sbb jne mov test (bad) decl xchg outsl jnp jecxz sbb lods dec es fs dec outsb test lcall shrl jecxz (bad) cmp lret out (bad) jns push (bad) (bad) out out jmp hlt mov (bad) in call outsl cld das cmp cmp jl jne mov mov subl mov mov inc sar (bad) (bad) decl add loop jmp cmp into xchg rcrl jle cmc sub adc (bad) (bad) (bad) mov jb int3 es pop xor pop mov add push cld aaa adc arpl leave mov out and ljmp and pop pop pop or push mov (bad) (bad) (bad) mov test fstps inc insl mov jns dec (bad) pop je add sti aam pop sbb add jl inc hlt bound sub mov std mov jmp jp (bad) fimull dec or (bad) out mov jmp data16 mov test jecxz mov pop inc fidiv (bad) (bad) (bad) (bad) incl mov xchg inc cld adc jae adc out and xchg and inc (bad) (bad) (bad) ljmp sub inc sbb dec adc div add dec xlat (bad) (bad) (bad) fsubrp insl icebp adcl test (bad) lock dec imul jb js out or decl jg fbstp pusha mov cmp mov js mov (bad) xchg jno pop push pop icebp stos mov jl sub (bad) (bad) dec (bad) mov inc xor mov fldt out cli xchg mov test in push pop aad dec mov xlat sub pop loope movsl bound cmpsb lods test cmpsl cmc movsb das iret iret ret in push cmpsb nop (bad) (bad) (bad) (bad) jmp test add dec fisttp mov and mov push (bad) dec and enter cld cmpsl ret add push lahf mov (bad) (bad) (bad) call mov roll xchg adc push dec in cmpsb in bound faddp cwtl push out lds popf fs (bad) lcall inc roll rorl popf jl clc add cmc fiaddl ss mov (bad) (bad) jmp pop mov push adc cld mov pop mov or js jo popf scas cli (bad) (bad) cmp aas push sahf scas mov addl mov inc mov (bad) fxch sbb xor test sti out pop cmp mov adc add inc dec jle es mov popa rcrb sbbb jo or stos (bad) (bad) (bad) out jl sub pop xor fimul mov lock movl pop jge inc popf cld push xchg out dec (bad) (bad) lcall xchg test lods div mov add sarb (bad) (bad) pushl mov jg adc mov xchg xor test stos lods pushw push lahf (bad) (bad) xchg jg (bad) ljmp stc out cs and adc jns xchg push movsl dec pop aaa imul add (bad) push dec sub fisubr (bad) pshufw cmpsb (bad) (bad) pushl aaa jl sub repnz ret jp inc test divl mov jg sub (bad) (bad) (bad) jmp mov mov jbe adc mov lods xlat cli cld repnz nop jne sub int (bad) (bad) (bad) pushl fadds push or (bad) mov dec ljmp jo faddp and (bad) (bad) push ror std dec push xchg out mov cmp stos jo rclb adc sub sub (bad) (bad) call push mov imul pop (bad) dec cmp dec and cli pop std dec fs or xor (bad) and lods jg (bad) call xchg (bad) cld lea out xchg pop pop add xchg sub jmp (bad) (bad) pushl or loope xor and adc iret sub scas jno (bad) lcall daa dec insl pop jp push (bad) and jg addr16 sbb test (bad) (bad) (bad) (bad) jnp (bad) jge arpl lret clc lcall cmp ja addr16 mov notb call daa adc ja dec fdivrl xchg cwtl or into sti mov call mov jmp inc jl sub mov in mov inc and (bad) (bad) pushl cmp mov mov sahf mov adc mov jnp jae popa ret mov cli and pop mov jl inc cmp dec je sub (bad) (bad) (bad) jl repz shll and sbb xor testl jmp dec test (bad) (bad) (bad) jmp xchg icebp ja xor stos dec mov mov mov mov lret mov lea mov pop (bad) (bad) (bad) jmp in or add pop enter lods push push fiadd xorl int cmp pop push jb mov cli sub xchg (bad) pusha test daa mov insb sar inc (bad) (bad) (bad) ljmp sahf dec jg out in sub cld add mov out sbb daa pusha jne push es (bad) mov add cmp out fdiv mov ret aad mov sub jno mov movsl mov cltd jo cld pop fdivrp leave je (bad) lcall out in mov and sbb in pop pop cmpsb into scas imul mov xor fs cltd in jns or sbb pop mov push rcll cwtl mov pushf popf mov cmp fcomip ljmp sbb (bad) (bad) decl pusha sbb or or xchg dec dec push cld repz add mov adc jle loope cmpsb jmp (bad) (bad) (bad) push dec xchg ror into adc dec xchg jp imul inc push xorb add mov (bad) (bad) (bad) (bad) (bad) flds clc adc std hlt add lods sbb movsl pop int3 orl push xchg add mov insb jecxz mov aam dec insb mov xchg or in cmp mov fucom insb sbb push (bad) lods mov jle jnp fmulp test sbb cmp (bad) (bad) decl lea pop jmp xor dec daa aam push pushf mov lock cmc sbb xor push sar (bad) (bad) incl sti dec sti in pop jmp jl pop pop loopne sbb add negb mov (bad) (bad) (bad) push sbbb and (bad) aad cmp insb hlt fcomps ja sti mov push sbb (bad) incl icebp push inc stos stos xchg pop push mov dec push add push aaa (bad) lock (bad) (bad) call xchg jmp ja in jmp fs cld (bad) push loopne in jbe cld (bad) mov mov mov mov movhps mov cwtl fcomi (bad) incl shlb add insb and stos scas lahf dec cmp ljmp sarb mull cmp addr16 adcl or mov ret inc push sub mov addr16 xor (bad) (bad) jmp dec sbbb in out mov inc and call mov push pop sub dec mov add dec push or cmpsb add call shll push mov cld je je (bad) (bad) (bad) cmp mov push sarb sarl in ds out jge jecxz pop (bad) (bad) jmp shlb adc sub fild inc mov es (bad) (bad) pushl mov push out push outsb fbstp test jne pop mov pop inc mov and icebp jno mov mov test sbb mov (bad) sar fwait jne mov pop fdivrs push cmp insl push add insb push push pushf or pop xchg mov call fild divb xor cli nop cmp dec ds lret (bad) (bad) fild mov js or outsl jb pop rorl push int3 push les add lods or push dec cmp xor sbb (bad) jg jae xchg cmpsb jb xor or or (bad) push shl bound (bad) (bad) (bad) push stc mov cs sub rcr jo jg lahf xor jge mov inc repz inc inc (bad) (bad) pushl dec and imul inc mov daa or jmp (bad) (bad) ljmp mov out bound (bad) into mov sub int3 dec adc cmp lock jmp sti sbb test fdivrl mov push (bad) (bad) ljmp add ds jg add jb mov popf cmp paddb jle push xchg (bad) fldt jae ja scas mov jb in (bad) (bad) (bad) (bad) jp push push das into out mov add (bad) jle icebp push mov fwait out fwait repnz stos sbb pop or inc (bad) enter mov in in popf std mov lret sar cmc aam lret (bad) sahf (bad) jg pop in dec aaa push js scas pop xchg ljmp sahf out nop out xchg dec jae imul push scas xor insb push (bad) (bad) (bad) call dec movsl xchg and mov mov sbb jle cmp loope (bad) pushl sahf pushf adc mov add (bad) notl or jp mov (bad) fisubr mov sub shl dec lds jp nop jle push xchg cmp arpl ret sbb dec scas xchg xchg clc fcompl loop lods jg pop test cmp mov fwait lahf imul cmp hlt sarl jmp mov in xchg mov das mov test sarb fs mov js (bad) (bad) (bad) jmp pusha jne out lcall orb jb mov out push outsb (bad) cmp and (bad) (bad) (bad) call lret adc xor pop ljmp mov xchg test mov sti js sar gs jmp push in aam xchg mov (bad) ljmp cli and mov je and cmp jecxz pop add dec dec movsb nop stos (bad) jg fucomp cmp sbb rep mov les push (bad) (bad) push (bad) into inc loopne inc fnstenv xor loop cmc aaa (bad) (bad) xchg xchg inc xor stos fwait jecxz iret out (bad) (bad) call lcall mov sbb push ret adc call mov nop mov jmp cmp jle ds sarl and loopne push imul dec pop sbb dec (bad) (bad) (bad) (bad) cmp lcall jg loope mov push fnstenv cmp jbe xchg (bad) (bad) jmp (bad) mov xor cld push or fcoms jnp mov and scas mov aam sti test mov jmp jg cli pop inc hlt jge cld decl push cmpsl je sub std mov fwait dec lock scas add (bad) sti test (bad) pop sbb jmp ficom (bad) (bad) incl pop push fwait and pop dec cmpsl stos fistp cmc les push aad (bad) (bad) fdivl xor sbbl rcr das movhps (bad) mov in (bad) (bad) jg push pop jle lcall fisttpl jo test lret clc (bad) in pop pop fs (bad) (bad) (bad) (bad) jns mov jns hlt or movsb dec xor pop pushf push xor xor lcall fldl cmp xchg inc inc mov rcll dec outsb std inc jp cmp (bad) (bad) jmp in cmc aam repnz mulb mov jecxz (bad) mov dec das (bad) movd add call adcb ret pop and sti jle sar (bad) (bad) mov iret repz xor ret ja add mov out shrl add loope jg outsl rorl mov subb stc cld je dec les mov hlt pop xchg (bad) stos xorl aad hlt cmp pop sar (bad) (bad) aas or mov push jg test fstl pop sbb sti jge loop lcall (bad) jg and mov ljmp dec adc clc mov jg cmc lcall push xchg xor mov jecxz ds lcall fcmovnu sub iret (bad) (bad) sbb add mov ljmp mov lcall dec pop push or and mov pop cmpsb js sarb std (bad) jmp arpl xlat arpl mov pushf xlat hlt mov sar (bad) repz incl adc pushf add outsl mov add lret gs (bad) (bad) decl and push or gs inc mov sbbb pop daa push xchg rcrb sahf and lods (bad) (bad) (bad) (bad) call inc mov popa jnp or cmpl mov ret xor adc jns (bad) lcall (bad) inc testb push rolb sub cmpsb sub sbb mov data16 pop cs (bad) (bad) (bad) inc jnp loop inc pop mov pop loop dec dec xor movsl jge mov ljmp lock (bad) (bad) (bad) or lods xor aas and lahf minps or (bad) decl mov mov das sbb test dec (bad) mov jl mov (bad) (bad) (bad) decl mov lock or imul xchg inc sbb xlat jle xchg cld mov in dec jnp fsubrl dec pop pop decl imul insb cld ljmp adc into and mov inc pop sub (bad) (bad) (bad) pushl decl popa aam jb dec inc out add mov dec inc out decl ja (bad) mov dec lock imul clc mov dec cmpb fsubrs (bad) xchg xor (bad) mov loope adc pop cmc cmp fdivrl adc sub (bad) mov dec jo cmp lods (bad) dec mov lods or iret iret idivb test lea cmpsb aas sub fnstenv (bad) fdivrl cmp lcall pop in orl add in lea mov adc (bad) fsubrl adc (bad) jns jo lret cld lcall int3 stc nop outsl loopne outsl movsl test repz hlt and mov cmp sti jne es add mov repnz int movsb dec cmpsl scas cli addr16 jb jg (bad) inc mov add mov mov and jae dec int3 (bad) (bad) (bad) incl inc outsl scas push sbb in cmp jecxz inc dec xchg jge mov in call loopne imul pushf jp mov lock xor sbb mov sub xchg pop outsb insb stos call pop jae or (bad) roll (bad) mov (bad) (bad) incl mov push scas mov push push xchg sbb test data16 dec push cmc (bad) (bad) (bad) (bad) mov in mov push cmp iret out scas ja jp mov fmuls incl cld add inc fcmovbe test or dec int sbb xor jno (bad) (bad) (bad) pushl mov adc test pop mov sti dec sub imul inc mov lock mov mov pop push pop xlat adc jnp push stc xchg (bad) (bad) (bad) decl daa sarl jg in inc aaa or xor and pusha addl cmpsb fdivl sub in nop mov shlb pop mov sahf sbb mov js mov add and fsubl ljmp sub jb std xchg icebp (bad) ljmp jbe push mov ss test mov (bad) pushl pop scas inc dec cmp mov loopne dec dec repz in fs (bad) (bad) (bad) call data16 or (bad) xlat insl rclb push xchg out push sbb loop dec dec cltd sbb loop jmp xchg mov testl pop les (bad) lcall leave (bad) lret pop into loopne in adc movsl pop inc xchg (bad) pushf shrb cmp xor lcall xchg xorl in push ss into push scas (bad) (bad) decl es mov mov enter dec dec fstp insl mov (bad) (bad) push aaa stos mov mov or enter mov imul add pushl (bad) ljmp arpl add xor sub cmpsl loop flds popa cltd cld (bad) (bad) (bad) call sub cmpsb dec jecxz add imul sbb bound out jne mov std (bad) (bad) pushl jbe mov jnp shll insl xor jp fldenv cmc ja inc incl sub adc fucomip out inc sbb (bad) (bad) jg insb outsl jo mov pusha ss sub and ljmp (bad) mov out mov adc pop push xor cmp add adc cmpl sbb insb je pop icebp push gs cmp and lods or push inc mov (bad) (bad) jp push mov fidivr xchg fidivl and std mov cs lods push pop fdivrp (bad) (bad) push cltd dec mov repz sbb stos cmpsb fidivrl test movsl ja jge xchg lea (bad) mov push add scas jno jo out iret aas pushf or outsl dec push cmpsl push int push and add (bad) out mov cmp data16 xchg xchg jnp sti inc xor imul sub (bad) (bad) (bad) pushl and int adc cmp aam push hlt sbb push insl outsl pop inc ja mov mov inc push faddl or repnz mov test add or insb add (bad) (bad) mov inc mov mov mov movsb sbb in push repz clc (bad) push sahf test jbe lods xchg fld xor fsubr mov pop out (bad) (bad) call insl test ss mov sbb sub cmp sub push lcall (bad) (bad) pushl xor and ret jle jmp shrb inc xchg sub (bad) (bad) fildll inc jb outsl outsl fnsave (bad) js fisttp ja les jle jecxz pushl aaa fildl jle ret pop jne xchg pushl int3 dec cmp out inc std mov sub dec sbb xchg insb adc cmc sahf lods adc xor and out leave and mov (bad) (bad) fisttp cli pop push or jecxz mov (bad) or adc cmp mov (bad) (bad) pushl pushf lods add push and icebp push scas mov repnz cmp sbb jge (bad) (bad) (bad) (bad) jle call cwtl (bad) push pop xchg incb cld mov pop mov fdivs and ljmp lea mov (bad) dec inc fisub fisubl dec std xchg ljmp loope mov sub stos inc stc mov dec sub mov pusha jns xor jbe jmp mov jmp loopne test (bad) int (bad) mov decl push hlt push (bad) pop repnz imul frstor fprem1 out push addr16 outsb ljmp jbe mulb add xchg insl out or fdivrs jno mov inc pop outsb jge mov adc movsb in xor popl (bad) (bad) (bad) (bad) sti push aas push loope test out (bad) mov push cmp mov test andb sub ret ljmp (bad) add stos cmp cltd lret push popf stos push push add je incl pop and and insb push mov (bad) (bad) lcall jb xchg mov and mov jae and mov (bad) and inc out (bad) (bad) (bad) (bad) mov (bad) mov pushf shr cmp jnp aaa cmp sub aam pop cmp pushf loop (bad) decl cmp xor insb rcrl imul pop leave es cmc (bad) (bad) (bad) mov xor test popf loopne (bad) into out push mov dec fimull mov (bad) (bad) jmp xchg inc xchg in shll cwtl fsubr fstpt popa cmc and dec pop adc int3 and (bad) (bad) (bad) (bad) mov inc cmpsl bound js call (bad) rolb xor (bad) mov mov mov cmp add std xchg push and jmp cmc fbld (bad) (bad) ljmp mov cmp fnstenv adc jl and push (bad) jmp mov movsl out xchg push idivb divl es incb ljmp cwtl xchg mov (bad) shr push ja jecxz in pop cmc mov (bad) ljmp mov test xchg rcr adc cmp ljmp out cmp (bad) (bad) (bad) fsubs (bad) hlt xor iret jb mov cmp int lret push (bad) xchg jg (bad) jg pop leave inc adc xor lods mov mov mov push (bad) (bad) (bad) decl sbb sahf (bad) adc push mov sbb add xchg xchg (bad) fprem sub fisub push fstl js dec sub std (bad) (bad) call cld in ret insl add inc pop call ja divl sub mov cli call add jp mov test mov outsl sbb (bad) (bad) pushl ljmp mov pop pusha es mov stos xchg mov (bad) (bad) jmp or adc xchg or test jo shl (bad) (bad) (bad) (bad) cmp and (bad) dec aam rcr outsl xchg fisubrl fdivp or fnstsw push (bad) xor adcl std imul push cmpsb sahf or sbb (bad) (bad) mov call push pop mov lock pop xor pop adcl inc mov (bad) cmpsl mov lods jmp test push jo loopne fcomps push jno icebp cld and aad loop (bad) (bad) fnop out mov clc pop sar js dec aaa jge push jae and popf call sbb (bad) (bad) lcall mov jle adc jmp inc adc jne dec loopne jbe cmc or jbe addr16 adc lcall jnp inc mov pushf or es mov ljmp clc pop xlat push sbb xchg sarb xchg cmp stos dec or jmp fildl (bad) lret std pop ja out cs push jle sahf andl fcmovbe xchg mov (bad) jb xchg es xchg shll arpl cltd jg popa ljmp (bad) (bad) (bad) (bad) cld iret loope jl lock loope repnz dec mov int loopne push or lods movsl inc (bad) (bad) (bad) (bad) cmp jge mov sbb daa xchg sbb mov int3 fistpl add test push (bad) push lcall xchg js jle add les ja xchg xchg es fbstp ljmp clc call pop clc inc push add lods out add inc movsl jp mov cmp (bad) (bad) (bad) incl push pop pop incb xchg pop push out jl lods (bad) sbbb ret pushf mov (bad) (bad) (bad) mov mov andb cmpsl mov das (bad) mov lock dec (bad) (bad) (bad) dec cltd and je (bad) pop sbb jb sahf or cwtl das scas lahf inc mov pop push (bad) (bad) (bad) pushl cmp cmc je pusha iret add push pop pushf ja cmp pop dec outsl loopne jb (bad) sbb js or mov mov push lea xor lods push mov and and adc out (bad) (bad) (bad) push loopne insb sbb test jecxz jecxz or cmp jmp add pop jge clc (bad) (bad) call pop lds insb cmp xchg pop sahf jb pop xor pushf repz (bad) ljmp mov flds add mov cmp mov int (bad) icebp (bad) in decl stos mov push xchg mov mov bound jns fwait (bad) incl je add out mov (bad) repz scas out mov (bad) (bad) (bad) call sbb leave xchg cmp jno push (bad) scas popa mov xlat mov or lcall xchg subl cmp incl (bad) push rclb mov out inc test xchg jbe scas cli jmp popf fmull adc jmp ja cmp xor mov (bad) (bad) (bad) lcall and aam addr16 dec sub push notb pop test loopne shrb clc (bad) (bad) (bad) call mov lcall das (bad) sti lcall sbb out fidivr incl pop es lods add mov mov push hlt test or imul decl stc outsl mov push mov pop mov ret in rcl xchg push rclb (bad) (bad) (bad) pushl mov pushf das fs jb inc movsl lcall cmp mov fsubl (bad) (bad) call out imul shrl xor push test add or (bad) faddl xchg sbb stos stos or jp fidivrl movsl aaa ds push pop lret (bad) add lcall cld rol pop mov enter xor (bad) (bad) (bad) jg repz xchg js in in out and jnp scas loop adc lea adc pop (bad) (bad) (bad) iret mov je mov cmp mov sub mov (bad) xor (bad) (bad) incl xchg dec mov push enter jnp rclb or lret dec aas test mov push xchg push adc addr16 sub adc imul jne sahf lods fist pushf mov (bad) out lret dec jecxz sub out stc dec aad lret hlt (bad) (bad) jmp jne inc addr16 sbb jae cmp pop jmp add pop loope cli adc out (bad) mov test pop fcomip decl sbb leave sahf xchg mov js cld (bad) (bad) ljmp dec xchg outsb (bad) fsubr cmp (bad) das ljmp icebp lods lret sbbb aas (bad) (bad) (bad) pushl pop sbb mov inc out rclb lods push outsb incl inc adc mov movsb testl stos in jle (bad) (bad) (bad) call mov xor movb cmpsb and fcompl push leave sub mov test pop (bad) (bad) (bad) jmp pop push test jnp and (bad) fist leave in xchg push sbb leave int3 in movsb scas add imul int3 call testl cmp in outsb xchg cmp unpckhps dec into push fidiv aam out add aam out fmuls mov cli dec call lret clc push daa (bad) sub pop add rcl imul or push loopne inc (bad) mov pushf jb dec sub or loopne dec sti ja inc push loope jbe push cli push push and enter lods in push jg (bad) jg push cmpb xor cwtl xchg xor aas cltd push push (bad) (bad) (bad) fbstp dec (bad) out jecxz xor movsb mov lock popa adc inc inc mov aad arpl int (bad) sti sub jnp leave mov lcall adc fnop mov push adc dec int jp xchg aam sub adc rcl jle,pn enter sub pop loopne pop loopne jg sbb mov add scas push jae movsb (bad) (bad) (bad) jmp sub xor dec rcr shll xchg aaa test mov aas mov inc (bad) (bad) decl mov mov and jnp divb arpl fnop jp mov (bad) (bad) (bad) incl mov andl es in cmp ja sub ds addr16 sahf cltd mov incl mov outsl xor repnz push into in (bad) (bad) call mov lds imulb (bad) ficomp sbb lcall push cwtl outsl (bad) jge popa sub fidivr sub sti stos idivb push dec mov inc cmp (bad) (bad) lcall mov out push outsl cmp cmp cmpsl in ss push pop push stos clc mov outsl clc hlt imul jo nop jo popf repnz push push inc add sbb mov xor (bad) (bad) jmp ss or and add cmp mov test data16 jg stos push mov add lea scas pop js stos cmp jns (bad) (bad) jnp scas ljmp or stc arpl int3 notb loopne ds test (bad) (bad) (bad) call rolb mov dec inc lock das dec dec sbb adc cmc in pop adc (bad) pushl cmp nop and dec pop pop jnp xlat add roll cmc push leave out nop clc fimul push add (bad) (bad) lcall (bad) fist xor adcl xchg lcall jns (bad) (bad) (bad) pushl test or jl cltd test cmpsb jnp arpl jecxz in push scas (bad) (bad) (bad) decl push es (bad) hlt push rorl fldcw xchg popf mov mov scas ljmp mov push push jb inc std aad mov xchg xlat out nop (bad) (bad) (bad) ljmp out jb xor (bad) leave call or pushf sbb mov in jmp (bad) (bad) lcall ret xor mov in and dec sub push lcall incl jge (bad) into lcall ds jmp leave xchg cmpl (bad) (bad) (bad) cmp adc cmpsl sbb cmp add mov ds jo cs (bad) dec cmc (bad) jg lcall xchg xchg pop fidiv loop lret xchg cmp out mov push cmp (bad) (bad) call sbb push cli sarl mov lods fcmovnb inc xchg (bad) decb jecxz mov addr16 jmp sahf test out aas (bad) (bad) (bad) lcall popf out out cmc or xor sub sub popa ja ret outsb andl xor (bad) (bad) decl and lods out inc jne rorl push cld outsb imul (bad) (bad) jmp lods mov jecxz sub pop mov aas xlat aam rcr push mov (bad) (bad) (bad) (bad) ljmp xor ja shl push add pop pop lods xor mov jle dec jno mov adc stc pop pop in (bad) fwait les fldt repnz push and mov pop adcl (bad) (bad) decl jg xchg or sahf pop xor mov aaa loop xchg pop shlb (bad) js mov push cmpl push dec inc xchg or (bad) (bad) inc shr jbe or jo mov int ret in icebp xorl push rol jmp sub fstpt (bad) idivl sub or inc add or mov or (bad) (bad) (bad) pushl hlt int mov cmp lret sti fldl xor jecxz adc inc xor (bad) (bad) (bad) (bad) (bad) rclb mov jno ds je out push aam test pop ljmp (bad) (bad) call mov mov jle shlb mov neg xor movsl (bad) (bad) (bad) jmp and jmp xchg fcmovnu int3 shrb xor pushf lods push inc mov push and fimul das clc dec subl cmp mov hlt outsl arpl das nop mov data16 pushl cld (bad) std or fisub sbb sbb enter sbb (bad) (bad) (bad) pushl sub cmove daa mov mov ja dec jns jl cmpsb or mov (bad) (bad) (bad) aas iret cs mov inc dec (bad) fist mov jae and push inc push mov divl cld (bad) (bad) cmp mov shl cmp sbb lahf iret repnz push pusha aaa fwait outsb push adc push stos or mov hlt mov repz jecxz xor sbb add ucomiss out stc out lcall call dec icebp dec aad push cmp scas sti xchg mov fidivl (bad) pushl fadds rorl call aas push push in enter gs pop xlat cld int3 bound jo je addr16 and retw inc mov mov jmp movl jecxz mov rcrl cli sysenter jge ja push mov (bad) (bad) (bad) (bad) fcoms push test push out inc add psubusb xchg push aas and push pop adc mov dec (bad) (bad) (bad) ljmp add xor dec xor rolb fbld sub cli ret arpl rcrl lcall addr16 sub ljmp or (bad) (bad) push mov cmpsb cmp imul clc mov pop jno addr16 cmp ds (bad) (bad) pushl (bad) inc jp push sbbl fnstcw xchg mov aam mov pop aaa sub (bad) pushl push mov or xchg lods pop cmp dec (bad) lret aaa xor (bad) (bad) decl outsb mov iret inc andl push sarl movsl popa insl in (bad) (bad) (bad) mov fwait into push lock xchg and jecxz mov js adc (bad) (bad) (bad) mov xchg mov (bad) jne and clc roll fisttpl push inc js cwtl mov (bad) lcall cli and aas add xchg rcrl add (bad) (bad) jg mov jmp and push sub (bad) mov popa js fsubl inc pop push cmp jno (bad) sbb push (bad) (bad) (bad) decl sti hlt sub mov aad mov test xchg int mov or xchg (bad) (bad) (bad) lcall push dec mov int3 sub rcrl mov cmp fs mov cmp fild leave ljmp inc sub stos cmp ja xor xor (bad) (bad) lcall adc (bad) divl loop jecxz mov out jno inc and mov push inc xor pop shrl mov cmp sub sbb mov scas fidivl (bad) popf or (bad) fisubr orb (bad) (bad) pushl cli int mov stos cmp pop scas das sarb out and or push (bad) (bad) (bad) ljmp test inc ja sti pushf sahf stos ljmp push push std nop xchg xchg cmp test call cli nop mov push outsb add cltd mov cli rolb sub fnsave cmp stc notb sub mov xor repnz les mov (bad) in pop cld or mov cmp mov pop inc inc cmp sarl (bad) (bad) decl (bad) imul jb lea shlb (bad) or incl push mov and pusha leave jnp jp icebp push cltd inc jae fbld testb jg (bad) cmp dec int3 notl mov mov movsb mov repz loop (bad) (bad) pushl fdivr aas aad xor ficomp (bad) lcall cli and (bad) outsb sbb (bad) (bad) (bad) ljmp jge xchg insb dec mov lock mov (bad) lds les lods xchg int and (bad) (bad) (bad) (bad) in xchg xchg imul imul (bad) out push std push jns or jne mov jge out (bad) (bad) (bad) pushl rorl cltd stos repz clc ret in (bad) les inc cwtl push aam pusha lds test ljmp clc cld mov shlb (bad) into test push out xchg rcrl push sbb lock (bad) pushl cmp mov imul test pop pause pop pusha jns adc (bad) (bad) out adc leave push push adc test mov sub pop stc and (bad) (bad) call pop jns ljmp sbb loopne adc push adc iret mov (bad) in negb or test in inc insl xchg aas repz jb cmp (bad) incl jae std push fcmovne clc xor loopne (bad) mov (bad) enter mov test (bad) (bad) (bad) incl into sahf flds sbb add nop jbe push add shlb les push and (bad) (bad) (bad) jns incl dec std xchg nop mov jecxz out xchg sar sti mov and (bad) pushl mov cmp mov cltd mov jecxz andl and test (bad) jmp mov dec mov mov sbb lret out enter sub les loope (bad) (bad) pushl pop push lcall dec mov mov add outsl push adc rolb incl jbe in fs ficomp cli fistpll pop cld lret push push pop and jo dec adc jge jne ret mov push ror and or stc popf call or adc cli and mov pop cmp (bad) (bad) (bad) (bad) push std xchg mov jae lock and push hlt lds inc push mov shrb sub mov cmp fnstenv mov or (bad) (bad) fisttp xor lret lret mov mov (bad) icebp jp outsl clc (bad) (bad) sti jo inc data16 repz imul test fdiv cs push sub (bad) call movsl sahf icebp cmp mov inc xchg pop cmp and adc ja loopne mov icebp (bad) (bad) call in jl fmull out push loope jecxz jl jbe jl sbb popf mov outsb pop dec mov dec enter or je subl lcall in pop (bad) cs fidivl adc in outsl (bad) out adc ljmp cli out xchg and cmpl jbe xchg or repz iret es (bad) (bad) jmp add imul insb mov in cli jb push scas ljmp push inc inc mov (bad) pushl inc pop fs push mov lds xor ds sbb test leave pop lock xchg jns scas clc scas clc sti dec pop out mov fisttpl jecxz in aam cmp cs (bad) (bad) decl dec push cmp int jl cltd into push fiaddl mov aaa adc movsl adc fcomi xor dec adc insl inc les (bad) nop rolb mov shl lret mov stos adc (bad) (bad) (bad) ljmp (bad) jns call aad mov loop ja lcall dec stc cmpsl push sub jne (bad) es (bad) (bad) call inc adc loopne mov test nop cmp stc sbb xchg add (bad) (bad) incl fmull fwait push pop fisttpll inc adc (bad) push xchg lar lcall lahf cmpsb out xchg jns cmp and (bad) ljmp sub xlat fsts sbb cmp fiaddl cmp test sbb xchg repz cltd (bad) (bad) (bad) call insb push repnz jg int push dec or jae mov cmc fcoml mov add ljmp cmpsb decl fsubrs xchg popf inc lock loopne lock or int3 popf aaa mov or call inc std cmp adcl aam pop pop or (bad) (bad) cmp and sub mov mov add xchg (bad) (bad) (bad) ljmp lock adc dec jecxz (bad) mov lea clc cmp jne outsl xchg cmp std sbb or or cmp inc in sbb lret (bad) or enter jns sub (bad) cmp mov sub jne (bad) mov repnz lods mov mov lea outsl mov xchg cmp jo test out std and mov jnp (bad) cld (bad) mov sub sti adc add jbe inc add call cmc cmc push lods loopne xchg daa sub (bad) leave das int repz out xor idiv incl dec and inc jbe and mov daa scas xchg and (bad) mov (bad) add adc sbb fldcw bnd cmp stc in roll (bad) ljmp and orb outsl push cmp cltd push (bad) ja in incl xchg xchg mov ja shrl mov cmc pop je mov and (bad) (bad) ljmp cwtl mov test iret or mov mov stos (bad) call mov cld out sbb decb or sub or xlat (bad) (bad) decl fcmovnb pop (bad) fs ss mov ret lret (bad) xchg mov ja sbb mov ds jp lret and sarl jecxz inc xor (bad) (bad) jmp mov ljmp push out icebp push (bad) push mov sti jmp dec (bad) (bad) (bad) jmp repz inc xchg sbb gs lds imul out cmpsl sahf (bad) (bad) (bad) (bad) jge xor push xor mov sub xor and fmuls jg lcall comiss (bad) mov sub in and rcrl add jp (bad) jmp mov and cmp pop enter sbb ret (bad) clc (bad) (bad) decl test dec add leave scas hlt (bad) push pop mov (bad) jmp sbb (bad) ljmp xchg movsl fisttpl test dec cmp add aas call (bad) (bad) (bad) (bad) (bad) aas push xchg aam insl xchg into mov (bad) pop pop test hlt jl xor mov cmc (bad) (bad) (bad) (bad) lcall aaa into and js pop inc nop popf and and fisubr adc lcall (bad) (bad) (bad) cmp out and sahf repz inc incb mov lcall and jno cmp adc fmull cmc pop mov inc pop jecxz sbb leave xor dec scas mov aad jmp xchg mov and ljmp leave ret scas mov dec fs (bad) (bad) jmp xor cld add lret mov mov pop jae mov mov test (bad) (bad) (bad) fidivl sarb mov int3 popa jne daa subb mov (bad) (bad) fild rcrl mov in in cmpsl cwtl ljmp xchg nop adc or in insb adc cli rcrl cmp scas mov test js call cmp (bad) (bad) push stc xchg fimull loopne inc mov jecxz shlb fiaddl ss (bad) (bad) (bad) call rcrl stos push cld scas dec or jo jns sub adc loop mov push std incl (bad) leave mov pop in add pop pusha nop stos fwait (bad) (bad) (bad) call sub pop mov dec mov jne repnz xchg out xor adc (bad) (bad) std sbb xor cltd pop cmp mov xchg movsb test push cli mov mov repnz das cs ret (bad) (bad) (bad) push sub or inc pusha call mov (bad) xor jae cld cwtl and (bad) (bad) lcall stos jmp jmp xor divl jp je xlat and cmp dec inc (bad) (bad) decl cwtl andl mov scas pop rorb lret mull (bad) (bad) jne (bad) (bad) decl jl shr mov fadds dec jl fcompl (bad) incl dec adc add mov jns (bad) mov add or (bad) lcall jns js fwait xchg movsb test mov fdivrp mov mov inc sti aad (bad) (bad) (bad) push mov mov fsts movl test pop sbb jmp insb sub mov mov cli sub cs lods lock cmpb adc and cmpsl xor mov push cli cmp dec clc cmpsl repz (bad) push xor (bad) (bad) (bad) (bad) aas iret andb sub mov pop data16 inc ds popa sbb ds faddl inc test mov xchg in xchg test sub jne xchg pop jb jl mov in pop cli mov negb loopne add inc (bad) (bad) (bad) (bad) out jo movsl lret dec leave sub push add or sbb dec outsb sti dec loop (bad) (bad) (bad) (bad) incl cmp xchg sbb hlt movsb dec add and sub pop xor (bad) fcompl pop mov mov cld and dec jmp jae test xchg jae lods shll (bad) (bad) lcall std pop jno hlt jle iret mov insl mov int imul or mov sbb xor mov dec pushf aam mov push dec jle data16 pop push cmp push (bad) (bad) (bad) lcall xchg (bad) jae js pop andb mov dec push out imul lret (bad) lcall ss dec add xchg sbb xlat fdivp jno mov mov mov lahf rolb (bad) (bad) (bad) mov imul sbb add lret sub cmp dec pop jl ljmp adc mov adc push icebp inc pop out fmull (bad) (bad) ljmp out arpl addr16 loope sub push ret out inc jnp loope mov adc ljmp xor adc mov dec jnp jnp or aaa stc cli int3 mov (bad) (bad) lcall testb cmc fldcw mov or movsb ljmp leave mov (bad) (bad) call enter mov adc (bad) fneni(8087 mov (bad) jbe push jl stc scas mov add cvtps2pi decb jno (bad) loope mov mov mov (bad) ljmp pusha out push mov mov mov orb mov mov call inc push mov mov in cld enter hlt or mov (bad) (bad) fisttp fs xchg clc xchg int imul test int (bad) repnz or test add xchg (bad) decl fldcw jae jecxz ds cmp push scas sahf (bad) (bad) (bad) (bad) ljmp stc push std iret frstor into pop cmp repz out imul cli (bad) (bad) out iret fidivl and leave rolb lods xchg (bad) mov xor ja dec call mov mov (bad) (bad) lcall xor fbstp dec xchg arpl std push mov mov ficoml shlb (bad) (bad) (bad) pushl mov fisttpl lret inc (bad) ss mov popa test jmp (bad) or add pavgb jno fisttp pop call xchg cmp aad fwait idiv pushl cld xchg push les sti imul mov push xchg and mov aad xchg imul sbb dec ret rcl in test in sub hlt incl sub xor sbb mov push std mov in and xchg sub or (bad) fldenv add xchg cli adcb inc or mov xchg insb inc (bad) xchg leave sub dec push push insl (bad) jae movsb fs rcl pushf cmpl push in insb lods pushf enter (bad) jmp (bad) fldl jns or pop add mov cmp lcall xchg (bad) (bad) (bad) (bad) cmp add fistpl orl int dec pop mov ficomp scas icebp in fadds jg (bad) decl jl dec nop lods xchg scas jnp jb sbb jge es or jb and push in (bad) (bad) (bad) stc outsb push add outsb ljmp sbb pop mov cmpsb cmp (bad) (bad) decl pushf fisttpl mov fmull out rorl sbbl and (bad) in xor mov (bad) (bad) (bad) call dec movsl cmc enter jns testb cmp cmpsb mov test iret cs (bad) (bad) decl xor fs sbb fcmovbe add mov (bad) repz lods sub (bad) (bad) pushl dec repz or adc rcrb xchg idiv cwtl lret inc push jmp scas or pop clc call out mov cmp add push mov (bad) dec lea in pop mov fs adc test pop cmp pushf rcll push (bad) (bad) (bad) incl or or (bad) pop out pop jg bound dec stos sbb jnp xchg out adc (bad) (bad) (bad) in sbb and outsb loope pushf and push or mov sub bound xchg pop in mov pop mov inc rcrb in xlat cmp ds sbb (bad) fild mov stos pop mov rcrl dec loopne mov mov mov (bad) outsb scas sbb lds (bad) mov dec jg jb and std (bad) shll jbe or (bad) (bad) lcall lock ja jmp mov lock pop or stos jae clc cld adcl sub mov jecxz and push mov movsl dec xor ljmp (bad) (bad) inc pop stos or xchg out insb imul ljmp or (bad) nop pop das ljmp xlat jae sbb jo and mov add dec arpl in push lods add push lods data16 (bad) jle loop jmp pop cmp notb mov aas sti dec ret ljmp cmpsl sahf cmp (bad) call call roll adc (bad) mov push das mov sub xor xor mov loopne cmp (bad) (bad) ljmp lahf adc aaa ljmp stos stc fildll push lock xchg daa into mov lock mov xchg call call arpl add in sbb dec daa mov add cmp pusha ss inc sub sub xor adc (bad) cld lods (bad) (bad) (bad) jmp in aam mov repz push imul jb outsl sub push (bad) (bad) (bad) lcall dec add dec out adc aam dec cs and scas ja xor fstpl xchg adc push sarb nop mov sbb (bad) pop xchg int adc and repnz (bad) (bad) pushl xor lods xor (bad) icebp iret jb pop pop jb lahf and xchg scas clc (bad) inc mov pop sbb inc loope jo xchg arpl in mov pusha (bad) (bad) (bad) ljmp mov cmp insl sbb mov pop scas shrl lahf jl gs fs cmp mov inc clc popf cmpsl sbb add jo popa push xor movsl lds mov decl ljmp xchg mov negl xor dec (bad) cld or jmp (bad) (bad) jmp loop jae xchg mov cmc cmp sarl out rcr leave imul (bad) (bad) (bad) (bad) cmp (bad) pop idiv pop cmp loope mov cmp mov jmp out stos aaa cld (bad) incl xor cmpb xchg ja sub aas movsl sti das mov jge (bad) (bad) (bad) incl ret xor pop icebp or ror xor xlat dec popl fldl outsl lea cli add mov pushf sub mov cwtl sahf (bad) sub push mov dec jmp or in mov mov xor inc call (bad) fdivr push (bad) stos jg std (bad) inc lds cmpsb sub sar incl pushf cli xor or xor jp call (bad) sub dec mov (bad) pushl rolb xchg clc imul sub adc fsubrs (bad) lcall add xor pop out out insb mov mov (bad) incl inc jg sbb gs jmp jl xchg stos jo xchg (bad) xchg (bad) (bad) (bad) call jo loopne insl daa push (bad) in fcomps loop bswap mov sub in push push jae ljmp out xor cmp test and (bad) fisubr or jl (bad) (bad) (bad) ljmp lods int3 add lret pop cli in cmpl addr16 incb pop jns into test sub ljmp insl (bad) jb inc inc mov test mov inc cmp (bad) (bad) push push add orl lea ficomp fisubrl hlt cli lds (bad) (bad) jmp loope ss loop fildll inc or stos clc aaa or cmp (bad) cmc lcall bnd pop xchg (bad) mov lods mov mov inc lcall cmp imul hlt ds sar dec cli pusha sbb and aad popf out adc mov int fmull (bad) (bad) (bad) push mov loope jo sbb jo jmp cmpl sub jp cld imul sub rorl pcmpgtd add cltd in (bad) call xor mov and (bad) mov pop xor (bad) (bad) lcall insl adc in scas fdivs push popa lock nop cvtps2pd pushf push idivl adc incl inc jns sub push push (bad) (bad) incl xchg aaa push pop div jne cmp and pop sahf or out push (bad) decl repnz pop stos xlat ret inc in fsubr movsb shrb (bad) (bad) dec adc cmpsl (bad) stos aaa in xor (bad) dec sub aas loop into push inc mov adc idivb call push in insl and jne push jge lret xchg fwait xchg sbb (bad) (bad) inc jbe popa (bad) xor sub rcl sbb adc neg and mov xor (bad) in incl sbb push out and lcall or andl fdivl clc fwait jg test repz push and add cmp (bad) (bad) incl cmp add repnz mov (bad) mov sbb inc cmp es cwtl lret (bad) (bad) decl xchg or imul jno mov pop iret xor rcl mov dec fmull (bad) fisubrl xor mov xor pop bound aam int3 inc ret cmpsb and (bad) (bad) (bad) fnstenv jo pop repz mov cwtl push mov sbb add and movsl sbb adc (bad) faddl cmp or (bad) into mov std outsl clc dec push lds push dec (bad) lods pop in inc out mov mov mov pop insl aaa sbb or pop in xchg sub jge pop insb data16 mov inc lret inc xchg push push dec cltd (bad) and mov (bad) cmpsl mov (bad) (bad) jmp test mov sub fistpll cmp arpl iret popf cld mov dec push (bad) (bad) (bad) incl mov add mov mov lret push lods jl push idivl popf addr16 (bad) (bad) (bad) pushl mov int3 test push (bad) (bad) or mov dec mov jmp jnp pushf es pop (bad) (bad) (bad) call mov ret jne aaa xchg mov sbb enter jecxz add out repz (bad) cltd decl (bad) incl cli mov add movlps js lahf mov scas pop xor arpl push das or leave rorl data16 (bad) (bad) jmp cli xchg bound cwtl into add add lahf or cmp test rolb xchg jb fbld orb (bad) (bad) jnp cld das mov out sub insb mov je outsb mov mov out cltd in and (bad) (bad) jmp xlat mov fsubs xchg movsl sub add dec or lds (bad) incl stos inc push xor jno scas ret xor in mov (bad) ljmp jno dec push outsl jl aas cli ja sub sub mov jno imul pushf mov adc rclb ja cmp push sub out lods lock (bad) (bad) out jg test and lcall in stos notl cli pop xchg ss lock cli decl shlb adc (bad) fcmovb cltd xchg mov push in (bad) xchg sbb (bad) (bad) (bad) pushl mulb pop dec out gs shll out out ret cwtl pop add nop xchg dec (bad) (bad) jg stc mov and sub out push jg xlat xor sahf adc mov rolb repz or outsl das clc (bad) push inc aas sub (bad) cmp lret xlat push jnp inc loop popa dec mov stos pop imul or xchg cmc vphaddbw cmp sub fwait xchg mov test xor (bad) in imul insb cltd sbb (bad) (bad) jmp aaa insl push enter clc rorl loopne (bad) and je adc pushf mov inc inc push fild cs insl lahf fldenv push stc xchg gs mov hlt (bad) (bad) (bad) incl or sarl add mov sub cmp xor mul xchg jl mov fiaddl shr test mov shll fwait icebp xchg push sbb and (bad) jmp inc (bad) (bad) call aaa inc insl mov outsl es cmp (bad) jg push int jnp and int3 jl mov xchg aas inc repz sbb xchg scas clc (bad) (bad) cmp add add test inc ja cli hlt or movsl insb movsb xor (bad) (bad) jmp push es lods xor (bad) jnp add inc xor imul xorl jg (bad) (bad) decl pop jno push and and leave bound fcomps cmpsl (bad) out test gs in arpl pop test (bad) incl loop fdivl repz mov jo int3 out mov scas incl repz movsl rorl pop cli sub (bad) push adcb out (bad) (bad) pushl push mov ljmp push aaa pusha sub mov xchg shl arpl test fdivr (bad) incl mov push into int repz loopne rolb in dec pop xchg push xchg not lahf out scas xor (bad) xchg and ja cmp mov (bad) (bad) (bad) (bad) lcall mov test outsb mov inc fnstsw xchg es lret stos lock (bad) (bad) ljmp ljmp negb bound pushf cmc inc out es (bad) xor lcall (bad) xor pop cmp mov sub mov insl or fdivl push (bad) sub aaa test les mov push (bad) (bad) (bad) call jno in gs enter sahf outsb hlt adc pop mov cmp fsubl (bad) popa add (bad) stos and inc sbb or cmp (bad) and std (bad) jg (bad) xor push fwait adc jo aaa dec pop and inc jbe movsl lods out mov lcall fldt mov xor and and (bad) clc ja mov or mov jge aas arpl dec outsb xchg imul push aas jmp (bad) sub inc in rcrb sub inc icebp (bad) ljmp mov sbb xor and addr16 jp mov (bad) (bad) (bad) out pop mov cmc sub mov mov sub mov adc cli cmp and add inc shl sbb xchg je pop es fnsave cmp ds pop subb push data16 dec (bad) mov xchg cmp (bad) (bad) pushl dec daa dec (bad) xchg mov int jnp roll mov (bad) fbstp sbb xchg idiv (bad) (bad) pushl loop (bad) aaa mov sub stos sarb push movb out mov jnp pusha push push push jns mov mov adc inc lock cmp outsl inc ret ljmp ds pop in (bad) repnz mov adcb (bad) mov leave cmp mov fisubl je mov int3 push mov pop ret (bad) incl jl cmp mov dec and test (bad) mov (bad) pop pop insl mov jp lahf mov (bad) (bad) (bad) call pop push pop jnp loop jno out cmp sub test outsl or mov xchg push (bad) (bad) push add test mov insl pop inc lds fisttp push inc jns clc (bad) pushl lods and push cmp push mov mov cmc (bad) pushl mov pop movsl imul mov ljmp rorl (bad) ljmp sbb clc stc (bad) repnz out cmp (bad) lcall inc testb mov pop pusha jecxz aas mov jge xor (bad) (bad) (bad) push push sub push lods push pop jmp lds (bad) mov cmpsl mov addr16 xor jmp push push xchg stos mov add std jl mov into jmp mov (bad) lcall pop fwait shl sahf or sub mov sbb clc pop xlat pushf int in push adc (bad) (bad) incl insb add mov cli out lcall (bad) mov test rcll (bad) (bad) lcall dec in xlat add or sbb add pop push in cmpsb shlb push cs test adc mov jmp jae fstp or movsb cli mov call xchg das sbb insl jbe (bad) (bad) ljmp add fnstsw push xchg sti addr16 cs and adc pushf js inc cld decl inc aaa scas and ss adc ficoml lcall mov sbbb js mov add rcr or outsl add (bad) (bad) out insl popl push in mov pop ficomp mov xor or or (bad) fildll fidivr es mov xor daa and (bad) test mov xor (bad) cltd movsl imul (bad) cmc dec dec mov (bad) (bad) lcall ss mov xchg in popf and shrl sbb jmp (bad) in popa dec jae or cmp hlt hlt je pop sbb call lcall xor pop loop cmp jecxz int3 mov mov (bad) jmp fs out xchg jp cwtl jno sub or es cmpsb sub jb outsl (bad) fcomip ljmp notl mov cli jb in (bad) push ljmp jmp add push pushf scas icebp xchg test fwait adc dec pop pusha sar dec and faddl push mov mov shrb inc cmc and xchg mov das (bad) adc cld cmp decl nop cmp scas imul xor daa ljmp sub mov aaa inc scas push push xchg pop enter add scas movsb ret outsb leave add lret add cli (bad) (bad) (bad) out fs cltd testb adc lods push int jne push mov cmc pop lods adc scas je addr16 dec fdivrs mov fnstsw loope arpl fsub lret arpl (bad) (bad) push (bad) lods sub sub inc lea data16 inc jg stos icebp loopne inc adc pop add (bad) popf or fisttpll (bad) (bad) (bad) (bad) fdiv icebp sub sbb sahf ja out lret sbb fisub lcall push sub (bad) jmp pop sub enter and pushf inc inc mov int xchg out out jecxz mov call pop pop stos lea add lock movsl jo sbb (bad) (bad) (bad) ljmp xor xchg notb in pop enter shr add push aam subw inc cld cmp std xor adc leave loop sahf or cmp jo test sarl mov insb call pop aam mov (bad) mov ret xchg sbb mov cltd ja inc (bad) xchg rorl jp jle movsb or shrb push loopne (bad) jg out lret cmp push nop or mov pop dec test lret and addr16 test gs jne movsb sbb das or push inc adc fiaddl inc repnz cmp pop push mov hlt push sbb push mov jl fucomi lahf repz imul (bad) adc pop mov es sub or enter add pop lret int3 and cmp idivb add lcall std (bad) (bad) jmp outsl pop fs call mov fldcw imul aaa push gs xor pmuludq pushl or daa pop ds jne (bad) xchg leave mov aad inc lods (bad) (bad) (bad) incl sub sbb lahf dec inc into and call lods or (bad) push cmp mov mov data16 push sahf mov (bad) icebp jg inc xor gs inc (bad) (bad) (bad) dec sub push mov cmp lds das test pushf xchg call (bad) incl mov je sbb add sub mov dec add pop test (bad) (bad) decl lods adc int3 popf dec test jg jmp mov ljmp push push sub popa call (bad) in (bad) (bad) call adc sub xor dec pop lahf sbb ds cmp test out (bad) mov xor (bad) jae pop mov mov scas mov or (bad) (bad) (bad) jmp mov es cld jnp sbb xchg test fdivl test movsb mov sar lcall popf dec int3 and mov push sar enter scas (bad) pushl sti or xchg fidivrl xchg push push out dec hlt (bad) (bad) push ljmp scas gs (bad) push rcll push clc or dec outsl ds xor rorl push pushf stos mov push (bad) (bad) (bad) pushl sbb pop (bad) and jecxz or mov outsl xchg jo ss (bad) jg std sahf cwtl mov outsb pop div mov fcmovne fstpl mov ljmp bound aad sbb pop jnp lcall in fmuls cmp (bad) lcall lret or (bad) mov mov inc (bad) out aam (bad) loopne cmpsl jns inc mov (bad) (bad) incl mov inc dec xchg jl into data16 clc adc or pop ret (bad) (bad) (bad) push (bad) xchg icebp leave cwtl fisttpl pop pop cmp cwtl pop inc mov push mov mov (bad) icebp icebp (bad) (bad) decl xchg push sub sub jnp (bad) cmp aas jle jae cmp (bad) lcall jns cmp pushf xor fidivr into cmp daa ja xchg pop sbb (bad) (bad) jmp roll data16 movsl int3 dec sub jle mov sti cmc jle (bad) sti mov out (bad) fistpl jecxz dec stos add jle inc inc fldlg2 sbb (bad) (bad) lcall hlt shll dec cmpsl and jae pop push setge cld adc jb sbb (bad) ljmp negb mov dec cmp xchg xchg cwtl mov out sub mov (bad) (bad) (bad) aas push fs jb int or enter out lea xchg adc subb out mov xor lret sub enter mov addr16 decl mov xor xchg jo dec mov (bad) jbe fxch inc jb mov (bad) call lret enter xor dec inc or pop popa mov (bad) dec mov mov mov (bad) (bad) fcoml (bad) mov imulb dec sti data16 mov repz lret insb (bad) (bad) (bad) jmp push adc jae mov inc lcall lds cmp decl rolb insb repz cmp ret data16 int3 std (bad) decl (bad) or mov fimul pop lcall mov (bad) (bad) mov stos and testb adc out das cli cltd and sub (bad) (bad) fstl sub repz js mov (bad) cwtl std ret pop imul jne (bad) (bad) (bad) (bad) cmp hlt aam mov fcmovbe or dec lods bnd pop leave pop cli jno cmp xor aaa inc inc mov clc adc add icebp ljmp (bad) decl loopne dec and nop dec inc push pop mov lcall aaa scas repz (bad) (bad) (bad) mov jnp inc in data16 or negl (bad) imul add fist mov inc sbb (bad) (bad) (bad) inc or and pop imul (bad) pop ret push fwait je inc mov mov leave clc call lcall jnp xchg sti push cmp inc movsb in jl push mov (bad) dec pop or add jp adc jmp jg mov (bad) ja sar mov pop inc ret adc push addr16 out clc (bad) pushl push minps jns mov clc lahf loopne pusha sub push xchg lea inc (bad) out and movsb sbb (bad) addr16 rol lret mov (bad) push jmp ljmp fist or pop arpl shrl imul push xchg mov (bad) (bad) cli inc jne jnp mov repz out aas inc lods (bad) or (bad) jle test flds inc sub adc or cmpsb mov imulb (bad) (bad) (bad) jmp adc pop xor push aam jne (bad) lods jno sub mov jg (bad) (bad) (bad) (bad) jle push mov sub push xorl xchg and fnstenvs imul (bad) dec cmp pop inc test jno inc repz lods sub out ret fcmovnbe enter pushl psubq hlt fnstenv xor int3 mov xchg cwtl sar call inc dec ljmp fistpl lds mov and les xchg popa (bad) (bad) (bad) decl jns nop adc push xor push fcomps fcoml mov (bad) xor (bad) (bad) call xchg pop cs inc cs lret (bad) out pop imul (bad) (bad) mov pop inc dec pusha (bad) fcmove push jbe (bad) push jne (bad) fdivs stos pop adc dec and pushf sbb add ljmp js sahf jno rcr (bad) cmp out ret (bad) cmp lahf cmp out (bad) (bad) lcall push nop add cmp leave fxtract inc fstpl xor jb mov xchg mov repnz sub sbb scas jp cs cli cmc (bad) (bad) (bad) in add std xchg mov inc mov cltd lods xchg (bad) push enter out insl (bad) (bad) mov in fbstp mov dec into dec sub lcall (bad) (bad) lods xchg (bad) jp cmp push jne sub sar std sub inc cld fstl fisub clc mov mov (bad) jg adc insb or cltd mov fnstsw mov (bad) (bad) lcall sbb fwait inc inc sbb xchg adc jle insb inc xor ss add pop cld (bad) lcall stos daa imul xor enter or mov sti cmpsb (bad) decl lret scas sbb sub iret ret enter (bad) decl mov cmp enter add pop or pop (bad) jge add mov dec or (bad) (bad) (bad) incl xor data16 push push xchg dec lods mov sysenter mov in (bad) jg outsb mov cltd mov sahf adc cld mov cmpsl xor (bad) (bad) ljmp (bad) adc xor cmp dec xchg mov in xchg push mov (bad) call and ljmp or xchg mov out mov es ljmp iret dec or push int3 mov mov out dec (bad) pop hlt cs sub push mov orl inc (bad) decl rcr in gs pop sub icebp or int3 (bad) (bad) (bad) (bad) lcall (bad) fmull xor sbb cltd in jns mov fwait popf nop sbb mov arpl cwtl (bad) (bad) (bad) jmp rcrl push loop jne int js and enter cltd pop push cwtl lea shl (bad) (bad) (bad) ljmp xchg lret int3 mov ret xchg sub dec pop lret push ja (bad) (bad) pushl or adc jbe xchg mov dec jno cli clc and sub inc dec cmp cs or jg dec xchg es mov nop lea gs mov ret incb (bad) (bad) (bad) inc loop stc sarl insb sti cmpsb out shrb sbb and leave test (bad) ljmp or lea mov fsubrl (bad) (bad) (bad) (bad) mov repz mov cli iret or mov mov ret cs test rorb nop icebp ljmp inc fisttpl lret sahf (bad) clc xor (bad) (bad) call scas jae mov sub mov fsincos jge cltd mov dec dec xchg hlt fcomip xor ret and push cmpsl movsb sub cmpsl (bad) (bad) mov adc fwait pop cmp (bad) inc or (bad) cs arpl mov mov sbb (bad) pusha dec fbld cmp (bad) (bad) (bad) inc loop add xor push ja push push pop lahf lahf (bad) xor add (bad) lcall xor dec add mov push push (bad) faddl mov gs pop popf or cli cmp lea ljmp jns mov outsb mov addl cltd mov cmp lcall jmp dec jmp pop loop enter faddl sub (bad) (bad) pushl adc push repnz (bad) cmp lds jle in (bad) (bad) (bad) (bad) pop fdivl mov mov repnz xchg jle xor jnp and pop nop in daa (bad) (bad) (bad) call pop cmpsb inc xchg inc popa aaa cmp and mov mov fmull sbb jl add (bad) (bad) (bad) (bad) mov pop movsb sub xchg subb sti out mov mov xor in jnp xchg cwtl or pushl push mov rorl in repnz mov (bad) (bad) pushl adc repz add (bad) repz dec lea div mov (bad) (bad) (bad) pushl mov cmpsl jb mov dec enter push lret sahf test (bad) (bad) mov cwtl xchg test in add rcrb jle in pop pop (bad) xchg cmp (bad) (bad) call and add mov xchg cld into xlat and jmp rcll jl leave sarl out pop lock test sub xchg lcall add (bad) fwait xor lock cmp fcom stc (bad) (bad) (bad) mov inc and lret (bad) jg rcl or sbb ret jo jge add out and enter cli xchg sbb es push (bad) sar dec pop cmpsl movsl fidivrl sub out test xchg (bad) (bad) (bad) mov xchg (bad) sbb add fsubs jo push jbe dec or mov (bad) (bad) cld xor std cmpsl (bad) in inc inc mov scas mov ret push push adc or mov (bad) (bad) ljmp fwait imul cmp dec pop jnp cmp sti mov sub out dec jp pusha fwait movsb ljmp or push and mov add int3 les adc (bad) cld iret jl push push shr xchg adc adc xchg addr16 xchg sbb xchg xor ja cs and pop xchg mov lret add mov lcall ss mov pop imul and push push inc dec sub mov call xchg (bad) and push scas test jmp shlb mov (bad) (bad) mov popa adc push or sar xchg jmp push aam icebp dec (bad) (bad) (bad) lcall dec mov fsubrs jnp je daa aas insb shr adc call mov fs xchg loop jns jo iret lret fistpl jge ret cs mov ljmp loop and push (bad) (bad) (bad) jmp test push mov out push test or aas xchg fcomi inc inc or (bad) (bad) push dec mov add pop (bad) (bad) (bad) ljmp xor aad div mov push xlat mov roll fsubr arpl fild lahf imul (bad) (bad) (bad) lcall jns rorb js jne lahf sbb add adc arpl shrb adc add pop out cltd or lcall out jle mov pop (bad) je add test lret cmc scas cli int aaa xchg (bad) (bad) push jle nop push adc (bad) push imul cmpsb call adc mov (bad) (bad) pushl rorb std pop or lahf sub and jecxz pop mov pop mov xor mov (bad) call fcmove sbb jnp xchg jecxz xor repnz mov popf loopne fwait pop loopne fisub mov jmp cmpl push cmp mov add (bad) (bad) (bad) inc popa cmp test jl (bad) xlat add xor dec jecxz or test mov (bad) (bad) call das inc sub je (bad) fldenv nop mov fcoms mov (bad) mov incl push sbb xor and or nop les leave mov sahf adcl shll out xchg insl dec mov mov mov inc or aas mov cmp ss sbb inc push decl rcrl push ljmp mov (bad) xchg dec jl ret pop icebp (bad) lcall scas push (bad) mov xor and popf xchg lea lret js sub (bad) jmp push sub inc pop shrl pop les mov push mov mov adc cmp std mov inc repz cmp mov ficoml ljmp sbb jmp or pop imul in cmpsl dec push (bad) (bad) (bad) mov xchg fidiv lahf jne inc or adc nop adc call loopne adc lret mov (bad) (bad) (bad) jle dec ss mov inc movsb jno add add and and inc loope inc sti xlat ljmp int3 pop adc movsl sub lea lcall dec sbbl jmp or xchg adc jp loope (bad) (bad) clc or in rol jmp xor ds (bad) mov popa scas leave adc (bad) (bad) mov xor cmp rorl dec sub inc mov (bad) mov push dec xor inc aaa pop imul out cli (bad) (bad) (bad) ds pop (bad) das dec insb add mov mov into mov dec sbb lret xor (bad) (bad) ljmp and mov fidivr xchg pop imul jns xchg and (bad) (bad) incl fs nop sub inc sti sti rcl or pop pop es push mov fwait (bad) (bad) incl pop nop (bad) xor mov rorb movsl adc (bad) fstl loopne (bad) cwtl enter adc stos xor (bad) jg lods roll push push and sbb xlat repz pushl cmp pop mov test add fisttp mov hlt jp test icebp aam (bad) (bad) call lock pop jae aad arpl jg mov mov sub mov (bad) dec mul ret data16 repnz cmp and imul (bad) (bad) (bad) pushl scas cmpsb and xor lods jg mov mov mov xchg pop xchg dec xor mov test into addr16 mov js xchg sbb add (bad) stc cmp mov scas (bad) cmc (bad) pushl mov jnp jg xchg cmp pop js jbe inc in into xor aam (bad) call mov and mov add push jnp pushf (bad) pop ds (bad) call faddp jns adc sbb pop call and sub push xor in fdivr (bad) (bad) (bad) jmp sbb mov jg in sub inc sub lret cmp (bad) (bad) jp aad xchg jne xlat mov popl test sub out jp mov pop dec add or (bad) (bad) (bad) (bad) sti aaa mov or pop fidiv pop sub cs les cmpsb ljmp (bad) jg jno push fnstenv fidivl pop fsubl or sub mov (bad) (bad) dec cmp (bad) in jnp insl sub and scas insl sbb or and mov cmc push rcrl cli sti pusha jl outsl adc loop jne xor scas sahf sbb sti fistp xlat xor jp leave adc mov insl adc jmp (bad) aas movsb add mov dec popl into sarl outsl inc (bad) mov and mov jae fstl jae add outsl cld sub cmc test sub (bad) (bad) pushl daa in enter movsb fisttp dec adc mov cmc ja fmuls (bad) (bad) js adc mov sbb jle add lds push fld fbstp (bad) (bad) (bad) clc sti test movsl mov mov stos subl jae pop and jp xchg jns outsb inc (bad) (bad) (bad) incl mov add and (bad) mov loopne int3 adc mov (bad) (bad) (bad) pushl pop pop dec in into push mov scas sbb pop jns (bad) and out fnstenv insl cmp stos (bad) (bad) (bad) mov rclb fcmovb and cmp adc orl (bad) (bad) (bad) lcall xchg sahf ja mov dec mov pop sub mov (bad) (bad) call addr16 fstps test lcall pop add cmc into push add fdivr (bad) (bad) (bad) mov fsubr lret out roll adc mov mov lock mov aaa lret (bad) (bad) (bad) call incb (bad) mov mov cmp (bad) (bad) fnsetpm(287 mov mov or mov in xchg daa aaa push scas ret and stos iret (bad) adc mov mov (bad) (bad) pushl cmp jmp or ret mov mov int3 out (bad) (bad) pushl lds sti inc mov mov add nop movsb cmp sahf jmp sub xchg jae jbe mov cli mov (bad) (bad) dec stos and jl dec and bound jle mov pop in fnsave (bad) (bad) (bad) mov xchg push xor lods sub mov in gs sub outsl rol push jne xchg aaa or sub mov lahf adc jno pop jnp mov pop (bad) (bad) (bad) ljmp and aad adc add ficomp jp mov imul fcomip mov xchg fidivr inc push push in aas add fwait jmp push decl or mov mov shll (bad) imul scas fs cmc fcoml xor pop in cmp sub or outsb adc (bad) std dec aaa jle sbb cmc xlat loopne lds push jae out out jb mov fnstcw loopne pop xor cmp mov pushl jmp push stos push call jb aaa push mov dec jge jbe inc outsl (bad) (bad) (bad) incl cwtl iret and popa imul adc rorl xchg xchg cmpsl cmp lods data16 inc fcmovnbe call lret xor (bad) sub out xchg outsb pop cltd pop jge sti xchg jb push or jmp (bad) ljmp mov inc and les xor mov sbb pushl add dec mov cmp mov cmpsl inc gs jp jg fwait sbb (bad) lcall into inc sarb aam xor xchg (bad) jns add sub sbb jbe push (bad) incl clc std jle mov aaa ds ds ds sahf jecxz clc mov (bad) (bad) incl outsb outsl push or cmpsl xchg lods push outsl mov add pop pop andl outsl dec outsb idiv pop (bad) jmp xor jg je dec in fiadd xchg and mov (bad) (bad) (bad) (bad) jp repz nop cmpsb mov jae fcompl push xor add or jnp sti jle sbb (bad) (bad) push in aam stos mov in jl fs jne in sbb xchg push sub cmp ljmp mov xchg and loope cld iret pushf (bad) push mov push sarl popf clc jmp jmp clc sub mov jle sti push mov jb (bad) imul rcll movl clc mov sbb pusha jecxz (bad) (bad) call push cwtl cmp mov pop xchg add jl mov loop les push repnz in (bad) out clc pushl and sub data16 mov jecxz popa (bad) (bad) ljmp movsb mov roll mov enter mov (bad) (bad) cmp lods bound imul sbb add (bad) (bad) lcall repz (bad) (bad) into cli scas aas inc fildll stc fnstsw mov sub add aaa ret mov out xlat popl mov fimul (bad) (bad) out inc sahf mov cmp and in push arpl jg push test (bad) and rcrl push (bad) (bad) (bad) div xchg leavew mov nop roll pop leave (bad) mov js add enter mov add and jmp pop out sub test adc outsb xor jmp sarb dec push push sub movsb (bad) ja ljmp (bad) (bad) push int lock ror jns xchg out bound fmulp inc mov push add mov pusha lahf adc adc (bad) jmp push cmc adc dec test cmc repz in aaa test cmp stc xor incl std fcmovb inc pop inc inc scas push test inc or test decl fiadd aad add xchg leave pop jp mov (bad) dec int mov pop icebp mov xor cwtl cmp cmpsb adc sahf mov or imul (bad) (bad) (bad) decl mov xor adc movsl mov sub mov arpl lea jg add fildll mov (bad) jnp sub mov (bad) decl popf push icebp mov sarl pop inc xchg jmp lret frstor fbstp (bad) (bad) clc (bad) aam sbb shrl pop and es xchg mov inc adc (bad) (bad) call push insl dec xorl fdiv xchg mov aam dec out movsb mov mov (bad) mov push lahf mov mov inc daa in adc inc sub mov push mov lcall and mov test push mov fnop mov shll bound pusha adc ljmp inc inc imul inc test insb and fidivr push push add mov std (bad) jmp jg push lcall push les cmp les (bad) loopne (bad) (bad) jg sub pop ret int test mov insb inc push or mov push test (bad) (bad) jmp sbb or xchg mov sbb cmpsb stc sub inc ret clc (bad) (bad) (bad) call cmp mov popa jmp iret je sbb mov add pop (bad) (bad) (bad) decl xchg insb popf mov pop add cli jge sbb fist ret (bad) (bad) (bad) pushl (bad) fisub or les int xorl xchg adc pop (bad) sbb fbld mov ljmp test sub sti popa mov ljmpw inc hlt (bad) sti test pop aam jbe mov xor (bad) (bad) (bad) cmp push fadd xchg sbb or mov sahf lret jbe cli sub fwait hlt rcr test je mov scas mov mov mov rorb (bad) sub scas pop test dec adc add xor incl add xor ret mov loopne es loopne,pn (bad) (bad) decl (bad) xchg rcrb (bad) mov lret (bad) add (bad) (bad) (bad) (bad) jmp xor pop test mov mov orb fisttpl (bad) (bad) (bad) push mov arpl mov pop test jbe scas jp enter pop add dec or movsl push (bad) (bad) (bad) lcall aam fnstenv mov fcoms jno pop inc mov mov mov inc js push jmp pusha inc loope add sbb (bad) mov (bad) ljmp inc push cld pop or outsl pop dec (bad) adc les cmpsb (bad) jg push jmp imul inc ss hlt sbb les (bad) (bad) pushl pop xchg hlt adc (bad) pop jle and sub sub and inc xchg (bad) (bad) (bad) incl popf pop pop and js sar in lods cld lods fsubrl or inc inc dec inc cmp (bad) mov dec jb push fndisi(8087 sbb (bad) cmc insb adc push pop aam jmp rorl pushf mov jb bound add bound xor (bad) (bad) jmp cmp mulb mov or std mov repnz mov ds sar lcall movsb mov fmuls daa xchg push jle add lds out mov xchg das int3 mov sbb cld push ss and mov mov sbb (bad) fcomip (bad) adc xchg pusha insl lcall push fnsave arpl in xchg sbb (bad) ljmp adc sub pop inc adc popa push (bad) stos pop sbb add push (bad) (bad) jg mov mov in dec ror jbe cli lods jg mov and das sar sub mov cli inc jne pop inc arpl cwtl add mov out jno cld (bad) (bad) decl cs jb xor jge icebp pop dec inc push pop mov cmc scas sub mov inc lds xlat js pop cmpsb sub (bad) fisttp and mov fidiv mov add gs pop ja les add push jne dec jne (bad) (bad) lcall adc data16 stc adc cmp repz fisubr pop (bad) cmpsl push stos das pushf in xchg adc incl cmp xchg mov mov (bad) iret sub das push (bad) mov clc idiv hlt inc sahf add sbb dec (bad) (bad) (bad) jmp data16 or cs ja pop cmp and jo out orl and adc (bad) (bad) ljmp xchg push jne cmp mov jecxz inc push dec fbstp push or sub (bad) (bad) fistp test inc mov orl xor push in aas sbb sbb mov mov dec sbb sub (bad) and sar decl push jmp pop stc xchg sahf mov mov loope cs in cmp pop fistpl adc xchg int3 mov add jns lcall imul cmp mov xchg xchg (bad) dec cmpsl bound mov inc push dec (bad) (bad) pushl test icebp adc lcall psubsw into dec out inc into mov incl push jbe pop ret ret xchg sub data16 add ljmp dec mov cmp and sub ss jb lret stos ret repnz aaa ret (bad) lcall (bad) std sub or push ficompl jmp xchg popa (bad) neg ds cs (bad) (bad) (bad) (bad) fld1 inc icebp or mov pop int3 sbb push adc cmp sbb (bad) (bad) (bad) (bad) jmp or xchg adc xchg mov mov pusha inc lret pop inc cs cli (bad) mov jns jl clc clc adc (bad) repnz hlt data16 jg (bad) (bad) lret (bad) dec cwtl sub in pop push outsb jmp inc mov (bad) (bad) decl inc push adcl jae pop lcall call jge test mov jp mov mov mov (bad) incl stc nop in push add das xchg mov in scas and mov lods insb enter jne daa and mov cmp fadd add imul adc leave inc js ficoml sub jbe push dec loope (bad) sbb movsb dec lock (bad) incl mov int3 xor stos dec mov nop sub hlt mov pop (bad) fcomip call lahf xchg jb push mov xchg lea in inc pushf pop loopne (bad) (bad) jmp je mov mov mov mov ss addb js (bad) (bad) (bad) call std hlt mov in pop aaa lahf div es cltd cvttps2pi jle sub scas scas jb add dec iret rcl ret cmpsl ror ds ds inc notb fwait lea mov cmp popa add cmp (bad) (bad) lcall mov or notb sti (bad) sbb adc push pushf sub jl xchg (bad) bound (bad) (bad) (bad) incl arpl jno mov les dec enter in and sub (bad) (bad) call int jmp dec sbb sbb (bad) pop mov jo adc adc ljmp and (bad) (bad) mov mov xor mov xor or rol cmpsb inc jecxz (bad) (bad) (bad) (bad) in jecxz mov xchg and sahf pop (bad) icebp mov lahf pushf aam push dec inc inc and adc (bad) (bad) dec xchg pop mov pop out js cmpsl int mov cli dec dec push scas and inc rorb (bad) incl fistl call mov and xchg nop jge popf cmp pop lret cmp cmp in and in dec mov lcall daa mov (bad) (bad) (bad) incl push push daa and mov jno adc jecxz xchg inc and sub dec cmpb (bad) (bad) (bad) in xchg xor lds das outsl push jns mov fistl (bad) xor pop xchg dec (bad) (bad) (bad) incl outsl jb (bad) sbb aaa sbb call or cmp lods fdivr fcomip ljmp enter or pop xchg shll lds mov (bad) dec or loopne inc fwait mov mov mov addl sbb cld test pusha out push (bad) (bad) (bad) incl xlat xlat mov and inc dec pop dec iret inc iret fadd inc add mov ffreep push (bad) ljmp lcall xor or mov cmc (bad) incl lahf cs pop jle cmp xchg inc push movsl daa (bad) into or fsubr (bad) (bad) (bad) (bad) cli pop inc cltd leave inc sti in movsb cwtl mov cmp imul sub cmp (bad) decl sub subb cwtl jmp ljmp jg mov cli nop mov enter rclb push ss inc mov adc mov (bad) (bad) mov rcr mov (bad) (bad) (bad) call lock loopne (bad) test imul add cmp mov inc pop (bad) and push mov rorb mov incl xor fmul jbe pop (bad) in std xchg bound (bad) (bad) (bad) ljmp adc and mov push in icebp cmp adc dec cmc aad xchg (bad) (bad) (bad) lcall jne mov xor or adc ja push jb mov sbb (bad) (bad) (bad) cmp andl add jg scas scas push xchg pop dec in mov jb (bad) (bad) (bad) pushl sub les test cmp adc cwtl or cmpsb jle mov xor pop push ss add test loopne and jae mov adc (bad) call adc nop test pushf sarl push push adc aas or pop pop iret push mov jmp aas shr out loope testb jb mov pop and test (bad) (bad) decl into mov mov inc and xor mov hlt push dec mull jg xor test add adc mov pop das sar js mov xchg adc sub cs jle or stc sbb ja dec inc test stos cld or cli rol add mov jnp loope sub (bad) out dec pop cmp push mov fildll int (bad) (bad) (bad) ljmp out mov imul cmp jecxz lret lcall shl (bad) (bad) (bad) lcall xchg add jae jl movsb ja pop aas pop push lcall (bad) jb pop adc (bad) (bad) cmp push mov jge mov xchg lret call xchg (bad) (bad) lcall into xor test pop jno call sbb adcl pusha (bad) (bad) (bad) push xchg inc cmpsl and bound cmc or sbb mov mov jge xor test and (bad) jl ss cmp fdivl sbb jne lods sub pop cmp dec jg (bad) (bad) mov sbb jecxz or movsl push ret inc pop insl fwait lea mov adc (bad) (bad) (bad) ljmp or (bad) aam stos or xor xor and mov inc jb pop (bad) (bad) (bad) pushl in add test mov xchg push or loope repnz (bad) (bad) incl in cmp mov dec incb jp cmp insl jne jp sbb mov sbb xchg hlt lahf jnp cli mov jle out ret movsb sub xchg or (bad) incl cwtl mov ds stos scas arpl or push xchg mov dec or (bad) (bad) jmp scas insl lea mov mov push mov insb in add mov (bad) (bad) incl xorl mov jmp mov pop inc nop inc icebp dec and sub mov addr16 (bad) jmp push ljmp mov lea test nop enter (bad) (bad) (bad) incl push adc inc lret and mov adcl outsl lret pop mov mov dec rcll and dec notb pushf mov xchg xchg dec cli in pop and inc mov (bad) (bad) push fistl and out test and lcall cmp lcall (bad) (bad) decl inc enter les pop test mov cmp cld bound call loopne fwait call sbb out mov aad mov (bad) clc pop add clc (bad) jmp test scas (bad) push (bad) pop stos lock popa mov dec cmp xchg cmc mov cli (bad) (bad) (bad) jle xor add sarl rclb sarl mov cmp push mov cmp imul in inc jnp cld inc sub mov (bad) jmp mov and pop xchg mov icebp adc pop addr16 inc (bad) in es ljmp clc cmpsl sub hlt test jns enter stos movb fwait jl push lret (bad) (bad) call mov int3 dec imul or and stos sub mov into pop movd add decl mov and pop outsl push mov lods sub outsb int3 adcl (bad) (bad) ljmp push sarb in mov arpl pop inc in and test scas mov jb cmp mov inc inc xor xor inc mov rcrb sub cwtl rorl incl sbb ja sbb inc push mov ds push jne mov ret test cmp push xor (bad) jg mov xchg mov fsubrs pop cmp int sub (bad) ljmp decb lods fisubr and mov xchg repnz jnp rol popf in lds push cld (bad) (bad) cmp xchg jge xchg xchg mov lret mov inc push and cmp dec add aas sti and pop xor (bad) (bad) lcall outsl xor push jl xor outsl and aad mov and jge push stc imul sbb inc mull push aas lcall sbb pusha gs push subb cs push enter and ja insl aad fbstp or fwait aaa std (bad) (bad) jmp xor xor dec insl out mov pop cmc stos call imul enter xchg aam cs sahf addr16 jae mov push mov cs outsb out cli pop fidivr sbb mov or sub adcl hlt mov xchg int aas jo xlat and inc pop xlat ror fadd aam pop mov stos ja (bad) (bad) (bad) call jns lahf xor jne scas nop adc pop jge (bad) sahf jo daa mov decl lock push loop jno dec dec pop cmp cmc dec push cmp (bad) call jg pop outsb push incl mov pop sahf or lcall mov js jecxz (bad) mov das and xor idivl mov insl and (bad) adc cmp push aam and fnstsw ret pop outsl aas adc jbe (bad) (bad) (bad) lcall rcrl mov ds fwait jge xchg xchg mov imul adc repz jl inc xor add repz movsl mov (bad) xor enter or xor sbb xchg (bad) (bad) pushl push inc sbb dec add sub imul cld inc fimull (bad) mov pop and jmp and ja (bad) (bad) (bad) jmp push aaa icebp push js popf in mov mov stos lods into mov jmp decl out mov dec or push mov mov sbb lcall (bad) (bad) (bad) pushl scas div add in cld dec xchg lret jecxz xchg push xchg push jp fildll xchg fcomip mov push test sbb enter xor (bad) (bad) jle and aam sub pop dec inc test jle dec mov sbb and shrb cwtl (bad) (bad) (bad) (bad) js add mov es cmpsl in push (bad) xor pop popa xor sub (bad) sub jae (bad) (bad) call pop (bad) jo mov add xor and dec mov es sub mov ficompl cmp jmp test sub xor sub scas ficomp sbb adc push imul das pop mov mov fisub pop adc sti or mov xchg or (bad) jb or dec xor jmp xchg adc stos push push cmp jns imul testl sahf punpckhwd popa fs je (bad) (bad) incl jbe xor fldt outsl in sbb or pop das xor sub adc (bad) clc (bad) (bad) decl sti dec loop add fsubrs add sbb scas inc aaa mov or arpl mov (bad) (bad) (bad) jmp call ficoml inc and scas jp mov mov scas push fs (bad) (bad) jmp sub fidivrl ret mov add cltd out inc (bad) jbe aad mov cmc xchg mov orb outsb fdivrp (bad) fisttp les mov sahf aas pop test ja sbb call pop aaa (bad) dec cltd iret cltd js out jns fidivr inc lods adc or (bad) xchg mov jecxz xchg mov fwait test add (bad) (bad) decl mov lods int xchg mov pop arpl js mov jne adc cmpsl push (bad) (bad) (bad) pushl sub sub js loop (bad) repz push outsl imul mov sub mov inc adc mov push es movsb (bad) (bad) (bad) jmp jle or cmp stos mov and sub xor pushf fidivr jo (bad) mov (bad) fdivrp xchg fidivr bound sub xor push mov dec out lret (bad) decl incb push pop daa cmpsl inc outsb mov mov (bad) cld aad ss push cmp fwait (bad) (bad) faddl je inc cmp mov rorl adc out sbb outsb dec out (bad) jg lret sbb pushf aam ds decl data16 lret stos jno jns ret inc (bad) (bad) (bad) jmp inc lret fcomp fs or fistl mov and xchg and adc (bad) (bad) decl (bad) decl adc mov pop sub pushf repnz fs repz dec (bad) (bad) (bad) incl scas pop push idivb jg lds jecxz jnp pop in push mov jmp (bad) (bad) (bad) ljmp movsb and insl add fsubrl adc addl enter lcall cmp xchg xor in adc cwtl sbb mov cmp or arpl dec sub movsb loop jno test test movl (bad) (bad) (bad) call push jecxz sub xor mov fbld (bad) jmp jecxz test out pop repnz (bad) incl (bad) mov mov cld jbe and pop movsl hlt idiv out xchg ljmp inc sub jno (bad) (bad) ljmp nop push mov xlat or mov in lret xchg (bad) rcrb sbb or call sbb and push das enter adcb rorb (bad) (bad) (bad) jmp adc lock push scas or lods adc outsb jp xor aam fdivrs sbb (bad) (bad) mov lds fildll and cs dec data16 xchg in ja dec cmp and inc jo sbb mov (bad) (bad) int and (bad) push inc imull sub iret (bad) jg jmp cltd push dec adc into fldt mov pop pop jp daa (bad) in mov (bad) jnp (bad) icebp cmp and pop and std aas lahf pop jno push mov nop (bad) (bad) (bad) (bad) ljmp push xor and inc pop sub aas popf stos sub lcall mov pop mov lcall lret cld (bad) jmp mov add (bad) adc ss mov mov push jno fwait add (bad) pushl add out ret jmp adc test ret push ret les pop jo idivl sbb mov sub stos cmp repnz xchg sub xchg sub insl imul cmp frstor (bad) (bad) (bad) (bad) call clc add lcall movsb push inc jmp pusha fs mov push (bad) (bad) call pop cmp outsb movsb xor fnstcw and xor ret mov ljmp fdiv call cmp inc mov inc push and stos jmp movntps cli xor gs sub dec xor mov (bad) (bad) ljmp jbe imul gs jno sti cld xor pop xchg push popa std outsl clc add mov xchg test popa sub (bad) decl pop jge add test push adc jne (bad) (bad) (bad) pushl pop push push lcall inc adc stos xor push jmp sbb jle jae (bad) (bad) (bad) incl les cmpl movsb and mov mulps nop js outsl idivl (bad) (bad) (bad) jmp stc jbe jl adc dec inc out je add in dec mov fs inc jg (bad) incl out cmp scas mov (bad) mov mov lcall sub jbe push lahf mov inc sahf insb or push mov ss (bad) (bad) pushl push lds and jp push dec inc rcl in adc sbb fdivrl (bad) mov rcrl es sbb fsub ret push push sti mov xchg mov cmp idiv cmp lret or mov pushf cltd mov (bad) (bad) (bad) incl lods lcall adcl (bad) int3 (bad) cmc push inc arpl xor sar (bad) (bad) decl xor cwtl and ret aas xchg cmp adc iret outsl push xlat mov inc out je xchg xchg ja aam mov mov inc flds outsb cs push (bad) es push cmpsb call xor or add xchg rclb mov add icebp push push mov mov sbb mov (bad) (bad) ljmp js stc movsb lahf add or mov mov jnp pushl incl mov in sbb popa and roll cmp mov (bad) mov cs popa bnd shlb mov notb mov fs mov xchg xchg lret and sub adc imul lock jo or jl out pop hlt push test add fisubr shrb adc push pop xchg stos loopne mov fimul imull or add (bad) call (bad) cltd out (bad) lds add mov add imul (bad) ljmp ss sub ja and inc or pop pop pushf loope aaa jle jecxz nop dec fmuls decl inc or pop pop sbb dec cmp addr16 and inc movd nop xor incl push (bad) rolb xlat (bad) imul fs jp das lods adc xor mov addl or (bad) pushl (bad) mov repz sbb pop jbe mov fistpl cmp test xchg push cld ret nop lcall push std jg insb loopne sub mov and or fldenv nop and lret movsb cmc arpl cmpl (bad) (bad) ljmp hlt sbbl xchg lret (bad) pushf cmp dec jns es lcall pop shlb cwtl sbb push xchg sahf scas lcall mov loop and cmp (bad) stc mov popl sub xchg dec aaa bnd push inc cli (bad) (bad) pop test mov xchg in jne mov push push jp and sti ljmp into push test les xlat repz test into cmpl (bad) (bad) (bad) (bad) dec mov mov sarb scas loope xchg sub nop mov push arpl stos sub jne enter pushl jmp loope jg mov loope push outsl jae inc cmp xor (bad) mov shll std decl dec fnsetpm(287 adc shlb pushl inc cltd xchg and (bad) (bad) inc lret jb jle addb sti inc cmpsl fs js adc push jge and (bad) sti (bad) stos xlat sub adc rcrl jg jg add jno mov xchg jle clc bound popf into sbb std (bad) (bad) (bad) nop push sub xor mov in pop aas test in pop (bad) (bad) (bad) ljmp test mov mov mov iret das xchg cmp (bad) (bad) (bad) lcall fwait adc int jno repnz mov jns push sahf fistpl dec or (bad) (bad) ljmp pop mov imulb pushf push cmpsl inc sub cmpsl out sub and jb (bad) (bad) (bad) lcall dec addr16 iret jp,pt mov mov mov sbb movsl stos repz xchg cs idivl (bad) push addl mov cmp adc push xor dec pop push shll jb (bad) (bad) (bad) jmp xchg pushf lret and outsl cmpsb in (bad) fdivrs movsb ret iret jg cltd popf (bad) fdivl lret aam (bad) (bad) (bad) pushl xor xor jne hlt sub cmp addl nop pop test inc test (bad) cmp xchg mov mov mov in (bad) (bad) (bad) incl fcoms xchg push and outsl mov push adc into xchg in jmp jns aaa mov mov add cltd outsb imul push pusha pop mov sbb ss mov dec in cmp (bad) (bad) (bad) call push jecxz daa mov inc or mov and mov pop je rcrl fs sub lcall mov pop outsl test fs mov lcall xor shrl outsl decb (bad) jg adc push pop and enter popf mov imul neg loop (bad) dec insl data16 (bad) mov push scas lea add adc jnp xor int (bad) ljmp jb pop ss push orb add add subl lock inc fldenv add pusha (bad) jb sub and or (bad) xor mov mov je fstpl jb sub cli (bad) (bad) (bad) decl jne dec outsb aas jle and or pop cs sbb dec push jns (bad) (bad) decl xchg push mov and mov (bad) lea or in mov (bad) (bad) (bad) ljmp xor (bad) fidivl mov xchg movsb add pop lcall jmp fbld lret out sbb mov cmp cmp lahf xchg sbb (bad) (bad) ljmp mov js mov bswap gs ja push mov sti loope xchg jmp adc dec mov lret lahf rcrb jae fcomps sbb enter in push and or insl (bad) push add in pop jne int3 xchg mov sub add icebp lock lcall cwtl cld jo in add (bad) xor xor mov ljmp adc inc das xor and test (bad) (bad) (bad) cli pop push test hlt lock jo lahf stos jle dec (bad) sti fisttpll sub (bad) mov popl imul ds outsb sub lods cmp xor (bad) fcomip (bad) cmc scas out fs fwait pop fwait sub ds (bad) cld jge (bad) (bad) (bad) pushl push (bad) rclb adc (bad) mov push ljmp fcomp loope and fdivrs mov cmpsb loop clc in into push and push (bad) (bad) decl mov add int dec lret jnp or xchg mov mov daa (bad) (bad) (bad) pushl adc mov fwait arpl scas cmp ljmp jno stos jo insb call pop aaa (bad) (bad) (bad) ljmp test or mov adc outsl lock (bad) mov pop cmc or pop shlb loop das cli stos inc push lcall or pop add (bad) pushl dec arpl inc insl jae or out pop data16 pop lret lret js scas test (bad) (bad) (bad) mov push hlt out mov mov push fucomip pop jno mov xor fs xor (bad) (bad) decl xor outsb aam xchg movups sbb or (bad) lds jbe negb (bad) jmp out pop aaa gs aas adc sbb add repz push cmp (bad) decl xchg lods sti cs mov outsb fs rcrb js repnz xor addr16 (bad) (bad) call jno jg mov jmp or test mov aas ds out clc push cmpsb mov jmp sub leave test cmpsl and cli pop dec out mov loopne fs (bad) (bad) call xor test aas nop mov cmp jns outsb addr16 jmp es insb pop leave pusha jp ret (bad) (bad) (bad) pushl sbb and jnp sbb mov aad stos cld (bad) scas ret icebp nop mov stos xor add jmp hlt push jne repz jmp fwait mov fsubl ljmp mov lahf inc imul pop out inc xor mov pop adc adc cli xlat cmp cmc cwtl into orl fistpl cmp (bad) (bad) incl in (bad) loope addr16 or loopne xchg push dec icebp imul imul mov jge jb lcall pop mov pop ret mov push (bad) (bad) pushl mov and pop push imul cmp (bad) (bad) incl (bad) jmp mov movsb mov pop jg mov inc (bad) (bad) (bad) ljmp pop lods adc mov stos roll nop iret stos lcall xor jg (bad) (bad) (bad) (bad) lcall fisub clc mov cmp mov loope int3 adc sub (bad) (bad) incl test add pushf or gs fs clc loop jo mov xchg stos inc scas gs jecxz inc adc mov jb jg sti out out (bad) (bad) (bad) (bad) pushl push push mov movsl mov pop sbb insl daa popa mov aaa cmp pop icebp (bad) out int xchg nop or jecxz incl inc dec inc shlb jg addr16 sti push sbb jp push mov mov sbb (bad) (bad) (bad) clc cmpsl shrl xor fisttpll pavgb lret cmpsl jg dec mov (bad) (bad) call mov std out clc ret jb and sub cld (bad) popa cmp add outsl incl push mov call or cltd push dec (bad) (bad) (bad) decl xor dec push cwtl mov cmc inc dec lret dec cmp jmp jns out mov or dec movsb xor fcmovbe inc aad push fmuls iret cli xchg mov das fiaddl into icebp out add fsubp fisubl sbb cld (bad) call cmc add lods jmp movsl in shrl add mov incl xchg add mov jb inc sahf jno (bad) call add mov iret add test xchg lret orl xchg jno decb dec mov hlt incl mov dec mov mov dec (bad) (bad) (bad) decl fistp mov scas push mov lret ret sub adcl (bad) (bad) (bad) (bad) (bad) sti iret (bad) (bad) pop shl cmc cltd sbb std jns inc mov sub incb push ljmp flds (bad) call cmp or (bad) (bad) (bad) pushl jp inc insb cwtl frstor int lods testb push lock out aaa push xor (bad) (bad) (bad) (bad) jg (bad) lahf cwtl adc push jb xchg xor orl push fstps lret fnstsw loopne mov pop xchg test stc cmp ljmp in mov cmp push xor push jg addb outsb or dec (bad) (bad) (bad) pushl mov stos loope dec mov mov lahf hlt pushf std and jnp mov loop ds in jbe pop mov outsl or js sti mov push or add lcall pop (bad) jecxz into divl fcmovu ucomiss scas and jg (bad) (bad) (bad) ljmp jle es mov pusha adc sub je jnp dec mov push dec mov pop sub mov hlt popa push fnop mov and cmp arpl (bad) (bad) (bad) push fiaddl imull dec (bad) aas aaa negl xchg xchg push imulb adc incl insl pop mov cmc jg gs arpl mov out cwtl imul cmp loopne jecxz mov insb cmp xchg cmp decl inc cwtl push pop ror and shll sbb fldenv and jmp pop fnsave jmp or dec and push inc sub (bad) (bad) pushl mov out stc cwtl pop iret push push cmp mov pop pop jg sub addr16 mov (bad) call (bad) cmc cs iret dec ds and cmpsb in scas xchg hlt mov sub dec push das cli stos and push xchg cs (bad) (bad) (bad) pushl (bad) je dec out sbb mov mov mov cld movsb data16 std jmp add jmp std jg test leave jb jae or (bad) (bad) clc jb inc ja clc ljmp push xlat jg mov (bad) jg ja mov cmp lret loopne dec cmp xchg or mov (bad) (bad) (bad) (bad) lods fidivrl mov loopne jbe aam fstps mov clc xor inc icebp add stc rolb test mov add cmp mov (bad) test sbb into sub mov fcomi movsb mov inc xor loop lds stc sub and clc sbb test sbb int sbb (bad) (bad) (bad) (bad) ljmp repz lahf mov inc cmpl lds mull clc xor mov les mov data16 (bad) push imul mov jns dec sti dec lods sub xor or mov (bad) (bad) call addl pminub xor (bad) repnz das sub mov push inc sbb fcmovnb jle sbb popa data16 pop pusha (bad) stos out lds mov (bad) (bad) (bad) pushl push scas jne jecxz lods xchg imul push xlat cmp movsb fcompl xlat dec and call (bad) fwait push fldl aaa lcall icebp sbb divb in mov xor (bad) (bad) incl add pop in fildl ret movsb fwait cmp xchg pop arpl fsubrp (bad) cld sbb (bad) jns jne mov ret out insl xchg int3 scas stc addr16 out mov (bad) (bad) incl lods ss icebp xor push cmpsl into or push fnop add dec adc decl in and jge jb inc and (bad) in adc pop fldenv (bad) incl mov jecxz pop movntps push fwait (bad) rolb (bad) (bad) (bad) incl ret repz fnop shrb mov std cmp aad ja loop lahf popa jns insb and (bad) (bad) pushl mov pop into jl (bad) (bad) xchg fs pusha sbb mov shll xchg (bad) (bad) out mov lods in aad cmp mov lock cmp mov cltd mov jb hlt call (bad) fdivrs mov fcomip xchg xor or cld popf xor ret in ljmp (bad) (bad) in cmp (bad) xchg dec push add push xchg mov sbb and (bad) les or jg nop cmp stc sub jo cmp and push or (bad) jp in cld adc bound dec (bad) decl data16 ret jl adc ja in mov add jns xor (bad) (bad) (bad) jmp cmp mov fmul xor mov stos call lea out fnop (bad) jmp xchg imul pop push je rol inc lcall mov (bad) pushl or arpl push mov pop sti adc and decl dec or fsubr hlt fcomip inc clc mov imul push (bad) jmp sub (bad) (bad) (bad) jmp imul push cmp xchg clc fsub out hlt fwait call daa and (bad) add (bad) push mov mov addr16 adc enter xchg ffree sub test and push movsl and stos sti ror dec jecxz aam cs clc int mov lahf lahf stc mov dec inc pop ja clc add jle mov sub jb jne dec insl (bad) mov fcompl cmc mov inc je out ljmp sbb push mov sub out dec pop push sahf aam leave mov insl mov (bad) cmp in mov call cmp (bad) mov mov sbb dec ljmp nop icebp leave std aaa (bad) stos add fildll xchg inc iret lcall (bad) (bad) pushl mov xchg pushf aad fldl mov adc int push lcall adc lcall scas mov int3 (bad) fcomps jge push std lcall inc sti jg cwtl stos scas jae fadd out test loopne jmp cld mov in lcall subb xchg lret dec xchg sbb add fildll mov add pop xchg pop cs (bad) xor push jge es shll popf fldz ja mov nop ret sbb loop (bad) (bad) (bad) decl lods or in es lret out in nop cltd mov push push adc popf fwait pop les jmp dec mov in inc int mov stc ret pop (bad) dec cs daa jg mov (bad) (bad) (bad) (bad) cli pop inc lods je cmp adcb (bad) sar das shrb stc (bad) pop cmp (bad) (bad) (bad) call sbb jp jge,pn inc jle push ds out test jmp jbe mov std dec inc dec (bad) (bad) (bad) inc fbld (bad) lahf and mov jo gs push mov test pop icebp (bad) ljmp testl xchg fidivr ja cmc ficoml ret jnp push jecxz (bad) call cmp mov rcrl xor mov push scas cmpsb (bad) (bad) (bad) (bad) mov cmp and sbb sbb dec and xchg and sub or adc sub adc and (bad) call std test adc test pop fdivl mov sti cltd cmp idivb (bad) (bad) pushl xchg and fldt imul test mov (bad) (bad) (bad) (bad) ds and pop dec jge push imul jp out add push mov add xor ljmp mov adc aad je push (bad) cmp sub cwtl mov xchg ljmp jmp fistpll (bad) xor outsl shrb (bad) (bad) incl aas out inc arpl out jge imul or (bad) (bad) (bad) (bad) mov inc adc (bad) int stos cmpsl repnz sub roll push push lcall mov stc aad in dec loope into mov lahf jb add int3 add mov jmp adc mov xchg cmpsl fcoml jnp cmpsl and sbb (bad) (bad) (bad) (bad) mov lcall (bad) scas scas mov mov or push ljmp rcrb (bad) push rclb fdiv cmp or xor inc icebp dec shll mov xor stos push push pop or dec out test jns pop stc or js (bad) (bad) call sbb adc mov ffree stos and aas fsub pop cmp stos xor ljmp cmp dec (bad) fnstcw test add fdivl bound cltd pop nop mov (bad) (bad) ljmp and stos sbb lds mov xlat cmp push (bad) (bad) (bad) decl push or adc idivl cmp adc pushf (bad) (bad) mov loopne and jbe call mov xlat aad inc pop sahf xchg (bad) call insb push pop xchg pop ljmp into jge es mov cmp (bad) ljmp lods and sbb mov dec jbe fisubrl cwtl (bad) jg and sahf mov xor repz (bad) (bad) pushl push pop iret mov push and sbb xchg mov outsb fwait mov pushl inc sbb jl gs cmp test push push mov adc sbb js cld (bad) lcall cld or xchg test scas popa (bad) lret xor imul jmp (bad) imul mov (bad) xor mov inc mov and add stos and xor (bad) decl jmp fs pushf jo pop xchg lock pop aad sbb je (bad) (bad) call das pop inc dec ficomp fstp (bad) rcl pop sub pushw inc hlt mov push mov (bad) cmp mov aaa pop das mov mov jns sbb shrl movsl sbb ret mov (bad) (bad) incl repnz add cli dec test mov mov movsl jmp fwait pop mov (bad) (bad) (bad) incl pop outsl int or clc mov roll pop and pop les (bad) (bad) (bad) jg jg fnstcw in mov mulw xor push in fmuls (bad) (bad) jmp scas call xlat mov push imul jns outsl mov pop movsl in sar (bad) (bad) pushl outsb inc lahf inc aas cmpsb push outsb and es adc xchg jne cmc sub incb sar incl ret xchg sub outsl adc scas dec mov sbb (bad) cmp or mov jg out xlat arpl xchg mov incl fdiv (bad) leave or mov popf fdivs stos ljmp (bad) lcall test arpl ret (bad) push scas xchg (bad) fdivrl aam flds sbb add (bad) (bad) jmp pop out pop jp jae aam dec lock mov sti pop std adc loopne call push push stos inc divb adc gs inc mov xor pop mov int test in (bad) push arpl rorb bound popf sahf rolb stos mov mov add rcrl jmp (bad) (bad) (bad) fldenv adc xor (bad) mov call cmp (bad) (bad) (bad) ljmp mov dec dec stos mull xadd mov pop jl xchg (bad) icebp or push (bad) (bad) (bad) jmp mov xlat sub add sbb iret stos push dec lret rorb cmp sub dec (bad) (bad) (bad) ljmp sub outsb add mov push jbe out decb cmp pop mov fcomip nop or sbb jno sti into enter orl jmp xor add or add sbb pop adc push inc push push push push xchg xchg push je js push gs cmpsb test (bad) (bad) pushl mov xor mov jae inc cmp std and cmp clc pop add jg call es ss dec cmp ret stc movsl lea (bad) (bad) fcomip call or pusha and lods pop lcall dec add ja into lahf mov aas insl mov cld ljmp mov ljmp or dec js pop sub ljmp xchg pop pop fistpll mov (bad) decl aas iret lahf iret add push outsb pop shl scas hlt hlt cmp (bad) call push sub shlb mov je (bad) mov pop sti or (bad) (bad) (bad) inc sti ret jp inc loope xchg das loope adc outsb movsl cmc imul in dec mov data16 clc jg (bad) stos iret (bad) (bad) (bad) call adc or aad jmp daa es mov (bad) ror fwait lcall pushl dec divb in mov fcmovnu mov popf dec xchg enter imul dec push adcl mov add sbb (bad) (bad) fcomip push push push cmp (bad) fidivr mov jge cmp (bad) jmp lds cwtl xlat xlat pop les lahf cmp mov lret sub (bad) lcall dec inc lds xchg daa int3 xor inc (bad) aad loop mov cs lahf sbb cld stc ret (bad) mov (bad) dec test jecxz jmp adc add dec (bad) (bad) mov sub repz dec sbb sub je sti inc pop nop ja jle (bad) decl jno mov rcl adc out jecxz cmp push sub cmp cs xchg xchg push jo fidivr fnop pop addb mov (bad) (bad) lcall rol adc stos jnp call aam xor jg lcall push add mov out scas mov adc add rcl loopne (bad) xor inc lret xor jle (bad) (bad) pushl sbb notb pop mov and add insl outsl (bad) xchg adc mov decl xor fisttpl mov mov imul mov add lock incl (bad) aad lret jmp fdivrl ret je fwait (bad) idiv repz std idiv mov test in js out out inc xorb stos ret aas cld (bad) lcall (bad) popf cltd inc push hlt xchg inc lock jb loop push in pop pop xchg (bad) (bad) (bad) ljmp repnz push pop sarb xchg movsl sbb or out ja cmp idivl mov (bad) (bad) (bad) decl add test jg jl rcrb ret ficompl mov (bad) push decl cmpsl cmc pop stc fcompl mov (bad) (bad) call xchg test das roll jl or cli hlt xchg add cmpsl idiv test call fmull (bad) stos addr16 in cs popa push push dec cli mov lock aad insb xchg xchg lcall hlt and (bad) (bad) jg xchg cmp andb stos mov sarl out into stos call cld pushl aam inc inc addr16 jle pop add les or data16 (bad) (bad) jmp (bad) dec dec mov fwait push push add or cmpsl std out aas jle mov decl lea ljmp push mov inc lret outsb outsb es dec fiaddl (bad) lcall lret xor out fnsave call outsl mov call xchg daa dec out das lods adc aaa jne pop aas xchg outsl popa xor lret push movsl (bad) (bad) jmp rcl pushf or cmp popa dec sahf je cli stc cmp cmpsb cmpsb mov enter push dec test xor jnp adc movsb stos ljmp (bad) (bad) clc dec imul sbb dec dec mov inc mov mov jecxz clc pop icebp jg ds out jb pop mov jns xor xchg lcall scas xor mov pop push aam sub jmp ja (bad) mov loope ret nopw test mov adc cltd xchg pop (bad) ljmp sahf ja shl stc cltd cwtl js and fwait xlat pop sub sbb hlt mov xchg or or mov jecxz lods fwait lods insb movsb adc or stc fcmovu add cmpsb xlat daa (bad) (bad) pushl and pop lret mov es pop insl iret iret inc mov (bad) int3 aas std (bad) (bad) (bad) pushl js clc sub lret inc mov jge ljmp push inc pop flds inc lods fistpll js dec aad decb cmp xor adc push pop loopne jg mov xchg cmp jbe mov ds push push cld (bad) xchg add (bad) (bad) (bad) (bad) fiaddl mov jb jae pop flds lods or les mov inc dec xor (bad) (bad) jmp mov std enter loope adc sub mov test mov call sub jae cld mov add divb cmp dec (bad) (bad) mov subl and push push mov pop sbb dec pop fdivr (bad) (bad) jmp movnti les xchg push mov bnd sub sbb lea adc dec cmp (bad) (bad) (bad) call into pop ss push nop mov outsb cmp and insb cli mov das clc call push pop add sbb push jnp dec aad cmp lcall (bad) ficom mov push jmp mov pop xlat (bad) (bad) (bad) call repz cli (bad) xor ss xchg aad out cli pop (bad) cmp cltd jns stos sbb or mov (bad) (bad) (bad) clc mov xchg mov cvtpi2ps or mov aad dec iret jo jg (bad) jg icebp cmp and jl sbb das mov (bad) lcall aaa mov fwait and outsl dec pop lahf xchg test insl repnz outsl cwtl or cli push popa fdiv push (bad) mov loope cmpsb push dec (bad) (bad) (bad) decl push pushf sahf xchg adc cmp sar xlat in jg imul (bad) ljmp push je cmp out adc jae mov adc jle into insl cmpsb outsl (bad) (bad) (bad) ljmp xchg jp sub (bad) jae mov pop cwtl jmp hlt push lret sahf jp sub jns (bad) incl stc adc rorb ret sbb icebp fcmovne (bad) cld (bad) (bad) (bad) decl mov xor inc (bad) sbb mov in pop jno movsl subl sub mov das fwait jo mov icebp xchg xor jge movsl and mov sub (bad) ljmp inc jbe mov out nop insl sub frstor mov xchg test (bad) (bad) in cs in mov stc jp int3 stos out testl lret mov jmp or (bad) (bad) (bad) push mov mov cmp sub xchg outsb xor lods ja and add pop cmp (bad) fildl pop mov push rol stos pushf out addr16 xlat mov insl andl mov psubusw pop lods (bad) das stos outsb pushf in mov jnp in (bad) (bad) (bad) cld shrb out (bad) cmc inc jle mov push jl ret mov dec cmp mov dec mov mov cmp dec aaa and popa dec icebp dec std and (bad) (bad) jg fstl add and stos gs iret aad adc pop int3 sbb (bad) call scas sub jmp jno ss cmp jle inc pop dec sbb in sar jmp add ja xchg outsl mov sahf lods and jle inc fcmovnb (bad) cld (bad) (bad) jmp ja push cmp bound in ljmp (bad) (bad) jmp cltd jo mov xor dec mov into out cli (bad) jmp cld dec adc stc pushf dec popf (bad) int mov mov ret xchg pop lock incl cltd lods call cmp fistp test repnz (bad) (bad) push mov add fs cmc mov lahf das mov dec push inc xor jmp imul push aaa mov enter test out ret mov (bad) (bad) (bad) jne,pt jns rcl or cmp mov es (bad) in mov (bad) lcall adc lock dec xchg push push out mov decl fwait push in sub add icebp out adc push scas daa jg mov std pop sarb mov push fsts ds bndldx xor mov mov enter push sub inc sti jbe stos rolb mov pushf pusha add (bad) (bad) (bad) pushl jnp sbb je (bad) cmp idivl add inc movsb jb lea (bad) (bad) (bad) jmp shlb (bad) fidivr stos jl in mov clc inc cmp adc hlt jecxz (bad) (bad) (bad) cli pop or lcall jne jo mov out lahf sub dec (bad) (bad) (bad) jmp stos repz push mov out rcl out jne rcrb ret mov outsl xor cwtl dec pop cli (bad) (bad) decl hlt jg and pop xchg outsb cmp mov loop fistp mov mov subps stos mov int in pop pop sbb jg (bad) (bad) ljmp in das mov in ja ror xchg cli dec int3 mov fdivrp lcall xchg cltd test incl dec xchg sub repnz push jp sbb (bad) (bad) decl aaa sahf mov cmp mov jp adc cmpsb or add cmpsl push std (bad) decl dec mov adcb (bad) mov idiv pop (bad) ljmp subw xchg (bad) aad lret jnp stos (bad) les (bad) ljmp cmp out mov rolb daa sbb loope fdecstp mov (bad) pushl xchg push imul pop (bad) xchg sbb jl mov xchg in sti jae jae mov adc imul in (bad) (bad) (bad) mov divb nop cmp xchg mov xchg push cmpsl inc push push sub jb cmp subl cld (bad) (bad) (bad) clc jnp cli add xchg mov add add lods mov stos das jbe cmp (bad) (bad) call fnstcw push or sbb out out loope sti jmp push daa pop xchg in ss (bad) (bad) jg stos mov fbld push insl je sbb fyl2x sub mov push call jne iret arpl push pop push mov aaa or push daa lahf imul mov stc shrb ljmp pop or cmp insb cli cmpsl or fldcw aas sbb (bad) call add adc mov sub loop sub (bad) (bad) (bad) jmp push pop (bad) dec (bad) stc cmpsb rcll mov fidiv cmpsl in dec leave jno popf inc repnz inc std (bad) (bad) (bad) jmp (bad) repz divl jnp and jge mov or loope sub jo imul (bad) ja jmp xchg ret or aam add outsl sub sub (bad) jg cmp stc dec in clc xchg sbb int movsb sbb imull ret (bad) (bad) mov push aad add lret bound xor inc mov (bad) ljmp (bad) fisttpl js scas inc and lea pusha cmpl push xchg push or jg mov bound fidiv (bad) sub push pop xor scas sbb ror xor cmp call lcall (bad) lock lock arpl adc (bad) mov xchg pop sbb clc push out in mov out das dec (bad) sbb loopne mov pop pop (bad) xlat fldenv (bad) (bad) (bad) ljmp insb lret push mov pop jecxz add ljmp outsb fyl2xp1 sub (bad) (bad) (bad) jle test xor or cs jle,pt mov cmp mov jmp (bad) (bad) push pop hlt sbb xor in cmp and ret (bad) sahf inc mov xchg push inc jns mov outsl cli jg (bad) and ret mov jno stos sbb mov xchg or (bad) (bad) (bad) (bad) in pop or cmp pop sub pop push insl sbb cld (bad) mov inc add adc imul xchg rclb mov ret inc jno test jge dec fstps call decb and add cmpsb jecxz jl xchg hlt stos cli ljmp addr16 hlt pop push sbb mov xchg test cmp cli ljmp clc cmp sub dec (bad) repnz mov (bad) (bad) (bad) jmp sahf mov cmp pop ret stos lock mov cmp mov icebp outsl xor jg sbb ja call and sbb (bad) (bad) (bad) fbstp xor push jl fiaddl xor (bad) cmp mov sti xor mov (bad) (bad) ljmp jl loope dec or dec (bad) and movsb or push imul sbb add mov push idiv decl mov or xor xor xchg mov popf adc inc (bad) (bad) (bad) incl loope push call mov movsl icebp and or fstl mov jbe adc stos pop in cmp cmpsb daa xor xchg xchg rclb mov lock negb jp iret cmc add int3 push lods xor adc (bad) jp jnp add mov adc dec dec cmp inc mov xchg xor inc (bad) decl (bad) sbb or mov cmp jno (bad) (bad) incl mov jge fs imul adc jmp jle (bad) (bad) (bad) std pop pusha test add mov mov mov mov std cld repnz test (bad) (bad) pushl jo cmp mov (bad) cmpsl rclb xchg pop insb sbb fcomps dec dec (bad) (bad) incl and sub addr16 cmpsl xor mov dec rorb (bad) (bad) (bad) lcall xor dec in cmp aas aam inc shl adcl in testl (bad) aaa cld xor sub dec arpl mov fwait xor dec gs or hlt adc lods lahf adc cmp fbld fldt je pop inc inc je (bad) (bad) call add loope sbb add ds jge call jmp sbb fsts rcl lahf cmp in push jge (bad) (bad) call mov pop cld sub sbb mov sti out loope xchg sbb ficomp bound stos (bad) mov xor aad sub xor ficoml cmpsb mov (bad) ljmp sbb push and adc nop sbb pop pop cmp ret mov lcall push inc sbb add cs mov push movsb sbb adc sahf add mov rcrl fdivrs xor inc lods inc sub out insb sub enter cmp pop repz mov add out dec outsb pop xchg cmp popa jge (bad) (bad) (bad) (bad) ljmp jp lock push xchg cli das jne cli bnd xor add inc insb shrl (bad) (bad) incl int3 lods and aas fsub mov cmpsb divb aad dec (bad) mov lods (bad) jae decl dec dec inc inc insl (bad) les jp leave sub cli jns mov add test add frstor dec into adc arpl add pop or clc jmp add cwtl xchg adc pop pop roll in inc test rclb ret imull pop sub sbb (bad) stos add push xchg mov (bad) (bad) ljmp in fs bound into pop and adc lods cld std adc add dec (bad) (bad) (bad) in (bad) xor jmp cmp dec lret xor jecxz mov push out cli mov jg leave xor in in fstp jg (bad) (bad) ljmp ja xchg in inc (bad) aad out (bad) (bad) (bad) ljmp int3 fdivs insb cmp test (bad) out cmp adc sub (bad) call sub insb pop jo add jg lahf sbbb scas mov fptan (bad) (bad) (bad) (bad) std mov xor (bad) push mov xchg mov fcom xor bound outsl scas cmpsb sti jge inc mov loopne mov lock les sub sbb (bad) shrl pop cmp stc dec aas inc data16 or or insl lock outsl (bad) (bad) jg imul mov (bad) fdivs lds das inc (bad) (bad) (bad) pushl inc std cltd sub fmulp icebp adc les addr16 movsl aad xlat arpl push nop jno push cmpsb (bad) (bad) (bad) dec mov or cmp pusha sti scas mov (bad) jecxz sub sar icebp (bad) (bad) fcomip xor and cmpsl (bad) cmpsb xor adc mov inc mov clc (bad) (bad) decl ss xor xlat xlat les pushf jecxz xor loop clc outsl xor push repnz (bad) jmp aam rep jecxz test pop aas add incl and add dec mov dec cld jb ss js add (bad) push cld decl sti mov movsb mov xor rolb add lods out ficoml ljmp test lods call pushl fadds mov add incl or sub loop lcall adc lcall cmp adc sub xlat sub mov and adc dec fstpt inc pop andl inc and jne mov xor mov imul and (bad) (bad) (bad) incl leave insl test mov and pop cmp sahf loope cltd xchg movsb add test (bad) (bad) pushl jl sub inc fisttpl dec fisttpl xor mov (bad) adc cmpsl add imul push sbb inc sbb movb xor mov jo push adc and or lret push stc or popa cmc mov outsb hlt pop inc add pop aas test cld test cli fnstcw std test (bad) cmp das insb pop aam dec adc in pop sbb mov fisttp js mov cwtl pop rclb or movsl (bad) xchg add sub dec xadd add and inc (bad) (bad) (bad) lcall jmp cmpsl test leave cmp fdivrs (bad) aas mov dec into clc (bad) (bad) (bad) decl outsb addr16 sbb adc jge daa jge xor popa xor inc cmp (bad) (bad) lcall xchg xor push add iret mov loope call scas out clc pop sbb sti lcall fcomps rcll dec mov xchg lret inc cmp add std pop je xchg std mov mov (bad) (bad) (bad) push cli push test jo aam mov rolb cmp xchg int3 xor jne pop dec (bad) in (bad) decl adc fisubl pushl mov and add test (bad) maskmovq adc push cmp daa (bad) icebp js (bad) mov xchg sub push insl or pusha ret or (bad) pop jo incl inc mov or jo and add (bad) inc add in in sar (bad) mov inc push scas clc call nop jl sub adc mov adc mov stc push push push (bad) decl pop insb add inc rclb mov ss adc xchg pop (bad) les mov decl or (bad) or call inc bound loopne cmp mov jg aaa xor pop or clc jmp in xchg jg dec dec int3 daa insb ljmp add loope sarl jle cmp imul decl dec ret or pop and rclb mov fistpl dec xchg or adc enter loopne cmp push adc sbb shl inc push sbb pop add iret adc push pop add jl or into push add add repz add cmp adc sti cmp mov outsb adc push or mov jg add arpl dec and adc jmp and and aas sbb arpl and inc outsl das inc sti xor dec push dec dec push push jae test ret in xor pop in fsubrs addr16 and addl mov jp cmp test jmp xor cs (bad) ss xor ja add push lods xor shrl push add es sub add push outsl je jg xor cltd addr16 pop xor jno arpl clc pop and pusha jnp add pop sbb sahf push add out xor movsb fildl ja adc flds add dec arpl jae popa das jp lret (bad) fs shl fst jno insb das push sbb das outsb ja addb mov pop ja mov xlat je pop test loopne sti inc fs jo fadds bound jae jo imul roll add imul push mov add add sbb popw inc outsb in fadds add adc (bad) insb add jne rorl inc jg lahf ja push inc add add fsubrs fs push add jae gs (bad) fbstp dec adc js jns jbe lds push sbb sarb jb lcall fist add fiaddl outsb sti add mov push adcl push add push inc and push inc push push xorb inc add mov sub push lret (bad) (bad) (bad) out mov les (bad) hlt push xor (bad) (bad) (bad) mov push movsb mov aad mov rclb mov sub (bad) (bad) (bad) (bad) mov sbb dec jno repz test ficompl jmp (bad) mov hlt movl insb adc test fs (bad) std in leave mov add insb push arpl psubd or or pop adc in pusha aad jno mov inc aam dec (bad) (bad) mov mov movsl cli test xor (bad) leave mov lods jecxz (bad) (bad) ljmp jne fild or shrl cmp ficom push xlat enter mov push mov and mov cltd xchg mov mov or or and or (bad) jl das adc stos sbb data16 inc fdivl jno add aad mov (bad) (bad) incl mov movsl in lahf xor mov js stc add mov push loope lcall decl insl or test hlt push imul insb sbb xor (bad) (bad) decl xchg push insb jnp add (bad) hlt or (bad) fnstenv cld (bad) (bad) call ljmp cld fistp ficoml gs aam pop popa mov into call or (bad) mov aam movsl fisttp (bad) (bad) (bad) fistl movsb sti hlt (bad) shrl imul mov sarb add (bad) (bad) incl add pop dec or cmp add daa adc or and pop loopne mov push lahf in into push stc ficomp leave fldcw and pushl pop cmp mov cmp lods insb mov in mov mov (bad) (bad) (bad) incl lcall ljmp fildl push fdivl or test fs ds (bad) (bad) (bad) decl or push in decl xchg daa scas add mov pop jge xchg (bad) shlb add (bad) (bad) lcall inc push imul xorb sbb push imul aam loopne rorl (bad) (bad) call int3 dec frstor fistpll mov mov aad mov call xchg shll out mov cmp fist shll mov aas dec ss (bad) (bad) pushl fmuls scas (bad) dec add pusha jp inc ret out pusha fist addr16 mov jns (bad) fbld imul mov ss push xchg push cwtl cli pushl int3 add mov das es mov ljmp or sub mov cmpsl call ret (bad) mov sahf fldcw ret (bad) pushl std es pushf mov add ss jmp addr16 jb push add (bad) (bad) incl adc mov jnp sbb xchg or out fdivrl fisttpl aam roll clc mov push int mov aaa hlt mul ja outsl ja mov out cli jo (bad) lret pop decl adc sahf gs scas (bad) clc sar imul push js or inc clc (bad) call dec ret cmp cmpsl notl pusha rorb imul ret shrl or inc lock aaa push scas mov fdivrp (bad) (bad) (bad) jg mov jmp repnz lret mov cmpsb mov sarb (bad) (bad) (bad) ljmp push ficom fldenv jp,pn mov dec popa les sbb xchg sub aaa mov or loopne adc sbb add sub xlat mov push xchg cmpl and mov and aas orl mov lahf sbb (bad) xor jne add add add fildl xchg incl push or or dec xor das cmp add lock xchg add and jg (bad) in mov xchg enter or nop psubw and adc cmpl push and sbb sub ret inc xchg jo test lds std and sbb addl mov decl lock scas sahf pushf mov adc mov decl sub fistpl js inc outsl (bad) loopne jmp test mov cmp pushl jl mov popf sti jmp stos push inc mov repnz test pop stos (bad) (bad) (bad) (bad) clc scas adc (bad) inc jmp aam imul loope jp iret inc gs (bad) xchg push cmpsb scas mov cmc (bad) (bad) decl addl cmpsl xchg cmp xor dec cmpsl in fbld fidivrl push inc lcall lock and push movsl mov popa sar mov fsubs stos xchg clc repz mov subb fneni(8087 dec fwait xchg and and add sti ljmp mov pop fs (bad) (bad) mov adc sub sbb pop pop mov icebp aas rorb and cmpsl out lock (bad) (bad) aas inc cmpsb mov insb scas add aas xor aad mov std std (bad) (bad) out nop cld adc stos in das dec pop loope les aas xchg (bad) (bad) (bad) (bad) call jne int mov addr16 push mov xchg aas and (bad) loop mov mov (bad) (bad) jp popa push pop sarl jl mov das lea mov inc inc aas movsl jmp cmp sub jge mov inc rcr push arpl int3 and call (bad) call arpl cmp mov cmp std xlat cmp mov sbb (bad) incl test pop mov jne fldt cmp jno shlb (bad) out dec nop pop cmp mov movsl (bad) cmpsb mov adc mov sub dec in or mov insb into imul faddp jge (bad) call push sahf out pop push xchg cmp push andl dec dec gs std orl add mov ror add cmpsb fmuls out inc or and scas addb stos or adc dec inc push xchg push and xchg push and push dec push adc push inc push xchg test xchg push push push push dec test stos stos and or mov xchg add je outsl insb jne gs outsl sbb insl popa push sub jo outsb std in pusha loope jb nop sbb popa jo insb insb testl outsl iret int3 inc pusha push push mov je jb jb mov into xor popa dec sbb dec imul arpl adc dec imulb inc fisttpl fisubrl imul jnp cld pop lahf loopne inc js inc imul push cmpsl add imul fistpl dec and pusha jo xor jae push adc sub sbb sbb sbb jle sbb insl push jo lods jl test insl pop adc int3 fisubrl dec jne push je push in fs fs (bad) je nop dec inc fwait sar les test popa jb bound push pusha or pop (bad) insl test outsl mov es bound scas push clc mov outsb mov inc gs dec gs outsl jb pop add or or (bad) and dec mov faddl daa inc (bad) testb imul pop lods push ss jg popa fsubs cmp stos ds jnp,pn das xor sub xchg mov sti push push imulb push jns gs pop icebp jno fistpll push je ja sub dec mov pop inc addr16 stos cmpsb adc (bad) and push (bad) (bad) lock out ss jae adc or fistl pop jns push adc mov push adc jne jg imulb or lock push dec pop lds add jne mov daa xchg jae mov mov pop inc dec outsl fs xor popa insl xchg dec lock mov fcomps add dec jb outsl dec push cmp pop bound scas push (bad) fs jnp (bad) push push popa addr16 dec inc dec inc push loope push mov pop push and mov mov imul inc js sbb das scas movsl fdivs fnstenv inc or mov mov int jbe sub jl push outsb pushf pop (bad) or jae outsl je jne mov jbe cmp fs or aas movsb inc fs and mov cmpsl pop push xor loopne xor (bad) pusha loopne jmp dec fcomps xor test inc imul imul popa jae add mov lock nop pusha lret nop aaa orl push sub js xchg (bad) jae sub jo cmp imul and ret inc mov pop pop pop or lahf das outsl sbb mov push popa bound push loop dec bound sub loope sbb push add (bad) outsl ja cmp xor jb push lds push rcll push lahf cmp (bad) jns add or pop popa je (bad) mov addl das inc push outsl imul and adc cltd sbb sub mov dec ja mov push sub (bad) cmp jo pusha (bad) aad pop or loope sub and stos or pushf je push xchg pop pop clc add add cltd sub cs pop adc inc inc insb pop mov jae add push mov xor (bad) add sbb push imul dec mov dec jae sub test xor pop inc jle,pt arpl enter cmc lcall ss add pop xchg test and sbb gs sub xchg mov addr16 adc pop addr16 dec gs aad pop fcompl sbb dec movsl and outsb jne das out or push mov push (bad) xchg mov pop pop and ja sbb sbb xchg cs mov das test sbb and push sub jns lods and pusha push push mov jns aaa cwtl push sbb add (bad) pusha test add dec dec and (bad) leave mov into icebp mov push je rcrl sbb mov je movsl inc sbb outsb mov jb jp pop pop orl and sti adc jae cs jno cmc fs les push add arpl mov add and int3 inc or inc pop lret jl add push outsb jo mov or cltd icebp cmp jae outsb or push sbb nop and fimull inc inc daa mov sarb aas push inc insb je push add push push push inc push aaa and push mov pop scas lods sbb push and dec inc imul (bad) vshufps inc cmpsb out rclb xchg cmp xchg sbb lock (bad) xor jmp add add inc in dec aas (bad) stos inc arpl inc (bad) fs xor in fsubs add data16 push add rcll pop jo inc inc ss outsb je fildl or faddl pop pop mov or lods or imul sbb push scas or fmull add xchg or jae pop jmp out loope iret arpl jmp (bad) xor popa jns mov fisubrl test cld sbb sbb xbegin xchg leave jno add decb movsl pop and jne and xor ud2 outsl rorl jne mov and jo cmp cmp andl ss and xchg bound or mov je xchg pop inc gs mov mov mov pop jmp (bad) adc adc xchg mov mov cmpsl (bad) insl inc xchg lret push jae cmp adc iret add and (bad) xor pop loope outsb push add test js pop das icebp push add dec jle dec (bad) (bad) add sbb imul nop aad push add adc aad ljmp std fistl push dec add pop test dec adc or out std outsb test or nop add xor push adc mov in or pop push add setnp add inc dec adc scas std movb add dec add dec add add dec rcrb adc add add mov adc sub fsubr add mov pop testl cs add nop wrmsr (bad) mov dec rcrb xlat pusha jbe rcr push lock ja dec xchg and adc add incl add cmp inc add call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call popa lea push cmp jne sub jmp 